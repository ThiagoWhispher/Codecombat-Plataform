{"version":3,"sources":["app/models/CocoModel.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/models/CocoModel.js","sourcesContent":["storage = require 'core/storage'\r\ndeltasLib = require 'core/deltas'\r\nlocale = require 'locale/locale'\r\n\r\nclass CocoModel extends Backbone.Model\r\n  idAttribute: '_id'\r\n  loaded: false\r\n  loading: false\r\n  saveBackups: false\r\n  notyErrors: true\r\n  @schema: null\r\n\r\n  initialize: (attributes, options) ->\r\n    super(arguments...)\r\n    options ?= {}\r\n    @setProjection options.project\r\n    if not @constructor.className\r\n      console.error(\"#{@} needs a className set.\")\r\n    @on 'sync', @onLoaded, @\r\n    @on 'error', @onError, @\r\n    @on 'add', @onLoaded, @\r\n    @saveBackup = _.debounce(@saveBackup, 500)\r\n    @usesVersions = @schema()?.properties?.version?\r\n    if window.application?.testing\r\n      @fakeRequests = []\r\n      @on 'request', -> @fakeRequests.push jasmine.Ajax.requests.mostRecent()\r\n\r\n  created: -> new Date(parseInt(@id.substring(0, 8), 16) * 1000)\r\n\r\n  backupKey: ->\r\n    if @usesVersions then @id else @id  # + ':' + @attributes.__v  # TODO: doesn't work because __v doesn't actually increment. #2061\r\n    # if fixed, RevertModal will also need the fix\r\n\r\n  setProjection: (project) ->\r\n    # TODO: ends up getting done twice, since the URL is modified and the @project is modified. So don't do this, just set project directly... (?)\r\n    return if project is @project\r\n    url = @getURL()\r\n    url += '&project=' unless /project=/.test url\r\n    url = url.replace '&', '?' unless /\\?/.test url\r\n    url = url.replace /project=[^&]*/, \"project=#{project?.join(',') or ''}\"\r\n    url = url.replace /[&?]project=&/, '&' unless project?.length\r\n    url = url.replace /[&?]project=$/, '' unless project?.length\r\n    @setURL url\r\n    @project = project\r\n\r\n  type: ->\r\n    @constructor.className\r\n\r\n  clone: (withChanges=true) ->\r\n    # Backbone does not support nested documents\r\n    clone = super()\r\n    clone.set($.extend(true, {}, if withChanges or not @_revertAttributes then @attributes else @_revertAttributes))\r\n    if @_revertAttributes and not withChanges\r\n      # remove any keys that are in the current attributes not in the snapshot\r\n      for key in _.difference(_.keys(clone.attributes), _.keys(@_revertAttributes))\r\n        clone.unset(key)\r\n    clone\r\n\r\n  onError: (level, jqxhr) ->\r\n    @loading = false\r\n    @jqxhr = null\r\n    if jqxhr.status is 402\r\n      if _.contains(jqxhr.responseText, 'be in a course')\r\n        Backbone.Mediator.publish 'level:course-membership-required', {}\r\n      else\r\n        Backbone.Mediator.publish 'level:subscription-required', {}\r\n\r\n  onLoaded: ->\r\n    @loaded = true\r\n    @loading = false\r\n    @jqxhr = null\r\n    @loadFromBackup()\r\n\r\n  getCreationDate: -> new Date(parseInt(@id.slice(0,8), 16)*1000)\r\n\r\n  getNormalizedURL: -> \"#{@urlRoot}/#{@id}\"\r\n\r\n  attributesWithDefaults: undefined\r\n\r\n  get: (attribute, withDefault=false) ->\r\n    if withDefault\r\n      if @attributesWithDefaults is undefined then @buildAttributesWithDefaults()\r\n      return @attributesWithDefaults[attribute]\r\n    else\r\n      super(attribute)\r\n\r\n  set: (attributes, options) ->\r\n    delete @attributesWithDefaults unless attributes is 'thangs'  # unless attributes is 'thangs': performance optimization for Levels keeping their cache.\r\n    inFlux = @loading or not @loaded\r\n    @markToRevert() unless inFlux or @_revertAttributes or @project or options?.fromMerge\r\n    res = super attributes, options\r\n    @saveBackup() if @saveBackups and (not inFlux)\r\n    res\r\n\r\n  buildAttributesWithDefaults: ->\r\n    t0 = new Date()\r\n    clone = $.extend true, {}, @attributes\r\n    thisTV4 = tv4.freshApi()\r\n    thisTV4.addSchema('#', @schema())\r\n    thisTV4.addSchema('metaschema', require('schemas/metaschema'))\r\n    TreemaUtils.populateDefaults(clone, @schema(), thisTV4)\r\n    @attributesWithDefaults = clone\r\n    duration = new Date() - t0\r\n    console.debug \"Populated defaults for #{@type()}#{if @attributes.name then ' ' + @attributes.name else ''} in #{duration}ms\" if duration > 10\r\n\r\n  loadFromBackup: ->\r\n    return unless @saveBackups\r\n    existing = storage.load @backupKey()\r\n    if existing\r\n      @set(existing, {silent: true})\r\n      CocoModel.backedUp[@backupKey()] = @\r\n\r\n  saveBackup: -> @saveBackupNow()\r\n\r\n  saveBackupNow: ->\r\n    storage.save(@backupKey(), @attributes)\r\n    CocoModel.backedUp[@backupKey()] = @\r\n\r\n  @backedUp = {}\r\n  schema: -> return @constructor.schema\r\n\r\n  getValidationErrors: ->\r\n    # Since Backbone unset only sets things to undefined instead of deleting them, we ignore undefined properties.\r\n    definedAttributes = _.pick @attributes, (v) -> v isnt undefined\r\n    errors = tv4.validateMultiple(definedAttributes, @constructor.schema or {}).errors\r\n    return errors if errors?.length\r\n\r\n  validate: ->\r\n    errors = @getValidationErrors()\r\n    if errors?.length\r\n      unless application.testing\r\n        console.debug \"Validation failed for #{@constructor.className}: '#{@get('name') or @}'.\"\r\n        for error in errors\r\n          console.debug \"\\t\", error.dataPath, ':', error.message\r\n        console.trace?()\r\n      return errors\r\n\r\n  save: (attrs, options) ->\r\n    options ?= {}\r\n    originalOptions = _.cloneDeep(options)\r\n    options.headers ?= {}\r\n    options.headers['X-Current-Path'] = document.location?.pathname ? 'unknown'\r\n    success = options.success\r\n    error = options.error\r\n    options.success = (model, res) =>\r\n      @retries = 0\r\n      @trigger 'save:success', @\r\n      success(@, res) if success\r\n      @markToRevert() if @_revertAttributes\r\n      @clearBackup()\r\n      CocoModel.pollAchievements()\r\n      options.success = options.error = null  # So the callbacks can be garbage-collected.\r\n    options.error = (model, res) =>\r\n      if res.status is 0\r\n        @retries ?= 0\r\n        @retries += 1\r\n        if @retries > 20\r\n          msg = 'Your computer or our servers appear to be offline. Please try refreshing.'\r\n          noty text: msg, layout: 'center', type: 'error', killer: true\r\n          return\r\n        else\r\n          msg = $.i18n.t 'loading_error.connection_failure', defaultValue: 'Connection failed.'\r\n          try\r\n            noty text: msg, layout: 'center', type: 'error', killer: true, timeout: 3000\r\n          catch notyError\r\n            console.warn \"Couldn't even show noty error for\", error, \"because\", notyError\r\n          return _.delay((f = => @save(attrs, originalOptions)), 3000)\r\n      error(@, res) if error\r\n      return unless @notyErrors\r\n      errorMessage = \"Error saving #{@get('name') ? @type()}\"\r\n      console.log 'going to log an error message'\r\n      console.warn errorMessage, res.responseJSON\r\n      unless webkit?.messageHandlers  # Don't show these notys on iPad\r\n        try\r\n          noty text: \"#{errorMessage}: #{res.status} #{res.statusText}\\n#{res.responseText}\", layout: 'topCenter', type: 'error', killer: false, timeout: 10000\r\n        catch notyError\r\n          console.warn \"Couldn't even show noty error for\", error, \"because\", notyError\r\n      options.success = options.error = null  # So the callbacks can be garbage-collected.\r\n    @trigger 'save', @\r\n    return super attrs, options\r\n\r\n  patch: (options) ->\r\n    return false unless @_revertAttributes\r\n    options ?= {}\r\n    options.patch = true\r\n    options.type = 'PUT'\r\n\r\n    attrs = {_id: @id}\r\n    keys = []\r\n    for key in _.keys @attributes\r\n      unless _.isEqual @attributes[key], @_revertAttributes[key]\r\n        attrs[key] = @attributes[key]\r\n        keys.push key\r\n\r\n    return unless keys.length\r\n    @save(attrs, options)\r\n\r\n  fetch: (options) ->\r\n    options ?= {}\r\n    options.data ?= {}\r\n    options.data.project = @project.join(',') if @project\r\n    #console.error @constructor.className, @, \"fetching with cache?\", options.cache, \"options\", options  # Useful for debugging cached IE fetches\r\n    @jqxhr = super(options)\r\n    @loading = true\r\n    @jqxhr\r\n\r\n  markToRevert: ->\r\n    if @type() is 'ThangType'\r\n      # Don't deep clone the raw vector data, but do deep clone everything else.\r\n      @_revertAttributes = _.clone @attributes\r\n      for smallProp, value of @attributes when value and smallProp isnt 'raw'\r\n        @_revertAttributes[smallProp] = _.cloneDeep value\r\n    else\r\n      @_revertAttributes = $.extend(true, {}, @attributes)\r\n\r\n  revert: ->\r\n    @clear({silent: true})\r\n    @set(@_revertAttributes, {silent: true}) if @_revertAttributes\r\n    @clearBackup()\r\n\r\n  clearBackup: ->\r\n    storage.remove @backupKey()\r\n\r\n  hasLocalChanges: ->\r\n    @_revertAttributes and not _.isEqual @attributes, @_revertAttributes\r\n\r\n  cloneNewMinorVersion: ->\r\n    newData = _.clone @attributes\r\n    clone = new @constructor(newData)\r\n    clone\r\n\r\n  cloneNewMajorVersion: ->\r\n    clone = @cloneNewMinorVersion()\r\n    clone.unset('version')\r\n    clone\r\n\r\n  isPublished: ->\r\n    for permission in (@get('permissions', true) ? [])\r\n      return true if permission.target is 'public' and permission.access is 'read'\r\n    false\r\n\r\n  publish: ->\r\n    if @isPublished() then throw new Error('Can\\'t publish what\\'s already-published. Can\\'t kill what\\'s already dead.')\r\n    @set 'permissions', @get('permissions', true).concat({access: 'read', target: 'public'})\r\n\r\n  @isObjectID: (s) ->\r\n    s.length is 24 and s.match(/[a-f0-9]/gi)?.length is 24\r\n\r\n  hasReadAccess: (actor) ->\r\n    # actor is a User object\r\n    actor ?= me\r\n    return true if actor.isAdmin()\r\n    return true if actor.isArtisan() and @editableByArtisans\r\n    for permission in (@get('permissions', true) ? [])\r\n      if permission.target is 'public' or actor.get('_id') is permission.target\r\n        return true if permission.access in ['owner', 'read']\r\n\r\n    return false\r\n\r\n  hasWriteAccess: (actor) ->\r\n    # actor is a User object\r\n    actor ?= me\r\n    return true if actor.isAdmin()\r\n    return true if actor.isArtisan() and @editableByArtisans\r\n    for permission in (@get('permissions', true) ? [])\r\n      if permission.target is 'public' or actor.get('_id') is permission.target\r\n        return true if permission.access in ['owner', 'write']\r\n\r\n    return false\r\n\r\n  getOwner: ->\r\n    ownerPermission = _.find @get('permissions', true), access: 'owner'\r\n    ownerPermission?.target\r\n\r\n  getDelta: ->\r\n    differ = deltasLib.makeJSONDiffer()\r\n    differ.diff(_.omit(@_revertAttributes, deltasLib.DOC_SKIP_PATHS), _.omit(@attributes, deltasLib.DOC_SKIP_PATHS))\r\n\r\n  getDeltaWith: (otherModel) ->\r\n    differ = deltasLib.makeJSONDiffer()\r\n    differ.diff @attributes, otherModel.attributes\r\n\r\n  applyDelta: (delta) ->\r\n    newAttributes = $.extend(true, {}, @attributes)\r\n    try\r\n      jsondiffpatch.patch newAttributes, delta\r\n    catch error\r\n      unless application.testing\r\n        console.error 'Error applying delta\\n', JSON.stringify(delta, null, '\\t'), '\\n\\nto attributes\\n\\n', newAttributes\r\n      return false\r\n    for key, value of newAttributes\r\n      delete newAttributes[key] if _.isEqual value, @attributes[key]\r\n\r\n    @set newAttributes\r\n    return true\r\n\r\n  getExpandedDelta: ->\r\n    delta = @getDelta()\r\n    deltasLib.expandDelta(delta, @_revertAttributes, @schema())\r\n\r\n  getExpandedDeltaWith: (otherModel) ->\r\n    delta = @getDeltaWith(otherModel)\r\n    deltasLib.expandDelta(delta, @attributes, @schema())\r\n\r\n  watch: (doWatch=true) ->\r\n    $.ajax(\"#{@urlRoot}/#{@id}/watch\", {type: 'PUT', data: {on: doWatch}})\r\n    @watching = -> doWatch\r\n\r\n  watching: ->\r\n    return me.id in (@get('watchers') or [])\r\n\r\n  populateI18N: (data, schema, path='') ->\r\n    # TODO: Better schema/json walking\r\n    sum = 0\r\n    data ?= $.extend true, {}, @attributes\r\n    schema ?= @schema() or {}\r\n    if schema.oneOf # get populating the Programmable component config to work\r\n      schema = _.find(schema.oneOf, {type: 'object'}) or schema\r\n    addedI18N = false\r\n    if schema.properties?.i18n and _.isPlainObject(data) and not data.i18n?\r\n      data.i18n = {'-':{'-':'-'}} # mongoose doesn't work with empty objects\r\n      sum += 1\r\n      addedI18N = true\r\n\r\n    if _.isPlainObject data\r\n      for key, value of data\r\n        numChanged = 0\r\n        childSchema = schema.properties?[key]\r\n        if not childSchema and _.isObject(schema.additionalProperties)\r\n          childSchema = schema.additionalProperties\r\n        if childSchema\r\n          numChanged = @populateI18N(value, childSchema, path+'/'+key)\r\n        if numChanged and not path # should only do this for the root object\r\n          @set key, value\r\n        sum += numChanged\r\n\r\n    if schema.items and _.isArray data\r\n      sum += @populateI18N(value, schema.items, path+'/'+index) for value, index in data\r\n\r\n    @set('i18n', data.i18n) if addedI18N and not path # need special case for root i18n\r\n    @updateI18NCoverage() if not path  # only need to do this at the highest level\r\n    sum\r\n\r\n  @getReferencedModel: (data, schema) ->\r\n    return null unless schema.links?\r\n    linkObject = _.find schema.links, rel: 'db'\r\n    return null unless linkObject\r\n    return null if linkObject.href.match('thang.type') and not @isObjectID(data)  # Skip loading hardcoded Thang Types for now (TODO)\r\n\r\n    # not fully extensible, but we can worry about that later\r\n    link = linkObject.href\r\n    link = link.replace('{(original)}', data.original)\r\n    link = link.replace('{(majorVersion)}', '' + (data.majorVersion ? 0))\r\n    link = link.replace('{($)}', data)\r\n    @getOrMakeModelFromLink(link)\r\n\r\n  @getOrMakeModelFromLink: (link) ->\r\n    makeUrlFunc = (url) -> -> url\r\n    modelUrl = link.split('/')[2]\r\n    modelModule = _.string.classify(modelUrl)\r\n    modulePath = \"models/#{modelModule}\"\r\n\r\n    try\r\n      Model = require modulePath\r\n    catch e\r\n      console.error 'could not load model from link path', link, 'using path', modulePath\r\n      return\r\n\r\n    model = new Model()\r\n    model.url = makeUrlFunc(link)\r\n    return model\r\n\r\n  setURL: (url) ->\r\n    makeURLFunc = (u) -> -> u\r\n    @url = makeURLFunc(url)\r\n    @\r\n\r\n  getURL: ->\r\n    return if _.isString @url then @url else @url()\r\n    \r\n  makePatch: ->\r\n    Patch = require 'models/Patch'\r\n    target = {\r\n      'collection': _.string.underscored @constructor.className\r\n      'id': @id\r\n    }\r\n    # if this document is versioned (has original property) then include version info\r\n    if @get('original')\r\n      target.original = @get('original')\r\n      target.version = @get('version')\r\n      \r\n    return new Patch({\r\n      delta: @getDelta()\r\n      target \r\n    })\r\n\r\n  @pollAchievements: ->\r\n    return if application.testing\r\n\r\n    CocoCollection = require 'collections/CocoCollection'\r\n    EarnedAchievement = require 'models/EarnedAchievement'\r\n\r\n    class NewAchievementCollection extends CocoCollection\r\n      model: EarnedAchievement\r\n      initialize: (me = require('core/auth').me) ->\r\n        @url = \"/db/user/#{me.id}/achievements?notified=false\"\r\n\r\n    achievements = new NewAchievementCollection\r\n    achievements.fetch\r\n      success: (collection) ->\r\n        me.fetch (cache: false, success: -> Backbone.Mediator.publish('achievements:new', earnedAchievements: collection)) unless _.isEmpty(collection.models)\r\n      error: ->\r\n        console.error 'Miserably failed to fetch unnotified achievements', arguments\r\n      cache: false\r\n\r\n  CocoModel.pollAchievements = _.debounce CocoModel.pollAchievements, 500\r\n\r\n\r\n  #- Internationalization\r\n\r\n  updateI18NCoverage: ->\r\n    langCodeArrays = []\r\n    pathToData = {}\r\n\r\n    TreemaUtils.walk(@attributes, @schema(), null, (path, data, workingSchema) ->\r\n      # Store parent data for the next block...\r\n      if data?.i18n\r\n        pathToData[path] = data\r\n\r\n      if _.string.endsWith path, 'i18n'\r\n        i18n = data\r\n\r\n        # grab the parent data\r\n        parentPath = path[0...-5]\r\n        parentData = pathToData[parentPath]\r\n\r\n        # use it to determine what properties actually need to be translated\r\n        props = workingSchema.props or []\r\n        props = (prop for prop in props when parentData[prop])\r\n        return unless props.length\r\n        return if 'additionalProperties' of i18n  # Workaround for #2630: Programmable is weird\r\n\r\n        # get a list of lang codes where its object has keys for every prop to be translated\r\n        coverage = _.filter(_.keys(i18n), (langCode) ->\r\n          translations = i18n[langCode]\r\n          translations and _.all((translations[prop] for prop in props))\r\n        )\r\n        #console.log 'got coverage', coverage, 'for', path, props, workingSchema, parentData\r\n        langCodeArrays.push coverage\r\n    )\r\n\r\n    return unless langCodeArrays.length\r\n    # language codes that are covered for every i18n object are fully covered\r\n    overallCoverage = _.intersection(langCodeArrays...)\r\n    @set('i18nCoverage', overallCoverage)\r\n\r\n  saveNewMinorVersion: (attrs, options={}) ->\r\n    options.url = @url() + '/new-version'\r\n    options.type = 'POST'\r\n    return @save(attrs, options)\r\n\r\n  saveNewMajorVersion: (attrs, options={}) ->\r\n    attrs = attrs or _.omit(@attributes, 'version')\r\n    options.url = @url() + '/new-version'\r\n    options.type = 'POST'\r\n    options.patch = true # do not let version get sent along\r\n    return @save(attrs, options)\r\n\r\n  fetchPatchesWithStatus: (status='pending', options={}) ->\r\n    Patches = require '../collections/Patches'\r\n    patches = new Patches()\r\n    options.data ?= {}\r\n    options.data.status = status\r\n    options.url = @urlRoot + '/' + (@get('original') or @id) + '/patches'\r\n    patches.fetch(options)\r\n    return patches\r\n    \r\n  stringify: -> return JSON.stringify(@toJSON())\r\n\r\n  wait: (event) -> new Promise((resolve) => @once(event, resolve))\r\n  \r\n  fetchLatestVersion: (original, options={}) ->\r\n    options.url = _.result(@, 'urlRoot') + '/' + original + '/version'\r\n    @fetch(options)\r\n\r\nmodule.exports = CocoModel\r\n"]}