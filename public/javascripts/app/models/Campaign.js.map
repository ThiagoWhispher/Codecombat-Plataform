{"version":3,"sources":["app/models/Campaign.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,YAAY,QAAQ,aAAR;;AACZ,SAAS,QAAQ,gCAAR;;AACT,QAAQ,QAAQ,cAAR;;AACR,SAAS,QAAQ,oBAAR;;AACT,iBAAiB,QAAQ,4BAAR;;AACjB,QAAQ,QAAQ,eAAR;;AAER,MAAM,CAAC,OAAP,GAAuB;;;;;;;EACrB,QAAC,UAAD,GAAY;;EACZ,QAAC,OAAD,GAAS;;qBACT,UAAS;;EACT,QAAC,4BAAD,GAA8B,CAAC,CAAC,IAAF,CAAO,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC,UAArD,EAAiE,CAAC,UAAD,EAAa,SAAb,CAAjE,CAAP;;EAC9B,QAAC,+BAAD,GAAiC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;;qBAEjC,YAAW;AACT;IAAA,SAAa,WAAO,CAAC,CAAC,MAAF,CAAS,IAAC,IAAD,CAAK,QAAL,CAAT,CAAP;IACb,MAAM,CAAC,UAAP,GAAoB;IACpB,MAAM,CAAC,IAAP;AACA,WAAO;EAJE;;qBAMX,qBAAoB;AAClB;IAAA,SAAa,WAAO,CAAC,CAAC,MAAF,CAAS,IAAC,IAAD,CAAK,QAAL,CAAT,CAAP;IACb,MAAM,CAAC,KAAP,CAAa,MAAM,CAAC,MAAP,CAAc,SAAC,KAAD;aAAW,KAAK,CAAC,QAAN;IAAX,CAAd,CAAb;IACA,MAAM,CAAC,UAAP,GAAoB;IACpB,MAAM,CAAC,IAAP;AACA,WAAO;EALW;;qBAOpB,iBAAgB,SAAC,OAAD,EAAU,aAAV;AACd;IAAA,KAAO,IAAC,eAAR;MACE,SAAS;AACT;AAAA;;cAAsC,KAAK,CAAC,GAAN,CAAU,UAAV;;;QACpC,WAAW,IAAC,gBAAD,CAAiB,KAAjB;QACX,MAAM,CAAC,IAAP,CAAY;UAAC,KAAK,KAAK,CAAC,GAAN,CAAU,UAAV,CAAN;UAA6B,UAAU,QAAvC;SAAZ;AAFF;MAGA,IAAC,eAAD,GAAkB,KAAK,CAAC,oBAAN,CAA2B,MAA3B,EALpB;;kEAM2B;EAPb;;qBAShB,kBAAiB,SAAC,KAAD;IAEf,IAA4B,KAAK,CAAC,UAAlC;MAAA,QAAQ,KAAK,CAAC,WAAd;;IACA,IAAG,IAAC,IAAD,CAAK,MAAL,MAAgB,QAAnB;AACE,aAAO,KAAK,CAAC,SADf;KAAA;AAGE,aAAO,KAAK,CAAC,QAAN,IAAmB,UAAU,CAAC,IAAX,CAAgB,KAAK,CAAC,IAAtB,EAH5B;;EAHe;;;;GA7BqB","file":"public/javascripts/app/models/Campaign.js","sourcesContent":["CocoModel = require './CocoModel'\r\nschema = require 'schemas/models/campaign.schema'\r\nLevel = require 'models/Level'\r\nLevels = require 'collections/Levels'\r\nCocoCollection = require 'collections/CocoCollection'\r\nutils = require '../core/utils'\r\n\r\nmodule.exports = class Campaign extends CocoModel\r\n  @className: 'Campaign'\r\n  @schema: schema\r\n  urlRoot: '/db/campaign'\r\n  @denormalizedLevelProperties: _.keys(_.omit(schema.properties.levels.additionalProperties.properties, ['position', 'rewards']))\r\n  @denormalizedCampaignProperties: ['name', 'i18n', 'slug']\r\n\r\n  getLevels: ->\r\n    levels = new Levels(_.values(@get('levels')))\r\n    levels.comparator = 'campaignIndex'\r\n    levels.sort()\r\n    return levels\r\n\r\n  getNonLadderLevels: ->\r\n    levels = new Levels(_.values(@get('levels')))\r\n    levels.reset(levels.reject (level) -> level.isLadder())\r\n    levels.comparator = 'campaignIndex'\r\n    levels.sort()\r\n    return levels\r\n\r\n  getLevelNumber: (levelID, defaultNumber) ->\r\n    unless @levelNumberMap\r\n      levels = []\r\n      for level in @getLevels().models when level.get('original')\r\n        practice = @levelIsPractice level\r\n        levels.push({key: level.get('original'), practice: practice})\r\n      @levelNumberMap = utils.createLevelNumberMap(levels)\r\n    @levelNumberMap[levelID] ? defaultNumber\r\n\r\n  levelIsPractice: (level) ->\r\n    # Migration: in home version, only treat levels explicitly labeled as \"Level Name A\", \"Level Name B\", etc. as practice levels\r\n    level = level.attributes if level.attributes\r\n    if @get('type') is 'course'\r\n      return level.practice\r\n    else\r\n      return level.practice and / [ABCD]$/.test level.name\r\n"]}