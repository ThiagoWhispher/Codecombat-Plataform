{"version":3,"sources":["app/core/treema-ext.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/core/treema-ext.js","sourcesContent":["CocoModel = require 'models/CocoModel'\r\nCocoCollection = require 'collections/CocoCollection'\r\n{me} = require('core/auth')\r\nlocale = require 'locale/locale'\r\nutils = require 'core/utils'\r\n\r\ninitializeFilePicker = ->\r\n  require('core/services/filepicker')() unless window.application.isIPadApp\r\n\r\nclass DateTimeTreema extends TreemaNode.nodeMap.string\r\n  valueClass: 'treema-date-time'\r\n  buildValueForDisplay: (el, data) -> el.text(moment(data).format('llll'))\r\n  buildValueForEditing: (valEl) ->\r\n    @buildValueForEditingSimply valEl, null, 'date'\r\n\r\nclass VersionTreema extends TreemaNode\r\n  valueClass: 'treema-version'\r\n  buildValueForDisplay: (valEl, data) ->\r\n    @buildValueForDisplaySimply(valEl, \"#{data.major}.#{data.minor}\")\r\n\r\nclass LiveEditingMarkup extends TreemaNode.nodeMap.ace\r\n  valueClass: 'treema-markdown treema-multiline treema-ace'\r\n\r\n  constructor: ->\r\n    super(arguments...)\r\n    @workingSchema.aceMode = 'ace/mode/markdown'\r\n    initializeFilePicker()\r\n\r\n  initEditor: (valEl) ->\r\n    buttonRow = $('<div class=\"buttons\"></div>')\r\n    valEl.append(buttonRow)\r\n    @addPreviewToggle(buttonRow)\r\n    @addImageUpload(buttonRow)\r\n    super(valEl)\r\n    valEl.append($('<div class=\"preview\"></div>').hide())\r\n\r\n  addImageUpload: (valEl) ->\r\n    return unless me.isAdmin() or me.isArtisan()\r\n    valEl.append(\r\n      $('<div class=\"pick-image-button\"></div>').append(\r\n        $('<button>Pick Image</button>')\r\n          .addClass('btn btn-sm btn-primary')\r\n          .click(=> filepicker.pick @onFileChosen)\r\n      )\r\n    )\r\n\r\n  addPreviewToggle: (valEl) ->\r\n    valEl.append($('<div class=\"toggle-preview-button\"></div>').append(\r\n      $('<button>Toggle Preview</button>')\r\n      .addClass('btn btn-sm btn-primary')\r\n      .click(@togglePreview)\r\n    ))\r\n\r\n  onFileChosen: (InkBlob) =>\r\n    body =\r\n      url: InkBlob.url\r\n      filename: InkBlob.filename\r\n      mimetype: InkBlob.mimetype\r\n      path: @settings.filePath\r\n      force: true\r\n\r\n    @uploadingPath = [@settings.filePath, InkBlob.filename].join('/')\r\n    $.ajax('/file', { type: 'POST', data: body, success: @onFileUploaded })\r\n\r\n  onFileUploaded: (e) =>\r\n    @editor.insert \"![#{e.metadata.name}](/file/#{@uploadingPath})\"\r\n\r\n  showingPreview: false\r\n\r\n  togglePreview: =>\r\n    valEl = @getValEl()\r\n    if @showingPreview\r\n      valEl.find('.preview').hide()\r\n      valEl.find('.pick-image-button').show()\r\n      valEl.find('.ace_editor').show()\r\n    else\r\n      valEl.find('.preview').html(marked(@data)).show()\r\n      valEl.find('.pick-image-button').hide()\r\n      valEl.find('.ace_editor').hide()\r\n    @showingPreview = not @showingPreview\r\n\r\nclass SoundFileTreema extends TreemaNode.nodeMap.string\r\n  valueClass: 'treema-sound-file'\r\n  editable: false\r\n  soundCollection: 'files'\r\n\r\n  constructor: ->\r\n    super arguments...\r\n    initializeFilePicker()\r\n\r\n  onClick: (e) ->\r\n    return if $(e.target).closest('.btn').length\r\n    super(arguments...)\r\n\r\n  getFiles: ->\r\n    @settings[@soundCollection]?.models or []\r\n\r\n  buildValueForDisplay: (valEl, data) ->\r\n    mimetype = \"audio/#{@keyForParent}\"\r\n    mimetypes = [mimetype]\r\n    if mimetype is 'audio/mp3'\r\n      # https://github.com/codecombat/codecombat/issues/445\r\n      # http://stackoverflow.com/questions/10688588/which-mime-type-should-i-use-for-mp3\r\n      mimetypes.push 'audio/mpeg'\r\n    else if mimetype is 'audio/ogg'\r\n      mimetypes.push 'application/ogg'\r\n      mimetypes.push 'video/ogg'  # huh, that's what it took to be able to upload ogg sounds in Firefox\r\n    pickButton = $('<a class=\"btn btn-primary btn-xs\"><span class=\"glyphicon glyphicon-upload\"></span></a>')\r\n      .click(=> filepicker.pick {mimetypes: mimetypes}, @onFileChosen)\r\n    playButton = $('<a class=\"btn btn-primary btn-xs\"><span class=\"glyphicon glyphicon-play\"></span></a>')\r\n      .click(@playFile)\r\n    stopButton = $('<a class=\"btn btn-primary btn-xs\"><span class=\"glyphicon glyphicon-stop\"></span></a>')\r\n      .click(@stopFile)\r\n\r\n    dropdown = $('<div class=\"btn-group dropdown\"></div>')\r\n\r\n    dropdownButton = $('<a></a>')\r\n      .addClass('btn btn-primary btn-xs dropdown-toggle')\r\n      .attr('href', '#')\r\n      .append($('<span class=\"glyphicon glyphicon-chevron-down\"></span>'))\r\n      .dropdown()\r\n\r\n    dropdown.append dropdownButton\r\n\r\n    menu = $('<div class=\"dropdown-menu\"></div>')\r\n    files = @getFiles()\r\n    for file in files\r\n      continue unless file.get('contentType') in mimetypes\r\n      path = file.get('metadata').path\r\n      filename = file.get 'filename'\r\n      fullPath = [path, filename].join('/')\r\n      li = $('<li></li>')\r\n        .data('fullPath', fullPath)\r\n        .text(filename)\r\n      menu.append(li)\r\n    menu.click (e) =>\r\n      @data = $(e.target).data('fullPath') or data\r\n      @reset()\r\n    dropdown.append(menu)\r\n\r\n    valEl.append(pickButton)\r\n    if data\r\n      valEl.append(playButton)\r\n      valEl.append(stopButton)\r\n    valEl.append(dropdown) # if files.length and @canEdit()\r\n    if data\r\n      path = data.split('/')\r\n      name = path[path.length-1]\r\n      valEl.append($('<span></span>').text(name))\r\n\r\n  reset: ->\r\n    @instance = null\r\n    @flushChanges()\r\n    @refreshDisplay()\r\n\r\n  playFile: =>\r\n    @src = \"/file/#{@getData()}\"\r\n\r\n    if @instance\r\n      @instance.play()\r\n\r\n    else\r\n      createjs.Sound.alternateExtensions = ['mp3','ogg']\r\n      registered = createjs.Sound.registerSound(@src)\r\n      if registered is true\r\n        @instance = createjs.Sound.play(@src)\r\n\r\n      else\r\n        f = (event) =>\r\n          @instance = createjs.Sound.play(event.src) if event.src is @src\r\n          createjs.Sound.removeEventListener('fileload', f)\r\n        createjs.Sound.addEventListener('fileload', f)\r\n\r\n  stopFile: => @instance?.stop()\r\n\r\n  onFileChosen: (InkBlob) =>\r\n    if not @settings.filePath\r\n      console.error('Need to specify a filePath for this treema', @getRoot())\r\n      throw Error('cannot upload file')\r\n\r\n    body =\r\n      url: InkBlob.url\r\n      filename: InkBlob.filename\r\n      mimetype: InkBlob.mimetype\r\n      path: @settings.filePath\r\n      force: true\r\n\r\n    @uploadingPath = [@settings.filePath, InkBlob.filename].join('/')\r\n    $.ajax('/file', { type: 'POST', data: body, success: @onFileUploaded })\r\n\r\n  onFileUploaded: (e) =>\r\n    @data = @uploadingPath\r\n    @reset()\r\n\r\n\r\nclass ImageFileTreema extends TreemaNode.nodeMap.string\r\n  valueClass: 'treema-image-file'\r\n  editable: false\r\n\r\n  constructor: ->\r\n    super arguments...\r\n    initializeFilePicker()\r\n\r\n  onClick: (e) ->\r\n    return if $(e.target).closest('.btn').length\r\n    super(arguments...)\r\n\r\n  buildValueForDisplay: (valEl, data) ->\r\n    mimetype = 'image/*'\r\n    pickButton = $('<a class=\"btn btn-sm btn-primary\"><span class=\"glyphicon glyphicon-upload\"></span> Upload Picture</a>')\r\n      .click(=> filepicker.pick {mimetypes:[mimetype]}, @onFileChosen)\r\n\r\n    valEl.append(pickButton)\r\n    if data\r\n      valEl.append $('<img />').attr('src', \"/file/#{data}\")\r\n\r\n  onFileChosen: (InkBlob) =>\r\n    if not @settings.filePath\r\n      console.error('Need to specify a filePath for this treema', @getRoot())\r\n      throw Error('cannot upload file')\r\n\r\n    body =\r\n      url: InkBlob.url\r\n      filename: InkBlob.filename\r\n      mimetype: InkBlob.mimetype\r\n      path: @settings.filePath\r\n      force: true\r\n\r\n    @uploadingPath = [@settings.filePath, InkBlob.filename].join('/')\r\n    $.ajax('/file', { type: 'POST', data: body, success: @onFileUploaded })\r\n\r\n  onFileUploaded: (e) =>\r\n    @data = @uploadingPath\r\n    @flushChanges()\r\n    @refreshDisplay()\r\n\r\n\r\nclass CodeLanguagesObjectTreema extends TreemaNode.nodeMap.object\r\n  childPropertiesAvailable: ->\r\n    (key for key in _.keys(utils.aceEditModes) when not @data[key]? and not (key is 'javascript' and @workingSchema.skipJavaScript))\r\n\r\nclass CodeLanguageTreema extends TreemaNode.nodeMap.string\r\n  buildValueForEditing: (valEl, data) ->\r\n    super(valEl, data)\r\n    valEl.find('input').autocomplete(source: _.keys(utils.aceEditModes), minLength: 0, delay: 0, autoFocus: true)\r\n    valEl\r\n\r\nclass CodeTreema extends TreemaNode.nodeMap.ace\r\n  constructor: ->\r\n    super(arguments...)\r\n    @workingSchema.aceTabSize = 4\r\n    # TODO: Find a less hacky solution for this\r\n    @workingSchema.aceMode = mode if mode = utils.aceEditModes[@keyForParent]\r\n    @workingSchema.aceMode = mode if mode = utils.aceEditModes[@parent?.data?.language]\r\n\r\n  initEditor: (args...) ->\r\n    super args...\r\n    @editor.setPrintMarginColumn 60\r\n\r\nclass CoffeeTreema extends CodeTreema\r\n  constructor: ->\r\n    super(arguments...)\r\n    @workingSchema.aceMode = 'ace/mode/coffee'\r\n    @workingSchema.aceTabSize = 2\r\n\r\nclass JavaScriptTreema extends CodeTreema\r\n  constructor: ->\r\n    super(arguments...)\r\n    @workingSchema.aceMode = 'ace/mode/javascript'\r\n    @workingSchema.aceTabSize = 4\r\n\r\n\r\nclass InternationalizationNode extends TreemaNode.nodeMap.object\r\n  findLanguageName: (languageCode) ->\r\n    # to get around mongoose empty object bug, there's a prop in the object which needs to be ignored\r\n    return '' if languageCode is '-'\r\n    locale[languageCode]?.nativeDescription or \"#{languageCode} Not Found\"\r\n\r\n  getChildren: ->\r\n    res = super(arguments...)\r\n    res = (r for r in res when r[0] isnt '-')\r\n    res\r\n\r\n  populateData: ->\r\n    super()\r\n    if Object.keys(@data).length is 0\r\n      @data['-'] = {'-':'-'} # also to get around mongoose bug\r\n\r\n  getChildSchema: (key) ->\r\n    #construct the child schema here\r\n\r\n    i18nChildSchema = {\r\n      title: @findLanguageName(key)\r\n      type: 'object'\r\n      properties: {}\r\n    }\r\n    return i18nChildSchema unless @parent\r\n    unless @workingSchema.props?\r\n      console.warn 'i18n props array is empty! Filling with all parent properties by default'\r\n      @workingSchema.props = (prop for prop,_ of @parent.schema.properties when prop isnt 'i18n')\r\n\r\n    for i18nProperty in @workingSchema.props\r\n      parentSchemaProperties = @parent.schema.properties ? {}\r\n      for extraSchemas in [@parent.schema.oneOf, @parent.schema.anyOf]\r\n        for extraSchema in extraSchemas ? []\r\n          for prop, schema of extraSchema?.properties ? {}\r\n            parentSchemaProperties[prop] ?= schema\r\n      i18nChildSchema.properties[i18nProperty] = parentSchemaProperties[i18nProperty]\r\n    return i18nChildSchema\r\n    #this must be filled out in order for the i18n node to work\r\n\r\n  childPropertiesAvailable: ->\r\n    (key for key in _.keys(locale) when not @data[key]?)\r\n\r\n\r\nclass LatestVersionCollection extends CocoCollection\r\n\r\nmodule.exports.LatestVersionReferenceNode = class LatestVersionReferenceNode extends TreemaNode\r\n  searchValueTemplate: '<input placeholder=\"Search\" /><div class=\"treema-search-results\"></div>'\r\n  valueClass: 'treema-latest-version'\r\n  url: '/db/article'\r\n  lastTerm: null\r\n\r\n  constructor: ->\r\n    super(arguments...)\r\n\r\n    # to dynamically build the search url, inspect the links url that should be included\r\n    links = @workingSchema.links or []\r\n    link = (l for l in links when l.rel is 'db')[0]\r\n    return unless link\r\n    parts = (p for p in link.href.split('/') when p.length)\r\n    @url = \"/db/#{parts[1]}\"\r\n    @model = require('models/' + _.string.classify(parts[1]))\r\n\r\n  buildValueForDisplay: (valEl, data) ->\r\n    val = if data then @formatDocument(data) else 'None'\r\n    @buildValueForDisplaySimply(valEl, val)\r\n\r\n  buildValueForEditing: (valEl, data) ->\r\n    valEl.html(@searchValueTemplate)\r\n    input = valEl.find('input')\r\n    input.focus().keyup @search\r\n    input.attr('placeholder', @formatDocument(data)) if data\r\n\r\n  buildSearchURL: (term) -> \"#{@url}?term=#{term}&project=true\"\r\n\r\n  search: =>\r\n    term = @getValEl().find('input').val()\r\n    return if term is @lastTerm\r\n\r\n    @getSearchResultsEl().empty() if @lastTerm and not term\r\n    return unless term\r\n    @lastTerm = term\r\n    @getSearchResultsEl().empty().append('Searching')\r\n    @collection = new LatestVersionCollection([], model: @model)\r\n\r\n    @collection.url = @buildSearchURL(term)\r\n    @collection.fetch()\r\n    @collection.once 'sync', @searchCallback, @\r\n\r\n  searchCallback: ->\r\n    container = @getSearchResultsEl().detach().empty()\r\n    first = true\r\n    for model in @collection.models\r\n      row = $('<div></div>').addClass('treema-search-result-row')\r\n      text = @formatDocument(model)\r\n      continue unless text?\r\n      row.addClass('treema-search-selected') if first\r\n      first = false\r\n      row.text(text)\r\n      row.data('value', model)\r\n      container.append(row)\r\n    if not @collection.models.length\r\n      container.append($('<div>No results</div>'))\r\n    @getValEl().append(container)\r\n\r\n  getSearchResultsEl: -> @getValEl().find('.treema-search-results')\r\n  getSelectedResultEl: -> @getValEl().find('.treema-search-selected')\r\n\r\n  modelToString: (model) -> model.get('name')\r\n\r\n  formatDocument: (docOrModel) ->\r\n    return @modelToString(docOrModel) if docOrModel instanceof CocoModel\r\n    return 'Unknown' unless @settings.supermodel?\r\n    m = CocoModel.getReferencedModel(@getData(), @workingSchema)\r\n    data = @getData()\r\n    if _.isString data  # LatestVersionOriginalReferenceNode just uses original\r\n      if m.schema().properties.version\r\n        m = @settings.supermodel.getModelByOriginal(m.constructor, data)\r\n      else\r\n        # get by id\r\n        m = @settings.supermodel.getModel(m.constructor, data)\r\n    else\r\n      m = @settings.supermodel.getModelByOriginalAndMajorVersion(m.constructor, data.original, data.majorVersion)\r\n    if @instance and not m\r\n      m = @instance\r\n      @settings.supermodel.registerModel(m)\r\n    return 'Unknown - ' + (data.original ? data) unless m\r\n    return @modelToString(m)\r\n\r\n  saveChanges: ->\r\n    selected = @getSelectedResultEl()\r\n    return unless selected.length\r\n    fullValue = selected.data('value')\r\n    @data = {\r\n      original: fullValue.attributes.original\r\n      majorVersion: fullValue.attributes.version.major\r\n    }\r\n    @instance = fullValue\r\n\r\n  onDownArrowPressed: (e) ->\r\n    return super(arguments...) unless @isEditing()\r\n    @navigateSearch(1)\r\n    e.preventDefault()\r\n\r\n  onUpArrowPressed: (e) ->\r\n    return super(arguments...) unless @isEditing()\r\n    e.preventDefault()\r\n    @navigateSearch(-1)\r\n\r\n  navigateSearch: (offset) ->\r\n    selected = @getSelectedResultEl()\r\n    func = if offset > 0 then 'next' else 'prev'\r\n    next = selected[func]('.treema-search-result-row')\r\n    return unless next.length\r\n    selected.removeClass('treema-search-selected')\r\n    next.addClass('treema-search-selected')\r\n\r\n  onClick: (e) ->\r\n    newSelection = $(e.target).closest('.treema-search-result-row')\r\n    return super(e) unless newSelection.length\r\n    @getSelectedResultEl().removeClass('treema-search-selected')\r\n    newSelection.addClass('treema-search-selected')\r\n    @saveChanges()\r\n    @flushChanges()\r\n    @display()\r\n\r\n  shouldTryToRemoveFromParent: ->\r\n    return if @data?\r\n    selected = @getSelectedResultEl()\r\n    return not selected.length\r\n\r\nmodule.exports.LatestVersionOriginalReferenceNode = class LatestVersionOriginalReferenceNode extends LatestVersionReferenceNode\r\n  # Just for saving the original, not the major version.\r\n  saveChanges: ->\r\n    selected = @getSelectedResultEl()\r\n    return unless selected.length\r\n    fullValue = selected.data('value')\r\n    @data = fullValue.attributes.original\r\n    @instance = fullValue\r\n\r\nmodule.exports.IDReferenceNode = class IDReferenceNode extends LatestVersionReferenceNode\r\n  # Just for saving the _id\r\n  saveChanges: ->\r\n    selected = @getSelectedResultEl()\r\n    return unless selected.length\r\n    fullValue = selected.data('value')\r\n    @data = fullValue.attributes._id\r\n    @instance = fullValue\r\n\r\nclass LevelComponentReferenceNode extends LatestVersionReferenceNode\r\n  # HACK: this list of properties is needed by the thang components edit view and config views.\r\n  # need a better way to specify this, or keep the search models from bleeding into those\r\n  # supermodels.\r\n  buildSearchURL: (term) -> \"#{@url}?term=#{term}&project=name,system,original,version,dependencies,configSchema,description\"\r\n  modelToString: (model) -> model.get('system') + '.' + model.get('name')\r\n  canEdit: -> not @getData().original # only allow editing if the row's data hasn't been set yet\r\n\r\nLatestVersionReferenceNode.prototype.search = _.debounce(LatestVersionReferenceNode.prototype.search, 200)\r\n\r\nclass SlugPropsObject extends TreemaNode.nodeMap.object\r\n  getPropertyKey: ->\r\n    res = super(arguments...)\r\n    return res if @workingSchema.properties?[res]?\r\n    _.string.slugify(res)\r\n\r\nclass TaskTreema extends TreemaNode.nodeMap.string\r\n  buildValueForDisplay: (valEl) ->\r\n    @taskCheckbox = $('<input type=\"checkbox\">').prop 'checked', @data.complete\r\n    task = $(\"<span>#{@data.name}</span>\")\r\n    valEl.append(@taskCheckbox).append(task)\r\n    @taskCheckbox.on 'change', @onTaskChanged\r\n\r\n  buildValueForEditing: (valEl, data) ->\r\n    @nameInput = @buildValueForEditingSimply(valEl, data.name)\r\n    @nameInput.parent().prepend(@taskCheckbox)\r\n\r\n  onTaskChanged: (e) =>\r\n    @markAsChanged()\r\n    @saveChanges()\r\n    @flushChanges()\r\n    @broadcastChanges()\r\n\r\n  onEditInputBlur: (e) =>\r\n    @markAsChanged()\r\n    @saveChanges()\r\n    if @isValid() then @display() if @isEditing() else @nameInput.focus().select()\r\n    @flushChanges()\r\n    @broadcastChanges()\r\n\r\n  saveChanges: (oldData) ->\r\n    @data ?= {}\r\n    @data.name = @nameInput.val() if @nameInput\r\n    @data.complete = Boolean(@taskCheckbox.prop 'checked')\r\n\r\n  destroy: ->\r\n    @taskCheckbox.off()\r\n    super()\r\n\r\n\r\n#class CheckboxTreema extends TreemaNode.nodeMap.boolean\r\n# TODO: try this out\r\n\r\n\r\nmodule.exports.setup = ->\r\n  TreemaNode.setNodeSubclass('date-time', DateTimeTreema)\r\n  TreemaNode.setNodeSubclass('version', VersionTreema)\r\n  TreemaNode.setNodeSubclass('markdown', LiveEditingMarkup)\r\n  TreemaNode.setNodeSubclass('code-languages-object', CodeLanguagesObjectTreema)\r\n  TreemaNode.setNodeSubclass('code-language', CodeLanguageTreema)\r\n  TreemaNode.setNodeSubclass('code', CodeTreema)\r\n  TreemaNode.setNodeSubclass('coffee', CoffeeTreema)\r\n  TreemaNode.setNodeSubclass('javascript', JavaScriptTreema)\r\n  TreemaNode.setNodeSubclass('image-file', ImageFileTreema)\r\n  TreemaNode.setNodeSubclass('latest-version-reference', LatestVersionReferenceNode)\r\n  TreemaNode.setNodeSubclass('latest-version-original-reference', LatestVersionOriginalReferenceNode)\r\n  TreemaNode.setNodeSubclass('component-reference', LevelComponentReferenceNode)\r\n  TreemaNode.setNodeSubclass('i18n', InternationalizationNode)\r\n  TreemaNode.setNodeSubclass('sound-file', SoundFileTreema)\r\n  TreemaNode.setNodeSubclass 'slug-props', SlugPropsObject\r\n  TreemaNode.setNodeSubclass 'task', TaskTreema\r\n  #TreemaNode.setNodeSubclass 'checkbox', CheckboxTreema\r\n"]}