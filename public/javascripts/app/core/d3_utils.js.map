{"version":3,"sources":["app/core/d3_utils.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/core/d3_utils.js","sourcesContent":["# Caller needs require 'vendor/d3'\r\n\r\nmodule.exports.createContiguousDays = (timeframeDays, skipToday=true) ->\r\n  # Return list of last 'timeframeDays' contiguous days in yyyy-mm-dd format\r\n  days = []\r\n  currentDate = new Date()\r\n  currentDate.setUTCDate(currentDate.getUTCDate() - timeframeDays + 1)\r\n  currentDate.setUTCDate(currentDate.getUTCDate() - 1) if skipToday\r\n  for i in [0...timeframeDays]\r\n    currentDay = currentDate.toISOString().substr(0, 10)\r\n    days.push(currentDay)\r\n    currentDate.setUTCDate(currentDate.getUTCDate() + 1)\r\n  days\r\n\r\nmodule.exports.createLineChart = (containerSelector, chartLines, containerWidth) ->\r\n  # Creates a line chart within 'containerSelector' based on chartLines\r\n  return unless chartLines?.length > 0 and containerSelector\r\n\r\n  margin = 20\r\n  keyHeight = 20\r\n  xAxisHeight = 20\r\n  yAxisWidth = 40\r\n  containerWidth = $(containerSelector).width() unless containerWidth\r\n  containerHeight = $(containerSelector).height()\r\n\r\n  yScaleCount = 0\r\n  yScaleCount++ for line in chartLines when line.showYScale\r\n  svg = d3.select(containerSelector).append(\"svg\")\r\n    .attr(\"width\", containerWidth)\r\n    .attr(\"height\", containerHeight)\r\n  width = containerWidth - margin * 2 - yAxisWidth * yScaleCount\r\n  height = containerHeight - margin * 2 - xAxisHeight - keyHeight * chartLines.length\r\n  currentLine = 0\r\n  currentYScale = 0\r\n\r\n  # Horizontal guidelines\r\n  marks = (Math.round(i * height / 5) for i in [1..5])\r\n  yRange = d3.scale.linear().range([height, 0]).domain([0, height])\r\n  svg.selectAll(\".line\")\r\n    .data(marks)\r\n    .enter()\r\n    .append(\"line\")\r\n    .attr(\"x1\", margin + yAxisWidth * yScaleCount)\r\n    .attr(\"y1\", (d) -> margin + yRange(d))\r\n    .attr(\"x2\", margin + yAxisWidth * yScaleCount + width)\r\n    .attr(\"y2\", (d) -> margin + yRange(d))\r\n    .attr(\"stroke\", 'gray')\r\n    .style(\"opacity\", \"0.3\")\r\n\r\n  for line in chartLines\r\n    # continue unless line.enabled\r\n    xRange = d3.scale.linear().range([0, width]).domain([d3.min(line.points, (d) -> d.x), d3.max(line.points, (d) -> d.x)])\r\n    yRange = d3.scale.linear().range([height, 0]).domain([line.min, line.max])\r\n\r\n    # x-Axis\r\n    if currentLine is 0\r\n      startDay = new Date(line.points[0].day)\r\n      endDay = new Date(line.points[line.points.length - 1].day)\r\n      xAxisRange = d3.time.scale()\r\n        .domain([startDay, endDay])\r\n        .range([0, width])\r\n      xAxis = d3.svg.axis()\r\n        .scale(xAxisRange)\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .call(xAxis)\r\n        .selectAll(\"text\")\r\n        .attr(\"dy\", \".35em\")\r\n        .attr(\"transform\", \"translate(\" + (margin + yAxisWidth * yScaleCount) + \",\" + (height + margin) + \")\")\r\n        .style(\"text-anchor\", \"start\")\r\n\r\n    if line.showYScale\r\n      # y-Axis\r\n      lineColor = if yScaleCount > 1 then line.lineColor else 'black' \r\n      yAxisRange = d3.scale.linear().range([height, 0]).domain([line.min, line.max])\r\n      yAxis = d3.svg.axis()\r\n        .scale(yRange)\r\n        .orient(\"left\")\r\n      svg.append(\"g\")\r\n        .attr(\"class\", \"y axis\")\r\n        .attr(\"transform\", \"translate(\" + (margin + yAxisWidth * currentYScale) + \",\" + margin + \")\")\r\n        .style(\"color\", lineColor)\r\n        .call(yAxis)\r\n        .selectAll(\"text\")\r\n        .attr(\"y\", 0)\r\n        .attr(\"x\", 0)\r\n        .attr(\"fill\", lineColor)\r\n        .style(\"text-anchor\", \"start\")\r\n      currentYScale++\r\n\r\n    # Key\r\n    svg.append(\"line\")\r\n      .attr(\"x1\", margin)\r\n      .attr(\"y1\", margin + height + xAxisHeight + keyHeight * currentLine + keyHeight / 2)\r\n      .attr(\"x2\", margin + 40)\r\n      .attr(\"y2\", margin + height + xAxisHeight + keyHeight * currentLine + keyHeight / 2)\r\n      .attr(\"stroke\", line.lineColor)\r\n      .attr(\"class\", \"key-line\")\r\n    svg.append(\"text\")\r\n      .attr(\"x\", margin + 40 + 10)\r\n      .attr(\"y\", margin + height + xAxisHeight + keyHeight * currentLine + (keyHeight + 10) / 2)\r\n      .attr(\"fill\", line.lineColor)\r\n      .attr(\"class\", \"key-text\")\r\n      .text(line.description)\r\n\r\n    # Path and points\r\n    svg.selectAll(\".circle\")\r\n      .data(line.points)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"transform\", \"translate(\" + (margin + yAxisWidth * yScaleCount) + \",\" + margin + \")\")\r\n      .attr(\"cx\", (d) -> xRange(d.x))\r\n      .attr(\"cy\", (d) -> yRange(d.y))\r\n      .attr(\"r\", 2)\r\n      .attr(\"fill\", line.lineColor)\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"class\", \"graph-point\")\r\n      .attr(\"data-pointid\", (d) -> \"#{line.lineID}#{d.x}\")\r\n    d3line = d3.svg.line()\r\n      .x((d) -> xRange(d.x))\r\n      .y((d) -> yRange(d.y))\r\n      .interpolate(\"linear\")\r\n    svg.append(\"path\")\r\n      .attr(\"d\", d3line(line.points))\r\n      .attr(\"transform\", \"translate(\" + (margin + yAxisWidth * yScaleCount) + \",\" + margin + \")\")\r\n      .style(\"stroke-width\", line.strokeWidth)\r\n      .style(\"stroke\", line.lineColor)\r\n      .style(\"fill\", \"none\")\r\n    currentLine++\r\n"]}