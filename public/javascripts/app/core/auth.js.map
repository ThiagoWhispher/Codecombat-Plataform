{"version":3,"sources":["app/core/auth.coffee"],"names":[],"mappings":";AAAA;;AAAA,MAAsD,QAAQ,aAAR,CAAtD,EAAC,qCAAD,EAAkB,mCAAlB,EAAkC;;AAClC,OAAO,QAAQ,aAAR;;AACP,UAAU,QAAQ,cAAR;;AACV,uBAAuB;;AAEvB,OAAO;EACL,MAAM,CAAC,OAAO,CAAC,EAAf,GAAoB,MAAM,CAAC,EAAP,GAAgB,SAAK,MAAM,CAAC,UAAZ;EACpC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,QAAlB;EACA;EACA,IAAG,MAAW,mCAAd;IAEE,EAAE,CAAC,GAAH,CAAO,iBAAP,EAA0B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,GAA3B,CAA1B;IACA,EAAE,CAAC,KAAH,GAHF;;SAKA,QAAQ,CAAC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8B;WAAG,QAAQ,CAAC,QAAQ,CAAC,OAAlB,CAA0B,gBAA1B,EAA4C;MAAA,IAAI,EAAJ;KAA5C;EAAH,CAA9B;AATK;;AAWP,MAAM,CAAC,OAAO,CAAC,UAAf,GAA4B;AAE1B;;;MAAA,EAAE,CAAE;;;EACJ,WAAW;AACT;IAAA,WAAW,CAAC,CAAC,MAAF,CAAS,WAAT,EAAsB,mBAAtB;IACX,IAAG,QAAH;aACE,MAAM,CAAC,QAAP,GAAkB,SADpB;KAAA;aAGE,MAAM,CAAC,QAAQ,CAAC,MAAhB,GAHF;;EAFS;EAMX,MAAM,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,EAAvB,EAA2B,QAA3B;SACN,GAAG,CAAC,IAAJ,CAAS,cAAT;AAV0B;;AAY5B,MAAM,CAAC,OAAO,CAAC,iBAAf,GAAmC,SAAC,KAAD,EAAQ,OAAR;;IAAQ,UAAQ;;EACjD,UAAU,CAAC,CAAC,KAAF,CAAQ,OAAR,EACR;IAAC,QAAQ,MAAT;IAAiB,KAAK,aAAtB;IAAqC,MAAM;MAAE,YAAF;KAA3C;GADQ;SAGV,CAAC,CAAC,IAAF,CAAO,OAAP;AAJiC;;AAMnC,cAAc,SAAC,CAAD;EACZ,IAAU,CAAC,CAAC,MAAF,KAAY,EAAE,CAAC,GAAH,CAAO,QAAP,CAAtB;AAAA;;EACA,EAAE,CAAC,GAAH,CAAO,QAAP,EAAiB,CAAC,CAAC,MAAnB;SACA,EAAE,CAAC,IAAH;AAHY;;AAKd,QAAQ,CAAC,QAAQ,CAAC,SAAlB,CAA4B,kBAA5B,EAAgD,WAAhD,EAA6D,MAAM,CAAC,OAApE;;AAEA,oBAAoB;AAGlB;EAAA,iBAAiB,OAAO,CAAC,IAAR,CAAa,oBAAb;EACjB,IAAU,cAAV;AAAA;;;QACc,CAAE,UAAhB,CAA2B,eAA3B;;SACA,OAAO,CAAC,IAAR,CAAa,oBAAb,EAAmC,IAAnC;AANkB;;AAQpB","file":"public/javascripts/app/core/auth.js","sourcesContent":["{backboneFailure, genericFailure, parseServerError} = require 'core/errors'\r\nUser = require 'models/User'\r\nstorage = require 'core/storage'\r\nBEEN_HERE_BEFORE_KEY = 'beenHereBefore'\r\n\r\ninit = ->\r\n  module.exports.me = window.me = new User(window.userObject) # inserted into main.html\r\n  module.exports.me.onLoaded()\r\n  trackFirstArrival()\r\n  if me and not me.get('testGroupNumber')?\r\n    # Assign testGroupNumber to returning visitors; new ones in server/routes/auth\r\n    me.set 'testGroupNumber', Math.floor(Math.random() * 256)\r\n    me.patch()\r\n\r\n  Backbone.listenTo me, 'sync', -> Backbone.Mediator.publish('auth:me-synced', me: me)\r\n\r\nmodule.exports.logoutUser = ->\r\n  # TODO: Refactor to use User.logout\r\n  FB?.logout?()\r\n  callback = ->\r\n    location = _.result(currentView, 'logoutRedirectURL')\r\n    if location\r\n      window.location = location\r\n    else\r\n      window.location.reload()\r\n  res = $.post('/auth/logout', {}, callback)\r\n  res.fail(genericFailure)\r\n\r\nmodule.exports.sendRecoveryEmail = (email, options={}) ->\r\n  options = _.merge(options,\r\n    {method: 'POST', url: '/auth/reset', data: { email }}\r\n  )\r\n  $.ajax(options)\r\n\r\nonSetVolume = (e) ->\r\n  return if e.volume is me.get('volume')\r\n  me.set('volume', e.volume)\r\n  me.save()\r\n\r\nBackbone.Mediator.subscribe('level:set-volume', onSetVolume, module.exports)\r\n\r\ntrackFirstArrival = ->\r\n  # will have to filter out users who log in with existing accounts separately\r\n  # but can at least not track logouts as first arrivals using local storage\r\n  beenHereBefore = storage.load(BEEN_HERE_BEFORE_KEY)\r\n  return if beenHereBefore\r\n  window.tracker?.trackEvent 'First Arrived'\r\n  storage.save(BEEN_HERE_BEFORE_KEY, true)\r\n\r\ninit()\r\n"]}