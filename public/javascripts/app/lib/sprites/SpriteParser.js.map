{"version":3,"sources":["app/lib/sprites/SpriteParser.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/sprites/SpriteParser.js","sourcesContent":["module.exports = class SpriteParser\r\n  constructor: (@thangTypeModel) ->\r\n    # Create a new ThangType, or work with one we've been building\r\n    @thangType = $.extend(true, {}, @thangTypeModel.attributes.raw)\r\n    @thangType ?= {}\r\n    @thangType.shapes ?= {}\r\n    @thangType.containers ?= {}\r\n    @thangType.animations ?= {}\r\n\r\n    # Internal parser state\r\n    @shapeLongKeys = {}\r\n    @containerLongKeys = {}\r\n    @containerRenamings = {}\r\n    @animationLongKeys = {}\r\n    @animationRenamings = {}\r\n    @populateLongKeys()\r\n\r\n  populateLongKeys: ->\r\n    for shortKey, shape of @thangType.shapes\r\n      longKey = JSON.stringify(_.values(shape))\r\n      @shapeLongKeys[longKey] = shortKey\r\n    for shortKey, container of @thangType.containers\r\n      longKey = JSON.stringify(_.values(container))\r\n      @containerLongKeys[longKey] = shortKey\r\n    for shortKey, animation of @thangType.animations\r\n      longKey = JSON.stringify(_.values(animation))\r\n      @animationLongKeys[longKey] = shortKey\r\n\r\n  parse: (source) ->\r\n    # Grab the library properties' width/height so we can subtract half of each from frame bounds\r\n    properties = source.match(/.*lib\\.properties = \\{\\n.*?width: (\\d+),\\n.*?height: (\\d+)/im)\r\n    @width = parseInt(properties?[1] ? '0', 10)\r\n    @height = parseInt(properties?[2] ? '0', 10)\r\n\r\n    # Remove webfontAvailable line, not relevant\r\n    source = source.replace /lib\\.webfontAvailable = (.|\\n)+?};/, ''\r\n\r\n    options = {loc: false, range: true}\r\n    ast = esprima.parse source, options\r\n    blocks = @findBlocks ast, source\r\n    containers = _.filter blocks, {kind: 'Container'}\r\n    movieClips = _.filter blocks, {kind: 'MovieClip'}\r\n\r\n    mainClip = _.last(movieClips) ? _.last(containers)\r\n    @animationName = mainClip.name\r\n    for container, index in containers\r\n      if index is containers.length - 1 and not movieClips.length and container.bounds?.length\r\n        container.bounds[0] -= @width / 2\r\n        container.bounds[1] -= @height / 2\r\n      [shapeKeys, localShapes] = @getShapesFromBlock container, source\r\n      localContainers = @getContainersFromMovieClip container, source, true # Added true because anya attack was breaking, but might break other imports\r\n      addChildArgs = @getAddChildCallArguments container, source\r\n      instructions = []\r\n      for bn in addChildArgs\r\n        gotIt = false\r\n        for shape in localShapes\r\n          if shape.bn is bn\r\n            instructions.push shape.gn\r\n            gotIt = true\r\n            break\r\n        continue if gotIt\r\n        for c in localContainers\r\n          if c.bn is bn\r\n            instructions.push {t: c.t, gn: c.gn}\r\n            break\r\n      continue unless container.bounds and instructions.length\r\n      @addContainer {c: instructions, b: container.bounds}, container.name\r\n\r\n    childrenMovieClips = []\r\n\r\n    for movieClip, index in movieClips\r\n      lastBounds = null\r\n      # fill in bounds which are null...\r\n      for bounds, boundsIndex in movieClip.frameBounds\r\n        if not bounds\r\n          movieClip.frameBounds[boundsIndex] = _.clone(lastBounds)\r\n        else\r\n          lastBounds = bounds\r\n\r\n      localGraphics = @getGraphicsFromBlock(movieClip, source)\r\n      [shapeKeys, localShapes] = @getShapesFromBlock movieClip, source\r\n      localContainers = @getContainersFromMovieClip movieClip, source, true\r\n      localAnimations = @getAnimationsFromMovieClip movieClip, source, true\r\n      for animation in localAnimations\r\n        childrenMovieClips.push(animation.gn)\r\n      localTweens = @getTweensFromMovieClip movieClip, source, localShapes, localContainers, localAnimations\r\n      @addAnimation {\r\n        shapes: localShapes\r\n        containers: localContainers\r\n        animations: localAnimations\r\n        tweens: localTweens\r\n        graphics: localGraphics\r\n        bounds: movieClip.bounds\r\n        frameBounds: movieClip.frameBounds\r\n      }, movieClip.name\r\n\r\n    for movieClip in movieClips\r\n      if movieClip.name not in childrenMovieClips\r\n        for bounds in movieClip.frameBounds\r\n          bounds[0] -= @width / 2\r\n          bounds[1] -= @height / 2\r\n        movieClip.bounds[0] -= @width / 2\r\n        movieClip.bounds[1] -= @height / 2\r\n\r\n    @saveToModel()\r\n    return movieClips[0]?.name\r\n\r\n  saveToModel: ->\r\n    @thangTypeModel.set('raw', @thangType)\r\n\r\n  addShape: (shape) ->\r\n    longKey = JSON.stringify(_.values(shape))\r\n    shortKey = @shapeLongKeys[longKey]\r\n    unless shortKey?\r\n      shortKey = '' + _.size @thangType.shapes\r\n      shortKey += '+' while @thangType.shapes[shortKey]\r\n      @thangType.shapes[shortKey] = shape\r\n      @shapeLongKeys[longKey] = shortKey\r\n    return shortKey\r\n\r\n  addContainer: (container, name) ->\r\n    longKey = JSON.stringify(_.values(container))\r\n    shortKey = @containerLongKeys[longKey]\r\n    if not shortKey?\r\n      shortKey = name\r\n      if @thangType.containers[shortKey]?\r\n        shortKey = @animationName + ':' + name\r\n      @thangType.containers[shortKey] = container\r\n      @containerLongKeys[longKey] = shortKey\r\n    @containerRenamings[name] = shortKey\r\n    return shortKey\r\n\r\n  addAnimation: (animation, name) ->\r\n    longKey = JSON.stringify(_.values(animation))\r\n    shortKey = @animationLongKeys[longKey]\r\n    if shortKey?\r\n      @animationRenamings[shortKey] = name\r\n    else\r\n      shortKey = name\r\n      if @thangType.animations[shortKey]?\r\n        shortKey = @animationName + ':' + name\r\n      @thangType.animations[shortKey] = animation\r\n      @animationLongKeys[longKey] = shortKey\r\n      @animationRenamings[name] = shortKey\r\n    return shortKey\r\n\r\n  walk: (node, parent, fn) ->\r\n    node.parent = parent\r\n    for key, child of node\r\n      continue if key is 'parent'\r\n      if _.isArray child\r\n        for grandchild in child\r\n          @walk grandchild, node, fn if _.isString grandchild?.type\r\n      else if _.isString child?.type\r\n        node.parent = parent\r\n        @walk child, node, fn\r\n    fn node\r\n\r\n  orphanify: (node) ->\r\n    delete node.parent if node.parent\r\n    for key, child of node\r\n      continue if key is 'parent'\r\n      if _.isArray child\r\n        for grandchild in child\r\n          @orphanify grandchild if _.isString grandchild?.type\r\n      else if _.isString child?.type\r\n        delete node.parent if node.parent\r\n        @orphanify child\r\n\r\n  subSourceFromRange: (range, source) ->\r\n    source[range[0] ... range[1]]\r\n\r\n  grabFunctionArguments: (source, literal=false) ->\r\n    # Replace first and last parens with brackets to turn args into array\r\n    args = source.replace(/.*?\\(/, '[').replace(/\\)[^)]*?$/, ']')\r\n    if literal then eval(args) else args\r\n\r\n  findBlocks: (ast, source) ->\r\n    functionExpressions = []\r\n    rectangles = []\r\n    gatherFunctionExpressions = (node) =>\r\n      if node.type is 'FunctionExpression'\r\n        name = node.parent?.left?.property?.name\r\n        if name\r\n          expression = node.parent.parent\r\n          unless expression.parent?.right?.right\r\n            if /frame_[\\d]+/.test name  # Skip some useless KR function things\r\n              return\r\n          kind = expression.parent.right.right.callee.property.name\r\n          statement = node.parent.parent.parent.parent\r\n          statementIndex = _.indexOf statement.parent.body, statement\r\n          nominalBoundsStatement = statement.parent.body[statementIndex + 1]\r\n          nominalBoundsRange = nominalBoundsStatement.expression.right.range\r\n          nominalBoundsSource = @subSourceFromRange nominalBoundsRange, source\r\n          nominalBounds = @grabFunctionArguments nominalBoundsSource, true\r\n\r\n          frameBoundsStatement = statement.parent.body[statementIndex + 2]\r\n          if frameBoundsStatement\r\n            frameBoundsRange = frameBoundsStatement.expression.right.range\r\n            frameBoundsSource = @subSourceFromRange frameBoundsRange, source\r\n            if frameBoundsSource.search(/\\[rect/) is -1  # some other statement; we don't have multiframe bounds\r\n              console.log 'Didn\\'t have multiframe bounds for this movie clip.'\r\n              frameBounds = [_.clone(nominalBounds)]\r\n            else\r\n              lastRect = nominalBounds\r\n              frameBounds = []\r\n              for arg, i in frameBoundsStatement.expression.right.elements\r\n                bounds = null\r\n                argSource = @subSourceFromRange arg.range, source\r\n                if arg.type is 'Identifier'\r\n                  bounds = lastRect\r\n                else if arg.type is 'NewExpression'\r\n                  bounds = @grabFunctionArguments argSource, true\r\n                else if arg.type is 'AssignmentExpression'\r\n                  bounds = @grabFunctionArguments argSource.replace('rect=', ''), true\r\n                  lastRect = bounds\r\n                else if arg.type is 'Literal' and arg.value is null\r\n                  bounds = [0, 0, 1, 1]  # Let's try this.\r\n                frameBounds.push _.clone bounds\r\n          else\r\n            frameBounds = [_.clone(nominalBounds)]\r\n\r\n          functionExpressions.push {name: name, bounds: nominalBounds, frameBounds: frameBounds, expression: node.parent.parent, kind: kind}\r\n    @walk ast, null, gatherFunctionExpressions\r\n    functionExpressions\r\n\r\n  ###\r\n    this.shape_1.graphics.f('#605E4A').s().p('AAOD/IgOgaIAEhkIgmgdIgMgBIgPgFIgVgJQA1h9g8jXQAQAHAOASQAQAUAKAeQARAuAJBJQAHA/gBA5IAAADIACAfIAFARIACAGIAEAHIAHAHQAVAXAQAUQAUAaANAUIABACIgsgdIgggXIAAAnIABAwIgBgBg');\r\n    this.shape_1.sett(23.2,30.1);\r\n\r\n    this.shape.graphics.f().s('#000000').ss(0.1,1,1).p('AAAAAQAAAAAAAA');\r\n    this.shape.sett(3.8,22.4);\r\n  ###\r\n\r\n  getGraphicsFromBlock: (block, source) ->\r\n    block = block.expression.object.right.body\r\n    localGraphics = []\r\n    gatherShapeDefinitions = (node) =>\r\n      return unless node.type is 'NewExpression' and node.callee.property.name is 'Graphics'\r\n      blockName = node.parent.parent.parent.id.name\r\n      graphicsString = node.parent.parent.arguments[0].value\r\n      localGraphics.push {p:graphicsString, bn:blockName}\r\n\r\n    @walk block, null, gatherShapeDefinitions\r\n    return localGraphics\r\n\r\n  getShapesFromBlock: (block, source) ->\r\n    block = block.expression.object.right.body\r\n    shapeKeys = []\r\n    localShapes = []\r\n    gatherShapeDefinitions = (node) =>\r\n      return unless node.type is 'MemberExpression'\r\n      name = node.object?.object?.property?.name\r\n      if not name\r\n        name = node.parent?.parent?.id?.name\r\n        return unless name and name.indexOf('mask') is 0 and node.property?.name is 'Shape'\r\n        shape = {bn: name, im: true}\r\n        localShapes.push shape\r\n        return\r\n      return unless name.search('shape') is 0 and node.object.property?.name is 'graphics'\r\n      fillCall = node.parent\r\n      if fillCall.callee.property.name is 'lf'\r\n        linearGradientFillSource = @subSourceFromRange fillCall.parent.range, source\r\n        linearGradientFill = @grabFunctionArguments linearGradientFillSource.replace(/.*?lf\\(/, 'lf('), true\r\n      else if fillCall.callee.property.name is 'rf'\r\n        radialGradientFillSource = @subSourceFromRange fillCall.parent.range, source\r\n        radialGradientFill = @grabFunctionArguments radialGradientFillSource.replace(/.*?lf\\(/, 'lf('), true\r\n      else\r\n        fillColor = fillCall.arguments[0]?.value ? null\r\n        callName = fillCall.callee.property.name\r\n        console.error 'What is this?! Not a fill!', callName unless callName is 'f'\r\n      strokeCall = node.parent.parent.parent.parent\r\n      if strokeCall.object.callee.property.name is 'ls'\r\n        linearGradientStrokeSource = @subSourceFromRange strokeCall.parent.range, source\r\n        linearGradientStroke = @grabFunctionArguments linearGradientStrokeSource.replace(/.*?ls\\(/, 'ls(').replace(/\\).ss\\(.*/, ')'), true\r\n      else\r\n        strokeColor = strokeCall.object.arguments?[0]?.value ? null\r\n        console.error 'What is this?! Not a stroke!' unless strokeCall.object.callee.property.name is 's'\r\n      strokeStyle = null\r\n      graphicsStatement = strokeCall.parent\r\n      if strokeColor or linearGradientStroke\r\n        # There might now be an extra node, ss, for stroke style\r\n        strokeStyleSource = @subSourceFromRange strokeCall.parent.range, source\r\n        if strokeStyleSource.search(/ss\\(/) isnt -1\r\n          strokeStyle = @grabFunctionArguments strokeStyleSource.replace(/.*?ss\\(/, 'ss('), true\r\n          graphicsStatement = strokeCall.parent.parent.parent\r\n      if graphicsStatement.callee.property.name is 'de'\r\n        drawEllipseSource = @subSourceFromRange graphicsStatement.parent.range, source\r\n        drawEllipse = @grabFunctionArguments drawEllipseSource.replace(/.*?de\\(/, 'de('), true\r\n      else\r\n        path = graphicsStatement.arguments?[0]?.value ? null\r\n        console.error 'What is this?! Not a path!' unless graphicsStatement.callee.property.name is 'p'\r\n      body = graphicsStatement.parent.parent.body\r\n      graphicsStatementIndex = _.indexOf body, graphicsStatement.parent\r\n      t = body[graphicsStatementIndex + 1].expression\r\n      tSource = @subSourceFromRange t.range, source\r\n      if tSource.search('setTransform') is -1\r\n        t = [0, 0]\r\n      else\r\n        t = @grabFunctionArguments tSource, true\r\n\r\n      for statement in body.slice(graphicsStatementIndex + 2)\r\n        # Handle things like\r\n        # this.shape.mask = this.shape_1.mask = this.shape_2.mask = this.shape_3.mask = mask;\r\n        continue unless statement.expression?.left?.property?.name is 'mask'\r\n        exp = statement.expression\r\n        matchedName = false\r\n        while exp\r\n          matchedName = matchedName or exp.left?.object?.property?.name is name\r\n          mask = exp.name\r\n          exp = exp.right\r\n        continue unless matchedName\r\n        break\r\n\r\n      shape = {t: t}\r\n      shape.p = path if path\r\n      shape.de = drawEllipse if drawEllipse\r\n      shape.sc = strokeColor if strokeColor\r\n      shape.ss = strokeStyle if strokeStyle\r\n      shape.fc = fillColor if fillColor\r\n      shape.lf = linearGradientFill if linearGradientFill\r\n      shape.rf = radialGradientFill if radialGradientFill\r\n      shape.ls = linearGradientStroke if linearGradientStroke\r\n      if name.search('shape') isnt -1 and shape.fc is 'rgba(0,0,0,0.451)' and not shape.ss and not shape.sc\r\n        console.log 'Skipping a shadow', name, shape, 'because we\\'re doing shadows separately now.'\r\n        return\r\n      #if name.search('shape') isnt -1 and shape.fc is 'rgba(0,0,0,0.498)' and not shape.ss and not shape.sc\r\n      #  console.log 'Skipping a KR shadow', name, shape, 'because we\\'re doing shadows separately now.'\r\n      #  return\r\n      shapeKeys.push shapeKey = @addShape shape\r\n      localShape = {bn: name, gn: shapeKey}\r\n      localShape.m = mask if mask\r\n      localShapes.push localShape\r\n\r\n    @walk block, null, gatherShapeDefinitions\r\n    return [shapeKeys, localShapes]\r\n\r\n  getContainersFromMovieClip: (movieClip, source, possibleAnimations=false) ->\r\n    block = movieClip.expression.object.right.body\r\n    localContainers = []\r\n    gatherContainerDefinitions = (node) =>\r\n      return unless node.type is 'Identifier' and node.name is 'lib'\r\n      args = node.parent.parent.arguments\r\n      libName = node.parent.property.name\r\n      return if args.length and not possibleAnimations  # might be animation, not container\r\n      gn = @containerRenamings[libName]\r\n      return if possibleAnimations and not gn  # not a container we know about\r\n      bn = node.parent.parent.parent.left.property.name\r\n      expressionStatement = node.parent.parent.parent.parent\r\n      body = expressionStatement.parent.body\r\n      expressionStatementIndex = _.indexOf body, expressionStatement\r\n      t = body[expressionStatementIndex + 1].expression\r\n      tSource = @subSourceFromRange t.range, source\r\n      t = @grabFunctionArguments tSource, true\r\n      o = body[expressionStatementIndex + 2].expression\r\n      localContainer = {bn: bn, t: t, gn: gn}\r\n      if o and o.left?.object?.property?.name is bn and o.left.property?.name is '_off'\r\n        localContainer.o = o.right.value\r\n      else if o and o.left?.property?.name is 'alpha'\r\n        localContainer.al = o.right.value\r\n      localContainers.push localContainer\r\n\r\n    @walk block, null, gatherContainerDefinitions\r\n    return localContainers\r\n\r\n  getAnimationsFromMovieClip: (movieClip, source, possibleContainers=false) ->\r\n    block = movieClip.expression.object.right.body\r\n    localAnimations = []\r\n    gatherAnimationDefinitions = (node) =>\r\n      return unless node.type is 'Identifier' and node.name is 'lib'\r\n      args = node.parent.parent.arguments\r\n      libName = node.parent.property.name\r\n      return unless args.length or possibleContainers  # might be container, not animation\r\n      return if @containerRenamings[libName] and not @animationRenamings[libName]  # we have it as a container\r\n      args = @grabFunctionArguments @subSourceFromRange(node.parent.parent.range, source), true\r\n      bn = node.parent.parent.parent.left.property.name\r\n      expressionStatement = node.parent.parent.parent.parent\r\n      body = expressionStatement.parent.body\r\n      expressionStatementIndex = _.indexOf body, expressionStatement\r\n      t = body[expressionStatementIndex + 1].expression\r\n      tSource = @subSourceFromRange t.range, source\r\n      t = @grabFunctionArguments tSource, true\r\n      gn = @animationRenamings[libName] ? libName\r\n      localAnimation = {bn: bn, t: t, gn: gn, a: args}\r\n      localAnimations.push localAnimation\r\n\r\n    @walk block, null, gatherAnimationDefinitions\r\n    return localAnimations\r\n\r\n  getTweensFromMovieClip: (movieClip, source, localShapes, localContainers, localAnimations) ->\r\n    block = movieClip.expression.object.right.body\r\n    localTweens = []\r\n    gatherTweens = (node) =>\r\n      return unless node.property?.name is 'addTween'\r\n      callExpressions = []\r\n      tweenNode = node\r\n      gatherCallExpressions = (node) =>\r\n        return unless node.type is 'CallExpression'\r\n        name = node.callee.property?.name\r\n        return unless name in ['get', 'to', 'wait']\r\n        return if name is 'get' and callExpressions.length # avoid Ease calls in the tweens\r\n        flattenedRanges = _.flatten [(a.range for a in node.arguments)]\r\n        range = [_.min(flattenedRanges), _.max(flattenedRanges)]\r\n        # Replace 'this.<local>' references with just the 'name'\r\n        argsSource = @subSourceFromRange(range, source)\r\n        argsSource = argsSource.replace(/mask/g, 'this.mask') # so the mask thing will be handled correctly as a blockName in the next line\r\n        argsSource = argsSource.replace(/this\\.([a-z_0-9]+)/ig, '\"$1\"') # turns this.shape literal to 'shape' string\r\n        argsSource = argsSource.replace(/cjs(.+)\\)/, '\"createjs$1)\"') # turns cjs.Ease.get(0.5)\r\n        argsSource = '{}' if argsSource is 'this' # not sure what this should be but it looks like we don't need it for KR sprites\r\n\r\n        args = eval \"[#{argsSource}]\"\r\n        shadowTween = args[0]?.search?('shape') is 0 and not _.find(localShapes, bn: args[0])\r\n        shadowTween = shadowTween or args[0]?.state?[0]?.t?.search?('shape') is 0 and not _.find(localShapes, bn: args[0].state[0].t)\r\n        if shadowTween\r\n          console.log 'Skipping tween', name, argsSource, args, 'from localShapes', localShapes, 'presumably because it\\'s a shadow we skipped.'\r\n          return\r\n        callExpressions.push {n: name, a: args}\r\n      @walk node.parent.parent, null, gatherCallExpressions\r\n      localTweens.push callExpressions\r\n\r\n    @walk block, null, gatherTweens\r\n    return localTweens\r\n\r\n  getAddChildCallArguments: (block, source) ->\r\n    block = block.expression.object.right.body\r\n    localArgs = []\r\n    gatherAddChildCalls = (node) =>\r\n      return unless node.type is 'Identifier' and node.name is 'addChild'\r\n      args = node.parent.parent.arguments\r\n      args = (arg.property.name for arg in args)\r\n      localArgs.push arg for arg in args\r\n      return\r\n\r\n    @walk block, null, gatherAddChildCalls\r\n    return localArgs\r\n###\r\n\r\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({scaleX:0.82,scaleY:0.79,rotation:-10.8,x:98.4,y:-86.5},4).to({scaleY:0.7,rotation:9.3,x:95.6,y:-48.8},1).to({scaleX:0.82,scaleY:0.61,rotation:29.4,x:92.8,y:-11},1).to({regX:7.3,scaleX:0.82,scaleY:0.53,rotation:49.7,x:90.1,y:26.6},1).to({regX:7.2,regY:29.8,scaleY:0.66,rotation:19.3,x:101.2,y:-27.8},2).to({regY:29.9,scaleY:0.79,rotation:-10.8,x:98.4,y:-86.5},2).to({scaleX:0.84,scaleY:0.83,rotation:-30.7,x:68.4,y:-110},2).to({regX:7.3,scaleX:0.84,scaleY:0.84,rotation:-33.9,x:63.5,y:-114},1).wait(1));\r\n\r\n###\r\n\r\n###\r\nsimpleSample = \"\"\"\r\n(function (lib, img, cjs) {\r\n\r\nvar p; // shortcut to reference prototypes\r\n\r\n// stage content:\r\n(lib.enemy_flying_move_side = function(mode,startPosition,loop) {\r\n  this.initialize(mode,startPosition,loop,{});\r\n\r\n  // D_Head\r\n  this.instance = new lib.Dragon_Head();\r\n  this.instance.setTransform(227,200.5,1,1,0,0,0,51.9,42.5);\r\n\r\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({y:182.9},7).to({y:200.5},7).wait(1));\r\n\r\n  // Layer 7\r\n  this.shape = new cjs.Shape();\r\n  this.shape.graphics.f('#4F6877').s().p('AgsAxQgSgVgB');\r\n  this.shape.setTransform(283.1,146.1);\r\n\r\n  // Layer 7 2\r\n  this.shape_1 = new cjs.Shape();\r\n  this.shape_1.graphics.f('rgba(255,255,255,0.4)').s().p('ArTs0QSMB7EbVGQhsBhiGBHQjg1IvVkhg');\r\n  this.shape_1.setTransform(400.2,185.5);\r\n\r\n  this.timeline.addTween(cjs.Tween.get({}).to({state:[]}).to({state:[{t:this.shape}]},7).to({state:[]},2).wait(6));\r\n\r\n  // Wing\r\n  this.instance_9 = new lib.Wing_Animation('synched',0);\r\n  this.instance_9.setTransform(313.9,145.6,1,1,0,0,0,49,-83.5);\r\n\r\n  this.timeline.addTween(cjs.Tween.get(this.instance_9).to({y:128,startPosition:7},7).wait(1));\r\n\r\n  // Example hard one with two shapes\r\n  this.timeline.addTween(cjs.Tween.get({}).to({state:[]}).to({state:[{t:this.shape}]},7).to({state:[{t:this.shape_1}]},1).to({state:[]},1).wait(7));\r\n\r\n\r\n}).prototype = p = new cjs.MovieClip();\r\np.nominalBounds = new cjs.Rectangle(7.1,48.9,528.7,431.1);\r\n\r\n(lib.Dragon_Head = function() {\r\n  this.initialize();\r\n\r\n  // Isolation Mode\r\n  this.shape = new cjs.Shape();\r\n  this.shape.graphics.f('#1D2226').s().p('AgVAwQgUgdgN');\r\n  this.shape.setTransform(75,25.8);\r\n\r\n  this.shape_1 = new cjs.Shape();\r\n  this.shape_1.graphics.f('#1D2226').s().p('AgnBXQACABAF');\r\n  this.shape_1.setTransform(80.8,22);\r\n\r\n  this.addChild(this.shape_1,this.shape);\r\n}).prototype = p = new cjs.Container();\r\np.nominalBounds = new cjs.Rectangle(5.8,0,87.9,85);\r\n\r\n(lib.WingPart_01 = function() {\r\n  this.initialize();\r\n\r\n  // Layer 1\r\n  this.shape = new cjs.Shape();\r\n  this.shape.graphics.f('#DBDDBC').s().p('Ag3BeQgCgRA');\r\n  this.shape.setTransform(10.6,19.7,1.081,1.081);\r\n\r\n  this.shape_1 = new cjs.Shape();\r\n  this.shape_1.graphics.f('#1D2226').s().p('AB4CDQgGg');\r\n  this.shape_1.setTransform(19.9,17.6,1.081,1.081);\r\n\r\n  this.shape_2 = new cjs.Shape();\r\n  this.shape_2.graphics.f('#605E4A').s().p('AiECbQgRg');\r\n  this.shape_2.setTransform(19.5,18.4,1.081,1.081);\r\n\r\n  this.addChild(this.shape_2,this.shape_1,this.shape);\r\n}).prototype = p = new cjs.Container();\r\np.nominalBounds = new cjs.Rectangle(0,-3.1,40,41.6);\r\n\r\n\r\n(lib.Wing_Animation = function(mode,startPosition,loop) {\r\n  this.initialize(mode,startPosition,loop,{});\r\n\r\n  // WP_02\r\n  this.instance = new lib.WingPart_01();\r\n  this.instance.setTransform(53.6,-121.9,0.854,0.854,-40.9,0,0,7.2,29.9);\r\n\r\n  this.timeline.addTween(cjs.Tween.get(this.instance).to({scaleY:0.7,rotation:9.3,x:95.6,y:-48.8},1).wait(1));\r\n\r\n}).prototype = p = new cjs.MovieClip();\r\np.nominalBounds = new cjs.Rectangle(-27.7,-161.6,153.4,156.2);\r\n\r\n})(lib = lib||{}, images = images||{}, createjs = createjs||{});\r\nvar lib, images, createjs;\r\n\"\"\"\r\n###\r\n"]}