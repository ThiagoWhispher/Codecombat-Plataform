{"version":3,"sources":["app/lib/simulator/Simulator.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/simulator/Simulator.js","sourcesContent":["SuperModel = require 'models/SuperModel'\r\nCocoClass = require 'core/CocoClass'\r\nLevelLoader = require 'lib/LevelLoader'\r\nGoalManager = require 'lib/world/GoalManager'\r\nGod = require 'lib/God'\r\n{createAetherOptions} = require 'lib/aether_utils'\r\n\r\nSIMULATOR_VERSION = 4\r\n\r\nsimulatorInfo = {}\r\nif $.browser\r\n  simulatorInfo['desktop'] = $.browser.desktop if $.browser.desktop\r\n  simulatorInfo['name'] = $.browser.name if $.browser.name\r\n  simulatorInfo['platform'] = $.browser.platform if $.browser.platform\r\n  simulatorInfo['version'] = $.browser.versionNumber if $.browser.versionNumber\r\n\r\nmodule.exports = class Simulator extends CocoClass\r\n  constructor: (@options) ->\r\n    @options ?= {}\r\n    simulatorType = if @options.headlessClient then 'headless' else 'browser'\r\n    @simulator =\r\n      type: simulatorType\r\n      version: SIMULATOR_VERSION\r\n      info: simulatorInfo\r\n    _.extend @, Backbone.Events\r\n    @trigger 'statusUpdate', 'Starting simulation!'\r\n    @retryDelayInSeconds = 2\r\n    @taskURL = '/queue/scoring'\r\n    @simulatedByYou = 0\r\n    @god = new God maxAngels: 1, workerCode: @options.workerCode, headless: true  # Start loading worker.\r\n\r\n  destroy: ->\r\n    @off()\r\n    @cleanupSimulation()\r\n    @god?.destroy()\r\n    super()\r\n\r\n  fetchAndSimulateOneGame: (humanGameID, ogresGameID) =>\r\n    return if @destroyed\r\n    $.ajax\r\n      url: '/queue/scoring/getTwoGames'\r\n      type: 'POST'\r\n      parse: true\r\n      data:\r\n        humansGameID: humanGameID\r\n        ogresGameID: ogresGameID\r\n        simulator: @simulator\r\n        background: Boolean(@options.background)\r\n        levelID: @options.levelID\r\n        leagueID: @options.leagueID\r\n      error: (errorData) ->\r\n        console.warn \"There was an error fetching two games! #{JSON.stringify errorData}\"\r\n        if errorData?.responseText?.indexOf(\"Old simulator\") isnt -1\r\n          noty {\r\n            text: errorData.responseText\r\n            layout: 'center'\r\n            type: 'error'\r\n          }\r\n      success: (taskData) =>\r\n        return if @destroyed\r\n        unless taskData\r\n          @retryDelayInSeconds = 10\r\n          @trigger 'statusUpdate', \"No games to simulate. Trying another game in #{@retryDelayInSeconds} seconds.\"\r\n          @simulateAnotherTaskAfterDelay()\r\n          return\r\n        @trigger 'statusUpdate', 'Setting up simulation...'\r\n        #refactor this\r\n        @task = new SimulationTask(taskData)\r\n\r\n        @supermodel ?= new SuperModel()\r\n        @supermodel.resetProgress()\r\n        @stopListening @supermodel, 'loaded-all'\r\n        @levelLoader = new LevelLoader supermodel: @supermodel, levelID: @task.getLevelName(), sessionID: @task.getFirstSessionID(), opponentSessionID: @task.getSecondSessionID(), headless: true\r\n\r\n        if @supermodel.finished()\r\n          @simulateSingleGame()\r\n        else\r\n          @listenToOnce @supermodel, 'loaded-all', @simulateSingleGame\r\n\r\n  simulateSingleGame: ->\r\n    return if @destroyed\r\n    @assignWorldAndLevelFromLevelLoaderAndDestroyIt()\r\n    @trigger 'statusUpdate', 'Simulating...'\r\n    @setupGod()\r\n    try\r\n      @commenceSingleSimulation()\r\n    catch error\r\n      @handleSingleSimulationError error\r\n\r\n  commenceSingleSimulation: ->\r\n    @listenToOnce @god, 'infinite-loop', @handleSingleSimulationInfiniteLoop\r\n    @listenToOnce @god, 'goals-calculated', @processSingleGameResults\r\n    @god.createWorld @generateSpellsObject()\r\n\r\n  handleSingleSimulationError: (error) ->\r\n    console.error 'There was an error simulating a single game!', error\r\n    return if @destroyed\r\n    if @options.headlessClient and @options.simulateOnlyOneGame\r\n      console.log 'GAMERESULT:tie'\r\n      process.exit(0)\r\n    @cleanupAndSimulateAnotherTask()\r\n\r\n  handleSingleSimulationInfiniteLoop: (e) ->\r\n    console.log 'There was an infinite loop in the single game!'\r\n    return if @destroyed\r\n    if @options.headlessClient and @options.simulateOnlyOneGame\r\n      console.log 'GAMERESULT:tie'\r\n      process.exit(0)\r\n    @cleanupAndSimulateAnotherTask()\r\n\r\n  processSingleGameResults: (simulationResults) ->\r\n    try\r\n      taskResults = @formTaskResultsObject simulationResults\r\n    catch error\r\n      console.log \"Failed to form task results:\", error\r\n      return @cleanupAndSimulateAnotherTask()\r\n    humanSessionRank = taskResults.sessions[0].metrics.rank\r\n    ogreSessionRank = taskResults.sessions[1].metrics.rank\r\n    if @options.headlessClient and @options.simulateOnlyOneGame\r\n      if humanSessionRank is ogreSessionRank\r\n        console.log 'GAMERESULT:tie'\r\n      else if humanSessionRank < ogreSessionRank\r\n        console.log 'GAMERESULT:humans'\r\n      else if ogreSessionRank < humanSessionRank\r\n        console.log 'GAMERESULT:ogres'\r\n      process.exit(0)\r\n    else\r\n      @sendSingleGameBackToServer(taskResults)\r\n\r\n  sendSingleGameBackToServer: (results) ->\r\n    @trigger 'statusUpdate', 'Simulation completed, sending results back to server!'\r\n\r\n    $.ajax\r\n      url: '/queue/scoring/recordTwoGames'\r\n      data: results\r\n      type: 'PUT'\r\n      parse: true\r\n      success: @handleTaskResultsTransferSuccess\r\n      error: @handleTaskResultsTransferError\r\n      complete: @cleanupAndSimulateAnotherTask\r\n\r\n  fetchAndSimulateTask: =>\r\n    return if @destroyed\r\n    # Because there's some bug where the chained rankings don't work, let's just do getTwoGames until we fix it.\r\n    return @fetchAndSimulateOneGame()\r\n\r\n    if @options.headlessClient\r\n      if @dumpThisTime # The first heapdump would be useless to find leaks.\r\n        console.log 'Writing snapshot.'\r\n        @options.heapdump.writeSnapshot()\r\n      @dumpThisTime = true if @options.heapdump\r\n\r\n      if @options.testing\r\n        _.delay @setupSimulationAndLoadLevel, 0, @options.testFile, 'Testing...', status: 400\r\n        return\r\n\r\n    @trigger 'statusUpdate', 'Fetching simulation data!'\r\n    $.ajax\r\n      url: @taskURL\r\n      type: 'GET'\r\n      parse: true\r\n      error: @handleFetchTaskError\r\n      success: @setupSimulationAndLoadLevel\r\n      cache: false\r\n\r\n  handleFetchTaskError: (errorData) =>\r\n    console.error \"There was a horrible Error: #{JSON.stringify errorData}\"\r\n    @trigger 'statusUpdate', 'There was an error fetching games to simulate. Retrying in 10 seconds.'\r\n    @simulateAnotherTaskAfterDelay()\r\n\r\n  handleNoGamesResponse: ->\r\n    @noTasks = true\r\n    info = 'Finding game to simulate...'\r\n    console.log info\r\n    @trigger 'statusUpdate', info\r\n    @fetchAndSimulateOneGame()\r\n\r\n  simulateAnotherTaskAfterDelay: =>\r\n    console.log \"Retrying in #{@retryDelayInSeconds}\"\r\n    retryDelayInMilliseconds = @retryDelayInSeconds * 1000\r\n    _.delay @fetchAndSimulateTask, retryDelayInMilliseconds\r\n\r\n  setupSimulationAndLoadLevel: (taskData, textStatus, jqXHR) =>\r\n    return @handleNoGamesResponse() if jqXHR.status is 204\r\n    @trigger 'statusUpdate', 'Setting up simulation!'\r\n    @task = new SimulationTask(taskData)\r\n    try\r\n      levelID = @task.getLevelName()\r\n    catch err\r\n      console.error err\r\n      @trigger 'statusUpdate', \"Error simulating game: #{err}. Trying another game in #{@retryDelayInSeconds} seconds.\"\r\n      @simulateAnotherTaskAfterDelay()\r\n      return\r\n\r\n    @supermodel ?= new SuperModel()\r\n    @supermodel.resetProgress()\r\n    @stopListening @supermodel, 'loaded-all'\r\n    @levelLoader = new LevelLoader supermodel: @supermodel, levelID: levelID, sessionID: @task.getFirstSessionID(), opponentSessionID: @task.getSecondSessionID(), headless: true\r\n    if @supermodel.finished()\r\n      @simulateGame()\r\n    else\r\n      @listenToOnce @supermodel, 'loaded-all', @simulateGame\r\n\r\n  simulateGame: ->\r\n    return if @destroyed\r\n    info = 'All resources loaded, simulating!'\r\n    console.log info\r\n    @assignWorldAndLevelFromLevelLoaderAndDestroyIt()\r\n    @trigger 'statusUpdate', info, @task.getSessions()\r\n    @setupGod()\r\n\r\n    try\r\n      @commenceSimulationAndSetupCallback()\r\n    catch err\r\n      console.error 'There was an error in simulation:', err, err.stack, \"-- trying again in #{@retryDelayInSeconds} seconds\"\r\n      @simulateAnotherTaskAfterDelay()\r\n\r\n  assignWorldAndLevelFromLevelLoaderAndDestroyIt: ->\r\n    @world = @levelLoader.world\r\n    @task.setWorld(@world)\r\n    @level = @levelLoader.level\r\n    @session = @levelLoader.session\r\n    @otherSession = @levelLoader.opponentSession\r\n    @levelLoader.destroy()\r\n    @levelLoader = null\r\n\r\n  setupGod: ->\r\n    @god.setLevel @level.serialize {@supermodel, @session, @otherSession, headless: true, sessionless: false}\r\n    @god.setLevelSessionIDs (session.sessionID for session in @task.getSessions())\r\n    @god.setWorldClassMap @world.classMap\r\n    @god.setGoalManager new GoalManager @world, @level.get('goals'), null, {headless: true}\r\n    humanFlagHistory = _.filter @session.get('state')?.flagHistory ? [], (event) => event.source isnt 'code' and event.team is (@session.get('team') ? 'humans')\r\n    ogreFlagHistory = _.filter @otherSession.get('state')?.flagHistory ? [], (event) => event.source isnt 'code' and event.team is (@otherSession.get('team') ? 'ogres')\r\n    @god.lastFlagHistory = humanFlagHistory.concat ogreFlagHistory\r\n    #console.log 'got flag history', @god.lastFlagHistory, 'from', humanFlagHistory, ogreFlagHistory, @session.get('state'), @otherSession.get('state')\r\n    @god.lastSubmissionCount = 0  # TODO: figure out how to combine submissionCounts from both players so we can use submissionCount random seeds again.\r\n    @god.lastDifficulty = 0\r\n\r\n  commenceSimulationAndSetupCallback: ->\r\n    @listenToOnce @god, 'infinite-loop', @onInfiniteLoop\r\n    @listenToOnce @god, 'goals-calculated', @processResults\r\n    @god.createWorld @generateSpellsObject()\r\n\r\n    # Search for leaks, headless-client only.\r\n    if @options.headlessClient and @options.leakTest and not @memwatch?\r\n      leakcount = 0\r\n      maxleakcount = 0\r\n      console.log 'Setting leak callbacks.'\r\n      @memwatch = require 'memwatch'\r\n\r\n      @memwatch.on 'leak', (info) =>\r\n        console.warn \"LEAK!!\\n\" + JSON.stringify(info)\r\n\r\n        unless @hd?\r\n          if (leakcount++ is maxleakcount)\r\n            @hd = new @memwatch.HeapDiff()\r\n\r\n            @memwatch.on 'stats', (stats) =>\r\n              console.warn 'stats callback: ' + stats\r\n              diff = @hd.end()\r\n              console.warn \"HeapDiff:\\n\" + JSON.stringify(diff)\r\n\r\n              if @options.exitOnLeak\r\n                console.warn 'Exiting because of Leak.'\r\n                process.exit()\r\n              @hd = new @memwatch.HeapDiff()\r\n\r\n  onInfiniteLoop: (e) ->\r\n    return if @destroyed\r\n    console.warn 'Skipping infinitely looping game.'\r\n    @trigger 'statusUpdate', \"Infinite loop detected; grabbing a new game in #{@retryDelayInSeconds} seconds.\"\r\n    _.delay @cleanupAndSimulateAnotherTask, @retryDelayInSeconds * 1000\r\n\r\n  processResults: (simulationResults) ->\r\n    try\r\n      taskResults = @formTaskResultsObject simulationResults\r\n    catch error\r\n      console.log \"Failed to form task results:\", error\r\n      return @cleanupAndSimulateAnotherTask()\r\n    unless taskResults.taskID\r\n      console.error \"*** Error: taskResults has no taskID ***\\ntaskResults:\", taskResults\r\n      @cleanupAndSimulateAnotherTask()\r\n    else\r\n      @sendResultsBackToServer taskResults\r\n\r\n  sendResultsBackToServer: (results) ->\r\n    status = 'Recording:'\r\n    for session in results.sessions\r\n      states = ['wins', if _.find(results.sessions, (s) -> s.metrics.rank is 0) then 'loses' else 'draws']\r\n      status += \" #{session.name} #{states[session.metrics.rank]}\"\r\n    @trigger 'statusUpdate', status\r\n    console.log 'Sending result back to server:'\r\n    console.log JSON.stringify results\r\n\r\n    if @options.headlessClient and @options.testing\r\n      return @fetchAndSimulateTask()\r\n\r\n    $.ajax\r\n      url: '/queue/scoring'\r\n      data: results\r\n      type: 'PUT'\r\n      parse: true\r\n      success: @handleTaskResultsTransferSuccess\r\n      error: @handleTaskResultsTransferError\r\n      complete: @cleanupAndSimulateAnotherTask\r\n\r\n  handleTaskResultsTransferSuccess: (result) =>\r\n    return if @destroyed\r\n    console.log \"Task registration result: #{JSON.stringify result}\"\r\n    @trigger 'statusUpdate', 'Results were successfully sent back to server!'\r\n    @simulatedByYou++\r\n    unless @options.headlessClient\r\n      simulatedBy = parseInt($('#simulated-by-you').text(), 10) + 1\r\n      $('#simulated-by-you').text(simulatedBy)\r\n\r\n  handleTaskResultsTransferError: (error) =>\r\n    return if @destroyed\r\n    @trigger 'statusUpdate', 'There was an error sending the results back to the server.'\r\n    console.log \"Task registration error: #{JSON.stringify error}\"\r\n\r\n  cleanupAndSimulateAnotherTask: =>\r\n    return if @destroyed\r\n    @cleanupSimulation()\r\n    if @options.background or @noTasks\r\n      @fetchAndSimulateOneGame()\r\n    else\r\n      @fetchAndSimulateTask()\r\n\r\n  cleanupSimulation: ->\r\n    @stopListening @god\r\n    @world = null\r\n    @level = null\r\n\r\n  formTaskResultsObject: (simulationResults) ->\r\n    taskResults =\r\n      taskID: @task.getTaskID()\r\n      receiptHandle: @task.getReceiptHandle()\r\n      originalSessionID: @task.getFirstSessionID()\r\n      originalSessionRank: -1\r\n      calculationTime: 500\r\n      sessions: []\r\n      simulator: @simulator\r\n      randomSeed: @task.world.randomSeed\r\n\r\n    for session in @task.getSessions()\r\n      sessionResult =\r\n        sessionID: session.sessionID\r\n        submitDate: session.submitDate\r\n        creator: session.creator\r\n        name: session.creatorName\r\n        totalScore: session.totalScore\r\n        metrics:\r\n          rank: @calculateSessionRank session.sessionID, simulationResults.goalStates, @task.generateTeamToSessionMap()\r\n        shouldUpdateLastOpponentSubmitDateForLeague: session.shouldUpdateLastOpponentSubmitDateForLeague\r\n      if session.sessionID is taskResults.originalSessionID\r\n        taskResults.originalSessionRank = sessionResult.metrics.rank\r\n        taskResults.originalSessionTeam = session.team\r\n      taskResults.sessions.push sessionResult\r\n\r\n    return taskResults\r\n\r\n  calculateSessionRank: (sessionID, goalStates, teamSessionMap) ->\r\n    ogreGoals = (goalState for key, goalState of goalStates when goalState.team is 'ogres')\r\n    humanGoals = (goalState for key, goalState of goalStates when goalState.team is 'humans')\r\n    ogresWon = _.all ogreGoals, {status: 'success'}\r\n    humansWon = _.all humanGoals, {status: 'success'}\r\n    if ogresWon is humansWon\r\n      return 0\r\n    else if ogresWon and teamSessionMap['ogres'] is sessionID\r\n      return 0\r\n    else if ogresWon and teamSessionMap['ogres'] isnt sessionID\r\n      return 1\r\n    else if humansWon and teamSessionMap['humans'] is sessionID\r\n      return 0\r\n    else\r\n      return 1\r\n\r\n  generateSpellsObject: ->\r\n    spells = {}\r\n    for {hero, team} in [{hero: 'Hero Placeholder', team: 'humans'}, {hero: 'Hero Placeholder 1', team: 'ogres'}]\r\n      sessionInfo = _.filter(@task.getSessions(), {team: team})[0]\r\n      fullSpellName = _.string.slugify(hero) + '/plan'\r\n      submittedCodeLanguage = sessionInfo?.submittedCodeLanguage ? 'javascript'\r\n      submittedCodeLanguage = 'javascript' if submittedCodeLanguage in ['clojure', 'io']  # No longer supported\r\n      submittedCode = LZString.decompressFromUTF16 sessionInfo?.submittedCode?[_.string.slugify(hero)]?.plan ? ''\r\n      aether = new Aether createAetherOptions functionName: 'plan', codeLanguage: submittedCodeLanguage, skipProtectAPI: false\r\n      try\r\n        aether.transpile submittedCode\r\n      catch e\r\n        console.log \"Couldn't transpile #{fullSpellName}:\\n#{submittedCode}\\n\", e\r\n        aether.transpile ''\r\n      spells[fullSpellName] = name: 'plan', team: team, thang: {thang: {id: hero}, aether: aether}\r\n    spells\r\n\r\n\r\nclass SimulationTask\r\n  constructor: (@rawData) ->\r\n\r\n  getLevelName: ->\r\n    levelName = @rawData.sessions?[0]?.levelID\r\n    return levelName if levelName?\r\n    @throwMalformedTaskError 'The level name couldn\\'t be deduced from the task.'\r\n\r\n  generateTeamToSessionMap: ->\r\n    teamSessionMap = {}\r\n    for session in @rawData.sessions\r\n      @throwMalformedTaskError 'Two players share the same team' if teamSessionMap[session.team]?\r\n      teamSessionMap[session.team] = session.sessionID\r\n\r\n    teamSessionMap\r\n\r\n  throwMalformedTaskError: (errorString) ->\r\n    throw new Error \"The task was malformed, reason: #{errorString}\"\r\n\r\n  getFirstSessionID: -> @rawData.sessions[0].sessionID\r\n\r\n  getSecondSessionID: -> @rawData.sessions[1].sessionID\r\n\r\n  getTaskID: -> @rawData.taskID\r\n\r\n  getReceiptHandle: -> @rawData.receiptHandle\r\n\r\n  getSessions: -> @rawData.sessions\r\n\r\n  setWorld: (@world) ->\r\n"]}