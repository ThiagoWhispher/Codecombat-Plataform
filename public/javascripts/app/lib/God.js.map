{"version":3,"sources":["app/lib/God.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/God.js","sourcesContent":["# Each LevelView or Simulator has a God which listens for spells cast and summons new Angels on the main thread to\r\n# oversee simulation of the World on worker threads. The Gods and Angels even have names. It's kind of fun.\r\n# (More fun than ThreadPool and WorkerAgentManager and such.)\r\n\r\n{now} = require 'lib/world/world_utils'\r\nWorld = require 'lib/world/world'\r\nCocoClass = require 'core/CocoClass'\r\nAngel = require 'lib/Angel'\r\nGameUIState = require 'models/GameUIState'\r\nerrors = require 'core/errors'\r\n\r\nmodule.exports = class God extends CocoClass\r\n  @nicks: ['Athena', 'Baldr', 'Crom', 'Dagr', 'Eris', 'Freyja', 'Great Gish', 'Hades', 'Ishtar', 'Janus', 'Khronos', 'Loki', 'Marduk', 'Negafook', 'Odin', 'Poseidon', 'Quetzalcoatl', 'Ra', 'Shiva', 'Thor', 'Umvelinqangi', 'Týr', 'Vishnu', 'Wepwawet', 'Xipe Totec', 'Yahweh', 'Zeus', '上帝', 'Tiamat', '盘古', 'Phoebe', 'Artemis', 'Osiris', '嫦娥', 'Anhur', 'Teshub', 'Enlil', 'Perkele', 'Chaos', 'Hera', 'Iris', 'Theia', 'Uranus', 'Stribog', 'Sabazios', 'Izanagi', 'Ao', 'Tāwhirimātea', 'Tengri', 'Inmar', 'Torngarsuk', 'Centzonhuitznahua', 'Hunab Ku', 'Apollo', 'Helios', 'Thoth', 'Hyperion', 'Alectrona', 'Eos', 'Mitra', 'Saranyu', 'Freyr', 'Koyash', 'Atropos', 'Clotho', 'Lachesis', 'Tyche', 'Skuld', 'Urðr', 'Verðandi', 'Camaxtli', 'Huhetotl', 'Set', 'Anu', 'Allah', 'Anshar', 'Hermes', 'Lugh', 'Brigit', 'Manannan Mac Lir', 'Persephone', 'Mercury', 'Venus', 'Mars', 'Azrael', 'He-Man', 'Anansi', 'Issek', 'Mog', 'Kos', 'Amaterasu Omikami', 'Raijin', 'Susanowo', 'Blind Io', 'The Lady', 'Offler', 'Ptah', 'Anubis', 'Ereshkigal', 'Nergal', 'Thanatos', 'Macaria', 'Angelos', 'Erebus', 'Hecate', 'Hel', 'Orcus', 'Ishtar-Deela Nakh', 'Prometheus', 'Hephaestos', 'Sekhmet', 'Ares', 'Enyo', 'Otrera', 'Pele', 'Hadúr', 'Hachiman', 'Dayisun Tngri', 'Ullr', 'Lua', 'Minerva']\r\n\r\n  subscriptions:\r\n    'tome:cast-spells': 'onTomeCast'\r\n    'tome:spell-debug-value-request': 'retrieveValueFromFrame'\r\n    'god:new-world-created': 'onNewWorldCreated'\r\n\r\n  constructor: (options) ->\r\n    options ?= {}\r\n    @retrieveValueFromFrame = _.throttle @retrieveValueFromFrame, 1000\r\n    @gameUIState ?= options.gameUIState or new GameUIState()\r\n    @indefiniteLength = options.indefiniteLength or false\r\n    super()\r\n\r\n    # Angels are all given access to this.\r\n    @angelsShare = {\r\n      workerCode: options.workerCode or '/javascripts/workers/worker_world.js'  # Either path or function\r\n      headless: options.headless  # Whether to just simulate the goals, or to deserialize all simulation results\r\n      spectate: options.spectate\r\n      god: @\r\n      godNick: @nick\r\n      @gameUIState\r\n      workQueue: []\r\n      firstWorld: true\r\n      world: undefined\r\n      goalManager: undefined\r\n      worldClassMap: undefined\r\n      angels: []\r\n      busyAngels: []  # Busy angels will automatically register here.\r\n    }\r\n\r\n    # Determine how many concurrent Angels/web workers to use at a time\r\n    # ~20MB per idle worker + angel overhead - every Angel maps to 1 worker\r\n    if options.maxAngels?\r\n      angelCount = options.maxAngels\r\n    else if window.application.isIPadApp\r\n      angelCount = 1\r\n    else\r\n      angelCount = 2\r\n\r\n    # Don't generate all Angels at once.\r\n    _.delay (=> new Angel @angelsShare unless @destroyed), 250 * i for i in [0 ... angelCount]\r\n\r\n  destroy: ->\r\n    angel.destroy() for angel in @angelsShare.angels.slice()\r\n    @angelsShare.goalManager?.destroy()\r\n    @debugWorker?.terminate()\r\n    @debugWorker?.removeEventListener 'message', @onDebugWorkerMessage\r\n    super()\r\n\r\n  setLevel: (@level) ->\r\n  setLevelSessionIDs: (@levelSessionIDs) ->\r\n  setGoalManager: (goalManager) ->\r\n    @angelsShare.goalManager?.destroy() unless @angelsShare.goalManager is goalManager\r\n    @angelsShare.goalManager = goalManager\r\n  setWorldClassMap: (worldClassMap) -> @angelsShare.worldClassMap = worldClassMap\r\n\r\n  onTomeCast: (e) ->\r\n    return unless e.god is @\r\n    @lastSubmissionCount = e.submissionCount\r\n    @lastFixedSeed = e.fixedSeed\r\n    @lastFlagHistory = (flag for flag in e.flagHistory when flag.source isnt 'code')\r\n    @lastDifficulty = e.difficulty\r\n    @createWorld e.spells, e.preload, e.realTime, e.justBegin\r\n\r\n  createWorld: (spells, preload, realTime, justBegin) ->\r\n    console.log \"#{@nick}: Let there be light upon #{@level.name}! (preload: #{preload})\"\r\n    userCodeMap = @getUserCodeMap spells\r\n\r\n    # We only want one world being simulated, so we abort other angels, unless we had one preloading this very code.\r\n    hadPreloader = false\r\n    for angel in @angelsShare.busyAngels\r\n      isPreloading = angel.running and angel.work.preload and _.isEqual angel.work.userCodeMap, userCodeMap, (a, b) ->\r\n        return a.raw is b.raw if a?.raw? and b?.raw?\r\n        undefined  # Let default equality test suffice.\r\n      if not hadPreloader and isPreloading and not realTime\r\n        angel.finalizePreload()\r\n        hadPreloader = true\r\n      else if preload and angel.running and not angel.work.preload\r\n        # It's still running for real, so let's not preload.\r\n        return\r\n      else\r\n        angel.abort()\r\n    return if hadPreloader\r\n\r\n    @angelsShare.workQueue = []\r\n    work = {\r\n      userCodeMap: userCodeMap\r\n      @level\r\n      levelSessionIDs: @levelSessionIDs\r\n      submissionCount: @lastSubmissionCount\r\n      fixedSeed: @lastFixedSeed\r\n      flagHistory: @lastFlagHistory\r\n      difficulty: @lastDifficulty\r\n      goals: @angelsShare.goalManager?.getGoals()\r\n      headless: @angelsShare.headless\r\n      preload\r\n      synchronous: not Worker?  # Profiling world simulation is easier on main thread, or we are IE9.\r\n      realTime\r\n      justBegin\r\n      indefiniteLength: @indefiniteLength and realTime\r\n    }\r\n    @angelsShare.workQueue.push work\r\n    angel.workIfIdle() for angel in @angelsShare.angels\r\n    work\r\n\r\n  getUserCodeMap: (spells) ->\r\n    userCodeMap = {}\r\n    for spellKey, spell of spells\r\n      (userCodeMap[spell.thang.thang.id] ?= {})[spell.name] = spell.thang.aether.serialize()\r\n    userCodeMap\r\n\r\n\r\n  #### New stuff related to debugging ####\r\n  retrieveValueFromFrame: (args) =>\r\n    return if @destroyed\r\n    return unless args.thangID and args.spellID and args.variableChain\r\n    return console.error 'Tried to retrieve debug value with no currentUserCodeMap' unless @currentUserCodeMap\r\n    @debugWorker ?= @createDebugWorker()\r\n    args.frame ?= @angelsShare.world.age / @angelsShare.world.dt\r\n    @debugWorker.postMessage\r\n      func: 'retrieveValueFromFrame'\r\n      args:\r\n        userCodeMap: @currentUserCodeMap\r\n        level: @level\r\n        levelSessionIDs: @levelSessionIDs\r\n        submissionCount: @lastSubmissionCount\r\n        fixedSeed: @fixedSeed\r\n        flagHistory: @lastFlagHistory\r\n        difficulty: @lastDifficulty\r\n        goals: @goalManager?.getGoals()\r\n        frame: args.frame\r\n        currentThangID: args.thangID\r\n        currentSpellID: args.spellID\r\n        variableChain: args.variableChain\r\n\r\n  createDebugWorker: ->\r\n    worker = new Worker '/javascripts/workers/worker_world.js'\r\n    worker.addEventListener 'message', @onDebugWorkerMessage\r\n    worker.addEventListener 'error', errors.onWorkerError\r\n    worker\r\n\r\n  onDebugWorkerMessage: (event) =>\r\n    switch event.data.type\r\n      when 'console-log'\r\n        console.log \"|#{@nick}'s debugger|\", event.data.args...\r\n      when 'debug-value-return'\r\n        Backbone.Mediator.publish 'god:debug-value-return', event.data.serialized, god: @\r\n      when 'debug-world-load-progress-changed'\r\n        Backbone.Mediator.publish 'god:debug-world-load-progress-changed', progress: event.data.progress, god: @\r\n\r\n  onNewWorldCreated: (e) ->\r\n    @currentUserCodeMap = @filterUserCodeMapWhenFromWorld e.world.userCodeMap\r\n\r\n  filterUserCodeMapWhenFromWorld: (worldUserCodeMap) ->\r\n    newUserCodeMap = {}\r\n    for thangName, thang of worldUserCodeMap\r\n      newUserCodeMap[thangName] = {}\r\n      for spellName, aether of thang\r\n        shallowFilteredObject = _.pick aether, ['raw', 'pure', 'originalOptions']\r\n        newUserCodeMap[thangName][spellName] = _.cloneDeep shallowFilteredObject\r\n        newUserCodeMap[thangName][spellName] = _.defaults newUserCodeMap[thangName][spellName],\r\n          flow: {}\r\n          metrics: {}\r\n          problems:\r\n            errors: []\r\n            infos: []\r\n            warnings: []\r\n          style: {}\r\n    newUserCodeMap\r\n\r\n\r\nimitateIE9 = false  # (and in world_utils.coffee)\r\nif imitateIE9\r\n  window.Worker = null\r\n  window.Float32Array = null\r\n  # Also uncomment vendor_with_box2d.js in index.html if you want Collision to run and Thangs to move.\r\n"]}