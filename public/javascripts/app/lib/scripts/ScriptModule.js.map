{"version":3,"sources":["app/lib/scripts/ScriptModule.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,YAAY,QAAQ,gBAAR;;AAEZ,MAAM,CAAC,OAAP,GAAuB;AAErB;;;;EAAA,gBAAgB;;EAChB,eAAe;;EAEF,sBAAC,SAAD;AACX;IADY,IAAC,aAAD;IACZ;IACA,IAAG,CAAI,IAAC,UAAS,CAAC,QAAlB;MACE,IAAC,iBAAD,CAAkB,IAAC,UAAnB;;YACU,CAAC,QAAS;;MACpB,IAAC,UAAS,CAAC,QAAX,GAAsB,KAHxB;;EAFW;;EASb,YAAC,UAAD,GAAY;WAAG;EAAH;;yBACZ,aAAY;WAAG;EAAH;;yBACZ,WAAU;WAAG;EAAH;;yBACV,YAAW;WAAG,IAAC,SAAD;EAAH;;yBAIX,mBAAkB;AAEhB;IAAA,IAAC,aAAD,GAAgB,IAAC,qBAAD,CAAsB,IAAC,UAAvB;WAChB,IAAC,cAAD,+EAA2C,CAAE,2BAA5B,IAAwC;EAHzC;;yBAKlB,uBAAsB;AACpB;IAAA,OAAO;AACP;AAAA;;MACE,IAAgB,mBAAhB;AAAA;;;QACA,aAAmB;;MACnB,IAAK,OAAM,CAAC,EAAP,CAAL,IAAmB,MAAM,CAAC,IAAI,CAAC;AAHjC;IAIA;;AAAQ;WAAA;qBAAA,IAAK;AAAL;;;WACR,IAAI,CAAC,GAAL,aAAS,EAAG,0BAAZ;EAPoB;;yBAStB,wBAAuB,SAAC,IAAD;WACrB,IAAI,CAAC,KAAL,GAAa,CAAC,IAAC,cAAD,GAAiB,IAAC,aAAnB,KAAoC;EAD5B;;;;GAnCmB","file":"public/javascripts/app/lib/scripts/ScriptModule.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\n\r\nmodule.exports = class ScriptModule extends CocoClass\r\n\r\n  scrubbingTime = 0\r\n  movementTime = 0\r\n\r\n  constructor: (@noteGroup) ->\r\n    super()\r\n    if not @noteGroup.prepared\r\n      @analyzeNoteGroup(@noteGroup)\r\n      @noteGroup.notes ?= []\r\n      @noteGroup.prepared = true\r\n\r\n  # subclass should overwrite these\r\n\r\n  @neededFor: -> false\r\n  startNotes: -> []\r\n  endNotes: -> []\r\n  skipNotes: -> @endNotes()\r\n\r\n  # common logic\r\n\r\n  analyzeNoteGroup: ->\r\n    # some notes need to happen after others. Calculate the delays\r\n    @movementTime = @calculateMovementMax(@noteGroup)\r\n    @scrubbingTime = @noteGroup.playback?.scrub?.duration or 0\r\n\r\n  calculateMovementMax: ->\r\n    sums = {}\r\n    for sprite in @noteGroup.sprites\r\n      continue unless sprite.move?\r\n      sums[sprite.id] ?= 0\r\n      sums[sprite.id] += sprite.move.duration\r\n    sums = (sums[k] for k of sums)\r\n    Math.max(0, sums...)\r\n\r\n  maybeApplyDelayToNote: (note) ->\r\n    note.delay = (@scrubbingTime + @movementTime) or 0\r\n"]}