{"version":3,"sources":["app/lib/scripts/SurfaceScriptModule.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,eAAe,QAAQ,gBAAR;;AAEf,MAAM,CAAC,OAAP,GAAuB;;;;;;;EACrB,mBAAC,UAAD,GAAY,SAAC,SAAD;AACV,WAAO;EADG;;gCAGZ,aAAY;AACV;IAAA,QAAQ;IACR,IAAoC,oCAApC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,kBAAD,EAAX;;IACA,IAAuC,wCAAvC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,qBAAD,EAAX;;IACA,IAAwC,yCAAxC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,sBAAD,EAAX;;AACA,WAAO;EALG;;gCAOZ,WAAU;AACR;IAAA,QAAQ;IACR,IAA2E,wCAA3E;MAAA,KAAK,CAAC,IAAN,CAAW;QAAC,SAAQ,0BAAT;QAAqC,OAAO;UAAC,UAAU,EAAX;SAA5C;OAAX;;IACA,IAAwC,oCAAxC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,kBAAD,CAAmB,IAAnB,CAAX;;IACA,IAAwC,yCAAxC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,sBAAD,EAAX;;AACA,WAAO;EALC;;gCAOV,YAAW;AACT;IAAA,QAAQ;IACR,IAAwC,oCAAxC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,kBAAD,CAAmB,IAAnB,CAAX;;IACA,IAAwC,yCAAxC;MAAA,KAAK,CAAC,IAAN,CAAW,IAAC,sBAAD,EAAX;;AACA,WAAO;EAJE;;gCAMX,oBAAmB,SAAC,OAAD;AACjB;;MADkB,UAAQ;;IAC1B,QAAQ,IAAC,UAAS,CAAC,OAAO,CAAC;IAC3B,IAAI;IACJ,IAAwB,CAAC,CAAC,aAAF,CAAgB,KAAK,CAAC,MAAtB,CAAxB;MAAA,CAAC,CAAC,GAAF,GAAQ,KAAK,CAAC,OAAd;;IACA,IAA4B,CAAC,CAAC,QAAF,CAAW,KAAK,CAAC,MAAjB,CAA5B;MAAA,CAAC,CAAC,OAAF,GAAY,KAAK,CAAC,OAAlB;;IACA,CAAC,CAAC,IAAF,GAAS,KAAK,CAAC,IAAN,IAAc;IACvB,CAAC,CAAC,QAAF,GAAgB,sBAAH,GAAwB,KAAK,CAAC,QAA9B,GAA4C;IACzD,IAAkB,OAAlB;MAAA,CAAC,CAAC,QAAF,GAAa,EAAb;;IACA,IAA2B,oBAA3B;MAAA,CAAC,CAAC,MAAF,GAAW,KAAK,CAAC,OAAjB;;AACA,WAAO;MAAE,SAAS,mBAAX;MAAgC,OAAO,CAAvC;;EATU;;gCAWnB,uBAAsB;AACpB;IAAA,YAAY,IAAC,UAAS,CAAC,OAAO,CAAC;IAC/B,OACE;MAAA,SAAS,0BAAT;MACA,OACE;QAAA,UAAU,SAAS,CAAC,OAApB;QACA,OAAO,SAAS,CAAC,KADjB;OAFF;;IAIF,IAAC,sBAAD,CAAuB,IAAvB,EAA6B,IAAC,UAA9B;AACA,WAAO;EARa;;gCAUtB,wBAAuB;AACrB,WAAO;MAAE,SAAS,mBAAX;MAAgC,OAAO;QAAC,MAAM,IAAC,UAAS,CAAC,OAAO,CAAC,UAA1B;OAAvC;;EADc;;;;GA7C0B","file":"public/javascripts/app/lib/scripts/SurfaceScriptModule.js","sourcesContent":["ScriptModule = require './ScriptModule'\r\n\r\nmodule.exports = class SurfaceScriptModule extends ScriptModule\r\n  @neededFor: (noteGroup) ->\r\n    return noteGroup.surface?\r\n\r\n  startNotes: ->\r\n    notes = []\r\n    notes.push(@surfaceCameraNote()) if @noteGroup.surface.focus?\r\n    notes.push(@surfaceHighlightNote()) if @noteGroup.surface.highlight?\r\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\r\n    return notes\r\n\r\n  endNotes: ->\r\n    notes = []\r\n    notes.push({channel:'sprite:highlight-sprites', event: {thangIDs: []}}) if @noteGroup.surface.highlight?\r\n    notes.push(@surfaceCameraNote(true)) if @noteGroup.surface.focus?\r\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\r\n    return notes\r\n\r\n  skipNotes: ->\r\n    notes = []\r\n    notes.push(@surfaceCameraNote(true)) if @noteGroup.surface.focus?\r\n    notes.push(@surfaceLockSelectNote()) if @noteGroup.surface.lockSelect?\r\n    return notes\r\n\r\n  surfaceCameraNote: (instant=false) ->\r\n    focus = @noteGroup.surface.focus\r\n    e = {}\r\n    e.pos = focus.target if _.isPlainObject focus.target\r\n    e.thangID = focus.target if _.isString focus.target\r\n    e.zoom = focus.zoom or 2.0  # TODO: test only doing this if e.pos, e.thangID, or focus.zoom?\r\n    e.duration = if focus.duration? then focus.duration else 1500\r\n    e.duration = 0 if instant\r\n    e.bounds = focus.bounds if focus.bounds?\r\n    return { channel: 'camera:set-camera', event: e }\r\n\r\n  surfaceHighlightNote: ->\r\n    highlight = @noteGroup.surface.highlight\r\n    note =\r\n      channel: 'sprite:highlight-sprites'\r\n      event:\r\n        thangIDs: highlight.targets\r\n        delay: highlight.delay\r\n    @maybeApplyDelayToNote note, @noteGroup\r\n    return note\r\n\r\n  surfaceLockSelectNote: ->\r\n    return { channel: 'level:lock-select', event: {lock: @noteGroup.surface.lockSelect} }\r\n"]}