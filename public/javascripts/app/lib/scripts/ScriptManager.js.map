{"version":3,"sources":["app/lib/scripts/ScriptManager.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/scripts/ScriptManager.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\nCocoView = require 'views/core/CocoView'\r\n{scriptMatchesEventPrereqs} = require './../world/script_event_prereqs'\r\n\r\nallScriptModules = []\r\nallScriptModules.push(require './SpriteScriptModule')\r\nallScriptModules.push(require './DOMScriptModule')\r\nallScriptModules.push(require './SurfaceScriptModule')\r\nallScriptModules.push(require './PlaybackScriptModule')\r\nallScriptModules.push(require './SoundScriptModule')\r\n\r\n\r\nDEFAULT_BOT_MOVE_DURATION = 500\r\nDEFAULT_SCRUB_DURATION = 1000\r\n\r\nmodule.exports = ScriptManager = class ScriptManager extends CocoClass\r\n  scriptInProgress: false\r\n  currentNoteGroup: null\r\n  currentTimeouts: []\r\n  worldLoading: true\r\n  ignoreEvents: false\r\n  quiet: false\r\n\r\n  triggered: []\r\n  ended: []\r\n  noteGroupQueue: []\r\n  originalScripts: [] # use these later when you want to revert to an original state\r\n\r\n  subscriptions:\r\n    'script:end-current-script': 'onEndNoteGroup'\r\n    'level:loading-view-unveiling': -> @setWorldLoading(false)\r\n    'level:restarted': 'onLevelRestarted'\r\n    'level:shift-space-pressed': 'onEndNoteGroup'\r\n    'level:escape-pressed': 'onEndAll'\r\n\r\n  shortcuts:\r\n    '⇧+space, space, enter': -> Backbone.Mediator.publish 'level:shift-space-pressed', {}\r\n    'escape': -> Backbone.Mediator.publish 'level:escape-pressed', {}\r\n\r\n  # SETUP / TEARDOWN\r\n\r\n  constructor: (options) ->\r\n    super(options)\r\n    @originalScripts = options.scripts\r\n    @session = options.session\r\n    @levelID = options.levelID\r\n    @debugScripts = application.isIPadApp or CocoView.getQueryVariable 'dev'\r\n    @initProperties()\r\n    @addScriptSubscriptions()\r\n    @beginTicking()\r\n\r\n  setScripts: (@originalScripts) ->\r\n    @quiet = true\r\n    @initProperties()\r\n    @loadFromSession()\r\n    @quiet = false\r\n    @addScriptSubscriptions()\r\n    @run()\r\n\r\n  initProperties: ->\r\n    @endAll({force:true}) if @scriptInProgress\r\n    @triggered = []\r\n    @ended = []\r\n    @noteGroupQueue = []\r\n    @scripts = $.extend(true, [], @originalScripts)\r\n\r\n  addScriptSubscriptions: ->\r\n    idNum = 0\r\n    makeCallback = (channel) => (event) => @onNote(channel, event)\r\n    for script in @scripts\r\n      script.id = (idNum++).toString() unless script.id\r\n      callback = makeCallback(script.channel) # curry in the channel argument\r\n      @addNewSubscription(script.channel, callback)\r\n\r\n  beginTicking: ->\r\n    @tickInterval = setInterval @tick, 5000\r\n\r\n  tick: =>\r\n    scriptStates = {}\r\n    now = new Date()\r\n    for script in @scripts\r\n      scriptStates[script.id] =\r\n        timeSinceLastEnded: (if script.lastEnded then now - script.lastEnded else 0) / 1000\r\n        timeSinceLastTriggered: (if script.lastTriggered then now - script.lastTriggered else 0) / 1000\r\n\r\n    stateEvent =\r\n      scriptRunning: @currentNoteGroup?.scriptID or ''\r\n      noteGroupRunning: @currentNoteGroup?.name or ''\r\n      scriptStates: scriptStates\r\n      timeSinceLastScriptEnded: (if @lastScriptEnded then now - @lastScriptEnded else 0) / 1000\r\n\r\n    Backbone.Mediator.publish 'script:tick', stateEvent  # Used to trigger level scripts.\r\n\r\n  loadFromSession: ->\r\n    # load the queue with note groups to skip through\r\n    @addEndedScriptsFromSession()\r\n    @addPartiallyEndedScriptFromSession()\r\n    for noteGroup in @noteGroupQueue\r\n      @processNoteGroup(noteGroup)\r\n\r\n  addPartiallyEndedScriptFromSession: ->\r\n    scripts = @session.get('state').scripts\r\n    return unless scripts?.currentScript\r\n    script = _.find @scripts, {id: scripts.currentScript}\r\n    return unless script\r\n    @triggered.push(script.id)\r\n    noteChain = @processScript(script)\r\n    return unless noteChain\r\n    if scripts.currentScriptOffset\r\n      noteGroup.skipMe = true for noteGroup in noteChain[..scripts.currentScriptOffset-1]\r\n    @addNoteChain(noteChain, false)\r\n\r\n  addEndedScriptsFromSession: ->\r\n    scripts = @session.get('state').scripts\r\n    return unless scripts\r\n    endedObj = scripts['ended'] or {}\r\n    sortedPairs = _.sortBy(_.pairs(endedObj), (pair) -> pair[1])\r\n    scriptsToSkip = (p[0] for p in sortedPairs)\r\n    for scriptID in scriptsToSkip\r\n      script = _.find @scripts, {id: scriptID}\r\n      unless script\r\n        console.warn 'Couldn\\'t find script for', scriptID, 'from scripts', @scripts, 'when restoring session scripts.'\r\n        continue\r\n      continue if script.repeats # repeating scripts are not 'rerun'\r\n      @triggered.push(scriptID)\r\n      @ended.push(scriptID)\r\n      noteChain = @processScript(script)\r\n      return unless noteChain\r\n      noteGroup.skipMe = true for noteGroup in noteChain\r\n      @addNoteChain(noteChain, false)\r\n\r\n  setWorldLoading: (@worldLoading) ->\r\n    @run() unless @worldLoading\r\n\r\n  initializeCamera: ->\r\n    # Fire off the first bounds-setting script now, before we're actually running any other ones.\r\n    for script in @scripts\r\n      for note in script.noteChain or []\r\n        if note.surface?.focus?\r\n          surfaceModule = _.find note.modules or [], (module) -> module.surfaceCameraNote\r\n          cameraNote = surfaceModule.surfaceCameraNote true\r\n          @publishNote cameraNote\r\n          return\r\n\r\n  destroy: ->\r\n    @onEndAll()\r\n    clearInterval @tickInterval\r\n    super()\r\n\r\n  # TRIGGERERING NOTES\r\n\r\n  onNote: (channel, event) ->\r\n    return if @ignoreEvents\r\n    for script in @scripts\r\n      alreadyTriggered = script.id in @triggered\r\n      continue unless script.channel is channel\r\n      continue if alreadyTriggered and not script.repeats\r\n      continue if script.lastTriggered? and script.repeats is 'session'\r\n      continue if script.lastTriggered? and new Date().getTime() - script.lastTriggered < 1\r\n      continue if script.neverRun\r\n\r\n      if script.notAfter\r\n        for scriptID in script.notAfter\r\n          if scriptID in @triggered\r\n            script.neverRun = true\r\n            break\r\n        continue if script.neverRun\r\n\r\n      continue unless @scriptPrereqsSatisfied(script)\r\n      continue unless scriptMatchesEventPrereqs(script, event)\r\n      # everything passed!\r\n      console.debug \"SCRIPT: Running script '#{script.id}'\" if @debugScripts\r\n      script.lastTriggered = new Date().getTime()\r\n      @triggered.push(script.id) unless alreadyTriggered\r\n      noteChain = @processScript(script)\r\n      if not noteChain then return @trackScriptCompletions (script.id)\r\n      @addNoteChain(noteChain)\r\n      @run()\r\n\r\n  scriptPrereqsSatisfied: (script) ->\r\n    _.every(script.scriptPrereqs or [], (prereq) => prereq in @triggered)\r\n\r\n  processScript: (script) ->\r\n    noteChain = script.noteChain\r\n    return null unless noteChain?.length\r\n    noteGroup.scriptID = script.id for noteGroup in noteChain\r\n    lastNoteGroup = noteChain[noteChain.length - 1]\r\n    lastNoteGroup.isLast = true\r\n    return noteChain\r\n\r\n  addNoteChain: (noteChain, clearYields=true) ->\r\n    @processNoteGroup(noteGroup) for noteGroup in noteChain\r\n    noteGroup.index = i for noteGroup, i in noteChain\r\n    if clearYields\r\n      noteGroup.skipMe = true for noteGroup in @noteGroupQueue when noteGroup.script.yields\r\n    @noteGroupQueue.push noteGroup for noteGroup in noteChain\r\n    @endYieldingNote()\r\n\r\n  processNoteGroup: (noteGroup) ->\r\n    return if noteGroup.modules?\r\n    if noteGroup.playback?.scrub?\r\n      noteGroup.playback.scrub.duration ?= DEFAULT_SCRUB_DURATION\r\n    noteGroup.sprites ?= []\r\n    for sprite in noteGroup.sprites\r\n      if sprite.move?\r\n        sprite.move.duration ?= DEFAULT_BOT_MOVE_DURATION\r\n      sprite.id ?= 'Hero Placeholder'\r\n    noteGroup.script ?= {}\r\n    noteGroup.script.yields ?= true\r\n    noteGroup.script.skippable ?= true\r\n    noteGroup.modules = (new Module(noteGroup) for Module in allScriptModules when Module.neededFor(noteGroup))\r\n\r\n  endYieldingNote: ->\r\n    if @scriptInProgress and @currentNoteGroup?.script.yields\r\n      @endNoteGroup()\r\n      return true\r\n\r\n  # STARTING NOTES\r\n\r\n  run: ->\r\n    # catch all for analyzing the current state and doing whatever needs to happen next\r\n    return if @scriptInProgress\r\n    @skipAhead()\r\n    return unless @noteGroupQueue.length\r\n    nextNoteGroup = @noteGroupQueue[0]\r\n    return if @worldLoading and nextNoteGroup.skipMe\r\n    return if @worldLoading and not nextNoteGroup.script?.beforeLoad\r\n    @noteGroupQueue = @noteGroupQueue[1..]\r\n    @currentNoteGroup = nextNoteGroup\r\n    @notifyScriptStateChanged()\r\n    @scriptInProgress = true\r\n    @currentTimeouts = []\r\n    scriptLabel = \"#{nextNoteGroup.scriptID} - #{nextNoteGroup.name}\"\r\n    application.tracker?.trackEvent 'Script Started', {levelID: @levelID, label: scriptLabel, ls: @session?.get('_id')}, ['Google Analytics']\r\n    console.debug \"SCRIPT: Starting note group '#{nextNoteGroup.name}'\" if @debugScripts\r\n    for module in nextNoteGroup.modules\r\n      @processNote(note, nextNoteGroup) for note in module.startNotes()\r\n    if nextNoteGroup.script.duration\r\n      f = => @onNoteGroupTimeout? nextNoteGroup\r\n      setTimeout(f, nextNoteGroup.script.duration)\r\n    Backbone.Mediator.publish 'script:note-group-started', {}\r\n\r\n  skipAhead: ->\r\n    return if @worldLoading\r\n    return unless @noteGroupQueue[0]?.skipMe\r\n    @ignoreEvents = true\r\n    for noteGroup, i in @noteGroupQueue\r\n      break unless noteGroup.skipMe\r\n      console.debug \"SCRIPT: Skipping note group '#{noteGroup.name}'\" if @debugScripts\r\n      @processNoteGroup(noteGroup)\r\n      for module in noteGroup.modules\r\n        notes = module.skipNotes()\r\n        @processNote(note, noteGroup) for note in notes\r\n      @trackScriptCompletionsFromNoteGroup(noteGroup)\r\n    @noteGroupQueue = @noteGroupQueue[i..]\r\n    @ignoreEvents = false\r\n\r\n  processNote: (note, noteGroup) ->\r\n    note.event ?= {}\r\n    if note.delay\r\n      f = => @sendDelayedNote noteGroup, note\r\n      @currentTimeouts.push setTimeout(f, note.delay)\r\n    else\r\n      @publishNote(note)\r\n\r\n  sendDelayedNote: (noteGroup, note) ->\r\n    # some events should only happen after the bot has moved into position\r\n    return unless noteGroup is @currentNoteGroup\r\n    @publishNote(note)\r\n\r\n  publishNote: (note) ->\r\n    Backbone.Mediator.publish note.channel, note.event ? {}\r\n\r\n  # ENDING NOTES\r\n\r\n  onLevelRestarted: ->\r\n    @quiet = true\r\n    @endAll({force:true})\r\n    @initProperties()\r\n    @resetThings()\r\n    Backbone.Mediator.publish 'script:reset', {}\r\n    @quiet = false\r\n    @run()\r\n\r\n  onEndNoteGroup: (e) ->\r\n    # press enter\r\n    return unless @currentNoteGroup?.script.skippable\r\n    @endNoteGroup()\r\n    @run()\r\n\r\n  endNoteGroup: ->\r\n    return if @ending # kill infinite loops right here\r\n    @ending = true\r\n    return unless @currentNoteGroup?\r\n    scriptLabel = \"#{@currentNoteGroup.scriptID} - #{@currentNoteGroup.name}\"\r\n    application.tracker?.trackEvent 'Script Ended', {levelID: @levelID, label: scriptLabel, ls: @session?.get('_id')}, ['Google Analytics']\r\n    console.debug \"SCRIPT: Ending note group '#{@currentNoteGroup.name}'\" if @debugScripts\r\n    clearTimeout(timeout) for timeout in @currentTimeouts\r\n    for module in @currentNoteGroup.modules\r\n      @processNote(note, @currentNoteGroup) for note in module.endNotes()\r\n    Backbone.Mediator.publish 'script:note-group-ended', {} unless @quiet\r\n    @scriptInProgress = false\r\n    @trackScriptCompletionsFromNoteGroup(@currentNoteGroup)\r\n    @currentNoteGroup = null\r\n    unless @noteGroupQueue.length\r\n      @notifyScriptStateChanged()\r\n      @resetThings()\r\n    @ending = false\r\n\r\n  onEndAll: (e) ->\r\n    # Escape was pressed.\r\n    @endAll()\r\n\r\n  endAll: (options) ->\r\n    options ?= {}\r\n    if @scriptInProgress\r\n      return if (not @currentNoteGroup.script.skippable) and (not options.force)\r\n      @endNoteGroup()\r\n\r\n    for noteGroup, i in @noteGroupQueue\r\n      if ((noteGroup.script?.skippable) is false) and not options.force\r\n        @noteGroupQueue = @noteGroupQueue[i..]\r\n        @run()\r\n        @notifyScriptStateChanged()\r\n        return\r\n\r\n      @processNoteGroup(noteGroup)\r\n      for module in noteGroup.modules\r\n        notes = module.skipNotes()\r\n        @processNote(note, noteGroup) for note in notes unless @quiet\r\n      @trackScriptCompletionsFromNoteGroup(noteGroup) unless @quiet\r\n\r\n    @noteGroupQueue = []\r\n\r\n    @resetThings()\r\n    @notifyScriptStateChanged()\r\n\r\n  onNoteGroupTimeout: (noteGroup) ->\r\n    return unless noteGroup is @currentNoteGroup\r\n    @endNoteGroup()\r\n    @run()\r\n\r\n  resetThings: ->\r\n    Backbone.Mediator.publish 'level:enable-controls', {}\r\n    Backbone.Mediator.publish 'level:set-letterbox', { on: false }\r\n\r\n  trackScriptCompletionsFromNoteGroup: (noteGroup) ->\r\n    return unless noteGroup.isLast\r\n    @trackScriptCompletions(noteGroup.scriptID)\r\n\r\n  trackScriptCompletions: (scriptID) ->\r\n    return if @quiet\r\n    @ended.push(scriptID) unless scriptID in @ended\r\n    for script in @scripts\r\n      if script.id is scriptID\r\n        script.lastEnded = new Date()\r\n    @lastScriptEnded = new Date()\r\n    Backbone.Mediator.publish 'script:ended', {scriptID: scriptID}\r\n\r\n  notifyScriptStateChanged: ->\r\n    return if @quiet\r\n    event =\r\n      currentScript: @currentNoteGroup?.scriptID or null\r\n      currentScriptOffset: @currentNoteGroup?.index or 0\r\n    Backbone.Mediator.publish 'script:state-changed', event\r\n"]}