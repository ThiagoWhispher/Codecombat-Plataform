{"version":3,"sources":["app/lib/scripts/SpriteScriptModule.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/scripts/SpriteScriptModule.js","sourcesContent":["ScriptModule = require './ScriptModule'\r\n{me} = require 'core/auth'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class SpritesScriptModule extends ScriptModule\r\n  @neededFor: (noteGroup) ->\r\n    return noteGroup.sprites?.length\r\n\r\n  startNotes: ->\r\n    notes = []\r\n    @moveSums = {}\r\n    @speakingSprites = {}\r\n    for sprite in @noteGroup.sprites or []\r\n      notes.push(@spriteMoveNote sprite) if sprite.move?\r\n    for sprite in @noteGroup.sprites or []\r\n      notes.push(@spriteSayNote(sprite, @noteGroup.script)) if sprite.say?\r\n      notes.push(@spriteSelectNote sprite) if sprite.select?\r\n    return (n for n in notes when n)\r\n\r\n  spriteMoveNote: (sprite, instant=false) ->\r\n    duration = if instant then 0 else sprite.move.duration\r\n    note =\r\n      channel: 'sprite:move'\r\n      event:\r\n        pos: sprite.move.target\r\n        duration: duration\r\n        spriteID: sprite.id\r\n    if duration\r\n      @moveSums[sprite.id] ?= 0\r\n      note.delay = @scrubbingTime + @moveSums[sprite.id]\r\n      @moveSums[sprite.id] += sprite.move.duration\r\n    return note\r\n\r\n  spriteSayNote: (sprite, script) ->\r\n    return if @speakingSprites[sprite.id]\r\n    responses = sprite.say.responses\r\n    responses = [] unless script.skippable or responses\r\n    for response in responses ? []\r\n      response.text = utils.i18n response, 'text'\r\n    text = utils.i18n sprite.say, 'text'\r\n    blurb = utils.i18n sprite.say, 'blurb'\r\n    sound = utils.i18n sprite.say, 'sound'\r\n    note =\r\n      channel: 'level:sprite-dialogue'\r\n      event:\r\n        message: text\r\n        blurb: blurb\r\n        mood: sprite.say.mood or 'explain'\r\n        responses: responses\r\n        spriteID: sprite.id\r\n        sound: sound\r\n    @maybeApplyDelayToNote note\r\n    return note\r\n\r\n  spriteSelectNote: (sprite) ->\r\n    note =\r\n      channel: 'level:select-sprite'\r\n      event:\r\n        thangID: if sprite.select then sprite.id else null\r\n    return note\r\n\r\n  endNotes: ->\r\n    notes = {}\r\n    for sprite in @noteGroup.sprites or []\r\n      notes[sprite.id] ?= {}\r\n      notes[sprite.id]['move'] = (@spriteMoveNote sprite, true) if sprite.move?\r\n      notes[sprite.id]['say'] = { channel: 'level:sprite-clear-dialogue' } if sprite.say?\r\n    noteArray = []\r\n    for spriteID of notes\r\n      for type of notes[spriteID]\r\n        noteArray.push(notes[spriteID][type])\r\n    noteArray\r\n"]}