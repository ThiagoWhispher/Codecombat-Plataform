{"version":3,"sources":["app/lib/surface/CoordinateGrid.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,YAAY,QAAQ,gBAAR;;AAEZ,MAAM,CAAC,OAAP,GAAuB;;;2BACrB,gBACE;IAAA,qBAAqB,cAArB;;;2BAEF,YACE;IAAA,eAAe,cAAf;;;EAEW,wBAAC,OAAD,EAAU,SAAV;IACX;;MACA,UAAW;;IACX,IAAC,OAAD,GAAU,OAAO,CAAC;IAClB,IAAC,MAAD,GAAS,OAAO,CAAC;IACjB,IAAC,UAAD,GAAa,OAAO,CAAC;IACrB,KAAoD,IAAC,OAArD;MAAA,OAAO,CAAC,KAAR,CAAc,IAAC,SAAD,EAAd,EAA2B,iBAA3B;;IACA,KAAmD,IAAC,MAApD;MAAA,OAAO,CAAC,KAAR,CAAc,IAAC,SAAD,EAAd,EAA2B,gBAA3B;;IACA,KAAuD,IAAC,UAAxD;MAAA,OAAO,CAAC,KAAR,CAAc,IAAC,SAAD,EAAd,EAA2B,oBAA3B;;IACA,IAAC,MAAD,CAAO,SAAP;EATW;;2BAWb,UAAS;WACP;EADO;;2BAGT,WAAU;WAAG;EAAH;;2BAEV,QAAO,SAAC,SAAD;AACL;IAAA,aAAa,SAAU,GAAV,IAAgB;IAC7B,cAAc,SAAU,GAAV,IAAgB;IAC9B,IAAC,cAAD,GAAqB,YAAQ,CAAC,SAAT;IACrB,IAAC,UAAD,GAAiB,YAAQ,CAAC,KAAT;IACjB,IAAC,cAAa,CAAC,QAAf,CAAwB,IAAC,UAAzB;IACA,IAAC,cAAa,CAAC,YAAf,GAA8B;IAC9B,IAAC,UAAS,CAAC,KAAX,GAAmB;IACnB,IAAC,UAAS,CAAC,QAAQ,CAAC,cAApB,CAAmC,CAAnC;IACA,IAAC,UAAS,CAAC,QAAQ,CAAC,WAApB,CAAgC,MAAhC;IACA,WAAW,IAAI,CAAC,KAAL,CAAW,aAAa,EAAxB;IACX,WAAW;MAAA,GAAG,CAAH;MAAM,GAAG,CAAT;;IACX,SAAS;MAAA,GAAG,UAAH;MAAe,GAAG,WAAlB;;IACT,WAAW,IAAC,OAAM,CAAC,cAAR,CAAuB,QAAvB;IACX,SAAS,IAAC,OAAM,CAAC,cAAR,CAAuB,MAAvB;IACT,MAAM;MAAA,GAAG,QAAQ,CAAC,CAAZ;MAAe,GAAG,QAAQ,CAAC,CAA3B;;IACN,IAAC,OAAD,GAAU;IACV,aAAa;AACb,WAAM,GAAG,CAAC,CAAJ,IAAS,MAAM,CAAC,CAAtB;MACE,MAAM,IAAC,OAAM,CAAC,cAAR,CAAuB,GAAvB;MACN,IAAC,UAAS,CAAC,QAAQ,CAAC,EAApB,CAAuB,GAAG,CAAC,CAA3B,EAA8B,QAAQ,CAAC,CAAvC,CAAyC,CAAC,EAA1C,CAA6C,GAAG,CAAC,CAAjD,EAAoD,MAAM,CAAC,CAA3D;MACA,IAAG,EAAE,UAAF,GAAe,CAAlB;QACE,IAAQ,YAAQ,CAAC,IAAT,CAAc,GAAG,CAAC,CAAC,CAAC,OAAN,CAAc,CAAd,CAAd,EAAgC,YAAhC,EAA8C,MAA9C;QACR,CAAC,CAAC,SAAF,GAAc;QACd,CAAC,CAAC,YAAF,GAAiB;QACjB,CAAC,CAAC,CAAF,GAAM,GAAG,CAAC;QACV,CAAC,CAAC,CAAF,GAAM,QAAQ,CAAC;QACf,CAAC,CAAC,KAAF,GAAU;QACV,IAAC,OAAM,CAAC,IAAR,CAAa,CAAb,EAPF;;MAQA,GAAG,CAAC,CAAJ,IAAS;MACT,IAAG,OAAM,CAAC,CAAP,UAAW,GAAG,CAAC,EAAf,WAAoB,MAAM,CAAC,CAAP,GAAW,WAAW,CAA1C,CAAH;QACE,GAAG,CAAC,CAAJ,GAAQ,MAAM,CAAC,EADjB;;IAZF;IAcA,aAAa;AACb,WAAM,GAAG,CAAC,CAAJ,IAAS,MAAM,CAAC,CAAtB;MACE,MAAM,IAAC,OAAM,CAAC,cAAR,CAAuB,GAAvB;MACN,IAAC,UAAS,CAAC,QAAQ,CAAC,EAApB,CAAuB,QAAQ,CAAC,CAAhC,EAAmC,GAAG,CAAC,CAAvC,CAAyC,CAAC,EAA1C,CAA6C,MAAM,CAAC,CAApD,EAAuD,GAAG,CAAC,CAA3D;MACA,IAAG,EAAE,UAAF,GAAe,CAAlB;QACE,IAAQ,YAAQ,CAAC,IAAT,CAAc,GAAG,CAAC,CAAC,CAAC,OAAN,CAAc,CAAd,CAAd,EAAgC,YAAhC,EAA8C,MAA9C;QACR,CAAC,CAAC,SAAF,GAAc;QACd,CAAC,CAAC,YAAF,GAAiB;QACjB,CAAC,CAAC,CAAF,GAAM;QACN,CAAC,CAAC,CAAF,GAAM,GAAG,CAAC;QACV,CAAC,CAAC,KAAF,GAAU;QACV,IAAC,OAAM,CAAC,IAAR,CAAa,CAAb,EAPF;;MAQA,GAAG,CAAC,CAAJ,IAAS;MACT,IAAG,OAAM,CAAC,CAAP,WAAW,GAAG,CAAC,EAAf,YAAoB,MAAM,CAAC,CAAP,GAAW,WAAW,CAA1C,CAAH;QACE,GAAG,CAAC,CAAJ,GAAQ,MAAM,CAAC,EADjB;;IAZF;IAcA,IAAC,UAAS,CAAC,QAAQ,CAAC,SAApB;IACA,SAAS;MAAA,GAAG,QAAQ,CAAC,CAAZ;MAAe,GAAG,MAAM,CAAC,CAAzB;MAA4B,OAAO,MAAM,CAAC,CAAP,GAAW,QAAQ,CAAC,CAAvD;MAA0D,QAAQ,QAAQ,CAAC,CAAT,GAAa,MAAM,CAAC,CAAtF;;IACT,wBAAc,MAAM,CAAE,eAAR,IAAkB,MAAM,CAAC,MAAvC;AAAA;;WACA,IAAC,cAAa,CAAC,KAAf,CAAqB,MAAM,CAAC,CAA5B,EAA+B,MAAM,CAAC,CAAtC,EAAyC,MAAM,CAAC,KAAhD,EAAuD,MAAM,CAAC,MAA9D;EAlDK;;2BAoDP,WAAU;AACR;IAAA,IAAU,IAAC,YAAD,EAAV;AAAA;;IACA,IAAC,MAAK,CAAC,QAAP,CAAgB,IAAC,cAAjB;AACA;AAAA;SAAA;;mBAAA,IAAC,UAAS,CAAC,QAAX,CAAoB,KAApB;AAAA;;EAHQ;;2BAKV,WAAU;AACR;IAAA,KAAc,IAAC,YAAD,EAAd;AAAA;;IACA,IAAC,MAAK,CAAC,WAAP,CAAmB,IAAC,cAApB;AACA;AAAA;SAAA;;mBAAA,IAAC,UAAS,CAAC,WAAX,CAAuB,KAAvB;AAAA;;EAHQ;;2BAKV,cAAa;AACX;WAAA;EADW;;2BAGb,eAAc,SAAC,CAAD;;;QACZ,CAAC,CAAE;;;IACH,IAAG,IAAC,YAAD,EAAH;aAAuB,IAAC,SAAD,GAAvB;KAAA;aAAwC,IAAC,SAAD,GAAxC;;EAFY;;;;GAxF8B","file":"public/javascripts/app/lib/surface/CoordinateGrid.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\n\r\nmodule.exports = class CoordinateGrid extends CocoClass\r\n  subscriptions:\r\n    'level:toggle-grid': 'onToggleGrid'\r\n\r\n  shortcuts:\r\n    'ctrl+g, âŒ˜+g': 'onToggleGrid'\r\n\r\n  constructor: (options, worldSize) ->\r\n    super()\r\n    options ?= {}\r\n    @camera = options.camera\r\n    @layer = options.layer\r\n    @textLayer = options.textLayer\r\n    console.error @toString(), 'needs a camera.' unless @camera\r\n    console.error @toString(), 'needs a layer.' unless @layer\r\n    console.error @toString(), 'needs a textLayer.' unless @textLayer\r\n    @build worldSize\r\n\r\n  destroy: ->\r\n    super()\r\n\r\n  toString: -> '<CoordinateGrid>'\r\n\r\n  build: (worldSize) ->\r\n    worldWidth = worldSize[0] or 80\r\n    worldHeight = worldSize[1] or 68\r\n    @gridContainer = new createjs.Container()\r\n    @gridShape = new createjs.Shape()\r\n    @gridContainer.addChild @gridShape\r\n    @gridContainer.mouseEnabled = false\r\n    @gridShape.alpha = 0.125\r\n    @gridShape.graphics.setStrokeStyle 1\r\n    @gridShape.graphics.beginStroke 'blue'\r\n    gridSize = Math.round(worldWidth / 20)\r\n    wopStart = x: 0, y: 0\r\n    wopEnd = x: worldWidth, y: worldHeight\r\n    supStart = @camera.worldToSurface wopStart\r\n    supEnd = @camera.worldToSurface wopEnd\r\n    wop = x: wopStart.x, y: wopStart.y\r\n    @labels = []\r\n    linesDrawn = 0\r\n    while wop.x <= wopEnd.x\r\n      sup = @camera.worldToSurface wop\r\n      @gridShape.graphics.mt(sup.x, supStart.y).lt(sup.x, supEnd.y)\r\n      if ++linesDrawn % 2\r\n        t = new createjs.Text(wop.x.toFixed(0), '16px Arial', 'blue')\r\n        t.textAlign = 'center'\r\n        t.textBaseline = 'bottom'\r\n        t.x = sup.x\r\n        t.y = supStart.y\r\n        t.alpha = 0.75\r\n        @labels.push t\r\n      wop.x += gridSize\r\n      if wopEnd.x < wop.x <= wopEnd.x - gridSize / 2\r\n        wop.x = wopEnd.x\r\n    linesDrawn = 0\r\n    while wop.y <= wopEnd.y\r\n      sup = @camera.worldToSurface wop\r\n      @gridShape.graphics.mt(supStart.x, sup.y).lt(supEnd.x, sup.y)\r\n      if ++linesDrawn % 2\r\n        t = new createjs.Text(wop.y.toFixed(0), '16px Arial', 'blue')\r\n        t.textAlign = 'left'\r\n        t.textBaseline = 'middle'\r\n        t.x = 0\r\n        t.y = sup.y\r\n        t.alpha = 0.75\r\n        @labels.push t\r\n      wop.y += gridSize\r\n      if wopEnd.y < wop.y <= wopEnd.y - gridSize / 2\r\n        wop.y = wopEnd.y\r\n    @gridShape.graphics.endStroke()\r\n    bounds = x: supStart.x, y: supEnd.y, width: supEnd.x - supStart.x, height: supStart.y - supEnd.y\r\n    return unless bounds?.width and bounds.height\r\n    @gridContainer.cache bounds.x, bounds.y, bounds.width, bounds.height\r\n\r\n  showGrid: ->\r\n    return if @gridShowing()\r\n    @layer.addChild @gridContainer\r\n    @textLayer.addChild label for label in @labels\r\n\r\n  hideGrid: ->\r\n    return unless @gridShowing()\r\n    @layer.removeChild @gridContainer\r\n    @textLayer.removeChild label for label in @labels\r\n\r\n  gridShowing: ->\r\n    @gridContainer?.parent?\r\n\r\n  onToggleGrid: (e) ->\r\n    e?.preventDefault?()\r\n    if @gridShowing() then @hideGrid() else @showGrid()\r\n\r\n"]}