{"version":3,"sources":["app/lib/surface/CameraBorder.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,MAAM,CAAC,OAAP,GAAuB;;;yBACrB,gBAAe;;yBAEf,gBAAe;;EAEF,sBAAC,OAAD;AACX;IAAA;IACA,IAAC,WAAD;IACA,IAAC,aAAD,GAAgB,IAAC,cAAD,GAAiB;IACjC,IAAC,aAAD,CAAc,OAAO,CAAC,MAAtB;AACA;AAAA;;MAAA,QAAQ,CAAC,QAAQ,CAAC,SAAlB,CAA4B,OAA5B,EAAqC,IAAE,MAAvC,EAA8C,IAA9C;AAAA;EALW;;yBAOb,UAAS;AACP;AAAA;AAAA;SAAA;;mBAAA,QAAQ,CAAC,QAAQ,CAAC,WAAlB,CAA8B,OAA9B,EAAuC,IAAE,MAAzC,EAAgD,IAAhD;AAAA;;EADO;;yBAGT,eAAc,SAAC,MAAD;AACZ;IAAA,IAAU,CAAC,CAAC,OAAF,CAAU,MAAV,EAAkB,IAAC,OAAnB,CAAV;AAAA;;IACA,IAAC,OAAD,GAAU;IACV,IAAG,IAAC,OAAJ;MACE,IAAC,YAAD,CAAa,IAAC,OAAd;MACA,IAAC,OAAD,GAAU,KAFZ;;IAGA,KAAc,IAAC,OAAf;AAAA;;IACA,IAAC,SAAD,CAAU,IAAC,OAAD,GAAc,YAAQ,CAAC,KAAT,EAAxB;IACA,QAAQ;IACR,IAAI;AACJ,WAAM,CAAN;MACE,UAAU,IAAI,CAAC,IAAI,CAAC,IAAE,KAAH,CAAL,CAAJ,GAAsB;MAChC,IAAC,OAAM,CAAC,QAAQ,CAAC,cAAjB,CAAgC,CAAhC,EAAmC,OAAnC,CAA2C,CAAC,WAA5C,CAAwD,gBAAc,OAAd,GAAsB,GAA9E,CAAiF,CAAC,QAAlF,CAA2F,MAAM,CAAC,CAAlG,EAAqG,MAAM,CAAC,CAA5G,EAA+G,MAAM,CAAC,KAAtH,EAA6H,MAAM,CAAC,MAApI;MACA,KAAK;IAHP;WAIA,IAAC,OAAM,CAAC,KAAR,CAAc,MAAM,CAAC,CAArB,EAAwB,MAAM,CAAC,CAA/B,EAAkC,MAAM,CAAC,KAAzC,EAAgD,MAAM,CAAC,MAAvD;EAdY;;;;GAf4B,QAAQ,CAAC","file":"public/javascripts/app/lib/surface/CameraBorder.js","sourcesContent":["module.exports = class CameraBorder extends createjs.Container\r\n  layerPriority: 100\r\n\r\n  subscriptions: {}\r\n\r\n  constructor: (options) ->\r\n    super()\r\n    @initialize()\r\n    @mouseEnabled = @mouseChildren = false\r\n    @updateBounds options.bounds\r\n    Backbone.Mediator.subscribe(channel, @[func], @) for channel, func of @subscriptions\r\n\r\n  destroy: ->\r\n    Backbone.Mediator.unsubscribe(channel, @[func], @) for channel, func of @subscriptions\r\n\r\n  updateBounds: (bounds) ->\r\n    return if _.isEqual bounds, @bounds\r\n    @bounds = bounds\r\n    if @border\r\n      @removeChild @border\r\n      @border = null\r\n    return unless @bounds\r\n    @addChild @border = new createjs.Shape()\r\n    width = 20\r\n    i = width\r\n    while i\r\n      opacity = 3 * (1 - (i/width)) / width\r\n      @border.graphics.setStrokeStyle(i, 'round').beginStroke(\"rgba(0,0,0,#{opacity})\").drawRect(bounds.x, bounds.y, bounds.width, bounds.height)\r\n      i -= 1\r\n    @border.cache bounds.x, bounds.y, bounds.width, bounds.height\r\n"]}