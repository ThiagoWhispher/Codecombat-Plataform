{"version":3,"sources":["app/lib/surface/Lank.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/surface/Lank.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\n{createProgressBar} = require './sprite_utils'\r\nCamera = require './Camera'\r\nMark = require './Mark'\r\nLabel = require './Label'\r\nAudioPlayer = require 'lib/AudioPlayer'\r\n{me} = require 'core/auth'\r\nThangType = require 'models/ThangType'\r\n\r\n# We'll get rid of this once level's teams actually have colors\r\nhealthColors =\r\n  ogres: [64, 128, 212]\r\n  humans: [255, 0, 0]\r\n  neutral: [64, 212, 128]\r\n\r\n# Sprite: EaselJS-based view/controller for Thang model\r\nmodule.exports = Lank = class Lank extends CocoClass\r\n  thangType: null # ThangType instance\r\n\r\n  sprite: null\r\n\r\n  healthBar: null\r\n  marks: null\r\n  labels: null\r\n  ranges: null\r\n\r\n  options:\r\n    groundLayer: null\r\n    textLayer: null\r\n    floatingLayer: null\r\n    thang: null\r\n    camera: null\r\n    showInvisible: false\r\n    preloadSounds: true\r\n\r\n  possessed: false\r\n  flipped: false\r\n  flippedCount: 0\r\n  actionQueue: null\r\n  actions: null\r\n  rotation: 0\r\n\r\n  # Scale numbers\r\n  scaleFactorX: 1 # Current scale adjustment. This can change rapidly.\r\n  scaleFactorY: 1\r\n  targetScaleFactorX: 1 # What the scaleFactor is going toward during a tween.\r\n  targetScaleFactorY: 1\r\n\r\n  # ACTION STATE\r\n  # Actions have relations. If you say 'move', 'move_side' may play because of a direction\r\n  # relationship, and if you say 'cast', 'cast_begin' may happen first, or 'cast_end' after.\r\n  currentRootAction: null  # action that, in general, is playing or will play\r\n  currentAction: null  # related action that is right now playing\r\n\r\n  subscriptions:\r\n    'level:sprite-dialogue': 'onDialogue'\r\n    'level:sprite-clear-dialogue': 'onClearDialogue'\r\n    'level:set-letterbox': 'onSetLetterbox'\r\n    'surface:ticked': 'onSurfaceTicked'\r\n    'sprite:move': 'onMove'\r\n\r\n  constructor: (@thangType, options={}) ->\r\n    super()\r\n    spriteName = @thangType.get('name')\r\n    @isMissile = /(Missile|Arrow|Spear|Bolt)/.test(spriteName) and not /(Tower|Charge)/.test(spriteName)\r\n    @options = _.extend($.extend(true, {}, @options), options)\r\n    @gameUIState = @options.gameUIState\r\n    @handleEvents = @options.handleEvents\r\n    @setThang @options.thang\r\n    @setColorConfig()\r\n\r\n    console.error @toString(), 'has no ThangType!' unless @thangType\r\n\r\n    # this is a stub, use @setSprite to swap it out for something else later\r\n    @sprite = new createjs.Container\r\n\r\n    @actionQueue = []\r\n    @marks = {}\r\n    @labels = {}\r\n    @ranges = []\r\n    @handledDisplayEvents = {}\r\n    @age = 0\r\n    @stillLoading = true\r\n    if @thangType.isFullyLoaded() then @onThangTypeLoaded() else @listenToOnce(@thangType, 'sync', @onThangTypeLoaded)\r\n\r\n  toString: -> \"<Lank: #{@thang?.id}>\"\r\n\r\n  setColorConfig: ->\r\n    return unless colorConfig = @thang?.getLankOptions?().colorConfig\r\n    if @thangType.get('original') is ThangType.heroes['code-ninja']\r\n      unlockedLevels = me.levels()\r\n      if '5522b98685fca53105544b53' in unlockedLevels  # vital-powers, start of course 5\r\n        colorConfig.belt = {hue: 0.4, saturation: 0.75, lightness: 0.25}\r\n      else if '56fc56ac7cd2381f00d758b4' in unlockedLevels  # friend-and-foe, start of course 3\r\n        colorConfig.belt = {hue: 0.067, saturation: 0.75, lightness: 0.5}\r\n      else\r\n        colorConfig.belt = {hue: 0.167, saturation: 0.75, lightness: 0.4}\r\n    @options.colorConfig = colorConfig\r\n\r\n  onThangTypeLoaded: ->\r\n    @stillLoading = false\r\n    if @options.preloadSounds\r\n      for trigger, sounds of @thangType.get('soundTriggers') or {} when trigger isnt 'say'\r\n        AudioPlayer.preloadSoundReference sound for sound in sounds when sound\r\n    if @thangType.get('raster')\r\n      @actions = {}\r\n      @isRaster = true\r\n    else\r\n      @actions = @thangType.getActions()\r\n      @createMarks()\r\n\r\n    @scaleFactorX = @thang.scaleFactorX if @thang?.scaleFactorX?\r\n    @scaleFactorX = @thang.scaleFactor if @thang?.scaleFactor?\r\n    @scaleFactorY = @thang.scaleFactorY if @thang?.scaleFactorY?\r\n    @scaleFactorY = @thang.scaleFactor if @thang?.scaleFactor?\r\n    @updateAction() unless @currentAction\r\n\r\n  setSprite: (newSprite) ->\r\n    if @sprite\r\n      @sprite.off 'animationend', @playNextAction\r\n      @sprite.destroy?()\r\n      if parent = @sprite.parent\r\n        parent.removeChild @sprite\r\n        if parent.spriteSheet is newSprite.spriteSheet\r\n          parent.addChild newSprite\r\n\r\n    # get the lank to update things\r\n    for prop in ['lastPos', 'currentRootAction']\r\n      delete @[prop]\r\n\r\n    @sprite = newSprite\r\n    if @thang and @thang.stateChanged is false\r\n      @thang.stateChanged = true\r\n    @configureMouse()\r\n    @sprite.on 'animationend', @playNextAction\r\n    @playAction(@currentAction) if @currentAction and not @stillLoading\r\n    @trigger 'new-sprite', @sprite\r\n\r\n  ##################################################\r\n  # QUEUEING AND PLAYING ACTIONS\r\n\r\n  queueAction: (action) ->\r\n    # The normal way to have an action play\r\n    action = @actions[action] if _.isString(action)\r\n    action ?= @actions.idle\r\n    @actionQueue = []\r\n    @actionQueue.push @currentRootAction.relatedActions.end if @currentRootAction?.relatedActions?.end\r\n    @actionQueue.push action.relatedActions.begin if action.relatedActions?.begin\r\n    @actionQueue.push action\r\n    if action.goesTo and nextAction = @actions[action.goesTo]\r\n      @actionQueue.push nextAction if nextAction\r\n    @currentRootAction = action\r\n    @playNextAction()\r\n\r\n  onSurfaceTicked: (e) -> @age += e.dt\r\n\r\n  playNextAction: =>\r\n    return if @destroyed\r\n    @playAction(@actionQueue.splice(0, 1)[0]) if @actionQueue.length\r\n\r\n  playAction: (action) ->\r\n    return if @isRaster\r\n    @currentAction = action\r\n    return @hide() unless action.animation or action.container or action.relatedActions or action.goesTo\r\n    @show()\r\n    return @updateActionDirection() unless action.animation or action.container or action.goesTo\r\n    return if @sprite.placeholder\r\n    m = if action.container then 'gotoAndStop' else 'gotoAndPlay'\r\n    @sprite[m]?(action.name)\r\n    @updateScale()\r\n    @updateRotation()\r\n\r\n  hide: ->\r\n    @hiding = true\r\n    @updateAlpha()\r\n\r\n  show: ->\r\n    @hiding = false\r\n    @updateAlpha()\r\n\r\n  stop: ->\r\n    @sprite?.stop?()\r\n    mark.stop() for name, mark of @marks\r\n    @stopped = true\r\n\r\n  play: ->\r\n    @sprite?.play?()\r\n    mark.play() for name, mark of @marks\r\n    @stopped = false\r\n\r\n  update: (frameChanged) ->\r\n    # Gets the sprite to reflect what the current state of the thangs and surface are\r\n    return false if @stillLoading\r\n    thangUnchanged = @thang and @thang.stateChanged is false\r\n    if (frameChanged and not thangUnchanged) or (@thang and @thang.bobHeight) or @notOfThisWorld\r\n      @updatePosition()\r\n    return false if thangUnchanged\r\n    frameChanged = frameChanged or @targetScaleFactorX isnt @scaleFactorX or @targetScaleFactorY isnt @scaleFactorY\r\n    if frameChanged\r\n      @handledDisplayEvents = {}\r\n      @updateScale()  # must happen before rotation\r\n      @updateAlpha()\r\n      @updateRotation()\r\n      @updateAction()\r\n      @updateStats()\r\n      @updateGold()\r\n      @showAreaOfEffects()\r\n      @showTextEvents()\r\n      @updateHealthBar()\r\n    @updateMarks()\r\n    @updateLabels()\r\n    @thang.stateChanged = false if @thang and @thang.stateChanged is true\r\n    return true\r\n\r\n  showAreaOfEffects: ->\r\n    return unless @thang?.currentEvents\r\n    for event in @thang.currentEvents\r\n      continue unless _.string.startsWith event, 'aoe-'\r\n      continue if @handledDisplayEvents[event]\r\n      @handledDisplayEvents[event] = true\r\n      args = JSON.parse(event[4...])\r\n      key = 'aoe-' + JSON.stringify(args[2..])\r\n      layerName = args[6] ? 'ground'  # Can also specify 'floating'.\r\n      unless layer = @options[layerName + 'Layer']\r\n        console.error \"#{@thang.id} couldn't find layer #{layerName}Layer for AOE effect #{key}; using ground layer.\"\r\n        layer = @options.groundLayer\r\n\r\n      unless key in layer.spriteSheet.getAnimations()\r\n        circle = new createjs.Shape()\r\n        radius = args[2] * Camera.PPM\r\n        if args.length is 4\r\n          circle.graphics.beginFill(args[3]).drawCircle(0, 0, radius)\r\n        else\r\n          startAngle = args[4] or 0\r\n          endAngle = args[5] or 2 * Math.PI\r\n          if startAngle is endAngle\r\n            startAngle = 0\r\n            endAngle = 2 * Math.PI\r\n          circle.graphics.beginFill(args[3])\r\n            .lineTo(0, 0)\r\n            .lineTo(radius * Math.cos(startAngle), radius * Math.sin(startAngle))\r\n            .arc(0, 0, radius, startAngle, endAngle)\r\n            .lineTo(0, 0)\r\n        layer.addCustomGraphic(key, circle, [-radius, -radius, radius*2, radius*2])\r\n\r\n      circle = new createjs.Sprite(layer.spriteSheet)\r\n      circle.gotoAndStop(key)\r\n      pos = @options.camera.worldToSurface {x: args[0], y: args[1]}\r\n      circle.x = pos.x\r\n      circle.y = pos.y\r\n      resFactor = layer.resolutionFactor\r\n      circle.scaleY = @options.camera.y2x * 0.7 / resFactor\r\n      circle.scaleX = 0.7 / resFactor\r\n      circle.alpha = 0.2\r\n      layer.addChild circle\r\n      createjs.Tween.get(circle)\r\n        .to({alpha: 0.6, scaleY: @options.camera.y2x / resFactor, scaleX: 1 / resFactor}, 100, createjs.Ease.circOut)\r\n        .to({alpha: 0, scaleY: 0, scaleX: 0}, 700, createjs.Ease.circIn)\r\n        .call =>\r\n          return if @destroyed\r\n          layer.removeChild circle\r\n          delete @handledDisplayEvents[event]\r\n\r\n  showTextEvents: ->\r\n    return unless @thang?.currentEvents\r\n    for event in @thang.currentEvents\r\n      continue unless _.string.startsWith event, 'text-'\r\n      continue if @handledDisplayEvents[event]\r\n      @handledDisplayEvents[event] = true\r\n      options = JSON.parse(event[5...])\r\n      label = new createjs.Text options.text, \"bold #{options.size or 16}px Arial\", options.color or '#FFF'\r\n      shadowColor = {humans: '#F00', ogres: '#00F', neutral: '#0F0', common: '#0F0'}[@thang.team] ? '#000'\r\n      label.shadow = new createjs.Shadow shadowColor, 1, 1, 3\r\n      offset = @getOffset 'aboveHead'\r\n      [label.x, label.y] = [@sprite.x + offset.x - label.getMeasuredWidth() / 2, @sprite.y + offset.y]\r\n      @options.textLayer.addChild label\r\n      window.labels ?= []\r\n      window.labels.push label\r\n      label.alpha = 0\r\n      createjs.Tween.get(label)\r\n        .to({y: label.y-2, alpha: 1}, 200, createjs.Ease.linear)\r\n        .to({y: label.y-12}, 1000, createjs.Ease.linear)\r\n        .to({y: label.y-22, alpha: 0}, 1000, createjs.Ease.linear)\r\n        .call =>\r\n          return if @destroyed\r\n          @options.textLayer.removeChild label\r\n\r\n  getBobOffset: ->\r\n    return 0 unless @thang.bobHeight\r\n    return @lastBobOffset if @stopped\r\n    return @lastBobOffset = @thang.bobHeight * (1 + Math.sin(@age * Math.PI / @thang.bobTime))\r\n\r\n  getWorldPosition: ->\r\n    p1 = if @possessed then @shadow.pos else @thang.pos\r\n    if bobOffset = @getBobOffset()\r\n      p1 = p1.copy?() or _.clone(p1)\r\n      p1.z += bobOffset\r\n    x: p1.x, y: p1.y, z: if @thang.isLand then 0 else p1.z - @thang.depth / 2\r\n\r\n  updatePosition: (whileLoading=false) ->\r\n    return if @stillLoading and not whileLoading\r\n    return unless @thang?.pos and @options.camera?\r\n    [p0, p1] = [@lastPos, @thang.pos]\r\n    return if p0 and p0.x is p1.x and p0.y is p1.y and p0.z is p1.z and not @thang.bobHeight\r\n    wop = @getWorldPosition()\r\n    sup = @options.camera.worldToSurface wop\r\n    [@sprite.x, @sprite.y] = [sup.x, sup.y]\r\n    @lastPos = p1.copy?() or _.clone(p1) unless whileLoading\r\n    @hasMoved = true\r\n    if @thangType.get('name') is 'Flag' and not @notOfThisWorld\r\n      # Let the pending flags know we're here (but not this call stack, they need to delete themselves, and we may be iterating sprites).\r\n      _.defer => Backbone.Mediator.publish 'surface:flag-appeared', sprite: @\r\n\r\n  updateScale: (force) ->\r\n    return unless @sprite\r\n    if @thangType.get('matchWorldDimensions') and @thang and @options.camera\r\n      if force or @thang.width isnt @lastThangWidth or @thang.height isnt @lastThangHeight or @thang.rotation isnt @lastThangRotation\r\n        bounds = @sprite.getBounds()\r\n        return unless bounds\r\n        @sprite.scaleX = @thang.width  * Camera.PPM / bounds.width  * (@options.camera.y2x + (1 - @options.camera.y2x) * Math.abs Math.cos @thang.rotation)\r\n        @sprite.scaleY = @thang.height * Camera.PPM / bounds.height * (@options.camera.y2x + (1 - @options.camera.y2x) * Math.abs Math.sin @thang.rotation)\r\n        @sprite.regX = bounds.width  * 3 / 4  # Why not / 2? I don't know.\r\n        @sprite.regY = bounds.height * 3 / 4  # Why not / 2? I don't know.\r\n\r\n        unless @thang.spriteName is 'Beam'\r\n          @sprite.scaleX *= @thangType.get('scale') ? 1\r\n          @sprite.scaleY *= @thangType.get('scale') ? 1\r\n        [@lastThangWidth, @lastThangHeight, @lastThangRotation] = [@thang.width, @thang.height, @thang.rotation]\r\n      return\r\n\r\n    scaleX = scaleY = 1\r\n\r\n    if @isMissile\r\n      # Scales the arrow so it appears longer when flying parallel to horizon.\r\n      # To do that, we convert angle to [0, 90] (mirroring half-planes twice), then make linear function out of it:\r\n      # (a - x) / a: equals 1 when x = 0, equals 0 when x = a, monotonous in between. That gives us some sort of\r\n      # degenerative multiplier.\r\n      # For our purposes, a = 90 - the direction straight upwards.\r\n      # Then we use r + (1 - r) * x function with r = 0.5, so that\r\n      # maximal scale equals 1 (when x is at it's maximum) and minimal scale is 0.5.\r\n      # Notice that the value of r is empirical.\r\n      angle = @getRotation()\r\n      angle = -angle if angle < 0\r\n      angle = 180 - angle if angle > 90\r\n      scaleX = 0.5 + 0.5 * (90 - angle) / 90\r\n\r\n#    console.error 'No thang for', @ unless @thang\r\n    @sprite.scaleX = @sprite.baseScaleX * @scaleFactorX * scaleX\r\n    @sprite.scaleY = @sprite.baseScaleY * @scaleFactorY * scaleY\r\n\r\n    newScaleFactorX = @thang?.scaleFactorX ? @thang?.scaleFactor ? 1\r\n    newScaleFactorY = @thang?.scaleFactorY ? @thang?.scaleFactor ? 1\r\n    if @layer?.name is 'Land' or @thang?.spriteName is 'Beam'\r\n      @scaleFactorX = newScaleFactorX\r\n      @scaleFactorY = newScaleFactorY\r\n    else if @thang and (newScaleFactorX isnt @targetScaleFactorX or newScaleFactorY isnt @targetScaleFactorY)\r\n      @targetScaleFactorX = newScaleFactorX\r\n      @targetScaleFactorY = newScaleFactorY\r\n      createjs.Tween.removeTweens(@)\r\n      createjs.Tween.get(@).to({scaleFactorX: @targetScaleFactorX, scaleFactorY: @targetScaleFactorY}, 2000, createjs.Ease.elasticOut)\r\n\r\n  updateAlpha: ->\r\n    @sprite.alpha = if @hiding then 0 else 1\r\n    return unless @thang?.alpha?\r\n    return if @sprite.alpha is @thang.alpha\r\n    @sprite.alpha = @thang.alpha\r\n    if @options.showInvisible\r\n      @sprite.alpha = Math.max 0.5, @sprite.alpha\r\n    mark.updateAlpha @thang.alpha for name, mark of @marks\r\n    @healthBar?.alpha = @thang.alpha\r\n\r\n  updateRotation: (sprite) ->\r\n    rotationType = @thangType.get('rotationType')\r\n    return if rotationType is 'fixed'\r\n    rotation = @getRotation()\r\n    if @isMissile and @thang.velocity\r\n      # Rotates the arrow to see it arc based on velocity.z.\r\n      # Notice that rotation here does not affect thang's state - it is just the effect.\r\n      # Thang's rotation is always pointing where it is heading.\r\n      vz = @thang.velocity.z\r\n      if vz and speed = @thang.velocity.magnitude(true)\r\n        vx = @thang.velocity.x\r\n        heading = @thang.velocity.heading()\r\n        xFactor = Math.cos heading\r\n        zFactor = vz / Math.sqrt(vz * vz + vx * vx)\r\n        rotation -= xFactor * zFactor * 45\r\n    sprite ?= @sprite\r\n    return sprite.rotation = rotation if rotationType is 'free' or not rotationType\r\n    @updateIsometricRotation(rotation, sprite)\r\n\r\n  getRotation: ->\r\n    thang = if @possessed then @shadow else @thang\r\n    return @rotation if not thang?.rotation\r\n    rotation = thang?.rotation\r\n    rotation = (360 - (rotation * 180 / Math.PI) % 360) % 360\r\n    rotation -= 360 if rotation > 180\r\n    rotation\r\n\r\n  updateIsometricRotation: (rotation, sprite) ->\r\n    return unless @currentAction\r\n    return if _.string.endsWith(@currentAction.name, 'back')\r\n    return if _.string.endsWith(@currentAction.name, 'fore')\r\n    sprite.scaleX *= -1 if Math.abs(rotation) >= 90\r\n\r\n  ##################################################\r\n  updateAction: ->\r\n    return if @isRaster or @actionLocked\r\n    action = @determineAction()\r\n    isDifferent = action isnt @currentRootAction or action is null\r\n    if not action and @thang?.actionActivated and not @stopLogging\r\n      console.error 'action is', action, 'for', @thang?.id, 'from', @currentRootAction, @thang.action, @thang.getActionName?()\r\n      @stopLogging = true\r\n    @queueAction(action) if action and (isDifferent or (@thang?.actionActivated and action.name isnt 'move'))\r\n    @updateActionDirection()\r\n\r\n  determineAction: ->\r\n    action = null\r\n    thang = if @possessed then @shadow else @thang\r\n    action = thang.action if thang?.acts\r\n    action ?= @currentRootAction.name if @currentRootAction?\r\n    action ?= 'idle'\r\n    unless @actions[action]?\r\n      @warnedFor ?= {}\r\n      console.warn 'Cannot show action', action, 'for', @thangType.get('name'), 'because it DNE' unless @warnedFor[action]\r\n      @warnedFor[action] = true\r\n      return if @action is 'idle' then null else 'idle'\r\n    #action = 'break' if @actions.break? and @thang?.erroredOut  # This makes it looks like it's dead when it's not: bad in Brawlwood.\r\n    action = 'die' if @actions.die? and thang?.health? and thang.health <= 0\r\n    @actions[action]\r\n\r\n  updateActionDirection: (@wallGrid=null) ->\r\n    # wallGrid is only needed for wall grid face updates; should refactor if this works\r\n    return unless action = @getActionDirection()\r\n    @playAction(action) if action isnt @currentAction\r\n\r\n  lockAction: -> (@actionLocked=true)\r\n\r\n  getActionDirection: (rootAction=null) ->\r\n    rootAction ?= @currentRootAction\r\n    return null unless relatedActions = rootAction?.relatedActions ? {}\r\n    rotation = @getRotation()\r\n    if relatedActions['111111111111']  # has grid-surrounding-wall-based actions\r\n      if @wallGrid\r\n        @hadWallGrid = true\r\n        action = ''\r\n        tileSize = 4\r\n        [gx, gy] = [@thang.pos.x, @thang.pos.y]\r\n        for y in [gy + tileSize, gy, gy - tileSize, gy - tileSize * 2]\r\n          for x in [gx - tileSize, gx, gx + tileSize]\r\n            if x >= 0 and y >= 0 and x < @wallGrid.width and y < @wallGrid.height\r\n              wallThangs = @wallGrid.contents x, y\r\n            else\r\n              wallThangs = ['outside of the map yo']\r\n            if wallThangs.length is 0\r\n              if y is gy and x is gx\r\n                action += '1'  # the center wall we're placing\r\n              else\r\n                action += '0'\r\n            else if wallThangs.length is 1\r\n              action += '1'\r\n            else\r\n              console.error 'Overlapping walls at', x, y, '...', wallThangs\r\n              action += '1'\r\n        matchedAction = '111111111111'\r\n        for relatedAction of relatedActions\r\n          if action.match(relatedAction.replace(/\\?/g, '.'))\r\n            matchedAction = relatedAction\r\n            break\r\n        #console.log 'returning', matchedAction, 'for', @thang.id, 'at', gx, gy\r\n        return relatedActions[matchedAction]\r\n      else if @hadWallGrid\r\n        return null\r\n      else\r\n        keys = _.keys relatedActions\r\n        index = Math.max 0, Math.floor((179 + rotation) / 360 * keys.length)\r\n        #console.log 'Showing', relatedActions[keys[index]]\r\n        return relatedActions[keys[index]]\r\n    value = Math.abs(rotation)\r\n    direction = null\r\n    direction = 'side' if value <= 45 or value >= 135\r\n    direction = 'fore' if 135 > rotation > 45\r\n    direction = 'back' if -135 < rotation < -45\r\n    relatedActions[direction]\r\n\r\n  updateStats: ->\r\n    return unless @thang and @thang.health isnt @lastHealth\r\n    @lastHealth = @thang.health\r\n    if bar = @healthBar\r\n      healthPct = Math.max(@thang.health / @thang.maxHealth, 0)\r\n      bar.scaleX = healthPct / @options.floatingLayer.resolutionFactor\r\n    if @thang.showsName\r\n      @setNameLabel(if @thang.health <= 0 then '' else @thang.id)\r\n    else if @options.playerName\r\n      @setNameLabel @options.playerName\r\n\r\n  configureMouse: ->\r\n    @sprite.cursor = 'pointer' if @thang?.isSelectable\r\n    @sprite.mouseEnabled = @sprite.mouseChildren = false unless @thang?.isSelectable or @thang?.isLand\r\n    if @sprite.mouseEnabled\r\n      @sprite.on 'mousedown', @onMouseEvent, @, false, 'sprite:mouse-down'\r\n      @sprite.on 'click',     @onMouseEvent, @, false, 'sprite:clicked'\r\n      @sprite.on 'dblclick',  @onMouseEvent, @, false, 'sprite:double-clicked'\r\n      @sprite.on 'pressmove', @onMouseEvent, @, false, 'sprite:dragged'\r\n      @sprite.on 'pressup',   @onMouseEvent, @, false, 'sprite:mouse-up'\r\n\r\n  onMouseEvent: (e, ourEventName) ->\r\n    return if @letterboxOn or not @sprite\r\n    p = @sprite\r\n    p = p.parent while p.parent\r\n    newEvent = sprite: @, thang: @thang, originalEvent: e, canvas: p.canvas\r\n    @trigger ourEventName, newEvent\r\n    Backbone.Mediator.publish ourEventName, newEvent\r\n    @gameUIState.trigger(ourEventName, newEvent)\r\n\r\n  addHealthBar: ->\r\n    return unless @thang?.health? and 'health' in (@thang?.hudProperties ? []) and @options.floatingLayer\r\n    team = @thang?.team or 'neutral'\r\n    key = \"#{team}-health-bar\"\r\n\r\n    unless key in @options.floatingLayer.spriteSheet.getAnimations()\r\n      healthColor = healthColors[team]\r\n      bar = createProgressBar(healthColor)\r\n      @options.floatingLayer.addCustomGraphic(key, bar, bar.bounds)\r\n\r\n    hadHealthBar = @healthBar\r\n    @healthBar = new createjs.Sprite(@options.floatingLayer.spriteSheet)\r\n    @healthBar.gotoAndStop(key)\r\n    offset = @getOffset 'aboveHead'\r\n    @healthBar.scaleX = @healthBar.scaleY = 1 / @options.floatingLayer.resolutionFactor\r\n    @healthBar.name = 'health bar'\r\n    @options.floatingLayer.addChild @healthBar\r\n    @updateHealthBar()\r\n    @lastHealth = null\r\n    if not hadHealthBar\r\n      @listenTo @options.floatingLayer, 'new-spritesheet', @addHealthBar\r\n\r\n  getActionProp: (prop, subProp, def=null) ->\r\n    # Get a property or sub-property from an action, falling back to ThangType\r\n    for val in [@currentAction?[prop], @thangType.get(prop)]\r\n      val = val[subProp] if val? and subProp\r\n      return val if val?\r\n    def\r\n\r\n  getOffset: (prop) ->\r\n    # Get the proper offset from either the current action or the ThangType\r\n    def = x: 0, y: {registration: 0, torso: -50, mouth: -60, aboveHead: -100}[prop]\r\n    pos = @getActionProp 'positions', prop, def\r\n    pos = x: pos.x, y: pos.y\r\n    if not @isRaster\r\n      scale = @getActionProp 'scale', null, 1\r\n      scale *= @sprite.parent.resolutionFactor if prop is 'registration'\r\n      pos.x *= scale\r\n      pos.y *= scale\r\n    if @thang and prop isnt 'registration'\r\n      pos.x *= @thang.scaleFactorX ? @thang.scaleFactor ? 1\r\n      pos.y *= @thang.scaleFactorY ? @thang.scaleFactor ? 1\r\n    # We might need to do this, but I don't have a good test case yet. TODO: figure out.\r\n    #if prop isnt @registration\r\n    #  pos.x *= if @getActionProp 'flipX' then -1 else 1\r\n    #  pos.y *= if @getActionProp 'flipY' then -1 else 1\r\n    pos\r\n\r\n  createMarks: ->\r\n    return unless @options.camera\r\n    if @thang\r\n      # TODO: Add back ranges\r\n#      allProps = []\r\n#      allProps = allProps.concat (@thang.hudProperties ? [])\r\n#      allProps = allProps.concat (@thang.programmableProperties ? [])\r\n#      allProps = allProps.concat (@thang.moreProgrammableProperties ? [])\r\n#\r\n#      for property in allProps\r\n#        if m = property.match /.*(Range|Distance|Radius)$/\r\n#          if @thang[m[0]]? and @thang[m[0]] < 9001\r\n#            @ranges.push\r\n#              name: m[0]\r\n#              radius: @thang[m[0]]\r\n#\r\n#      @ranges = _.sortBy @ranges, 'radius'\r\n#      @ranges.reverse()\r\n#\r\n#      @addMark range.name for range in @ranges\r\n\r\n      # TODO: add back bounds\r\n#      @addMark('bounds').toggle true if @thang?.drawsBounds\r\n      @addMark('shadow').toggle true unless @thangType.get('shadow') is 0\r\n\r\n  updateMarks: ->\r\n    return unless @options.camera\r\n    @addMark 'repair', null, 'repair' if @thang?.erroredOut\r\n    @marks.repair?.toggle @thang?.erroredOut\r\n\r\n    if @selected\r\n      @marks[range['name']].toggle true for range in @ranges\r\n    else\r\n      @marks[range['name']].toggle false for range in @ranges\r\n\r\n    if @isMissile and @thang.action is 'die'\r\n      @marks.shadow?.hide()\r\n    mark.update() for name, mark of @marks\r\n    #@thang.effectNames = ['warcry', 'confuse', 'control', 'curse', 'fear', 'poison', 'paralyze', 'regen', 'sleep', 'slow', 'haste']\r\n    @updateEffectMarks() if @thang?.effectNames?.length or @previousEffectNames?.length\r\n\r\n  updateEffectMarks: ->\r\n    return if _.isEqual @thang.effectNames, @previousEffectNames\r\n    return if @stopped\r\n    for effect in @thang.effectNames\r\n      mark = @addMark effect, @options.floatingLayer, effect\r\n      mark.statusEffect = true\r\n      mark.toggle 'on'\r\n      mark.show()\r\n\r\n    if @previousEffectNames\r\n      for effect in @previousEffectNames\r\n        continue if effect in @thang.effectNames\r\n        mark = @marks[effect]\r\n        mark.toggle false\r\n\r\n    if @thang.effectNames.length > 1 and not @effectInterval\r\n      @rotateEffect()\r\n      @effectInterval = setInterval @rotateEffect, 1500\r\n\r\n    else if @effectInterval and @thang.effectNames.length <= 1\r\n      clearInterval @effectInterval\r\n      @effectInterval = null\r\n\r\n    @previousEffectNames = @thang.effectNames\r\n\r\n  rotateEffect: =>\r\n    effects = (m.name for m in _.values(@marks) when m.on and m.statusEffect and m.mark)\r\n    return unless effects.length\r\n    effects.sort()\r\n    @effectIndex ?= 0\r\n    @effectIndex = (@effectIndex + 1) % effects.length\r\n    @marks[effect].hide() for effect in effects\r\n    @marks[effects[@effectIndex]].show()\r\n\r\n  setHighlight: (to, delay) ->\r\n    @addMark 'highlight', @options.floatingLayer, 'highlight' if to\r\n    @marks.highlight?.highlightDelay = delay\r\n    @marks.highlight?.toggle to and not @dimmed\r\n\r\n  setDimmed: (@dimmed) ->\r\n    @marks.highlight?.toggle @marks.highlight.on and not @dimmed\r\n\r\n  setThang: (@thang) ->\r\n    @options.thang = @thang\r\n\r\n  setDebug: (debug) ->\r\n    return unless @thang?.collides and @options.camera?\r\n    @addMark 'debug', @options.floatingLayer if debug\r\n    if d = @marks.debug\r\n      d.toggle debug\r\n      d.updatePosition()\r\n\r\n  addLabel: (name, style) ->\r\n    @labels[name] ?= new Label sprite: @, camera: @options.camera, layer: @options.textLayer, style: style\r\n    @labels[name]\r\n\r\n  addMark: (name, layer, thangType=null) ->\r\n    @marks[name] ?= new Mark name: name, lank: @, camera: @options.camera, layer: layer ? @options.groundLayer, thangType: thangType\r\n    @marks[name]\r\n\r\n  removeMark: (name) ->\r\n    @marks[name].destroy()\r\n    delete @marks[name]\r\n\r\n  notifySpeechUpdated: (e) ->\r\n    e = _.clone(e)\r\n    e.sprite = @\r\n    e.blurb ?= '...'\r\n    e.thang = @thang\r\n    Backbone.Mediator.publish 'sprite:speech-updated', e\r\n\r\n  isTalking: ->\r\n    Boolean @labels.dialogue?.text or @labels.say?.text\r\n\r\n  onDialogue: (e) ->\r\n    return unless @thang?.id is e.spriteID\r\n    unless @thang?.id is 'Hero Placeholder'  # Don't show these for heroes, because they aren't actually first-person, just LevelDialogueView narration\r\n      label = @addLabel 'dialogue', Label.STYLE_DIALOGUE\r\n      label.setText e.blurb or '...'\r\n    sound = e.sound ? AudioPlayer.soundForDialogue e.message, @thangType.get 'soundTriggers'\r\n    @dialogueSoundInstance?.stop()\r\n    if @dialogueSoundInstance = @playSound sound, false\r\n      @dialogueSoundInstance.addEventListener 'complete', -> Backbone.Mediator.publish 'sprite:dialogue-sound-completed', {}\r\n    @notifySpeechUpdated e\r\n\r\n  onClearDialogue: (e) ->\r\n    return unless @labels.dialogue?.text\r\n    @labels.dialogue?.setText null\r\n    @dialogueSoundInstance?.stop()\r\n    @notifySpeechUpdated {}\r\n\r\n  onSetLetterbox: (e) ->\r\n    @letterboxOn = e.on\r\n\r\n  setNameLabel: (name) ->\r\n    label = @addLabel 'name', Label.STYLE_NAME\r\n    label.setText name\r\n\r\n  updateLabels: ->\r\n    return unless @thang\r\n    blurb = if @thang.health <= 0 then null else @thang.sayMessage  # Dead men tell no tales\r\n    blurb = null if blurb in ['For Thoktar!', 'Bones!', 'Behead!', 'Destroy!', 'Die, humans!']  # Let's just hear, not see, these ones.\r\n    if /Hero Placeholder/.test(@thang.id)\r\n      labelStyle = Label.STYLE_DIALOGUE\r\n    else\r\n      labelStyle = @thang.labelStyle ? Label.STYLE_SAY\r\n    @addLabel 'say', labelStyle if blurb\r\n    if @labels.say?.setText blurb\r\n      @notifySpeechUpdated blurb: blurb\r\n\r\n    if @thang?.variableNames?\r\n      ls = @addLabel 'variableNames', Label.STYLE_VAR\r\n      ls.setText @thang?.variableNames\r\n    else if @labels.variableNames\r\n      @labels.variableNames.destroy()\r\n      delete @labels.variableNames\r\n\r\n    label.update() for name, label of @labels\r\n\r\n  updateGold: ->\r\n    # TODO: eventually this should be moved into some sort of team-based update\r\n    # rather than an each-thang-that-shows-gold-per-team thing.\r\n    return unless @thang\r\n    return if @thang.gold is @lastGold\r\n    gold = Math.floor @thang.gold ? 0\r\n    if @thang.world.age is 0\r\n      gold = @thang.world.initialTeamGold[@thang.team].gold\r\n    return if gold is @lastGold\r\n    @lastGold = gold\r\n    Backbone.Mediator.publish 'surface:gold-changed', {team: @thang.team, gold: gold, goldEarned: Math.floor(@thang.goldEarned ? 0)}\r\n\r\n  shouldMuteMessage: (m) ->\r\n    if me.getAnnouncesActionAudioGroup() in ['no-audio', 'just-take-damage']\r\n      return true if m in ['moveRight', 'moveUp', 'moveDown', 'moveLeft']\r\n      return true if /^attack /.test m\r\n      return true if /^Repeating loop/.test m\r\n      return true if /^findNearestEnemy/.test m\r\n\r\n    return false if m in ['moveRight', 'moveUp', 'moveDown', 'moveLeft']\r\n    @previouslySaidMessages ?= {}\r\n    t0 = @previouslySaidMessages[m] ? 0\r\n    t1 = new Date()\r\n    @previouslySaidMessages[m] = t1\r\n    return true if t1 - t0 < 5 * 1000\r\n    false\r\n\r\n  playSounds: (withDelay=true, volume=1.0) ->\r\n    for event in @thang.currentEvents ? []\r\n      if event is 'take-damage' and me.getAnnouncesActionAudioGroup() in ['no-audio', 'without-take-damage']\r\n        null  # Skip playing it\r\n      else\r\n        @playSound event, withDelay, volume\r\n      if event is 'pay-bounty-gold' and @thang.bountyGold > 25 and @thang.team isnt me.team\r\n        AudioPlayer.playInterfaceSound 'coin_1', 0.25\r\n    if @thang.actionActivated and (action = @thang.getActionName()) isnt 'say'\r\n      @playSound action, withDelay, volume\r\n    if @thang.sayMessage and withDelay and not @thang.silent and not @shouldMuteMessage @thang.sayMessage  # don't play sayMessages while scrubbing, annoying\r\n      offsetFrames = Math.abs(@thang.sayStartTime - @thang.world.age) / @thang.world.dt\r\n      if offsetFrames <= 2  # or (not withDelay and offsetFrames < 30)\r\n        sound = AudioPlayer.soundForDialogue @thang.sayMessage, @thangType.get 'soundTriggers'\r\n        @playSound sound, false, volume\r\n\r\n  playSound: (sound, withDelay=true, volume=1.0) ->\r\n    if _.isString sound\r\n      sound = @thangType.get('soundTriggers')?[sound]\r\n    if _.isArray sound\r\n      sound = sound[Math.floor Math.random() * sound.length]\r\n    return null unless sound\r\n    delay = if withDelay and sound.delay then 1000 * sound.delay / createjs.Ticker.getFPS() else 0\r\n    name = AudioPlayer.nameForSoundReference sound\r\n    AudioPlayer.preloadSoundReference sound\r\n    instance = AudioPlayer.playSound name, volume, delay, @getWorldPosition()\r\n    #console.log @thang?.id, 'played sound', name, 'with delay', delay, 'volume', volume, 'and got sound instance', instance\r\n    instance\r\n\r\n  onMove: (e) ->\r\n    return unless e.spriteID is @thang?.id\r\n    pos = e.pos\r\n    if _.isArray pos\r\n      pos = new Vector pos...\r\n    else if _.isString pos\r\n      return console.warn 'Couldn\\'t find target sprite', pos, 'from', @options.sprites unless pos of @options.sprites\r\n      target = @options.sprites[pos].thang\r\n      heading = Vector.subtract(target.pos, @thang.pos).normalize()\r\n      distance = @thang.pos.distance target.pos\r\n      offset = Math.max(target.width, target.height, 2) / 2 + 3\r\n      pos = Vector.add(@thang.pos, heading.multiply(distance - offset))\r\n    Backbone.Mediator.publish 'level:sprite-clear-dialogue', {}\r\n    @onClearDialogue()\r\n    args = [pos]\r\n    args.push(e.duration) if e.duration?\r\n    @move(args...)\r\n\r\n  move: (pos, duration=2000, endAnimation='idle') =>\r\n    @updateShadow()\r\n    if not duration\r\n      createjs.Tween.removeTweens(@shadow.pos) if @lastTween\r\n      @lastTween = null\r\n      z = @shadow.pos.z\r\n      @shadow.pos = pos\r\n      @shadow.pos.z = z\r\n      @sprite.gotoAndPlay?(endAnimation)\r\n      return\r\n\r\n    @shadow.action = 'move'\r\n    @shadow.actionActivated = true\r\n    @pointToward(pos)\r\n    @possessed = true\r\n    @update true\r\n\r\n    ease = createjs.Ease.getPowInOut(2.2)\r\n    if @lastTween\r\n      ease = createjs.Ease.getPowOut(1.2)\r\n      createjs.Tween.removeTweens(@shadow.pos)\r\n\r\n    endFunc = =>\r\n      @lastTween = null\r\n      @sprite.gotoAndPlay(endAnimation) unless @stillLoading\r\n      @shadow.action = 'idle'\r\n      @update true\r\n      @possessed = false\r\n\r\n    @lastTween = createjs.Tween\r\n      .get(@shadow.pos)\r\n      .to({x: pos.x, y: pos.y}, duration, ease)\r\n      .call(endFunc)\r\n\r\n  pointToward: (pos) ->\r\n    @shadow.rotation = Math.atan2(pos.y - @shadow.pos.y, pos.x - @shadow.pos.x)\r\n    if (@shadow.rotation * 180 / Math.PI) % 90 is 0\r\n      @shadow.rotation += 0.01\r\n\r\n  updateShadow: ->\r\n    @shadow = {} if not @shadow\r\n    @shadow.pos = @thang.pos\r\n    @shadow.rotation = @thang.rotation\r\n    @shadow.action = @thang.action\r\n    @shadow.actionActivated = @thang.actionActivated\r\n\r\n  updateHealthBar: ->\r\n    return unless @healthBar\r\n    bounds = @healthBar.getBounds()\r\n    offset = @getOffset 'aboveHead'\r\n    @healthBar.x = @sprite.x - (-offset.x + bounds.width / 2 / @options.floatingLayer.resolutionFactor)\r\n    @healthBar.y = @sprite.y - (-offset.y + bounds.height / 2 / @options.floatingLayer.resolutionFactor)\r\n\r\n  destroy: ->\r\n    mark.destroy() for name, mark of @marks\r\n    label.destroy() for name, label of @labels\r\n    p.removeChild @healthBar if p = @healthBar?.parent\r\n    @sprite?.off 'animationend', @playNextAction\r\n    clearInterval @effectInterval if @effectInterval\r\n    @dialogueSoundInstance?.removeAllEventListeners()\r\n    super()\r\n"]}