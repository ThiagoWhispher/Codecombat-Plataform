{"version":3,"sources":["app/lib/surface/PlaybackOverScreen.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/surface/PlaybackOverScreen.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\n\r\nmodule.exports = class PlaybackOverScreen extends CocoClass\r\n  subscriptions:\r\n    'goal-manager:new-goal-states': 'onNewGoalStates'\r\n\r\n  constructor: (options) ->\r\n    super()\r\n    options ?= {}\r\n    @camera = options.camera\r\n    @layer = options.layer\r\n    @playerNames = options.playerNames\r\n    console.error @toString(), 'needs a camera.' unless @camera\r\n    console.error @toString(), 'needs a layer.' unless @layer\r\n    @build()\r\n\r\n  toString: -> '<PlaybackOverScreen>'\r\n\r\n  build: ->\r\n    @dimLayer = new createjs.Container()\r\n    @dimLayer.mouseEnabled = @dimLayer.mouseChildren = false\r\n    @dimLayer.addChild @dimScreen = new createjs.Shape()\r\n    @dimLayer.alpha = 0\r\n    @layer.addChild @dimLayer\r\n\r\n  makeVictoryText: ->\r\n    s = ''\r\n    size = Math.ceil @camera.canvasHeight / 6\r\n    text = new createjs.Text s, \"#{size}px Open Sans Condensed\", '#F7B42C'\r\n    text.shadow = new createjs.Shadow '#000', Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 300), Math.ceil(@camera.canvasHeight / 120)\r\n    text.textAlign = 'center'\r\n    text.textBaseline = 'middle'\r\n    text.x = 0.5 * @camera.canvasWidth\r\n    text.y = 0.8 * @camera.canvasHeight\r\n    @dimLayer.addChild text\r\n    @text = text\r\n\r\n  show: ->\r\n    return if @showing\r\n    @showing = true\r\n    @updateColor 'rgba(212, 212, 212, 0.4)' unless @color  # If we haven't caught the goal state for the first run, just do something neutral.\r\n    @dimLayer.alpha = 0\r\n    createjs.Tween.removeTweens @dimLayer\r\n    createjs.Tween.get(@dimLayer).to({alpha: 1}, 500)\r\n\r\n  hide: ->\r\n    return unless @showing\r\n    @showing = false\r\n    createjs.Tween.removeTweens @dimLayer\r\n    createjs.Tween.get(@dimLayer).to({alpha: 0}, 500)\r\n\r\n  onNewGoalStates: (e) ->\r\n    success = e.overallStatus is 'success'\r\n    failure = e.overallStatus is 'failure'\r\n    timedOut = e.timedOut\r\n    incomplete = not success and not failure and not timedOut\r\n    color = if failure then 'rgba(255, 128, 128, 0.4)' else 'rgba(255, 255, 255, 0.4)'\r\n    @updateColor color\r\n    @updateText e\r\n\r\n  updateColor: (color) ->\r\n    return if color is @color\r\n    @dimScreen.graphics.clear().beginFill(color).rect 0, 0, @camera.canvasWidth, @camera.canvasHeight\r\n    if @color\r\n      @dimLayer.updateCache()\r\n    else\r\n      @dimLayer.cache 0, 0, @camera.canvasWidth, @camera.canvasHeight\r\n    @color = color\r\n\r\n  updateText: (goalEvent) ->\r\n    return unless _.size @playerNames  # Only on multiplayer levels\r\n    teamOverallStatuses = {}\r\n\r\n    goals = if goalEvent.goalStates then _.values goalEvent.goalStates else []\r\n    goals = (g for g in goals when not g.optional)\r\n    for team in ['humans', 'ogres']\r\n      teamGoals = (g for g in goals when g.team in [undefined, team])\r\n      statuses = (goal.status for goal in teamGoals)\r\n      overallStatus = 'success' if statuses.length > 0 and _.every(statuses, (s) -> s is 'success')\r\n      overallStatus = 'failure' if statuses.length > 0 and 'failure' in statuses\r\n      teamOverallStatuses[team] = overallStatus\r\n\r\n    @makeVictoryText() unless @text\r\n    if teamOverallStatuses.humans is 'success'\r\n      @text.color = '#E62B1E'\r\n      @text.text = ((@playerNames.humans ? $.i18n.t('ladder.red_ai')) + ' ' + $.i18n.t('ladder.wins')).toLocaleUpperCase()\r\n    else if teamOverallStatuses.ogres is 'success'\r\n      @text.color = '#0597FF'\r\n      @text.text = ((@playerNames.ogres ? $.i18n.t('ladder.blue_ai')) + ' ' + $.i18n.t('ladder.wins')).toLocaleUpperCase()\r\n    else\r\n      @text.color = '#F7B42C'\r\n      if goalEvent.timedOut\r\n        @text.text = 'TIMED OUT'\r\n      else\r\n        @text.text = 'INCOMPLETE'\r\n    @dimLayer.updateCache()\r\n"]}