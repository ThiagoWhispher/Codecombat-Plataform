{"version":3,"sources":["app/lib/world/world_script_note.coffee"],"names":[],"mappings":";AAAA;;AAAC,QAAS,QAAQ,eAAR,EAAT;;AACA,4BAA6B,QAAQ,wBAAR,EAA7B;;AAED,MAAM,CAAC,OAAP,GAAuB;EACrB,eAAC,UAAD,GAAY;;EACC,yBAAC,MAAD,EAAS,KAAT,EAAiB,KAAjB;IAAS,IAAC,SAAD;IACpB,IAAc,cAAd;AAAA;;IACA,IAAC,QAAD,GAAW;IACX,KAAc,0BAA0B,MAA1B,EAAkC,IAAC,MAAnC,CAAd;AAAA;;IAEA,IAAC,QAAD,GAAW;IACX,IAAC,QAAD,GAAW,MAAM,CAAC;;MAClB,IAAC,SAAS;;IACV,IAAC,MAAK,CAAC,iBAAP,GAA2B,MAAM,CAAC;EARvB;;4BAUb,YAAW;AACT;IAAA,IAAI;MAAC,SAAS,IAAC,QAAX;MAAoB,OAAO,EAA3B;;AACJ;AAAA;;MACE,oBAAG,KAAK,CAAE,gBAAV;QACE,QAAQ;UAAC,SAAS,IAAV;UAAgB,IAAI,KAAK,CAAC,EAA1B;UADV;OAAA,MAEK,IAAG,CAAC,CAAC,OAAF,CAAU,KAAV,CAAH;AACH;;UACE,qBAAG,MAAM,CAAE,gBAAX;YACE,KAAM,GAAN,GAAW;cAAC,SAAS,IAAV;cAAgB,IAAI,MAAM,CAAC,EAA3B;cADb;;AADF,SADG;;MAIL,CAAC,CAAC,KAAM,KAAR,GAAe;AAPjB;WAQA;EAVS;;EAYX,eAAC,YAAD,GAAc,SAAC,CAAD,EAAI,KAAJ,EAAW,QAAX;AACZ;IAAA,aAAa,IAAI;IACjB,UAAU,CAAC,OAAX,GAAqB,CAAC,CAAC;IACvB,UAAU,CAAC,KAAX,GAAmB;AACnB;AAAA;;MACE,IAAG,mBAAW,OAAO,KAAP,KAAgB,QAA3B,IAAwC,KAAK,CAAC,OAAjD;QACE,QAAQ,KAAK,CAAC,YAAN,CAAmB,KAAK,CAAC,EAAzB,EADV;OAAA,MAEK,IAAG,CAAC,CAAC,OAAF,CAAU,KAAV,CAAH;AACH;;UACE,IAAG,oBAAY,OAAO,MAAP,KAAiB,QAA7B,IAA0C,MAAM,CAAC,OAApD;YACE,KAAM,GAAN,GAAW,KAAK,CAAC,YAAN,CAAmB,MAAM,CAAC,EAA1B,EADb;;AADF,SADG;OAAA,MAIA,IAAG,mBAAW,OAAO,KAAP,KAAgB,QAA3B,IAAwC,KAAK,CAAC,EAAjD;QACH,QAAQ,QAAS,MAAK,CAAC,EAAN,CAAS,CAAC,WAAnB,CAA+B,KAA/B,EAAsC,KAAtC,EAA6C,QAA7C,EADL;;MAEL,UAAU,CAAC,KAAM,KAAjB,GAAwB;AAT1B;WAUA;EAdY","file":"public/javascripts/app/lib/world/world_script_note.js","sourcesContent":["{clone} = require './world_utils'\r\n{scriptMatchesEventPrereqs} = require './script_event_prereqs'\r\n\r\nmodule.exports = class WorldScriptNote\r\n  @className: 'WorldScriptNote'\r\n  constructor: (script, @event, world) ->\r\n    return unless script?\r\n    @invalid = true\r\n    return unless scriptMatchesEventPrereqs(script, @event)\r\n    # Could add the scriptPrereqsSatisfied or seen/repeats stuff if needed\r\n    @invalid = false\r\n    @channel = script.channel\r\n    @event ?= {}\r\n    @event.replacedNoteChain = script.noteChain\r\n\r\n  serialize: ->\r\n    o = {channel: @channel, event: {}}\r\n    for key, value of @event\r\n      if value?.isThang\r\n        value = {isThang: true, id: value.id}\r\n      else if _.isArray value\r\n        for subval, i in value\r\n          if subval?.isThang\r\n            value[i] = {isThang: true, id: subval.id}\r\n      o.event[key] = value\r\n    o\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    scriptNote = new WorldScriptNote\r\n    scriptNote.channel = o.channel\r\n    scriptNote.event = {}\r\n    for key, value of o.event\r\n      if value? and typeof value is 'object' and value.isThang\r\n        value = world.getThangByID value.id\r\n      else if _.isArray value\r\n        for subval, i in value\r\n          if subval? and typeof subval is 'object' and subval.isThang\r\n            value[i] = world.getThangByID subval.id\r\n      else if value? and typeof value is 'object' and value.CN\r\n        value = classMap[value.CN].deserialize value, world, classMap\r\n      scriptNote.event[key] = value\r\n    scriptNote\r\n"]}