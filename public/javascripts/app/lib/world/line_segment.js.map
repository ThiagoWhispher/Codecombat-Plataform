{"version":3,"sources":["app/lib/world/line_segment.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/world/line_segment.js","sourcesContent":["class LineSegment\r\n  @className: \"LineSegment\"\r\n\r\n  constructor: (@a, @b) ->\r\n    @slope = (@a.y - @b.y) / (@a.x - @b.x)\r\n    @y0 = @a.y - (@slope * @a.x)\r\n    @left = if @a.x < @b.x then @a else @b\r\n    @right = if @a.x > @b.x then @a else @b\r\n    @bottom = if @a.y < @b.y then @a else @b\r\n    @top = if @a.y > @b.y then @a else @b\r\n\r\n  y: (x) ->\r\n    (@slope * x) + @y0\r\n\r\n  x: (y) ->\r\n    (y - @y0) / @slope\r\n\r\n  intersectsLineSegment: (lineSegment) ->\r\n    if lineSegment.slope is @slope\r\n      if lineSegment.y0 is @y0\r\n        if lineSegment.left.x is @left.x or lineSegment.left.x is @right.x or lineSegment.right.x is @right.x or lineSegment.right.x is @left.x\r\n          # segments are of the same line with shared start and/or end points\r\n          return true\r\n        else\r\n          [left, right] = if lineSegment.left.x < @left.x then [lineSegment, @] else [@, lineSegment]\r\n          if left.right.x > right.left.x\r\n            # segments are of the same line and one is contained within the other\r\n            return true\r\n    else if Math.abs(@slope) isnt Infinity and Math.abs(lineSegment.slope) isnt Infinity\r\n      x = (lineSegment.y0 - @y0) / (@slope - lineSegment.slope)\r\n      if x >= @left.x and x <= @right.x and x >= lineSegment.left.x and x <= lineSegment.right.x\r\n        return true\r\n    else if Math.abs(@slope) isnt Infinity or Math.abs(lineSegment.slope) isnt Infinity\r\n      [vertical, nonvertical] = if Math.abs(@slope) isnt Infinity then [lineSegment, @] else [@, lineSegment]\r\n      x = vertical.a.x\r\n      bottom = vertical.bottom.y\r\n      top = vertical.top.y\r\n      y = nonvertical.y(x)\r\n      left = nonvertical.left.x\r\n      right = nonvertical.right.x\r\n      if y >= bottom and y <= top and x >= left and x <= right\r\n        return true\r\n    false\r\n\r\n  pointOnLine: (point, segment=true) ->\r\n    if point.y is @y(point.x)\r\n      if segment\r\n        [littleY, bigY] = if @a.y < @b.y then [@a.y, @b.y] else [@b.y, @a.y]\r\n        if littleY <= point.y and bigY >= point.y\r\n          return true\r\n      else\r\n        return true\r\n    false\r\n\r\n  distanceSquaredToPoint: (point) ->\r\n    # http://stackoverflow.com/a/1501725/540620\r\n    return @a.distanceSquared point if @a.equals @b\r\n    res = Math.min point.distanceSquared(@a), point.distanceSquared(@b)\r\n    lineMagnitudeSquared = @a.distanceSquared @b\r\n    t = ((point.x - @a.x) * (@b.x - @a.x) + (point.y - @a.y) * (@b.y - @a.y)) / lineMagnitudeSquared\r\n    return @a.distanceSquared point if t < 0\r\n    return @b.distanceSquared point if t > 1\r\n    point.distanceSquared x: @a.x + t * (@b.x - @a.x), y: @a.y + t * (@b.y - @a.y)\r\n\r\n  distanceToPoint: (point) ->\r\n    Math.sqrt @distanceSquaredToPoint point\r\n\r\n  toString: ->\r\n    \"lineSegment(a=#{@a}, b=#{@b}, slope=#{@slope}, y0=#{@y0}, left=#{@left}, right=#{@right}, bottom=#{@bottom}, top=#{@top})\"\r\n\r\n  serialize: ->\r\n    {CN: @constructor.className, a: @a, b: @b}\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    new LineSegment o.a, o.b\r\n\r\n  serializeForAether: -> @serialize()\r\n  @deserializeFromAether: (o) -> @deserialize o\r\n\r\nmodule.exports = LineSegment\r\n"]}