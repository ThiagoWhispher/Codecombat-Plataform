{"version":3,"sources":["app/lib/LevelBus.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/lib/LevelBus.js","sourcesContent":["Bus = require './Bus'\r\n{me} = require 'core/auth'\r\nLevelSession = require 'models/LevelSession'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class LevelBus extends Bus\r\n\r\n  @get: (levelID, sessionID) ->\r\n    docName = \"play/level/#{levelID}/#{sessionID}\"\r\n    return Bus.getFromCache(docName) or new LevelBus docName\r\n\r\n  subscriptions:\r\n    'tome:editing-began': 'onEditingBegan'\r\n    'tome:editing-ended': 'onEditingEnded'\r\n    'script:state-changed': 'onScriptStateChanged'\r\n    'script:ended': 'onScriptEnded'\r\n    'script:reset': 'onScriptReset'\r\n    'surface:sprite-selected': 'onSpriteSelected'\r\n    'level:show-victory': 'onVictory'\r\n    'tome:spell-changed': 'onSpellChanged'\r\n    'tome:spell-created': 'onSpellCreated'\r\n    'tome:cast-spells': 'onCastSpells'\r\n    'tome:winnability-updated': 'onWinnabilityUpdated'\r\n    'application:idle-changed': 'onIdleChanged'\r\n    'goal-manager:new-goal-states': 'onNewGoalStates'\r\n    'god:new-world-created': 'onNewWorldCreated'\r\n\r\n  constructor: ->\r\n    super(arguments...)\r\n    @changedSessionProperties = {}\r\n    saveDelay = window.serverConfig?.sessionSaveDelay\r\n    [wait, maxWait] = switch\r\n      when not application.isProduction or not saveDelay then [1, 5]  # Save quickly in development.\r\n      when me.isAnonymous() then [saveDelay.anonymous.min, saveDelay.anonymous.max]\r\n      else [saveDelay.registered.min, saveDelay.registered.max]\r\n    @saveSession = _.debounce @reallySaveSession, wait * 1000, {maxWait: maxWait * 1000}\r\n    @playerIsIdle = false\r\n\r\n  init: ->\r\n    super()\r\n    @fireScriptsRef = @fireRef?.child('scripts')\r\n\r\n  setSession: (@session) ->\r\n    @timerIntervalID = setInterval(@incrementSessionPlaytime, 1000)\r\n\r\n  onIdleChanged: (e) ->\r\n    @playerIsIdle = e.idle\r\n\r\n  incrementSessionPlaytime: =>\r\n    if @playerIsIdle then return\r\n    @changedSessionProperties.playtime = true\r\n    @session.set('playtime', (@session.get('playtime') ? 0) + 1)\r\n\r\n  onPoint: ->\r\n    return true\r\n\r\n  onMeSynced: =>\r\n    super()\r\n\r\n  join: ->\r\n    super()\r\n\r\n  disconnect: ->\r\n    @fireScriptsRef?.off()\r\n    @fireScriptsRef = null\r\n    super()\r\n\r\n  removeFirebaseData: (callback) ->\r\n    return callback?() unless @myConnection\r\n    @myConnection.child('connected')\r\n    @fireRef.remove()\r\n    @onDisconnect.cancel(-> callback?())\r\n\r\n  # UPDATING FIREBASE AND SESSION\r\n\r\n  onEditingBegan: -> #@wizardRef?.child('editing').set(true)  # no more wizards\r\n  onEditingEnded: -> #@wizardRef?.child('editing').set(false)  # no more wizards\r\n\r\n  # HACK: Backbone does not work with nested documents, but we want to\r\n  #   patch only those props that have changed. Look into plugins to\r\n  #   give Backbone support for nested docs and update the code here.\r\n\r\n  # TODO: The LevelBus doesn't need to be in charge of updating the\r\n  #   LevelSession object. Either break this off into a separate class\r\n  #   or have the LevelSession object listen for all these events itself.\r\n\r\n  setSpells: (spells) ->\r\n    @onSpellCreated spell: spell for spellKey, spell of spells\r\n\r\n  onSpellChanged: (e) ->\r\n    return unless @onPoint()\r\n    code = @session.get('code')\r\n    code ?= {}\r\n    parts = e.spell.spellKey.split('/')\r\n\r\n    code[parts[0]] ?= {}\r\n    code[parts[0]][parts[1]] = e.spell.getSource()\r\n    @changedSessionProperties.code = true\r\n    @session.set({'code': code})\r\n    @saveSession()\r\n\r\n  onSpellCreated: (e) ->\r\n    return unless @onPoint()\r\n    spellTeam = e.spell.team\r\n    @teamSpellMap ?= {}\r\n    @teamSpellMap[spellTeam] ?= []\r\n\r\n    unless e.spell.spellKey in @teamSpellMap[spellTeam]\r\n      @teamSpellMap[spellTeam].push e.spell.spellKey\r\n    @changedSessionProperties.teamSpells = true\r\n    @session.set({'teamSpells': @teamSpellMap})\r\n    @saveSession()\r\n    if spellTeam is me.team or (e.spell.otherSession and spellTeam isnt e.spell.otherSession.get('team'))\r\n      # https://github.com/codecombat/codecombat/issues/81\r\n      @onSpellChanged e  # Save the new spell to the session, too.\r\n\r\n  onCastSpells: (e) ->\r\n    return unless @onPoint() and e.realTime\r\n    # We have incremented state.submissionCount and reset state.flagHistory.\r\n    @changedSessionProperties.state = true\r\n    @saveSession()\r\n\r\n  onWinnabilityUpdated: (e) ->\r\n    return unless @onPoint() and e.winnable\r\n    return unless e.level.get('slug') in ['ace-of-coders', 'elemental-wars', 'the-battle-of-sky-span']  # Mirror matches don't otherwise show victory, so we win here.\r\n    return if @session.get('state')?.complete\r\n    @onVictory()\r\n\r\n  onNewWorldCreated: (e) ->\r\n    return unless @onPoint()\r\n    # Record the flag history.\r\n    state = @session.get('state')\r\n    flagHistory = (flag for flag in e.world.flagHistory when flag.source isnt 'code')\r\n    return if _.isEqual state.flagHistory, flagHistory\r\n    state.flagHistory = flagHistory\r\n    @changedSessionProperties.state = true\r\n    @session.set('state', state)\r\n    @saveSession()\r\n\r\n  onScriptStateChanged: (e) ->\r\n    return unless @onPoint()\r\n    @fireScriptsRef?.update(e)\r\n    state = @session.get('state')\r\n    scripts = state.scripts ? {}\r\n    scripts.currentScript = e.currentScript\r\n    scripts.currentScriptOffset = e.currentScriptOffset\r\n    @changedSessionProperties.state = true\r\n    @session.set('state', state)\r\n    @saveSession()\r\n\r\n  onScriptEnded: (e) ->\r\n    return unless @onPoint()\r\n    state = @session.get('state')\r\n    scripts = state.scripts\r\n    scripts.ended ?= {}\r\n    return if scripts.ended[e.scriptID]?\r\n    index = _.keys(scripts.ended).length + 1\r\n    @fireScriptsRef?.child('ended').child(e.scriptID).set(index)\r\n    scripts.ended[e.scriptID] = index\r\n    @session.set('state', state)\r\n    @changedSessionProperties.state = true\r\n    @saveSession()\r\n\r\n  onScriptReset: ->\r\n    return unless @onPoint()\r\n    @fireScriptsRef?.set({})\r\n    state = @session.get('state')\r\n    state.scripts = {}\r\n    #state.complete = false  # Keep it complete once ever completed.\r\n    @session.set('state', state)\r\n    @changedSessionProperties.state = true\r\n    @saveSession()\r\n\r\n  onSpriteSelected: (e) ->\r\n    return unless @onPoint()\r\n    state = @session.get('state')\r\n    state.selected = e.thang?.id or null\r\n    @session.set('state', state)\r\n    @changedSessionProperties.state = true\r\n    @saveSession()\r\n\r\n  onVictory: ->\r\n    return unless @onPoint()\r\n    state = @session.get('state')\r\n    state.complete = true\r\n    @session.set('state', state)\r\n    @changedSessionProperties.state = true\r\n    @reallySaveSession()  # Make sure it saves right away; don't debounce it.\r\n\r\n  onNewGoalStates: (e) ->\r\n    # TODO: this log doesn't capture when null-status goals are being set during world streaming. Where can they be coming from?\r\n    goalStates = e.goalStates\r\n    return console.error(\"Somehow trying to save null goal states!\", newGoalStates) if _.find(newGoalStates, (gs) -> not gs.status)\r\n\r\n    return unless e.overallStatus is 'success'\r\n    newGoalStates = goalStates\r\n    state = @session.get('state')\r\n    oldGoalStates = state.goalStates or {}\r\n\r\n    changed = false\r\n    for goalKey, goalState of newGoalStates\r\n      continue if oldGoalStates[goalKey]?.status is 'success' and goalState.status isnt 'success' # don't undo success, this property is for keying off achievements\r\n      continue if utils.kindaEqual state.goalStates?[goalKey], goalState # Only save when goals really change\r\n      changed = true\r\n      oldGoalStates[goalKey] = _.cloneDeep newGoalStates[goalKey]\r\n\r\n    if changed\r\n      state.goalStates = oldGoalStates\r\n      @session.set 'state', state\r\n      @changedSessionProperties.state = true\r\n      @saveSession()\r\n\r\n  onPlayerJoined: (snapshot) =>\r\n    super(arguments...)\r\n    return unless @onPoint()\r\n    players = @session.get('players')\r\n    players ?= {}\r\n    player = snapshot.val()\r\n    return if players[player.id]?\r\n    players[player.id] = {}\r\n    @session.set('players', players)\r\n    @changedSessionProperties.players = true\r\n    @saveSession()\r\n\r\n  onChatAdded: (snapshot) =>\r\n    super(arguments...)\r\n    chat = @session.get('chat')\r\n    chat ?= []\r\n    message = snapshot.val()\r\n    return if message.system\r\n    chat.push(message)\r\n    chat = chat[chat.length-50...] if chat.length > 50\r\n    @session.set('chat', chat)\r\n    @changedSessionProperties.chat = true\r\n    @saveSession()\r\n\r\n  # Debounced as saveSession\r\n  reallySaveSession: ->\r\n    return if _.isEmpty @changedSessionProperties\r\n    # don't let peeking admins mess with the session accidentally\r\n    return unless @session.get('creator') is me.id\r\n    return if @session.fake\r\n    Backbone.Mediator.publish 'level:session-will-save', session: @session\r\n    patch = {}\r\n    patch[prop] = @session.get(prop) for prop of @changedSessionProperties\r\n    @changedSessionProperties = {}\r\n\r\n    # since updates are coming fast and loose for session objects\r\n    # don't let what the server returns overwrite changes since the save began\r\n    tempSession = new LevelSession _id: @session.id\r\n    tempSession.save(patch, {patch: true, type: 'PUT'})\r\n\r\n  destroy: ->\r\n    clearInterval(@timerIntervalID)\r\n    super()\r\n"]}