{"version":3,"sources":["app/collections/PatchesCollection.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,aAAa,QAAQ,cAAR;;AACb,iBAAiB,QAAQ,4BAAR;;AAEjB,MAAM,CAAC,OAAP,GAAuB;;;;;;;8BACrB,QAAO;;8BAEP,aAAY,SAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,MAA5B;AACV;IADsC,IAAC,2BAAD,SAAQ;IAC9C,mDAAM,SAAN;IACA,aAAgB,CAAI,QAAQ,CAAC,GAAT,CAAa,UAAb,CAAP,GAAqC,KAArC,GAAgD;WAC7D,IAAC,IAAD,GAAU,QAAQ,CAAC,OAAV,GAAkB,GAAlB,GAAoB,CAAC,QAAQ,CAAC,GAAT,CAAa,UAAb,CAAD,CAApB,GAA8C,kBAA9C,GAAgE,IAAC;EAHhE;;;;GAHmC","file":"public/javascripts/app/collections/PatchesCollection.js","sourcesContent":["PatchModel = require 'models/Patch'\r\nCocoCollection = require 'collections/CocoCollection'\r\n\r\nmodule.exports = class PatchesCollection extends CocoCollection\r\n  model: PatchModel\r\n\r\n  initialize: (models, options, forModel, @status='pending') ->\r\n    super(arguments...)\r\n    identifier = if not forModel.get('original') then '_id' else 'original'\r\n    @url = \"#{forModel.urlRoot}/#{forModel.get(identifier)}/patches?status=#{@status}\"\r\n"]}