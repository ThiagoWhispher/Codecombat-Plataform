{"version":3,"sources":["app/collections/LevelSessions.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,iBAAiB,QAAQ,4BAAR;;AACjB,eAAe,QAAQ,qBAAR;;AAEf,MAAM,CAAC,OAAP,GAAuB;;;;;;;mCACrB,MAAK;;mCACL,QAAO;;mCAEP,yBAAwB,SAAC,gBAAD,EAAmB,OAAnB;IACtB,UAAU,CAAC,CAAC,MAAF,CAAS;MACjB,KAAK,yBAAuB,gBAAvB,GAAwC,2BAD5B;KAAT,EAEP,OAFO;WAGV,IAAC,MAAD,CAAO,OAAP;EAJsB;;mCAMxB,2BAA0B,SAAC,WAAD,EAAc,OAAd;IAExB,UAAU,CAAC,CAAC,MAAF,CAAS;MACjB,KAAK,mBAAiB,WAAjB,GAA6B,kBADjB;KAAT,EAEP,OAFO;WAGV,IAAC,MAAD,CAAO,OAAP;EALwB;;mCAO1B,8BAA6B,SAAC,SAAD,EAAY,OAAZ;AAC3B;;MADuC,UAAQ;;IAC/C,QAAQ;IACR,OAAO;IACP,OAAO,CAAC,CAAC,IAAF,CAAO,SAAS,CAAC,GAAV,CAAc,SAAd,CAAP;;MACP,OAAO,CAAC,OAAQ;;IAChB,OAAO,CAAC,IAAI,CAAC,WAAb,GAA2B;IAC3B,OAAO,CAAC,MAAR,GAAiB;IACjB,SAAS;AACT,WAAM,OAAO,IAAb;MACE,UAAU,CAAC,CAAC,SAAF,CAAY,OAAZ;MACV,OAAO,CAAC,IAAI,CAAC,UAAb,GAA0B;MAC1B,MAAM,CAAC,IAAP,CAAY,IAAC,yBAAD,CAA0B,SAAS,CAAC,EAApC,EAAwC,OAAxC,CAAZ;MACA,QAAQ;IAJV;AAKA,WAAO;EAboB;;mCAe7B,sBAAqB,SAAC,OAAD;;MAAC,UAAQ;;IAE5B,UAAU,CAAC,CAAC,MAAF,CAAS;MACjB,KAAK,4BADY;KAAT,EAEP,OAFO;WAGV,IAAC,MAAD,CAAO,OAAP;EALmB;;;;GAhC+B","file":"public/javascripts/app/collections/LevelSessions.js","sourcesContent":["CocoCollection = require 'collections/CocoCollection'\r\nLevelSession = require 'models/LevelSession'\r\n\r\nmodule.exports = class LevelSessionCollection extends CocoCollection\r\n  url: '/db/level.session'\r\n  model: LevelSession\r\n\r\n  fetchForCourseInstance: (courseInstanceID, options) ->\r\n    options = _.extend({\r\n      url: \"/db/course_instance/#{courseInstanceID}/my-course-level-sessions\"\r\n    }, options)\r\n    @fetch(options)\r\n\r\n  fetchForClassroomMembers: (classroomID, options) ->\r\n    # Params: memberSkip, memberLimit\r\n    options = _.extend({\r\n      url: \"/db/classroom/#{classroomID}/member-sessions\"\r\n    }, options)\r\n    @fetch(options)\r\n\r\n  fetchForAllClassroomMembers: (classroom, options={}) ->\r\n    limit = 10\r\n    skip = 0\r\n    size = _.size(classroom.get('members'))\r\n    options.data ?= {}\r\n    options.data.memberLimit = limit\r\n    options.remove = false\r\n    jqxhrs = []\r\n    while skip < size\r\n      options = _.cloneDeep(options)\r\n      options.data.memberSkip = skip\r\n      jqxhrs.push(@fetchForClassroomMembers(classroom.id, options))\r\n      skip += limit\r\n    return jqxhrs\r\n\r\n  fetchRecentSessions: (options={}) ->\r\n    # Params: slug, limit, codeLanguage\r\n    options = _.extend({\r\n      url: \"/db/level.session/-/recent\"\r\n    }, options)\r\n    @fetch(options)\r\n"]}