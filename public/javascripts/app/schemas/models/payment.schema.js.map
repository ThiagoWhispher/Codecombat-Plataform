{"version":3,"sources":["app/schemas/models/payment.schema.coffee"],"names":[],"mappings":";AAAA;;AAAA,IAAI,QAAQ,cAAR;;AAEJ,gBAAgB,CAAC,CAAC,MAAF,CAAS;EAAC,OAAO,SAAR;EAAmB,UAAU,EAA7B;CAAT,EAA2C;EACzD,WAAW,CAAC,CAAC,QAAF,CAAW;IAAA,OAAO;MAAE;QAAC,KAAK,OAAN;QAAe,MAAM,gBAArB;OAAF;KAAP;GAAX,CAD8C;EAEzD,WAAW,CAAC,CAAC,QAAF,CAAW;IAAA,OAAO;MAAE;QAAC,KAAK,OAAN;QAAe,MAAM,gBAArB;OAAF;KAAP;GAAX,CAF8C;EAGzD,qBAAqB,CAAC,CAAC,WAAF,CAAc;IAAA,aAAa,oFAAb;GAAd,CAHoC;EAKzD,SAAS;IAAE,QAAM,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,CAAR;GALgD;EAMzD,QAAQ;IAAE,MAAM,SAAR;IAAmB,aAAa,mBAAhC;GANiD;EAOzD,SAAS,CAAC,CAAC,IAAF,CAAO;IAAC,OAAO,SAAR;IAAmB,UAAU,IAA7B;GAAP,CAPgD;EAQzD,MAAM;IAAE,MAAM,SAAR;IAAmB,aAAa,8BAAhC;GARmD;EASzD,WAAW;IAAE,QAAM,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,QAAjC,CAAR;GAT8C;EAUzD,aAAa;IAAE,MAAM,QAAR;GAV4C;EAWzD,WAAW,CAAC,CAAC,QAAF,EAX8C;EAazD,KAAK,CAAC,CAAC,MAAF,CAAS;IAAC,OAAO,cAAR;GAAT,EAAkC;IACrC,eAAe;MAAE,MAAM,QAAR;KADsB;IAErC,YAAY;MAAE,MAAM,QAAR;KAFyB;IAGrC,YAAY;MAAE,MAAM,QAAR;KAHyB;GAAlC,CAboD;EAmBzD,QAAQ,CAAC,CAAC,MAAF,CAAS;IAAC,OAAO,aAAR;GAAT,EAAiC;IACvC,WAAW;MAAE,MAAM,SAAR;MAAmB,aAAa,gFAAhC;KAD4B;IAEvC,UAAU;MAAE,MAAM,QAAR;KAF6B;IAGvC,YAAY;MAAE,MAAM,QAAR;KAH2B;IAIvC,WAAW;MAAE,MAAM,QAAR;KAJ4B;GAAjC,CAnBiD;CAA3C;;AA2BhB,CAAC,CAAC,qBAAF,CAAwB,aAAxB,EAAuC,SAAvC;;AAEA,MAAM,CAAC,OAAP,GAAiB","file":"public/javascripts/app/schemas/models/payment.schema.js","sourcesContent":["c = require './../schemas'\r\n\r\nPaymentSchema = c.object({title: 'Payment', required: []}, {\r\n  purchaser: c.objectId(links: [ {rel: 'extra', href: '/db/user/{($)}'} ]) # in case of gifts\r\n  recipient: c.objectId(links: [ {rel: 'extra', href: '/db/user/{($)}'} ])\r\n  purchaserEmailLower: c.shortString(description: 'We may have a purchaser with no account, in which case only this email will be set')\r\n\r\n  service: { enum: ['stripe', 'ios', 'external']}\r\n  amount: { type: 'integer', description: 'Payment in cents.' }\r\n  created: c.date({title: 'Created', readOnly: true})\r\n  gems: { type: 'integer', description: 'The number of gems acquired.' }\r\n  productID: { enum: ['gems_5', 'gems_10', 'gems_20', 'custom']}\r\n  description: { type: 'string' }\r\n  prepaidID: c.objectId()\r\n\r\n  ios: c.object({title: 'iOS IAP Data'}, {\r\n    transactionID: { type: 'string' }\r\n    rawReceipt: { type: 'string' }\r\n    localPrice: { type: 'string' }\r\n  })\r\n\r\n  stripe: c.object({title: 'Stripe Data'}, {\r\n    timestamp: { type: 'integer', description: 'Unique identifier provided by the client, to guard against duplicate payments.' }\r\n    chargeID: { type: 'string' }\r\n    customerID: { type: 'string' }\r\n    invoiceID: { type: 'string' }\r\n  })\r\n})\r\n\r\nc.extendBasicProperties(PaymentSchema, 'payment')\r\n\r\nmodule.exports = PaymentSchema\r\n"]}