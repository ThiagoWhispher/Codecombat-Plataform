{"version":3,"sources":["app/schemas/models/achievement.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/schemas/models/achievement.js","sourcesContent":["c = require './../schemas'\r\n\r\n# TODO add these: http://docs.mongodb.org/manual/reference/operator/query/\r\nMongoQueryOperatorSchema =\r\n  title: 'Query Operator'\r\n  type: 'object'\r\n  properties:\r\n    '$gt': type: 'number'\r\n    '$gte': type: 'number'\r\n    '$in': type: 'array'\r\n    '$lt': type: 'number'\r\n    '$lte': type: 'number'\r\n    '$ne': type: ['number', 'string']\r\n    '$nin': type: 'array'\r\n    '$exists': type: 'boolean'\r\n  additionalProperties: false\r\n\r\nMongoFindQuerySchema =\r\n  title: 'Query'\r\n  type: 'object'\r\n  patternProperties:\r\n    '^[-a-zA-Z0-9._]*$':\r\n      anyOf: [\r\n        {$ref: '#/definitions/mongoQueryOperator'},\r\n        {type: 'string'}\r\n        {type: 'object'}\r\n        {type: 'boolean'}\r\n      ]\r\n  properties: {}\r\n  additionalProperties: false\r\n  definitions: {}\r\n\r\nAchievementSchema = c.object()\r\nc.extendNamedProperties AchievementSchema\r\nc.extendBasicProperties AchievementSchema, 'achievement'\r\nc.extendSearchableProperties AchievementSchema\r\n\r\nAchievementSchema.default =\r\n  worth: 10\r\n  description: 'Probably the coolest you\\'ll ever get.'\r\n  difficulty: 1\r\n  recalculable: true\r\n  function: {}\r\n\r\n_.extend AchievementSchema.properties,\r\n  query:\r\n    #type:'object'\r\n    $ref: '#/definitions/mongoFindQuery'\r\n  worth: c.float()\r\n  collection: {type: 'string'}\r\n  description: c.shortString()\r\n  userField: c.shortString()\r\n  related: c.objectId(description: 'Related entity')\r\n  icon: {type: 'string', format: 'image-file', title: 'Icon', description: 'Image should be a 100x100 transparent png.'}\r\n  category:\r\n    enum: ['level', 'ladder', 'contributor']\r\n    description: 'For categorizing and display purposes'\r\n  difficulty: c.int\r\n    description: 'The higher the more difficult'\r\n  proportionalTo:\r\n    type: 'string'\r\n    description: 'For repeatables only. Denotes the field a repeatable achievement needs for its calculations'\r\n  recalculable:\r\n    type: 'boolean'\r\n    description: 'Deprecated: all achievements must be recalculable now. Used to need to be set to true before it is eligible for recalculation.'\r\n  function:\r\n    type: 'object'\r\n    description: 'Function that gives total experience for X amount achieved'\r\n    properties:\r\n      kind: {enum: ['linear', 'logarithmic', 'quadratic', 'pow'] }\r\n      parameters:\r\n        type: 'object'\r\n        default: { a: 1, b: 0, c: 0 }\r\n        properties:\r\n          a: {type: 'number' }\r\n          b: {type: 'number' }\r\n          c: {type: 'number' }\r\n        additionalProperties: true\r\n    default: {kind: 'linear', parameters: {}}\r\n    required: ['kind', 'parameters']\r\n    additionalProperties: false\r\n  i18n: {type: 'object', format: 'i18n', props: ['name', 'description'], description: 'Help translate this achievement'}\r\n  rewards: c.RewardSchema 'awarded by this achievement'\r\n  hidden: {type: 'boolean', description: 'Hide achievement from user if true'}\r\n  updated: c.stringDate({ description: 'When the achievement was changed in such a way that earned achievements should get updated.' })\r\n\r\n\r\n_.extend AchievementSchema, # Let's have these on the bottom\r\n  # TODO We really need some required properties in my opinion but this makes creating new achievements impossible as it is now\r\n  #required: ['name', 'description', 'query', 'worth', 'collection', 'userField', 'category', 'difficulty']\r\n  additionalProperties: false\r\n\r\nAchievementSchema.definitions = {}\r\nAchievementSchema.definitions['mongoQueryOperator'] = MongoQueryOperatorSchema\r\nAchievementSchema.definitions['mongoFindQuery'] = MongoFindQuerySchema\r\nc.extendTranslationCoverageProperties AchievementSchema\r\nc.extendPatchableProperties AchievementSchema\r\n\r\nmodule.exports = AchievementSchema\r\n"]}