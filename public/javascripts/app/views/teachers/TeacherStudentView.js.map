{"version":3,"sources":["app/templates/teachers/teacher-student-view.jade","app/views/teachers/TeacherStudentView.coffee"],"names":[],"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","file":"public/javascripts/app/views/teachers/TeacherStudentView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,dotClass = locals_.dotClass,levelName = locals_.levelName,moment = locals_.moment,link = locals_.link,labelText = locals_.labelText,translate = locals_.translate,me = locals_.me,serverConfig = locals_.serverConfig,document = locals_.document,_ = locals_._;var breadcrumbs_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"breadcrumbs\\\"><a data-i18n=\\\"teacher.my_classes\\\" href=\\\"/teachers/classes\\\"></a><span class=\\\"spl spr\\\">></span><a\" + (jade.attrs({ 'href':('/teachers/classes/'+view.classroom.id) }, {\"href\":true})) + \"><span>\" + (jade.escape(null == (jade.interp = view.classroom.get('name')) ? \"\" : jade.interp)) + \"</span></a><span class=\\\"spl spr\\\">></span><span>\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"</span></div>\");\n};\nvar progressDotLabel_mixin = function(label){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"dot-label text-center\\\"><div class=\\\"dot-label-inner\\\">\" + (jade.escape(null == (jade.interp = label) ? \"\" : jade.interp)) + \"</div></div>\");\n};\nvar studentLevelProgressDot_mixin = function(levelProgress, level, levelNumber, course){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\ndotClass = levelProgress == 'complete' ? 'forest' : (levelProgress == 'started' ? 'gold' : '');\nlevelName = level.get('name')\nvar context = { levelName: levelName, levelNumber: levelNumber, moment: moment , started: levelProgress == 'started', completed: levelProgress == 'complete'}; \nif ( view.levelSessionMap && view.levelSessionMap[level.get('original')])\n{\ncontext.session = view.levelSessionMap[level.get('original')];\n}\nlink = null;\nlabelText = levelNumber;\nif ( level.isLadder())\n{\nvar courseInstance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id });\nif ( courseInstance)\n{\nlink = view.urls.courseArenaLadder({level: level, courseInstance: courseInstance});\nlabelText = translate('courses.arena');\n}\nelse\n{\nlabelText = translate('courses.arena');\n}\ndotClass += ' progress-dot-lg';\n}\nelse if ( level.isProject())\n{\nif ( levelProgress == 'started' || levelProgress == 'complete')\n{\nif ( view.levelSessionMap && view.levelSessionMap[level.get('original')])\n{\nlink = view.urls.playDevLevel({level: level, session: view.levelSessionMap[level.get('original')], course: course});\n}\nlabelText = translate('teacher.view_student_project');\ndotClass = 'navy';\n}\nelse\n{\nlabelText = translate('teacher.project');\n}\ndotClass += ' progress-dot-lg';\n}\nbuf.push(\"<div\" + (jade.attrs({ 'data-html':('true'), 'data-title':(view.singleStudentLevelProgressDotTemplate(context)), \"class\": [('progress-dot'),('level-progress-dot'),(dotClass)] }, {\"class\":true,\"data-html\":true,\"data-title\":true})) + \">\");\nif ( link)\n{\nbuf.push(\"<a\" + (jade.attrs({ 'href':(link) }, {\"href\":true})) + \">\");\nprogressDotLabel_mixin(labelText);\nbuf.push(\"</a>\");\n}\nelse\n{\nprogressDotLabel_mixin(labelText);\n}\nbuf.push(\"</div>\");\n};\nvar accountLinks_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\"), 'data-i18n':(\"nav.profile\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li><li><a href=\\\"/account/settings\\\" data-i18n=\\\"play.settings\\\"></a></li><li><a id=\\\"logout-button\\\" data-i18n=\\\"login.log_out\\\"></a></li>\");\n};\nbuf.push(\"<div class=\\\"style-flat\\\"><nav id=\\\"main-nav\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid container\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><div class=\\\"navbar-header\\\"><button data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-collapse\\\" aria-expanded=\\\"false\\\" class=\\\"navbar-toggle collapsed\\\"><span data-i18n=\\\"nav.toggle_nav\\\" class=\\\"sr-only\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><a href=\\\"/\\\" class=\\\"navbar-brand\\\">\");\nif ( serverConfig.codeNinjas)\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\" class=\\\"code-ninjas-powered-by\\\"/><img src=\\\"/images/pages/base/code-ninjas-logo-right.png\\\" class=\\\"code-ninjas-logo\\\"/>\");\n}\nelse\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\"/>\");\n}\nbuf.push(\"<span class=\\\"glyphicon glyphicon-home\\\"></span></a></div><div id=\\\"navbar-collapse\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\">\");\nif ( (!me.isStudent() && !me.isTeacher()))\n{\nbuf.push(\"<li><a href=\\\"/play\\\" data-i18n=\\\"common.play\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li>\");\nif ( me.isStudent())\n{\nbuf.push(\"<li><a href=\\\"/students\\\" data-i18n=\\\"nav.my_courses\\\"></a></li>\");\n}\nif ( !me.isAnonymous() && me.isTeacher())\n{\nbuf.push(\"<li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li></ul>\");\nif ( me.isAnonymous())\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><a id=\\\"create-account-link\\\" data-i18n=\\\"login.sign_up\\\" class=\\\"signup-button\\\"></a></li><li><a id=\\\"login-link\\\" data-i18n=\\\"login.log_in\\\" class=\\\"login-button\\\"></a></li></ul>\");\n}\nelse\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav hidden-md hidden-lg\\\"><li class=\\\"disabled\\\"><a><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span>\" + (jade.escape(null == (jade.interp = me.displayName()) ? \"\" : jade.interp)) + \"</span></a></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown hidden-xs hidden-sm\\\"><a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"dropdown-toggle\\\"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span data-i18n=\\\"nav.my_account\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li class=\\\"user-dropdown-header text-center\\\"><span class=\\\"user-level\\\">\" + (jade.escape(null == (jade.interp = me.level()) ? \"\" : jade.interp)) + \"</span><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\") }, {\"href\":true})) + \"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/></a><h5>\" + (jade.escape(null == (jade.interp = me.broadName()) ? \"\" : jade.interp)) + \"</h5></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul></li></ul>\");\n}\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><div id=\\\"language-dropdown-wrapper\\\"><select class=\\\"language-dropdown form-control\\\"></select></div></li></ul></div></div></div></div></nav>\");\nvar path = document.location.pathname\nbuf.push(\"<div id=\\\"teacher-dashboard-nav\\\"><nav class=\\\"navbar\\\"><div class=\\\"container-fluid container\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#teacher-dashboard-nav-collapse\\\" class=\\\"navbar-toggle collapsed\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><span data-i18n=\\\"teacher.teacher_dashboard\\\" class=\\\"navbar-brand text-h4\\\"></span></div><div id=\\\"teacher-dashboard-nav-collapse\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/classes') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/classes\\\"><small data-i18n=\\\"teacher.my_classes\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/courses') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/courses\\\"><small data-i18n=\\\"teacher.courses\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/licenses') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/licenses\\\"><small data-i18n=\\\"teacher.enrollments\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/resources') === 0 && path.indexOf('/teachers/resources/faq') !== 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/resources\\\"><small data-i18n=\\\"teacher.resource_hub\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/resources/faq') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/resources/faq\\\"><small data-i18n=\\\"teacher.educator_faq\\\" class=\\\"label\\\"></small></a></li></ul></div></div></nav></div><div id=\\\"site-content-area\\\">\");\nif ( !view.user)\n{\nbuf.push(\"<div>Loading</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"container\\\">\");\nbreadcrumbs_mixin();\nif ( !me.isAnonymous() && me.isTeacher())\nvar isOwner = view.classroom ? view.classroom.get('ownerID') === me.id : false;\nif ( isOwner)\n{\nbuf.push(\"<h3 class=\\\"m-t-2\\\"><span data-i18n=\\\"teacher.student_profile\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"</span></h3><div class=\\\"performance col-md-7\\\"><h4 class=\\\"student-details\\\"><span data-i18n=\\\"teacher.student_state\\\" class=\\\"spr\\\"></span><span class=\\\"spr\\\">\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"</span><span data-i18n=\\\"teacher.student_state_2\\\"></span><!-- TODO: if no other students, this area is blank. Display something better. --></h4><div style=\\\"width:100%\\\" class=\\\"recommendation\\\">\");\nif ( view.courseComparisonMap && view.lastPlayedCourse)\n{\nvar lastCoursePerf = _.find(view.courseComparisonMap, { courseID: view.lastPlayedCourse.id })\nif ( (Math.abs(lastCoursePerf.performance)) <= 1)\n{\nbuf.push(\"<div class=\\\"glyphicon glyphicon-thumbs-up\\\"></div><div class=\\\"small-details\\\"><div class=\\\"good\\\">\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"<span class=\\\"spr\\\"></span><span data-i18n=\\\"teacher.student_good\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = lastCoursePerf.courseModel.getTranslatedName()) ? \"\" : jade.interp)) + \"</span><div data-i18n=\\\"teacher.student_good_detail\\\" class=\\\"status\\\"> </div></div></div>\");\n}\nelse if ( (lastCoursePerf.performance) >= 2)\n{\nbuf.push(\"<div class=\\\"glyphicon glyphicon-star\\\"></div><div class=\\\"small-details\\\"><div class=\\\"great\\\">\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"<span class=\\\"spr\\\"></span><span data-i18n=\\\"teacher.student_great\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = lastCoursePerf.courseModel.getTranslatedName()) ? \"\" : jade.interp)) + \"</span><div data-i18n=\\\"teacher.student_great_detail\\\" class=\\\"status\\\"></div></div></div>\");\n}\nelse if ( (lastCoursePerf.performance) <= -2 )\n{\nbuf.push(\"<div class=\\\"glyphicon glyphicon-exclamation-sign\\\"></div><div class=\\\"small-details\\\"><div class=\\\"warn\\\">\" + (jade.escape(null == (jade.interp = view.user.broadName()) ? \"\" : jade.interp)) + \"<span class=\\\"spr\\\"></span><span data-i18n=\\\"teacher.student_warn\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = lastCoursePerf.courseModel.getTranslatedName()) ? \"\" : jade.interp)) + \"</span><div data-i18n=\\\"teacher.student_warn_detail\\\" class=\\\"status\\\"> </div></div></div>\");\n}\n}\nbuf.push(\"</div><div class=\\\"additional-progress\\\">\");\nvar warn = []\nvar great = []\nvar good = []\n// iterate view.courseComparisonMap || []\n;(function(){\n  var $$obj = view.courseComparisonMap || [];\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var course = $$obj[$index];\n\nif ( !view.lastPlayedCourse || course.courseID != view.lastPlayedCourse)\n{\nif ( Math.abs(course.performance) <= 1)\n{\ngood.push(course.courseModel.getTranslatedName())\n}\nelse if ( course.performance >= 2)\n{\ngreat.push(course.courseModel.getTranslatedName())\n}\nelse if ( course.performance <= -2 )\n{\nwarn.push(course.courseModel.getTranslatedName())\n}\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var course = $$obj[$index];\n\nif ( !view.lastPlayedCourse || course.courseID != view.lastPlayedCourse)\n{\nif ( Math.abs(course.performance) <= 1)\n{\ngood.push(course.courseModel.getTranslatedName())\n}\nelse if ( course.performance >= 2)\n{\ngreat.push(course.courseModel.getTranslatedName())\n}\nelse if ( course.performance <= -2 )\n{\nwarn.push(course.courseModel.getTranslatedName())\n}\n}\n    }\n\n  }\n}).call(this);\n\nif ( warn.length > 0)\n{\nbuf.push(\"<div class=\\\"warn\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span><span class=\\\"spr\\\"></span><span class=\\\"small-details\\\">\" + (jade.escape(null == (jade.interp = warn.join(', ')) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nif ( great.length > 0)\n{\nbuf.push(\"<div class=\\\"great\\\"><span class=\\\"glyphicon glyphicon-star\\\"></span><span class=\\\"spr\\\"></span><span class=\\\"small-details\\\">\" + (jade.escape(null == (jade.interp = great.join(', ')) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nif ( good.length > 0)\n{\nbuf.push(\"<div class=\\\"good\\\"><span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span><span class=\\\"spr\\\"></span><span class=\\\"small-details\\\">\" + (jade.escape(null == (jade.interp = good.join(', ')) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nbuf.push(\"</div></div><div class=\\\"classroom-info-row container-fluid row\\\"><div class=\\\"overview col-md-5\\\"><h4 data-i18n=\\\"teacher.student_overview\\\" class=\\\"student-details\\\"></h4><div class=\\\"small-details\\\"> <span data-i18n=\\\"teacher.student_name\\\"></span><span class=\\\"spr\\\">:</span>\");\nif ( (view.user.get('firstName') && view.user.get('lastName')))\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = view.user.get('firstName')) ? \"\" : jade.interp)) + \"</span><span class=\\\"spl\\\">\" + (jade.escape(null == (jade.interp = view.user.get('lastName')) ? \"\" : jade.interp)) + \"</span>\");\n}\nelse\n{\nbuf.push(\"<i data-i18n=\\\"teacher.no_name\\\"></i>\");\n}\nbuf.push(\"</div><div class=\\\"small-details\\\"> <span data-i18n=\\\"general.username\\\"></span><span class=\\\"spr\\\">:</span>\");\nif ( (view.user.get('name')))\n{\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = view.user.get('name')) ? \"\" : jade.interp)) + \"</span>\");\n}\nelse\n{\nbuf.push(\"<i data-i18n=\\\"teacher.no_username\\\"></i>\");\n}\nbuf.push(\"</div><div class=\\\"small-details\\\"> <span data-i18n=\\\"general.email\\\"></span><span class=\\\"spr\\\">:</span>\");\nif ( (view.user.get('email')))\n{\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"mailto:\"+view.user.get('email')) }, {\"href\":true})) + \"><span>\" + (jade.escape(null == (jade.interp = view.user.get('email')) ? \"\" : jade.interp)) + \"</span></a>\");\n}\nelse\n{\nbuf.push(\"<i data-i18n=\\\"teacher.no_email\\\"></i>\");\n}\nbuf.push(\"</div><div class=\\\"small-details\\\"><span data-i18n=\\\"user.last_played\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = view.lastPlayedString()) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"small-details\\\"> \");\nvar status = view.user.prepaidStatus()\nbuf.push(\"<span data-i18n=\\\"view.user.status\\\"></span><span class=\\\"spr\\\"></span><span data-i18n=\\\"teacher.license_status\\\"></span><span class=\\\"spr\\\">: </span><strong\" + (jade.attrs({ \"class\": [(status === 'expired' ? 'text-danger' : '')] }, {\"class\":true})) + \">\" + (jade.escape(null == (jade.interp = view.studentStatusString()) ? \"\" : jade.interp)) + \"</strong></div></div></div><div class=\\\"playtime-charts\\\"><h4 data-i18n=\\\"teacher.playtime_detail\\\"></h4><div class=\\\"graphsSelector\\\"><span data-i18n=\\\"teacher.select_course\\\"></span><span>:</span><span class=\\\"spr\\\"></span><select id=\\\"course-dropdown\\\" class=\\\"text-navy\\\">\");\n// iterate (view.classroom.get('courses') || [])\n;(function(){\n  var $$obj = (view.classroom.get('courses') || []);\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\nbuf.push(\"<!-- TODO: make sure this doesn't happen when data is loaded. -->\");\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif (instance && instance.hasMember(view.user))\n{\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id) }, {\"value\":true})) + \">\" + (jade.escape(null == (jade.interp = course.getTranslatedName()) ? \"\" : jade.interp)) + \"</option>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\nbuf.push(\"<!-- TODO: make sure this doesn't happen when data is loaded. -->\");\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif (instance && instance.hasMember(view.user))\n{\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id) }, {\"value\":true})) + \">\" + (jade.escape(null == (jade.interp = course.getTranslatedName()) ? \"\" : jade.interp)) + \"</option>\");\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select><div class=\\\"legend\\\"><svg width=\\\"15\\\" height=\\\"15\\\" style=\\\"margin: 0 5px 0 0\\\"><rect width=\\\"15\\\" height=\\\"15\\\" fill=\\\"rgb(32, 87, 43)\\\"></rect></svg><span data-i18n=\\\"teacher.student_completed\\\"> </span><svg width=\\\"15\\\" height=\\\"15\\\" style=\\\"margin: 0 5px 0 15px\\\"><rect width=\\\"15\\\" height=\\\"15\\\" fill=\\\"rgb(242, 190, 25)\\\"></rect></svg><span data-i18n=\\\"teacher.student_in_progress\\\"> </span><svg width=\\\"15\\\" height=\\\"15\\\" style=\\\"margin: 0 5px 0 15px\\\"><rect width=\\\"15\\\" height=\\\"15\\\" fill=\\\"rgb(92, 180, 208)\\\"></rect></svg><span data-i18n=\\\"teacher.class_average\\\"> </span></div></div><div class=\\\"graphs\\\">\");\n// iterate (view.classroom.get('courses') || [])\n;(function(){\n  var $$obj = (view.classroom.get('courses') || []);\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif ((instance && instance.hasMember(view.user)))\n{\nbuf.push(\"<svg\" + (jade.attrs({ 'id':(\"visualisation-\"+versionedCourse._id), 'width':(\"1142\"), 'height':(\"600\"), \"class\": [(\"visualisation\")] }, {\"id\":true,\"width\":true,\"height\":true,\"class\":true})) + \"></svg>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif ((instance && instance.hasMember(view.user)))\n{\nbuf.push(\"<svg\" + (jade.attrs({ 'id':(\"visualisation-\"+versionedCourse._id), 'width':(\"1142\"), 'height':(\"600\"), \"class\": [(\"visualisation\")] }, {\"id\":true,\"width\":true,\"height\":true,\"class\":true})) + \"></svg>\");\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div><div class=\\\"student-levels\\\"> <h4 data-i18n=\\\"teacher.course_progress\\\"></h4><div class=\\\"student-levels-progress\\\">\");\n// iterate (view.classroom.get('courses') || [])\n;(function(){\n  var $$obj = (view.classroom.get('courses') || []);\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif (instance && instance.hasMember(view.user))\n{\nif ( course)\n{\nbuf.push(\"<div class=\\\"course-row alternating-background\\\"><div class=\\\"course-info\\\">\" + (jade.escape(null == (jade.interp = course.getTranslatedName()) ? \"\" : jade.interp)) + \"</div>\");\nvar levels = view.classroom.getLevels({courseID: course.id}).models\n// iterate levels\n;(function(){\n  var $$obj = levels;\n  if ('number' == typeof $$obj.length) {\n\n    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {\n      var level = $$obj[index];\n\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nvar levelProgress = view.levelProgressMap[level.get('original')]\nstudentLevelProgressDot_mixin(levelProgress, level, levelNumber, course);\n    }\n\n  } else {\n    var $$l = 0;\n    for (var index in $$obj) {\n      $$l++;      var level = $$obj[index];\n\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nvar levelProgress = view.levelProgressMap[level.get('original')]\nstudentLevelProgressDot_mixin(levelProgress, level, levelNumber, course);\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var versionedCourse = $$obj[$index];\n\nvar course = _.find(view.courses.models, function(c) {return c.id === versionedCourse._id;});\nif ( !course)\n{\ncontinue;\n}\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id })\nif (instance && instance.hasMember(view.user))\n{\nif ( course)\n{\nbuf.push(\"<div class=\\\"course-row alternating-background\\\"><div class=\\\"course-info\\\">\" + (jade.escape(null == (jade.interp = course.getTranslatedName()) ? \"\" : jade.interp)) + \"</div>\");\nvar levels = view.classroom.getLevels({courseID: course.id}).models\n// iterate levels\n;(function(){\n  var $$obj = levels;\n  if ('number' == typeof $$obj.length) {\n\n    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {\n      var level = $$obj[index];\n\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nvar levelProgress = view.levelProgressMap[level.get('original')]\nstudentLevelProgressDot_mixin(levelProgress, level, levelNumber, course);\n    }\n\n  } else {\n    var $$l = 0;\n    for (var index in $$obj) {\n      $$l++;      var level = $$obj[index];\n\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nvar levelProgress = view.levelProgressMap[level.get('original')]\nstudentLevelProgressDot_mixin(levelProgress, level, levelNumber, course);\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div>\");\n}\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div><div class=\\\"container-fluid\\\"><div id=\\\"footer\\\" class=\\\"small\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong>CodeCombat</strong></li><li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a href=\\\"/about#jobs\\\" data-i18n=\\\"nav.jobs\\\"></a></li><li><a href=\\\"http://blog.codecombat.com/\\\" data-i18n=\\\"nav.blog\\\"></a></li><li><a href=\\\"/legal\\\" data-i18n=\\\"nav.legal\\\"></a></li><li><a href=\\\"/privacy\\\" data-i18n=\\\"nav.privacy\\\"></a></li></ul></div>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.schools\\\"></strong></li><li><a href=\\\"/teachers/resources/faq\\\" data-i18n=\\\"teacher.educator_faq\\\"></a></li><li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li><li><a href=\\\"/teachers/resources\\\" data-i18n=\\\"nav.resource_hub\\\"></a></li><li><a href=\\\"/teachers/demo\\\" data-i18n=\\\"new_home.request_demo\\\"></a></li></ul></div>\");\n}\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.get_involved\\\"></strong></li><li><a href=\\\"/community\\\" data-i18n=\\\"nav.community\\\"></a></li><li><a href=\\\"/contribute\\\" data-i18n=\\\"nav.contribute\\\"></a></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li><li><a href=\\\"https://github.com/codecombat/codecombat\\\" data-i18n=\\\"nav.open_source\\\"></a></li></ul></div><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.support\\\"></strong></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a tabindex=\\\"-1\\\" data-i18n=\\\"nav.contact\\\" class=\\\"contact-modal\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"https://www.facebook.com/codecombat\\\" data-i18n=\\\"nav.facebook\\\"></a></li><li><a href=\\\"https://twitter.com/codecombat\\\" data-i18n=\\\"nav.twitter\\\"></a></li></ul></div></div></div></div><div id=\\\"final-footer\\\" class=\\\"small text-center\\\">Copyright ©2016 CodeCombat. All Rights Reserved.<br class=\\\"hidden-lg hidden-md\\\"/><img src=\\\"/images/pages/base/logo.png\\\" alt=\\\"CodeCombat\\\"/><br class=\\\"hidden-lg hidden-md\\\"/>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<span data-i18n=\\\"nav.help_pref\\\" class=\\\"spr\\\"></span>\");\nvar supportEmail = (me.get('preferredLanguage', true) || 'en-US').split('-')[0] == 'nl' ? 'klantenservice@codecombat.nl' : 'team@codecombat.com';\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"mailto:\" + supportEmail) }, {\"href\":true})) + \">\" + (jade.escape(null == (jade.interp = supportEmail) ? \"\" : jade.interp)) + \"</a><span data-i18n=\\\"nav.help_suff\\\" class=\\\"spl\\\"></span>\");\n}\nbuf.push(\"</div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","RootView = require 'views/core/RootView'\r\nCampaigns = require 'collections/Campaigns'\r\nClassroom = require 'models/Classroom'\r\nCourses = require 'collections/Courses'\r\nLevels = require 'collections/Levels'\r\nLevelSession = require 'models/LevelSession'\r\nLevelSessions = require 'collections/LevelSessions'\r\nUser = require 'models/User'\r\nUsers = require 'collections/Users'\r\nCourseInstances = require 'collections/CourseInstances'\r\nrequire 'vendor/d3'\r\nutils = require 'core/utils'\r\n\r\n\r\n\r\n\r\nmodule.exports = class TeacherStudentView extends RootView\r\n  id: 'teacher-student-view'\r\n  template: require 'templates/teachers/teacher-student-view'\r\n  # helper: helper\r\n  events:\r\n    # 'click .assign-student-button': 'onClickAssignStudentButton' # TODO: make this work\r\n    # 'click .enroll-student-button': 'onClickEnrollStudentButton' # TODO: make this work\r\n    'change #course-dropdown': 'onChangeCourseChart'\r\n\r\n\r\n\r\n  getTitle: -> return @user?.broadName()\r\n\r\n  initialize: (options, classroomID, @studentID) ->\r\n    @classroom = new Classroom({_id: classroomID})\r\n    @listenToOnce @classroom, 'sync', @onClassroomSync\r\n    @supermodel.trackRequest(@classroom.fetch())\r\n\r\n    @courses = new Courses()\r\n    @supermodel.trackRequest(@courses.fetch({data: { project: 'name,i18n' }}))\r\n\r\n    @courseInstances = new CourseInstances()\r\n    @supermodel.trackRequest @courseInstances.fetchForClassroom(classroomID)\r\n\r\n    @levels = new Levels()\r\n    @supermodel.trackRequest(@levels.fetchForClassroom(classroomID, {data: {project: 'name,original'}}))\r\n    @urls = require('core/urls')\r\n\r\n\r\n    @singleStudentLevelProgressDotTemplate = require 'templates/teachers/hovers/progress-dot-single-student-level'\r\n    @levelProgressMap = {}\r\n\r\n    super(options)\r\n\r\n  onLoaded: ->\r\n    if @students.loaded and not @destroyed\r\n      @user = _.find(@students.models, (s)=> s.id is @studentID)\r\n      @updateLastPlayedInfo()\r\n      @updateLevelProgressMap()\r\n      @updateLevelDataMap()\r\n      @calculateStandardDev()\r\n      @render()\r\n    super()\r\n\r\n  afterRender: ->\r\n    super(arguments...)\r\n    $('.progress-dot, .btn-view-project-level').each (i, el) ->\r\n      dot = $(el)\r\n      dot.tooltip({\r\n        html: true\r\n        container: dot\r\n      }).delegate '.tooltip', 'mousemove', ->\r\n        dot.tooltip('hide')\r\n\r\n    @drawBarGraph()\r\n    @onChangeCourseChart()\r\n\r\n\r\n  onChangeCourseChart: (e)->\r\n    if (e)\r\n      selected = ('#visualisation-'+((e.currentTarget).value))\r\n      $(\"[id|='visualisation']\").hide()\r\n      $(selected).show()\r\n\r\n  calculateStandardDev: ->\r\n    return unless @courses.loaded and @levels.loaded and @sessions?.loaded and @levelData\r\n\r\n    @courseComparisonMap = []\r\n    for versionedCourse in @classroom.get('courses') or []\r\n      # course = _.find @courses.models, (c) => c.id is versionedCourse._id\r\n      course = @courses.get(versionedCourse._id)\r\n      numbers = []\r\n      studentCourseTotal = 0\r\n      members = 0 #this is the COUNT for our standard deviation, number of members who have played all of the levels this student has played.\r\n      for member in @classroom.get('members')\r\n        number = 0\r\n        memberPlayed = 0 # number of levels a member has played that this student has also played\r\n        for versionedLevel in versionedCourse.levels\r\n          for session in @sessions.models\r\n            if session.get('level').original is versionedLevel.original and session.get('creator') is member\r\n              playedLevel = _.findWhere(@levelData, {levelID: session.get('level').original})\r\n              if playedLevel.levelProgress is 'complete' or playedLevel.levelProgress is 'started'\r\n                number += session.get('playtime') or 0\r\n                memberPlayed += 1\r\n              if session.get('creator') is @studentID\r\n                studentCourseTotal += session.get('playtime') or 0\r\n        if memberPlayed > 0 then members += 1\r\n        numbers.push number\r\n\r\n      # add all numbers[]\r\n      sum = numbers.reduce (a,b) -> a + b\r\n\r\n      # divide by members to get MEAN, remember MEAN is only an average of the members' performance on levels THIS student has done.\r\n      mean = sum/members\r\n\r\n      # # for each number in numbers[], subtract MEAN then SQUARE, add all, then divide by COUNT to get VARIANCE\r\n      diffSum = numbers.map((num) -> (num-mean)**2).reduce (a,b) -> a+b\r\n      variance = (diffSum / members)\r\n\r\n      # square root of VARIANCE is standardDev\r\n      StandardDev = Math.sqrt(variance)\r\n\r\n      perf = -(studentCourseTotal - mean) / StandardDev\r\n      perf = if perf > 0 then Math.ceil(perf) else Math.floor(perf)\r\n\r\n      @courseComparisonMap.push {\r\n        courseModel: course\r\n        courseID: course.get('_id')\r\n        studentCourseTotal: studentCourseTotal\r\n        standardDev: StandardDev\r\n        mean: mean\r\n        performance: perf\r\n      }\r\n\r\n    # console.log (@courseComparisonMap)\r\n\r\n  drawBarGraph: ->\r\n    return unless @courses.loaded and @levels.loaded and @sessions?.loaded and @levelData and @courseComparisonMap\r\n\r\n    WIDTH = 1142\r\n    HEIGHT = 600\r\n    MARGINS = {\r\n      top: 50\r\n      right: 20\r\n      bottom: 50\r\n      left: 70\r\n    }\r\n\r\n\r\n    for versionedCourse in @classroom.get('courses') or []\r\n      # this does all of the courses, logic for whether student was assigned is in corresponding jade file\r\n      vis = d3.select('#visualisation-'+versionedCourse._id)\r\n      # TODO: continue if selector isn't found.\r\n      courseLevelData = []\r\n      for level in @levelData when level.courseID is versionedCourse._id\r\n        courseLevelData.push level\r\n\r\n      course = @courses.get(versionedCourse._id)\r\n      levels = @classroom.getLevels({courseID: course.id}).models\r\n\r\n\r\n      xRange = d3.scale.ordinal().rangeRoundBands([MARGINS.left, WIDTH - MARGINS.right], 0.1).domain(courseLevelData.map( (d) -> d.levelIndex))\r\n      yRange = d3.scale.linear().range([HEIGHT - (MARGINS.top), MARGINS.bottom]).domain([0, d3.max(courseLevelData, (d) -> if d.classAvg > d.studentTime then d.classAvg else d.studentTime)])\r\n      xAxis = d3.svg.axis().scale(xRange).tickSize(1).tickSubdivide(true)\r\n      yAxis = d3.svg.axis().scale(yRange).tickSize(1).orient('left').tickSubdivide(true)\r\n\r\n      vis.append('svg:g').attr('class', 'x axis').attr('transform', 'translate(0,' + (HEIGHT - (MARGINS.bottom)) + ')').call xAxis\r\n      vis.append('svg:g').attr('class', 'y axis').attr('transform', 'translate(' + MARGINS.left + ',0)').call yAxis\r\n\r\n      chart = vis.selectAll('rect')\r\n        .data(courseLevelData)\r\n        .enter()\r\n      # draw classroom average bars\r\n      chart.append('rect')\r\n        .attr('class', 'classroom-bar')\r\n        .attr('x', ((d) -> xRange(d.levelIndex) + (xRange.rangeBand())/2))\r\n        .attr('y', (d) -> yRange(d.classAvg))\r\n        .attr('width', (xRange.rangeBand())/2)\r\n        .attr('height', (d) -> HEIGHT - (MARGINS.bottom) - yRange(d.classAvg))\r\n        .attr('fill', '#5CB4D0')\r\n      # add classroom average values\r\n      chart.append('text')\r\n        .attr('x', ((d) -> xRange(d.levelIndex) + (xRange.rangeBand())/2))\r\n        .attr('y', ((d) -> yRange(d.classAvg) - 3 ))\r\n        .text((d)-> if d.classAvg isnt 0 then d.classAvg)\r\n        .attr('class', 'label')\r\n      # draw student playtime bars\r\n      chart.append('rect')\r\n        .attr('class', 'student-bar')\r\n        .attr('x', ((d) -> xRange(d.levelIndex)))\r\n        .attr('y', (d) -> yRange(d.studentTime))\r\n        .attr('width', (xRange.rangeBand())/2)\r\n        .attr('height', (d) -> HEIGHT - (MARGINS.bottom) - yRange(d.studentTime))\r\n        .attr('fill', (d) -> if d.levelProgress is 'complete' then '#20572B' else '#F2BE19')\r\n      # add student playtime value\r\n      chart.append('text')\r\n        .attr('x', ((d) -> xRange(d.levelIndex)) )\r\n        .attr('y', ((d) -> yRange(d.studentTime) - 3 ))\r\n        .text((d)-> if d.studentTime isnt 0 then d.studentTime)\r\n        .attr('class', 'label')\r\n\r\n      labels = vis.append(\"g\").attr(\"class\", \"labels\")\r\n      # add Playtime axis label\r\n      labels.append(\"text\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .attr(\"y\", 20)\r\n        .attr(\"x\", - HEIGHT/2)\r\n        .attr(\"dy\", \".71em\")\r\n        .style(\"text-anchor\", \"middle\")\r\n        .text($.i18n.t(\"teacher.playtime_axis\"))\r\n      # add levels axis label\r\n      labels.append(\"text\")\r\n        .attr(\"x\", WIDTH/2)\r\n        .attr(\"y\", HEIGHT - 10)\r\n        .text($.i18n.t(\"teacher.levels_axis\") + \" \" + course.getTranslatedName())\r\n        .style(\"text-anchor\", \"middle\")\r\n\r\n\r\n  onClassroomSync: ->\r\n    # Now that we have the classroom from db, can request all level sessions for this classroom\r\n    @sessions = new LevelSessions()\r\n    @sessions.comparator = 'changed' # Sort level sessions by changed field, ascending\r\n    @listenTo @sessions, 'sync', @onSessionsSync\r\n    @supermodel.trackRequests(@sessions.fetchForAllClassroomMembers(@classroom))\r\n\r\n    @students = new Users()\r\n    jqxhrs = @students.fetchForClassroom(@classroom, removeDeleted: true)\r\n    # @listenTo @students, ->\r\n    @supermodel.trackRequests jqxhrs\r\n\r\n  onSessionsSync: ->\r\n    # Now we have some level sessions, and enough data to calculate last played string\r\n    # This may be called multiple times due to paged server API calls via fetchForAllClassroomMembers\r\n    return if @destroyed # Don't do anything if page was destroyed after db request\r\n    @updateLastPlayedInfo()\r\n    @updateLevelProgressMap()\r\n    @updateLevelDataMap()\r\n\r\n  updateLastPlayedInfo: ->\r\n    # Make sure all our data is loaded, @sessions may not even be intialized yet\r\n    return unless @courses.loaded and @levels.loaded and @sessions?.loaded and @user?.loaded\r\n\r\n    # Use lodash to find the last session for our user, @sessions already sorted by changed date\r\n    session = _.findLast @sessions.models, (s) => s.get('creator') is @user.id\r\n\r\n    return unless session\r\n\r\n    # Find course for this level session, for it's name\r\n    # Level.original is the original id, used for level versioning, and connects levels to level sessions\r\n    for versionedCourse in @classroom.get('courses') or []\r\n      for level in versionedCourse.levels\r\n        if level.original is session.get('level').original\r\n          # Found the level for our level session in the classroom versioned courses\r\n          # Find the full course so we can get it's name\r\n          course = @courses.get(versionedCourse._id)\r\n          break\r\n\r\n    # Find level for this level session, for it's name\r\n    level = @levels.findWhere({original: session.get('level').original})\r\n\r\n    # extra vars for display\r\n    @lastPlayedCourse = course\r\n    @lastPlayedLevel = level\r\n    @lastPlayedSession = session\r\n\r\n  lastPlayedString: ->\r\n    # Update last played string based on what we found\r\n    lastPlayedString = \"\"\r\n    lastPlayedString += @lastPlayedCourse.getTranslatedName() if @lastPlayedCourse\r\n    lastPlayedString += \": \" if @lastPlayedCourse and @lastPlayedLevel\r\n    lastPlayedString += @lastPlayedLevel.get('name') if @lastPlayedLevel\r\n    lastPlayedString += \", on \" if @lastPlayedCourse or @lastPlayedLevel\r\n    lastPlayedString += moment(@lastPlayedSession.get('changed')).format(\"LLLL\") if @lastPlayedSession\r\n    lastPlayedString\r\n\r\n  updateLevelProgressMap: ->\r\n    return unless @courses.loaded and @levels.loaded and @sessions?.loaded and @user?.loaded\r\n\r\n    # Map levels to sessions once, so we don't have to search entire session list multiple times below\r\n    @levelSessionMap = {}\r\n    for session in @sessions.models when session.get('creator') is @studentID\r\n      @levelSessionMap[session.get('level').original] = session\r\n\r\n\r\n    # Create mapping of level to student progress\r\n    @levelProgressMap = {}\r\n    for versionedCourse in @classroom.get('courses') or []\r\n      for versionedLevel in versionedCourse.levels\r\n        session = @levelSessionMap[versionedLevel.original]\r\n        if session\r\n          if session.get('state')?.complete\r\n            @levelProgressMap[versionedLevel.original] = 'complete'\r\n          else\r\n            @levelProgressMap[versionedLevel.original] = 'started'\r\n        else\r\n          @levelProgressMap[versionedLevel.original] = 'not started'\r\n\r\n  updateLevelDataMap: ->\r\n    return unless @courses.loaded and @levels.loaded and @sessions?.loaded\r\n\r\n    @levelData = []\r\n    for versionedCourse in @classroom.get('courses') or []\r\n      course = @courses.get(versionedCourse._id)\r\n      for versionedLevel in versionedCourse.levels\r\n        playTime = 0 # TODO: this and timesPlayed should probably only count when the levels are completed\r\n        timesPlayed = 0\r\n        studentTime = 0\r\n        levelProgress = 'not started'\r\n        for session in @sessions.models\r\n          if session.get('level').original is versionedLevel.original\r\n            # if @levelProgressMap[versionedLevel.original] == 'complete' # ideally, don't log sessions that aren't completed in the class\r\n            playTime += session.get('playtime') or 0\r\n            timesPlayed += 1\r\n            if session.get('creator') is @studentID\r\n              studentTime = session.get('playtime') or 0\r\n              if @levelProgressMap[versionedLevel.original] is 'complete'\r\n                levelProgress = 'complete'\r\n              else if @levelProgressMap[versionedLevel.original] is 'started'\r\n                levelProgress = 'started'\r\n        classAvg = if timesPlayed > 0 then Math.round(playTime / timesPlayed) else 0 # only when someone other than the user has played\r\n        # console.log (timesPlayed)\r\n        @levelData.push {\r\n          levelID: versionedLevel.original\r\n          levelIndex: @classroom.getLevelNumber(versionedLevel.original)\r\n          levelName: versionedLevel.name\r\n          courseModel: course\r\n          courseID: course.get('_id')\r\n          classAvg: classAvg\r\n          studentTime: if studentTime then studentTime else 0\r\n          levelProgress: levelProgress\r\n          # required:\r\n        }\r\n\r\n  studentStatusString: () ->\r\n    status = @user.prepaidStatus()\r\n    return \"\" unless @user.get('coursePrepaid')\r\n    expires = @user.get('coursePrepaid')?.endDate\r\n    string = switch status\r\n      when 'not-enrolled' then $.i18n.t('teacher.status_not_enrolled')\r\n      when 'enrolled' then (if expires then $.i18n.t('teacher.status_enrolled') else '-')\r\n      when 'expired' then $.i18n.t('teacher.status_expired')\r\n    if expires\r\n      return string.replace('{{date}}', moment(expires).utc().format('l'))\r\n    else\r\n      # this probably doesn't happen\r\n      return string.replace('{{date}}', \"Never\")\r\n\r\n\r\n  # TODO: Hookup enroll/assign functionality\r\n\r\n  # onClickEnrollStudentButton: (e) ->\r\n  #   userID = $(e.currentTarget).data('user-id')\r\n  #   user = @user.get(userID)\r\n  #   selectedUsers = new Users([user])\r\n  #   @enrollStudents(selectedUsers)\r\n  #   window.tracker?.trackEvent $(e.currentTarget).data('event-action'), category: 'Teachers', classroomID: @classroom.id, userID: userID, ['Mixpanel']\r\n  #\r\n  # enrollStudents: (selectedUsers) ->\r\n  #   modal = new ActivateLicensesModal { @classroom, selectedUsers, users: @user }\r\n  #   @openModalView(modal)\r\n  #   modal.once 'redeem-users', (enrolledUsers) =>\r\n  #     enrolledUsers.each (newUser) =>\r\n  #       user = @user.get(newUser.id)\r\n  #       if user\r\n  #         user.set(newUser.attributes)\r\n  #     null\r\n\r\n\r\n  # levelPopoverContent: (level, session, i) ->\r\n  #   return null unless level\r\n  #   context = {\r\n  #     moment: moment\r\n  #     level: level\r\n  #     session: session\r\n  #     i: i\r\n  #     canViewSolution: @teacherMode\r\n  #   }\r\n  #   return popoverTemplate(context)\r\n  #\r\n  # getLevelURL: (level, course, courseInstance, session) ->\r\n  #   return null unless @teacherMode and _.all(arguments)\r\n  #   \"/play/level/#{level.get('slug')}?course=#{course.id}&course-instance=#{courseInstance.id}&session=#{session.id}&observing=true\"\r\n"]}