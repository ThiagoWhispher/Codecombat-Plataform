{"version":3,"sources":["app/templates/editor/modal/new-model-modal.jade","app/views/editor/modal/NewModelModal.coffee"],"names":[],"mappings":"AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;;ACAA;EAAA;;;AAAA,YAAY,QAAQ,sBAAR;;AACZ,WAAW,QAAQ,wCAAR;;AACX,QAAQ,QAAQ,YAAR;;AAER,MAAM,CAAC,OAAP,GAAuB;;;0BACrB,KAAI;;0BACJ,WAAU;;0BACV,QAAO;;0BAEP,SACE;IAAA,iCAAiC,kBAAjC;IACA,eAAe,kBADf;;;EAGW,uBAAC,OAAD;IACX,+CAAM,OAAN;IACA,IAAC,WAAD,GAAc,OAAO,CAAC;IACtB,IAAC,WAAD,GAAc,OAAO,CAAC;IACtB,IAAC,cAAD,GAAiB,gBAAa,CAAC,CAAC,CAAC,MAAM,CAAC,OAAT,CAAiB,IAAC,WAAlB,CAAD,CAAb,GAA2C;IAC5D,IAAC,WAAD,GAAc,OAAO,CAAC;EALX;;0BAOb,eAAc;AACZ;IAAA,QAAQ,IAAI,IAAC;IACb,OAAO,IAAC,IAAG,CAAC,IAAL,CAAU,OAAV,CAAkB,CAAC,GAAnB;IACP,KAAK,CAAC,GAAN,CAAU,MAAV,EAAkB,IAAlB;IACA,IAAG,IAAC,WAAU,CAAC,IAAZ,KAAoB,OAAvB;MACE,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,IAAC,WAAU,CAAC,MAAM,CAAC,SAAD,CAAQ,CAAC,KAA9C,EADF;;IAEA,IAAG,KAAK,CAAC,MAAN,EAAc,CAAC,UAAU,CAAC,WAA7B;MACE,KAAK,CAAC,GAAN,CAAU,aAAV,EAAyB;QAAC;UAAC,QAAQ,OAAT;UAAkB,QAAQ,EAAE,CAAC,EAA7B;SAAD;OAAzB,EADF;;IAEA,IAAqD,uBAArD;AAAA;AAAA;;QAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,IAAf;AAAA;;WACA;EATY;;0BAWd,mBAAkB,SAAC,CAAD;AAChB;IAAA,CAAC,CAAC,cAAF;IACA,QAAQ,IAAC,aAAD;IACR,MAAM,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB;MAAC,MAAM,MAAP;KAAjB;IACN,KAAc,GAAd;AAAA;;IAEA,KAAK,CAAC,eAAN,CAAsB,IAAC,IAAvB;IACA,IAAC,YAAD,CAAa,IAAC,IAAG,CAAC,IAAL,CAAU,aAAV,CAAb;IACA,GAAG,CAAC,KAAJ,CAAU;aAAA;QACR,KAAC,YAAD;eACA,KAAK,CAAC,iBAAN,CAAwB,KAAC,IAAzB,EAA8B,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,YAAf,CAA9B;MAFQ;IAAA,QAAV;WAIA,GAAG,CAAC,OAAJ,CAAY;aAAA;QACV,KAAC,IAAG,CAAC,KAAL,CAAW,MAAX;eACA,KAAC,QAAD,CAAS,eAAT,EAA0B,KAA1B;MAFU;IAAA,QAAZ;EAZgB;;0BAiBlB,cAAa;IACX;WACA,CAAC,CAAC,KAAF,CAAQ,CAAC;aAAA;AAAG;8CAAI,CAAE,IAAN,CAAW,OAAX,CAAmB,CAAC,KAApB;MAAH;IAAA,QAAD,CAAR,EAA0C,GAA1C;EAFW;;;;GA5C8B","file":"public/javascripts/app/views/editor/modal/NewModelModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\">\");\nif ( view.closeButton)\n{\nbuf.push(\"<div type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" class=\\\"button close\\\">&times;</div>\");\n}\nbuf.push(\"<h3\" + (jade.attrs({ 'data-i18n':(\"\" + (view.newModelTitle) + \"\") }, {\"data-i18n\":true})) + \">Create New \" + (jade.escape((jade.interp = view.modelLabel) == null ? '' : jade.interp)) + \"</h3></div><div class=\\\"modal-body\\\"><form class=\\\"form\\\"><div class=\\\"form-group\\\"><label for=\\\"name\\\" data-i18n=\\\"general.name\\\" class=\\\"control-label\\\">Name</label><input id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\"/></div></form></div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div><div class=\\\"modal-footer\\\"><button data-dismiss=\\\"modal\\\" data-i18n=\\\"common.cancel\\\" class=\\\"btn\\\">Cancel</button><button data-i18n=\\\"common.create\\\" class=\\\"btn btn-primary new-model-submit\\\">Create</button></div><div class=\\\"modal-body wait secret\\\"><h3 data-i18n=\\\"play_level.tip_reticulating\\\">Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ModalView = require 'views/core/ModalView'\r\ntemplate = require 'templates/editor/modal/new-model-modal'\r\nforms = require 'core/forms'\r\n\r\nmodule.exports = class NewModelModal extends ModalView\r\n  id: 'new-model-modal'\r\n  template: template\r\n  plain: false\r\n\r\n  events:\r\n    'click button.new-model-submit': 'onModelSubmitted'\r\n    'submit form': 'onModelSubmitted'\r\n\r\n  constructor: (options) ->\r\n    super options\r\n    @modelClass = options.model\r\n    @modelLabel = options.modelLabel\r\n    @newModelTitle = \"editor.new_#{_.string.slugify @modelLabel}_title\"\r\n    @properties = options.properties\r\n\r\n  makeNewModel: ->\r\n    model = new @modelClass\r\n    name = @$el.find('#name').val()\r\n    model.set('name', name)\r\n    if @modelClass.name is 'Level'\r\n      model.set('tasks', @modelClass.schema.default.tasks)\r\n    if model.schema().properties.permissions\r\n      model.set 'permissions', [{access: 'owner', target: me.id}]\r\n    model.set(key, prop) for key, prop of @properties if @properties?\r\n    model\r\n\r\n  onModelSubmitted: (e) ->\r\n    e.preventDefault()\r\n    model = @makeNewModel()\r\n    res = model.save(null, {type: 'POST'})  # Override PUT so we can trigger postFirstVersion logic if needed\r\n    return unless res\r\n\r\n    forms.clearFormAlerts @$el\r\n    @showLoading(@$el.find('.modal-body'))\r\n    res.error =>\r\n      @hideLoading()\r\n      forms.applyErrorsToForm(@$el, JSON.parse(res.responseText))\r\n      #Backbone.Mediator.publish 'model-save-fail', model\r\n    res.success =>\r\n      @$el.modal('hide')\r\n      @trigger 'model-created', model\r\n      #Backbone.Mediator.publish 'model-save-success', model\r\n\r\n  afterInsert: ->\r\n    super()\r\n    _.delay (=> @$el?.find('#name').focus()), 500\r\n"]}