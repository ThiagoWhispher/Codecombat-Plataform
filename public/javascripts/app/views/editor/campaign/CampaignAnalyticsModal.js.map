{"version":3,"sources":["app/templates/editor/campaign/campaign-analytics-modal.jade","app/views/editor/campaign/CampaignAnalyticsModal.coffee"],"names":[],"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","file":"public/javascripts/app/views/editor/campaign/CampaignAnalyticsModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,campaignCompletions = locals_.campaignCompletions,showLeftGame = locals_.showLeftGame,showSubscriptions = locals_.showSubscriptions;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\">\");\nif ( view.closeButton)\n{\nbuf.push(\"<div type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" class=\\\"button close\\\">&times;</div>\");\n}\nbuf.push(\"<h3>Campaign Analytics</h3>\");\nif ( campaignCompletions.startDay && campaignCompletions.endDay)\n{\nbuf.push(\"<div class=\\\"input-group input-group-sm\\\"><input\" + (jade.attrs({ 'id':('input-startday'), 'type':('text'), 'style':('width:100px;'), 'value':(campaignCompletions.startDay), \"class\": [('form-control')] }, {\"type\":true,\"style\":true,\"value\":true})) + \"/><input\" + (jade.attrs({ 'id':('input-endday'), 'type':('text'), 'style':('width:100px;'), 'value':(campaignCompletions.endDay), \"class\": [('form-control')] }, {\"type\":true,\"style\":true,\"value\":true})) + \"/><button id=\\\"reload-button\\\" style=\\\"margin-left:10px;\\\" class=\\\"btn btn-default btn-sm\\\">Reload</button></div>\");\n}\nbuf.push(\"<label style=\\\"font-size:10px;font-weight:normal;\\\"><span>Double-click row to open level details.</span><span>&nbsp;&nbsp;</span><input\" + (jade.attrs({ 'id':('option-show-left-game'), 'type':('checkbox'), 'checked':(showLeftGame) }, {\"type\":true,\"checked\":true})) + \"/><span>Show Left Game</span><span>&nbsp;&nbsp;</span><input\" + (jade.attrs({ 'id':('option-show-subscriptions'), 'type':('checkbox'), 'checked':(showSubscriptions) }, {\"type\":true,\"checked\":true})) + \"/><span>Show Subscriptions</span></label></div><div class=\\\"modal-body\\\">\");\nif ( campaignCompletions && campaignCompletions.levels)\n{\nbuf.push(\"<table style=\\\"font-size:10pt\\\" class=\\\"table table-bordered table-condensed table-hover\\\"><thead><tr><td class=\\\"level\\\">Level</td><td>Started</td><td>Finished</td><td class=\\\"completion-rate\\\">Completion %</td><td>Playtime (s)</td>\");\nif ( showLeftGame)\n{\nbuf.push(\"<td>Left Game</td><td>LG %</td><td>LG/s</td>\");\n}\nif ( showSubscriptions)\n{\nbuf.push(\"<td>Sub Shown</td><td>Sub Purchased</td>\");\n}\nbuf.push(\"</tr></thead><tbody>\");\nfor (var i = 0; i < campaignCompletions.levels.length; i++)\n{\nbuf.push(\"<tr\" + (jade.attrs({ 'data-level-slug':(campaignCompletions.levels[i].level), \"class\": [('level')] }, {\"data-level-slug\":true})) + \"><td class=\\\"level-name-container\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].level) ? \"\" : jade.interp)) + \"<span\" + (jade.attrs({ 'style':(\"width:\" + (campaignCompletions.levels[i].usersRemaining || 0) + \"%;\"), \"class\": [('level-name-background')] }, {\"style\":true})) + \"></span></td><td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].started) ? \"\" : jade.interp)) + \"</td><td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].finished) ? \"\" : jade.interp)) + \"</td>\");\nif ( campaignCompletions.levels[i].completionRate)\n{\nif ( campaignCompletions.top3 && campaignCompletions.top3.indexOf(campaignCompletions.levels[i].level) >= 0)\n{\nbuf.push(\"<td style=\\\"background-color:lightblue;\\\" class=\\\"level-completion-container\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].completionRate.toFixed(2)) ? \"\" : jade.interp)) + \"<svg\" + (jade.attrs({ 'id':(\"background\" + (campaignCompletions.levels[i].level) + \"\"), \"class\": [('level-completion-background')] }, {\"id\":true})) + \"></svg></td>\");\n}\nelse if ( campaignCompletions.bottom3 && campaignCompletions.bottom3.indexOf(campaignCompletions.levels[i].level) >= 0)\n{\nbuf.push(\"<td style=\\\"background-color:pink;\\\" class=\\\"level-completion-container\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].completionRate.toFixed(2)) ? \"\" : jade.interp)) + \"<svg\" + (jade.attrs({ 'id':(\"background\" + (campaignCompletions.levels[i].level) + \"\"), \"class\": [('level-completion-background')] }, {\"id\":true})) + \"></svg></td>\");\n}\nelse\n{\nbuf.push(\"<td class=\\\"level-completion-container\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].completionRate.toFixed(2)) ? \"\" : jade.interp)) + \"<svg\" + (jade.attrs({ 'id':(\"background\" + (campaignCompletions.levels[i].level) + \"\"), \"class\": [('level-completion-background')] }, {\"id\":true})) + \"></svg></td>\");\n}\n}\nelse\n{\nbuf.push(\"<td class=\\\"completion-rate\\\"></td>\");\n}\nif ( campaignCompletions.levels[i].averagePlaytime)\n{\nbuf.push(\"<td class=\\\"level-playtime-container\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].averagePlaytime.toFixed(2)) ? \"\" : jade.interp)) + \"<span\" + (jade.attrs({ 'style':(\"width:\" + (campaignCompletions.levels[i].playtimePercentage || 0) + \"%;\"), \"class\": [('level-playtime-background')] }, {\"style\":true})) + \"></span></td>\");\n}\nelse\n{\nbuf.push(\"<td></td>\");\n}\nif ( showLeftGame)\n{\nbuf.push(\"<td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].dropped) ? \"\" : jade.interp)) + \"</td>\");\nif ( campaignCompletions.levels[i].dropPercentage)\n{\nif ( campaignCompletions.top3DropPercentage && campaignCompletions.top3DropPercentage.indexOf(campaignCompletions.levels[i].level) >= 0)\n{\nbuf.push(\"<td style=\\\"background-color:pink;\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].dropPercentage.toFixed(2)) ? \"\" : jade.interp)) + \"</td>\");\n}\nelse\n{\nbuf.push(\"<td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].dropPercentage.toFixed(2)) ? \"\" : jade.interp)) + \"</td>\");\n}\n}\nelse\n{\nbuf.push(\"<td></td>\");\n}\nif ( campaignCompletions.levels[i].droppedPerSecond)\n{\nif ( campaignCompletions.top3DropPerSecond && campaignCompletions.top3DropPerSecond.indexOf(campaignCompletions.levels[i].level) >= 0)\n{\nbuf.push(\"<td style=\\\"background-color:pink;\\\">\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].droppedPerSecond.toFixed(2)) ? \"\" : jade.interp)) + \"</td>\");\n}\nelse\n{\nbuf.push(\"<td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].droppedPerSecond.toFixed(2)) ? \"\" : jade.interp)) + \"</td>\");\n}\n}\nelse\n{\nbuf.push(\"<td></td>\");\n}\n}\nif ( showSubscriptions)\n{\nbuf.push(\"<td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].subsShown) ? \"\" : jade.interp)) + \"</td><td>\" + (jade.escape(null == (jade.interp = campaignCompletions.levels[i].subsPurchased) ? \"\" : jade.interp)) + \"</td>\");\n}\nbuf.push(\"</tr>\");\n}\nbuf.push(\"</tbody></table>\");\n}\nelse\n{\nbuf.push(\"<div>Loading...</div>\");\n}\nbuf.push(\"</div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","template = require 'templates/editor/campaign/campaign-analytics-modal'\r\nutils = require 'core/utils'\r\nrequire 'vendor/d3'\r\nModalView = require 'views/core/ModalView'\r\n\r\n# TODO: jquery-ui datepicker doesn't work well in this view\r\n# TODO: the date format handling is confusing (yyyy-mm-dd <=> yyyymmdd)\r\n\r\nmodule.exports = class CampaignAnalyticsModal extends ModalView\r\n  id: 'campaign-analytics-modal'\r\n  template: template\r\n  plain: true\r\n\r\n  events:\r\n    'click #reload-button': 'onClickReloadButton'\r\n    'dblclick .level': 'onDblClickLevel'\r\n    'change #option-show-left-game': 'updateShowLeftGame'\r\n    'change #option-show-subscriptions': 'updateShowSubscriptions'\r\n\r\n  constructor: (options, @campaignHandle, @campaignCompletions) ->\r\n    super options\r\n    @showLeftGame = true\r\n    @showSubscriptions = true\r\n    @getCampaignAnalytics() if me.isAdmin()\r\n\r\n  getRenderData: ->\r\n    c = super()\r\n    c.showLeftGame = @showLeftGame\r\n    c.showSubscriptions = @showSubscriptions\r\n    c.campaignCompletions = @campaignCompletions\r\n    c\r\n\r\n  afterRender: ->\r\n    super()\r\n    $(\"#input-startday\").datepicker dateFormat: \"yy-mm-dd\"\r\n    $(\"#input-endday\").datepicker dateFormat: \"yy-mm-dd\"\r\n    @addCompletionLineGraphs()\r\n\r\n  updateShowLeftGame: ->\r\n    @showLeftGame = @$el.find('#option-show-left-game').prop('checked')\r\n    @render()\r\n\r\n  updateShowSubscriptions: ->\r\n    @showSubscriptions = @$el.find('#option-show-subscriptions').prop('checked')\r\n    @render()\r\n\r\n  onClickReloadButton: () =>\r\n    startDay = $('#input-startday').val()\r\n    endDay = $('#input-endday').val()\r\n    delete @campaignCompletions.levels\r\n    @campaignCompletions.startDay = startDay\r\n    @campaignCompletions.endDay = endDay\r\n    @render()\r\n    @getCampaignAnalytics startDay, endDay\r\n\r\n  onDblClickLevel: (e) ->\r\n    row = $(e.target).parents('.level')\r\n    Backbone.Mediator.publish 'editor:campaign-analytics-modal-closed', targetLevelSlug: row.data 'level-slug'\r\n    @hide()\r\n\r\n  addCompletionLineGraphs: ->\r\n    # TODO: no line graphs if some levels without completion rates?\r\n    return unless @campaignCompletions.levels\r\n    for level in @campaignCompletions.levels\r\n      days = []\r\n      for day of level['days']\r\n        continue unless level['days'][day].started > 0\r\n        days.push\r\n          day: day\r\n          rate: level['days'][day].finished / level['days'][day].started\r\n          count: level['days'][day].started\r\n      days.sort (a, b) -> a.day - b.day\r\n      data = []\r\n      for i in [0...days.length]\r\n        data.push\r\n          x: i\r\n          y: days[i].rate\r\n          c: days[i].count\r\n      @addLineGraph '#background' + level.level, data\r\n\r\n  addLineGraph: (containerSelector, lineData, lineColor='green', min=0, max=1.0) ->\r\n    # Add a line chart to the given container\r\n    # Adjust stroke-weight based on segment count: width 0.3 to 3.0 for counts roughly 100 to 10000\r\n    # TODO: Move this to a utility library\r\n    vis = d3.select(containerSelector)\r\n    width = $(containerSelector).width()\r\n    height = $(containerSelector).height()\r\n    xRange = d3.scale.linear().range([0, width]).domain([d3.min(lineData, (d) -> d.x), d3.max(lineData, (d) -> d.x)])\r\n    yRange = d3.scale.linear().range([height, 0]).domain([min, max])\r\n    lines = []\r\n    for i in [0...lineData.length-1]\r\n      lines.push \r\n        x1: xRange(lineData[i].x)\r\n        y1: yRange(lineData[i].y)\r\n        x2: xRange(lineData[i + 1].x)\r\n        y2: yRange(lineData[i + 1].y)\r\n        strokeWidth: Math.min(3, Math.max(0.3, Math.log(lineData[i].c/10)/2))\r\n    vis.selectAll('.line')\r\n      .data(lines)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) -> d.x1)\r\n      .attr(\"y1\", (d) -> d.y1)\r\n      .attr(\"x2\", (d) -> d.x2)\r\n      .attr(\"y2\", (d) -> d.y2)\r\n      .style(\"stroke-width\", (d) -> d.strokeWidth)\r\n      .style(\"stroke\", lineColor)\r\n\r\n  getCampaignAnalytics: (startDay, endDay) =>\r\n    if startDay?\r\n      startDayDashed = startDay\r\n      startDay = startDay.replace(/-/g, '')\r\n    else\r\n      startDay = utils.getUTCDay -14\r\n      startDayDashed = \"#{startDay[0..3]}-#{startDay[4..5]}-#{startDay[6..7]}\"\r\n    if endDay?\r\n      endDayDashed = endDay\r\n      endDay = endDay.replace(/-/g, '')\r\n    else \r\n      endDay = utils.getUTCDay -1\r\n      endDayDashed = \"#{endDay[0..3]}-#{endDay[4..5]}-#{endDay[6..7]}\"\r\n    @campaignCompletions.startDay = startDayDashed\r\n    @campaignCompletions.endDay = endDayDashed\r\n\r\n    # Chain these together so we can calculate relative metrics (e.g. left game per second)\r\n    @getCampaignLevelCompletions startDay, endDay, () =>\r\n      @render?()\r\n      @getCompaignLevelDrops startDay, endDay, () =>\r\n        @render?()\r\n        @getCampaignAveragePlaytimes startDayDashed, endDayDashed, () =>\r\n          @render?()\r\n          @getCampaignLevelSubscriptions startDay, endDay, () =>\r\n            @render?()\r\n\r\n  getCampaignAveragePlaytimes: (startDay, endDay, doneCallback) =>\r\n    # Fetch level average playtimes\r\n    # Needs date format yyyy-mm-dd\r\n    success = (data) =>\r\n      return doneCallback() if @destroyed\r\n      # console.log 'getCampaignAveragePlaytimes success', data\r\n      levelAverages = {}\r\n      maxPlaytime = 0\r\n      for item in data\r\n        levelAverages[item.level] ?= []\r\n        levelAverages[item.level].push item.average\r\n      for level in @campaignCompletions.levels\r\n        if levelAverages[level.level]\r\n          if levelAverages[level.level].length > 0\r\n            total = _.reduce levelAverages[level.level], ((sum, num) -> sum + num)\r\n            level.averagePlaytime = total / levelAverages[level.level].length\r\n            maxPlaytime = level.averagePlaytime if maxPlaytime < level.averagePlaytime\r\n            if level.averagePlaytime > 0 and level.dropped > 0\r\n              level.droppedPerSecond = level.dropped / level.averagePlaytime\r\n          else\r\n            level.averagePlaytime = 0.0\r\n\r\n      addPlaytimePercentage = (item) ->\r\n        item.playtimePercentage = Math.round(item.averagePlaytime / maxPlaytime * 100.0) unless maxPlaytime is 0\r\n        item\r\n      @campaignCompletions.levels = _.map @campaignCompletions.levels, addPlaytimePercentage, @\r\n\r\n      sortedLevels = _.cloneDeep @campaignCompletions.levels\r\n      sortedLevels = _.filter sortedLevels, ((a) -> a.droppedPerSecond > 0), @\r\n      sortedLevels.sort (a, b) -> b.droppedPerSecond - a.droppedPerSecond\r\n      @campaignCompletions.top3DropPerSecond = _.pluck sortedLevels[0..2], 'level'\r\n      doneCallback()\r\n\r\n    levelSlugs = _.pluck @campaignCompletions.levels, 'level'\r\n\r\n    request = @supermodel.addRequestResource 'playtime_averages', {\r\n      url: '/db/level/-/playtime_averages'\r\n      data: {startDay: startDay, endDay: endDay, slugs: levelSlugs}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    request.load()\r\n\r\n  getCampaignLevelCompletions: (startDay, endDay, doneCallback) =>\r\n    # Needs date format yyyymmdd\r\n    success = (data) =>\r\n      return doneCallback() if @destroyed\r\n      # console.log 'getCampaignLevelCompletions success', data\r\n      countCompletions = (item) ->\r\n        item.started = _.reduce item.days, ((result, current) -> result + current.started), 0\r\n        item.finished = _.reduce item.days, ((result, current) -> result + current.finished), 0\r\n        item.completionRate = if item.started > 0 then item.finished / item.started * 100 else 0.0\r\n        item\r\n      addUserRemaining = (item) ->\r\n        item.usersRemaining = Math.round(item.started / maxStarted * 100.0) unless maxStarted is 0\r\n        item\r\n\r\n      @campaignCompletions.levels = _.map data, countCompletions, @\r\n      if @campaignCompletions.levels.length > 0 \r\n        maxStarted = (_.max @campaignCompletions.levels, ((a) -> a.started)).started\r\n      else\r\n        maxStarted = 0\r\n      @campaignCompletions.levels = _.map @campaignCompletions.levels, addUserRemaining, @\r\n\r\n      sortedLevels = _.cloneDeep @campaignCompletions.levels\r\n      sortedLevels = _.filter sortedLevels, ((a) -> a.finished >= 10), @\r\n      if sortedLevels.length >= 3\r\n        sortedLevels.sort (a, b) -> b.completionRate - a.completionRate\r\n        @campaignCompletions.top3 = _.pluck sortedLevels[0..2], 'level'\r\n        @campaignCompletions.bottom3 = _.pluck sortedLevels[sortedLevels.length - 4...sortedLevels.length - 1], 'level'\r\n\r\n      doneCallback()\r\n\r\n    # TODO: Why do we need this url dash?\r\n    request = @supermodel.addRequestResource 'campaign_completions', {\r\n      url: '/db/analytics_perday/-/campaign_completions'\r\n      data: {startDay: startDay, endDay: endDay, slug: @campaignHandle}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    request.load()\r\n\r\n  getCompaignLevelDrops: (startDay, endDay, doneCallback) =>\r\n    # Fetch level drops\r\n    # Needs date format yyyymmdd\r\n    success = (data) =>\r\n      return if @destroyed\r\n      # console.log 'getCompaignLevelDrops success', data\r\n      levelDrops = {}\r\n      for item in data\r\n        levelDrops[item.level] ?= item.dropped\r\n      for level in @campaignCompletions.levels\r\n        level.dropped = levelDrops[level.level] ? 0\r\n        level.dropPercentage = if level.started > 0 then level.dropped / level.started * 100 else 0.0\r\n\r\n      sortedLevels = _.cloneDeep @campaignCompletions.levels\r\n      sortedLevels = _.filter sortedLevels, ((a) -> a.dropPercentage > 0), @\r\n      if sortedLevels.length >= 3\r\n        sortedLevels.sort (a, b) -> b.dropPercentage - a.dropPercentage\r\n        @campaignCompletions.top3DropPercentage = _.pluck sortedLevels[0..2], 'level'\r\n      doneCallback()\r\n\r\n    return doneCallback() unless @campaignCompletions?.levels?\r\n    levelSlugs = _.pluck @campaignCompletions.levels, 'level'\r\n\r\n    request = @supermodel.addRequestResource 'level_drops', {\r\n      url: '/db/analytics_perday/-/level_drops'\r\n      data: {startDay: startDay, endDay: endDay, slugs: levelSlugs}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    request.load()\r\n    \r\n  getCampaignLevelSubscriptions: (startDay, endDay, doneCallback) =>\r\n    # Fetch level subscriptions\r\n    # Needs date format yyyymmdd\r\n    success = (data) =>\r\n      return doneCallback() if @destroyed\r\n      # console.log 'getCampaignLevelSubscriptions success', data\r\n      levelSubs = {}\r\n      for item in data\r\n        levelSubs[item.level] = shown: item.shown, purchased: item.purchased\r\n      for level in @campaignCompletions.levels\r\n        level.subsShown = levelSubs[level.level]?.shown\r\n        level.subsPurchased = levelSubs[level.level]?.purchased\r\n      doneCallback()\r\n\r\n    return doneCallback() unless @campaignCompletions?.levels?\r\n    levelSlugs = _.pluck @campaignCompletions.levels, 'level'\r\n\r\n    request = @supermodel.addRequestResource 'campaign_subscriptions', {\r\n      url: '/db/analytics_perday/-/level_subscriptions'\r\n      data: {startDay: startDay, endDay: endDay, slugs: levelSlugs}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    request.load()\r\n"]}