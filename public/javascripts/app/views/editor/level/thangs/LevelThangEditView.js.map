{"version":3,"sources":["app/views/editor/level/thangs/LevelThangEditView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/level/thangs/LevelThangEditView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\r\ntemplate = require 'templates/editor/level/thang/level-thang-edit-view'\r\nThangComponentsEditView = require 'views/editor/component/ThangComponentsEditView'\r\nThangType = require 'models/ThangType'\r\nace = require 'ace'\r\n\r\nmodule.exports = class LevelThangEditView extends CocoView\r\n  ###\r\n  In the level editor, is the bar at the top when editing a single thang.\r\n  Everything below is part of the ThangComponentsEditView, which is shared with the\r\n  ThangType editor view.\r\n  ###\r\n\r\n  id: 'level-thang-edit-view'\r\n  template: template\r\n\r\n  events:\r\n    'click #all-thangs-link': 'navigateToAllThangs'\r\n    'click #thang-name-link span': 'toggleNameEdit'\r\n    'click #thang-type-link span': 'toggleTypeEdit'\r\n    'blur #thang-name-link input': 'toggleNameEdit'\r\n    'blur #thang-type-link input': 'toggleTypeEdit'\r\n    'keydown #thang-name-link input': 'toggleNameEditIfReturn'\r\n    'keydown #thang-type-link input': 'toggleTypeEditIfReturn'\r\n\r\n  constructor: (options) ->\r\n    options ?= {}\r\n    super options\r\n    @world = options.world\r\n    @thangData = $.extend true, {}, options.thangData ? {}\r\n    @level = options.level\r\n    @oldPath = options.oldPath\r\n    @reportChanges = _.debounce @reportChanges, 1000\r\n\r\n  onLoaded: -> @render()\r\n  afterRender: ->\r\n    super()\r\n    thangType = @supermodel.getModelByOriginal(ThangType, @thangData.thangType)\r\n    options =\r\n      components: @thangData.components\r\n      supermodel: @supermodel\r\n      level: @level\r\n      world: @world\r\n\r\n    if @level.isType('hero', 'hero-ladder', 'hero-coop', 'course', 'course-ladder', 'game-dev', 'web-dev') then options.thangType = thangType\r\n\r\n    @thangComponentEditView = new ThangComponentsEditView options\r\n    @listenTo @thangComponentEditView, 'components-changed', @onComponentsChanged\r\n    @insertSubView @thangComponentEditView\r\n    thangTypeNames = (m.get('name') for m in @supermodel.getModels ThangType)\r\n    input = @$el.find('#thang-type-link input').autocomplete(source: thangTypeNames, minLength: 0, delay: 0, autoFocus: true)\r\n    thangType = _.find @supermodel.getModels(ThangType), (m) => m.get('original') is @thangData.thangType\r\n    thangTypeName = thangType?.get('name') or 'None'\r\n    input.val(thangTypeName)\r\n    @$el.find('#thang-type-link span').text(thangTypeName)\r\n    @hideLoading()\r\n\r\n  navigateToAllThangs: ->\r\n    Backbone.Mediator.publish 'editor:level-thang-done-editing', {thangData: $.extend(true, {}, @thangData), oldPath: @oldPath}\r\n\r\n  toggleNameEdit: ->\r\n    link = @$el.find '#thang-name-link'\r\n    wasEditing = link.find('input:visible').length\r\n    span = link.find('span')\r\n    input = link.find('input')\r\n    if wasEditing then span.text(input.val()) else input.val(span.text())\r\n    link.find('span, input').toggle()\r\n    input.select() unless wasEditing\r\n    @thangData.id = span.text()\r\n\r\n  toggleTypeEdit: ->\r\n    link = @$el.find '#thang-type-link'\r\n    wasEditing = link.find('input:visible').length\r\n    span = link.find('span')\r\n    input = link.find('input')\r\n    span.text(input.val()) if wasEditing\r\n    link.find('span, input').toggle()\r\n    input.select() unless wasEditing\r\n    thangTypeName = input.val()\r\n    thangType = _.find @supermodel.getModels(ThangType), (m) -> m.get('name') is thangTypeName\r\n    if thangType and wasEditing\r\n      @thangData.thangType = thangType.get('original')\r\n\r\n  toggleNameEditIfReturn: (e) ->\r\n    @$el.find('#thang-name-link input').blur() if e.which is 13\r\n\r\n  toggleTypeEditIfReturn: (e) ->\r\n    @$el.find('#thang-type-link input').blur() if e.which is 13\r\n\r\n  onComponentsChanged: (components) =>\r\n    @thangData.components = components\r\n    @reportChanges()\r\n\r\n  reportChanges: =>\r\n    return if @destroyed\r\n    Backbone.Mediator.publish 'editor:level-thang-edited', {thangData: $.extend(true, {}, @thangData), oldPath: @oldPath}\r\n"]}