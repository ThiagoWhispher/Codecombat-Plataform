{"version":3,"sources":["app/templates/editor/verifier/verifier-view.jade","app/views/editor/verifier/VerifierView.coffee"],"names":[],"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","file":"public/javascripts/app/views/editor/verifier/VerifierView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),me = locals_.me,serverConfig = locals_.serverConfig,view = locals_.view;var accountLinks_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\"), 'data-i18n':(\"nav.profile\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li><li><a href=\\\"/account/settings\\\" data-i18n=\\\"play.settings\\\"></a></li><li><a id=\\\"logout-button\\\" data-i18n=\\\"login.log_out\\\"></a></li>\");\n};\nbuf.push(\"<div class=\\\"style-flat\\\"><nav id=\\\"main-nav\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid container\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><div class=\\\"navbar-header\\\"><button data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-collapse\\\" aria-expanded=\\\"false\\\" class=\\\"navbar-toggle collapsed\\\"><span data-i18n=\\\"nav.toggle_nav\\\" class=\\\"sr-only\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><a href=\\\"/\\\" class=\\\"navbar-brand\\\">\");\nif ( serverConfig.codeNinjas)\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\" class=\\\"code-ninjas-powered-by\\\"/><img src=\\\"/images/pages/base/code-ninjas-logo-right.png\\\" class=\\\"code-ninjas-logo\\\"/>\");\n}\nelse\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\"/>\");\n}\nbuf.push(\"<span class=\\\"glyphicon glyphicon-home\\\"></span></a></div><div id=\\\"navbar-collapse\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\">\");\nif ( (!me.isStudent() && !me.isTeacher()))\n{\nbuf.push(\"<li><a href=\\\"/play\\\" data-i18n=\\\"common.play\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li>\");\nif ( me.isStudent())\n{\nbuf.push(\"<li><a href=\\\"/students\\\" data-i18n=\\\"nav.my_courses\\\"></a></li>\");\n}\nif ( !me.isAnonymous() && me.isTeacher())\n{\nbuf.push(\"<li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li></ul>\");\nif ( me.isAnonymous())\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><a id=\\\"create-account-link\\\" data-i18n=\\\"login.sign_up\\\" class=\\\"signup-button\\\"></a></li><li><a id=\\\"login-link\\\" data-i18n=\\\"login.log_in\\\" class=\\\"login-button\\\"></a></li></ul>\");\n}\nelse\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav hidden-md hidden-lg\\\"><li class=\\\"disabled\\\"><a><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span>\" + (jade.escape(null == (jade.interp = me.displayName()) ? \"\" : jade.interp)) + \"</span></a></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown hidden-xs hidden-sm\\\"><a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"dropdown-toggle\\\"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span data-i18n=\\\"nav.my_account\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li class=\\\"user-dropdown-header text-center\\\"><span class=\\\"user-level\\\">\" + (jade.escape(null == (jade.interp = me.level()) ? \"\" : jade.interp)) + \"</span><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\") }, {\"href\":true})) + \"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/></a><h5>\" + (jade.escape(null == (jade.interp = me.broadName()) ? \"\" : jade.interp)) + \"</h5></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul></li></ul>\");\n}\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><div id=\\\"language-dropdown-wrapper\\\"><select class=\\\"language-dropdown form-control\\\"></select></div></li></ul></div></div></div></div></nav><div id=\\\"site-content-area\\\"><div class=\\\"container\\\"><div class=\\\"row verifier-row\\\"><div class=\\\"col-sm-3\\\"><p class=\\\"alert alert-success\\\">Passed: \" + (jade.escape((jade.interp = view.passed) == null ? '' : jade.interp)) + \"</p></div><div class=\\\"col-sm-3\\\"><p class=\\\"alert alert-warning\\\">Test Problem: \" + (jade.escape((jade.interp = view.problem) == null ? '' : jade.interp)) + \"</p></div><div class=\\\"col-sm-3\\\"><p class=\\\"alert alert-danger\\\">Failed: \" + (jade.escape((jade.interp = view.failed) == null ? '' : jade.interp)) + \"</p></div><div class=\\\"col-sm-3\\\"><p class=\\\"alert alert-info\\\">To Run: \" + (jade.escape((jade.interp = view.testCount - view.passed - view.problem - view.failed) == null ? '' : jade.interp)) + \"</p></div></div><div class=\\\"form form-inline\\\"><div class=\\\"row lineUnder\\\"><div class=\\\"form-group campaign-mix\\\"><input\" + (jade.attrs({ 'id':(\"careAboutFrames\"), 'type':(\"checkbox\"), 'checked':(!!view.careAboutFrames), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"checked\":true,\"disabled\":true})) + \"/><label for=\\\"careAboutFrames\\\">Check frame counts</label></div><div class=\\\"form-group campaign-mix\\\"><label for=\\\"cores\\\">Threads:</label><input\" + (jade.attrs({ 'id':(\"cores\"), 'type':(\"number\"), 'min':(\"1\"), 'max':(\"16\"), 'value':(view.cores), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"min\":true,\"max\":true,\"value\":true,\"disabled\":true})) + \"/></div></div></div>\");\nif ( view.levelsByCampaign)\n{\nbuf.push(\"<div class=\\\"form form-inline\\\"><div class=\\\"row lineUnder\\\">\");\n// iterate view.levelsByCampaign\n;(function(){\n  var $$obj = view.levelsByCampaign;\n  if ('number' == typeof $$obj.length) {\n\n    for (var campaign = 0, $$l = $$obj.length; campaign < $$l; campaign++) {\n      var campaignInfo = $$obj[campaign];\n\nbuf.push(\"<div class=\\\"form-group campaign-mix\\\">\");\nvar campaignID = \"campaign-\" + campaign + \"-checkbox\";\nbuf.push(\"<input\" + (jade.attrs({ 'id':(campaignID), 'type':(\"checkbox\"), 'checked':(campaignInfo.checked), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"checked\":true,\"disabled\":true})) + \"/><label\" + (jade.attrs({ 'for':(campaignID) }, {\"for\":true})) + \">\" + (jade.escape(null == (jade.interp = campaign + ': ' + campaignInfo.levels.length) ? \"\" : jade.interp)) + \"</label></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var campaign in $$obj) {\n      $$l++;      var campaignInfo = $$obj[campaign];\n\nbuf.push(\"<div class=\\\"form-group campaign-mix\\\">\");\nvar campaignID = \"campaign-\" + campaign + \"-checkbox\";\nbuf.push(\"<input\" + (jade.attrs({ 'id':(campaignID), 'type':(\"checkbox\"), 'checked':(campaignInfo.checked), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"checked\":true,\"disabled\":true})) + \"/><label\" + (jade.attrs({ 'for':(campaignID) }, {\"for\":true})) + \">\" + (jade.escape(null == (jade.interp = campaign + ': ' + campaignInfo.levels.length) ? \"\" : jade.interp)) + \"</label></div>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div><div class=\\\"row\\\">\");\n// iterate view.codeLanguages\n;(function(){\n  var $$obj = view.codeLanguages;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var codeLanguage = $$obj[$index];\n\nbuf.push(\"<div class=\\\"form-group code-language-mix\\\">\");\nvar codeLanguageID = \"code-language-\" + codeLanguage.id + \"-checkbox\";\nbuf.push(\"<input\" + (jade.attrs({ 'id':(codeLanguageID), 'type':(\"checkbox\"), 'checked':(codeLanguage.checked), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"checked\":true,\"disabled\":true})) + \"/><label\" + (jade.attrs({ 'for':(codeLanguageID) }, {\"for\":true})) + \">\" + (jade.escape(null == (jade.interp = codeLanguage.id) ? \"\" : jade.interp)) + \"</label></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var codeLanguage = $$obj[$index];\n\nbuf.push(\"<div class=\\\"form-group code-language-mix\\\">\");\nvar codeLanguageID = \"code-language-\" + codeLanguage.id + \"-checkbox\";\nbuf.push(\"<input\" + (jade.attrs({ 'id':(codeLanguageID), 'type':(\"checkbox\"), 'checked':(codeLanguage.checked), 'disabled':(!!view.tests) }, {\"id\":true,\"type\":true,\"checked\":true,\"disabled\":true})) + \"/><label\" + (jade.attrs({ 'for':(codeLanguageID) }, {\"for\":true})) + \">\" + (jade.escape(null == (jade.interp = codeLanguage.id) ? \"\" : jade.interp)) + \"</label></div>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"<div class=\\\"pull-right\\\"><button\" + (jade.attrs({ 'id':('go-button'), 'disabled':(!!view.tests), \"class\": [('btn'),('btn-primary')] }, {\"disabled\":true})) + \">Start Tests</button></div></div></div>\");\n}\nif ( view.levelsToLoad && !view.tests)\n{\nbuf.push(\"<div class=\\\"progress\\\"><div\" + (jade.attrs({ 'role':(\"progressbar\"), 'style':(\"width: \" + (100*(1 - view.levelsToLoad/view.initialLevelsToLoad)) + \"%\"), \"class\": [('progress-bar'),('progress-bar-success')] }, {\"role\":true,\"style\":true})) + \"></div></div>\");\n}\nif ( view.tests)\n{\nif ( view.levelIDs)\n{\nbuf.push(\"<div class=\\\"progress\\\"><div\" + (jade.attrs({ 'role':(\"progressbar\"), 'style':(\"width: \" + (100*view.passed/view.testCount) + \"%\"), \"class\": [('progress-bar'),('progress-bar-success')] }, {\"role\":true,\"style\":true})) + \"></div><div\" + (jade.attrs({ 'role':(\"progressbar\"), 'style':(\"width: \" + (100*view.problem/view.testCount) + \"%\"), \"class\": [('progress-bar'),('progress-bar-warning')] }, {\"role\":true,\"style\":true})) + \"></div><div\" + (jade.attrs({ 'role':(\"progressbar\"), 'style':(\"width: \" + (100*view.failed/view.testCount) + \"%\"), \"class\": [('progress-bar'),('progress-bar-danger')] }, {\"role\":true,\"style\":true})) + \"></div></div>\");\n}\n// iterate view.tests\n;(function(){\n  var $$obj = view.tests;\n  if ('number' == typeof $$obj.length) {\n\n    for (var id = 0, $$l = $$obj.length; id < $$l; id++) {\n      var test = $$obj[id];\n\nif (test.state == 'no-solution')\ncontinue;\nif ( test.level)\n{\nbuf.push(\"<div class=\\\"pull-right\\\">\");\nvar last = test.level.get('slug') + view.linksQueryString\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"/editor/verifier/\" + last), \"class\": [('btn'),('btn-primary')] }, {\"href\":true})) + \">Focus</a><a\" + (jade.attrs({ 'href':(\"/play/level/\" + last), \"class\": [('btn'),('btn-success')] }, {\"href\":true})) + \">Play</a><a\" + (jade.attrs({ 'href':(\"/editor/level/\" + last), \"class\": [('btn'),('btn-warning')] }, {\"href\":true})) + \">Edit</a><a\" + (jade.attrs({ 'data-target':('#verifier-test-' + id), 'data-toggle':(\"collapse\"), \"class\": [('btn'),('btn-default')] }, {\"data-target\":true,\"data-toggle\":true})) + \">Toggle</a></div>\");\nif ( !test.goals)\n{\nbuf.push(\"<h2 class=\\\"test-running\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nelse if ( test.isSuccessful())\n{\nbuf.push(\"<h2 class=\\\"test-success\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nelse\n{\nbuf.push(\"<h2 class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nbuf.push(\"<div\" + (jade.attrs({ 'id':('verifier-test-' + id), \"class\": [('row'),((test.isSuccessful() && id > 1 ? 'collapse' : 'collapse in'))] }, {\"class\":true,\"id\":true})) + \"><div class=\\\"col-xs-8\\\">\");\nif ( test.solution)\n{\nbuf.push(\"<pre class=\\\"solution\\\">\" + (jade.escape((jade.interp = test.solution.source) == null ? '' : jade.interp)) + \"</pre>\");\n}\nelse\n{\nbuf.push(\"<h4>Error Loading Test</h4><pre>\" + (jade.escape((jade.interp = test.error) == null ? '' : jade.interp)) + \"</pre>\");\n}\nbuf.push(\"</div><div class=\\\"col-xs-4 well\\\">\");\nif ( test.goals)\n{\nif ( test.frames == test.solution.frameCount)\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ Frames: \" + (jade.escape((jade.interp = test.frames) == null ? '' : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ Frames: \" + (jade.escape((jade.interp = test.frames) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.frameCount) == null ? '' : jade.interp)) + \"</div>\");\n}\n// iterate test.goals || []\n;(function(){\n  var $$obj = test.goals || [];\n  if ('number' == typeof $$obj.length) {\n\n    for (var k = 0, $$l = $$obj.length; k < $$l; k++) {\n      var v = $$obj[k];\n\nif ( !test.solution.goals)\n{\nbuf.push(\"<div class=\\\"test-running\\\">? \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse if ( v.status == test.solution.goals[k])\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.goals[k]) == null ? '' : jade.interp)) + \")</div>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var k in $$obj) {\n      $$l++;      var v = $$obj[k];\n\nif ( !test.solution.goals)\n{\nbuf.push(\"<div class=\\\"test-running\\\">? \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse if ( v.status == test.solution.goals[k])\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.goals[k]) == null ? '' : jade.interp)) + \")</div>\");\n}\n    }\n\n  }\n}).call(this);\n\n}\nelse\n{\nbuf.push(\"<h3>Pending....</h3>\");\n}\nif ( test.error)\n{\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape((jade.interp = test.error) == null ? '' : jade.interp)) + \"</pre>\");\n}\nif ( test.testLogs && test.testLogs.length)\n{\n// iterate test.testLogs\n;(function(){\n  var $$obj = test.testLogs;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var log = $$obj[$index];\n\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = log) ? \"\" : jade.interp)) + \"</pre>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var log = $$obj[$index];\n\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = log) ? \"\" : jade.interp)) + \"</pre>\");\n    }\n\n  }\n}).call(this);\n\n}\nif ( test.userCodeProblems.length)\n{\nbuf.push(\"<h4 class=\\\"test-failed\\\">User Code Problems</h4><pre class=\\\"test-failed\\\">\" + (jade.escape((jade.interp = JSON.stringify(test.userCodeProblems, null, 2)) == null ? '' : jade.interp)) + \"</pre>\");\n}\nif ( test.simulationFrameRate)\n{\nif ( test.simulationFrameRate > 90)\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\nelse if ( test.simulationFrameRate > 30)\n{\nbuf.push(\"<div class=\\\"test-running\\\">~ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\n}\nbuf.push(\"</div></div>\");\n}\nelse\n{\nbuf.push(\"<h1>Loading Level...</h1>\");\n}\nbuf.push(\"<!-- TODO: show last frame hash-->\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var id in $$obj) {\n      $$l++;      var test = $$obj[id];\n\nif (test.state == 'no-solution')\ncontinue;\nif ( test.level)\n{\nbuf.push(\"<div class=\\\"pull-right\\\">\");\nvar last = test.level.get('slug') + view.linksQueryString\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"/editor/verifier/\" + last), \"class\": [('btn'),('btn-primary')] }, {\"href\":true})) + \">Focus</a><a\" + (jade.attrs({ 'href':(\"/play/level/\" + last), \"class\": [('btn'),('btn-success')] }, {\"href\":true})) + \">Play</a><a\" + (jade.attrs({ 'href':(\"/editor/level/\" + last), \"class\": [('btn'),('btn-warning')] }, {\"href\":true})) + \">Edit</a><a\" + (jade.attrs({ 'data-target':('#verifier-test-' + id), 'data-toggle':(\"collapse\"), \"class\": [('btn'),('btn-default')] }, {\"data-target\":true,\"data-toggle\":true})) + \">Toggle</a></div>\");\nif ( !test.goals)\n{\nbuf.push(\"<h2 class=\\\"test-running\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nelse if ( test.isSuccessful())\n{\nbuf.push(\"<h2 class=\\\"test-success\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nelse\n{\nbuf.push(\"<h2 class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = test.level.get('name')) ? \"\" : jade.interp)) + \"<small>\" + (jade.escape(null == (jade.interp = ' in ' + test.language + '') ? \"\" : jade.interp)) + \"</small></h2>\");\n}\nbuf.push(\"<div\" + (jade.attrs({ 'id':('verifier-test-' + id), \"class\": [('row'),((test.isSuccessful() && id > 1 ? 'collapse' : 'collapse in'))] }, {\"class\":true,\"id\":true})) + \"><div class=\\\"col-xs-8\\\">\");\nif ( test.solution)\n{\nbuf.push(\"<pre class=\\\"solution\\\">\" + (jade.escape((jade.interp = test.solution.source) == null ? '' : jade.interp)) + \"</pre>\");\n}\nelse\n{\nbuf.push(\"<h4>Error Loading Test</h4><pre>\" + (jade.escape((jade.interp = test.error) == null ? '' : jade.interp)) + \"</pre>\");\n}\nbuf.push(\"</div><div class=\\\"col-xs-4 well\\\">\");\nif ( test.goals)\n{\nif ( test.frames == test.solution.frameCount)\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ Frames: \" + (jade.escape((jade.interp = test.frames) == null ? '' : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ Frames: \" + (jade.escape((jade.interp = test.frames) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.frameCount) == null ? '' : jade.interp)) + \"</div>\");\n}\n// iterate test.goals || []\n;(function(){\n  var $$obj = test.goals || [];\n  if ('number' == typeof $$obj.length) {\n\n    for (var k = 0, $$l = $$obj.length; k < $$l; k++) {\n      var v = $$obj[k];\n\nif ( !test.solution.goals)\n{\nbuf.push(\"<div class=\\\"test-running\\\">? \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse if ( v.status == test.solution.goals[k])\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.goals[k]) == null ? '' : jade.interp)) + \")</div>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var k in $$obj) {\n      $$l++;      var v = $$obj[k];\n\nif ( !test.solution.goals)\n{\nbuf.push(\"<div class=\\\"test-running\\\">? \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse if ( v.status == test.solution.goals[k])\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \")</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = k) == null ? '' : jade.interp)) + \" (\" + (jade.escape((jade.interp = v.status) == null ? '' : jade.interp)) + \" vs \" + (jade.escape((jade.interp = test.solution.goals[k]) == null ? '' : jade.interp)) + \")</div>\");\n}\n    }\n\n  }\n}).call(this);\n\n}\nelse\n{\nbuf.push(\"<h3>Pending....</h3>\");\n}\nif ( test.error)\n{\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape((jade.interp = test.error) == null ? '' : jade.interp)) + \"</pre>\");\n}\nif ( test.testLogs && test.testLogs.length)\n{\n// iterate test.testLogs\n;(function(){\n  var $$obj = test.testLogs;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var log = $$obj[$index];\n\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = log) ? \"\" : jade.interp)) + \"</pre>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var log = $$obj[$index];\n\nbuf.push(\"<pre class=\\\"test-failed\\\">\" + (jade.escape(null == (jade.interp = log) ? \"\" : jade.interp)) + \"</pre>\");\n    }\n\n  }\n}).call(this);\n\n}\nif ( test.userCodeProblems.length)\n{\nbuf.push(\"<h4 class=\\\"test-failed\\\">User Code Problems</h4><pre class=\\\"test-failed\\\">\" + (jade.escape((jade.interp = JSON.stringify(test.userCodeProblems, null, 2)) == null ? '' : jade.interp)) + \"</pre>\");\n}\nif ( test.simulationFrameRate)\n{\nif ( test.simulationFrameRate > 90)\n{\nbuf.push(\"<div class=\\\"test-success\\\">✓ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\nelse if ( test.simulationFrameRate > 30)\n{\nbuf.push(\"<div class=\\\"test-running\\\">~ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"test-failed\\\">✘ \" + (jade.escape((jade.interp = test.simulationFrameRate.toFixed(1)) == null ? '' : jade.interp)) + \" FPS</div>\");\n}\n}\nbuf.push(\"</div></div>\");\n}\nelse\n{\nbuf.push(\"<h1>Loading Level...</h1>\");\n}\nbuf.push(\"<!-- TODO: show last frame hash-->\");\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</div></div><div class=\\\"container-fluid\\\"><div id=\\\"footer\\\" class=\\\"small\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong>CodeCombat</strong></li><li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a href=\\\"/about#jobs\\\" data-i18n=\\\"nav.jobs\\\"></a></li><li><a href=\\\"http://blog.codecombat.com/\\\" data-i18n=\\\"nav.blog\\\"></a></li><li><a href=\\\"/legal\\\" data-i18n=\\\"nav.legal\\\"></a></li><li><a href=\\\"/privacy\\\" data-i18n=\\\"nav.privacy\\\"></a></li></ul></div>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.schools\\\"></strong></li><li><a href=\\\"/teachers/resources/faq\\\" data-i18n=\\\"teacher.educator_faq\\\"></a></li><li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li><li><a href=\\\"/teachers/resources\\\" data-i18n=\\\"nav.resource_hub\\\"></a></li><li><a href=\\\"/teachers/demo\\\" data-i18n=\\\"new_home.request_demo\\\"></a></li></ul></div>\");\n}\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.get_involved\\\"></strong></li><li><a href=\\\"/community\\\" data-i18n=\\\"nav.community\\\"></a></li><li><a href=\\\"/contribute\\\" data-i18n=\\\"nav.contribute\\\"></a></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li><li><a href=\\\"https://github.com/codecombat/codecombat\\\" data-i18n=\\\"nav.open_source\\\"></a></li></ul></div><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.support\\\"></strong></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a tabindex=\\\"-1\\\" data-i18n=\\\"nav.contact\\\" class=\\\"contact-modal\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"https://www.facebook.com/codecombat\\\" data-i18n=\\\"nav.facebook\\\"></a></li><li><a href=\\\"https://twitter.com/codecombat\\\" data-i18n=\\\"nav.twitter\\\"></a></li></ul></div></div></div></div><div id=\\\"final-footer\\\" class=\\\"small text-center\\\">Copyright ©2016 CodeCombat. All Rights Reserved.<br class=\\\"hidden-lg hidden-md\\\"/><img src=\\\"/images/pages/base/logo.png\\\" alt=\\\"CodeCombat\\\"/><br class=\\\"hidden-lg hidden-md\\\"/>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<span data-i18n=\\\"nav.help_pref\\\" class=\\\"spr\\\"></span>\");\nvar supportEmail = (me.get('preferredLanguage', true) || 'en-US').split('-')[0] == 'nl' ? 'klantenservice@codecombat.nl' : 'team@codecombat.com';\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"mailto:\" + supportEmail) }, {\"href\":true})) + \">\" + (jade.escape(null == (jade.interp = supportEmail) ? \"\" : jade.interp)) + \"</a><span data-i18n=\\\"nav.help_suff\\\" class=\\\"spl\\\"></span>\");\n}\nbuf.push(\"</div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","utils = require 'core/utils'\r\n\r\nRootView = require 'views/core/RootView'\r\ntemplate = require 'templates/editor/verifier/verifier-view'\r\nVerifierTest = require './VerifierTest'\r\nSuperModel = require 'models/SuperModel'\r\nCampaigns = require 'collections/Campaigns'\r\nLevel = require 'models/Level'\r\n\r\nmodule.exports = class VerifierView extends RootView\r\n  className: 'style-flat'\r\n  template: template\r\n  id: 'verifier-view'\r\n\r\n  events:\r\n    'click #go-button': 'onClickGoButton'\r\n\r\n  constructor: (options, @levelID) ->\r\n    super options\r\n    # TODO: sort tests by unexpected result first\r\n    @passed = 0\r\n    @failed = 0\r\n    @problem = 0\r\n    @testCount = 0\r\n\r\n    if utils.getQueryVariable('dev')\r\n      @supermodel.shouldSaveBackups = (model) ->  # Make sure to load possibly changed things from localStorage.\r\n        model.constructor.className in ['Level', 'LevelComponent', 'LevelSystem', 'ThangType']\r\n\r\n    defaultCores = 2\r\n    @cores = Math.max(window.navigator.hardwareConcurrency, defaultCores)\r\n    @careAboutFrames = true\r\n\r\n    if @levelID\r\n      @levelIDs = [@levelID]\r\n      @testLanguages = ['python', 'javascript', 'java', 'lua', 'coffeescript']\r\n      @cores = 1\r\n      @startTestingLevels()\r\n    else\r\n      @campaigns = new Campaigns()\r\n      @supermodel.trackRequest @campaigns.fetch(data: {project: 'slug,type,levels'})\r\n      @campaigns.comparator = (m) ->\r\n        ['intro', 'course-2', 'course-3', 'course-4', 'course-5', 'course-6', 'course-8',\r\n         'dungeon', 'forest', 'desert', 'mountain', 'glacier', 'volcano'].indexOf(m.get('slug'))\r\n\r\n  onLoaded: ->\r\n    super()\r\n    return if @levelID\r\n    @filterCampaigns()\r\n    @filterCodeLanguages()\r\n    @render()\r\n\r\n  filterCampaigns: ->\r\n    @levelsByCampaign = {}\r\n    for campaign in @campaigns.models when campaign.get('type') in ['course', 'hero'] and campaign.get('slug') isnt 'picoctf'\r\n      @levelsByCampaign[campaign.get('slug')] ?= {levels: [], checked: campaign.get('slug') in ['intro']}\r\n      campaignInfo = @levelsByCampaign[campaign.get('slug')]\r\n      for levelID, level of campaign.get('levels') when level.type not in ['hero-ladder', 'course-ladder', 'game-dev', 'web-dev']  # Would use isType, but it's not a Level model\r\n        campaignInfo.levels.push level.slug\r\n\r\n  filterCodeLanguages: ->\r\n    defaultLanguages = utils.getQueryVariable('languages', 'python,javascript').split(/, ?/)\r\n    @codeLanguages ?= ({id: c, checked: c in defaultLanguages} for c in ['python', 'javascript', 'java', 'lua', 'coffeescript'])\r\n\r\n  onClickGoButton: (e) ->\r\n    @filterCampaigns()\r\n    @levelIDs = []\r\n    @careAboutFrames = @$(\"#careAboutFrames\").is(':checked')\r\n    @cores = @$(\"#cores\").val()|0\r\n    for campaign, campaignInfo of @levelsByCampaign\r\n      if @$(\"#campaign-#{campaign}-checkbox\").is(':checked')\r\n        for level in campaignInfo.levels\r\n          @levelIDs.push level unless level in @levelIDs\r\n      else\r\n        campaignInfo.checked = false\r\n    @testLanguages = []\r\n    for codeLanguage in @codeLanguages\r\n      if @$(\"#code-language-#{codeLanguage.id}-checkbox\").is(':checked')\r\n        codeLanguage.checked = true\r\n        @testLanguages.push codeLanguage.id\r\n      else\r\n        codeLanguage.checked = false\r\n    @startTestingLevels()\r\n\r\n  startTestingLevels: ->\r\n    @levelsToLoad = @initialLevelsToLoad = @levelIDs.length\r\n    for levelID in @levelIDs\r\n      level = @supermodel.getModel(Level, levelID) or new Level _id: levelID\r\n      if level.loaded\r\n        @onLevelLoaded()\r\n      else\r\n        @listenToOnce @supermodel.loadModel(level).model, 'sync', @onLevelLoaded\r\n\r\n  onLevelLoaded: (level) ->\r\n    if --@levelsToLoad is 0\r\n      @onTestLevelsLoaded()\r\n    else\r\n      @render()\r\n\r\n  onTestLevelsLoaded: ->\r\n\r\n    @linksQueryString = window.location.search\r\n    #supermodel = if @levelID then @supermodel else undefined\r\n    @tests = []\r\n    @tasksList = []\r\n    for levelID in @levelIDs\r\n      level = @supermodel.getModel(Level, levelID)\r\n      solutions = level?.getSolutions()\r\n      for codeLanguage in @testLanguages\r\n        if not solutions or _.find(solutions, language: codeLanguage)\r\n          @tasksList.push level: levelID, language: codeLanguage\r\n\r\n    @testCount = @tasksList.length\r\n    console.log(\"Starting in\", @cores, \"cores...\")\r\n    chunks = _.groupBy @tasksList, (v,i) => i%@cores\r\n    supermodels = [@supermodel]\r\n\r\n    _.forEach chunks, (chunk, i) =>\r\n      _.delay =>\r\n        parentSuperModel = supermodels[supermodels.length-1]\r\n        chunkSupermodel = new SuperModel()\r\n        chunkSupermodel.models = _.clone parentSuperModel.models\r\n        chunkSupermodel.collections = _.clone parentSuperModel.collections\r\n        supermodels.push chunkSupermodel\r\n\r\n        async.eachSeries chunk, (task, next) =>\r\n          test = new VerifierTest task.level, (e) =>\r\n            @update(e)\r\n            if e.state in ['complete', 'error', 'no-solution']\r\n              if e.state is 'complete'\r\n                if test.isSuccessful(@careAboutFrames)\r\n                  ++@passed\r\n                else\r\n                  ++@failed\r\n              else if e.state is 'no-solution'\r\n                --@testCount\r\n              else\r\n                ++@problem\r\n\r\n              next()\r\n          , chunkSupermodel, task.language, {}\r\n          @tests.unshift test\r\n          @render()\r\n        , => @render()\r\n      , if i > 0 then 5000 + i * 1000 else 0\r\n\r\n  update: (event) =>\r\n    @render()\r\n"]}