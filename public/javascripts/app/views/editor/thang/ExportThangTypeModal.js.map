{"version":3,"sources":["app/templates/editor/thang/export-thang-type-modal.jade","app/views/editor/thang/ExportThangTypeModal.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/editor/thang/ExportThangTypeModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,_ = locals_._;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\">\");\nif ( view.closeButton)\n{\nbuf.push(\"<div type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" class=\\\"button close\\\">&times;</div>\");\n}\nbuf.push(\"<h4 class=\\\"modal-title\\\">Export \" + (jade.escape((jade.interp = view.thangType.get('name')) == null ? '' : jade.interp)) + \" SpriteSheet</h4></div><div class=\\\"modal-body\\\"><div class=\\\"form-horizontal\\\"><div class=\\\"form-group\\\"><label class=\\\"col-sm-3 control-label\\\">Team Color</label><div class=\\\"col-sm-9\\\"><select id=\\\"color-config-select\\\" class=\\\"form-control\\\"><option value=\\\"\\\">None</option><option value=\\\"red\\\">Red</option><option value=\\\"blue\\\">Blue</option><option value=\\\"green\\\">Green</option></select></div></div><div class=\\\"form-group\\\"><label class=\\\"col-sm-3 control-label\\\">Resolution Factor</label><div class=\\\"col-sm-9\\\"><input id=\\\"resolution-input\\\" value=\\\"3\\\" class=\\\"form-control\\\"/></div></div><div class=\\\"form-group\\\"><label class=\\\"col-sm-3 control-label\\\">Sprite Type</label><div class=\\\"col-sm-9\\\">\");\nvar spriteType = view.thangType.get('spriteType') || 'segmented'\nbuf.push(\"<label class=\\\"radio-inline\\\"><input\" + (jade.attrs({ 'type':(\"radio\"), 'name':(\"sprite-type\"), 'value':(\"segmented\"), 'checked':(spriteType==='segmented') }, {\"type\":true,\"name\":true,\"value\":true,\"checked\":true})) + \"/>Segmented</label><label class=\\\"radio-inline\\\"><input\" + (jade.attrs({ 'type':(\"radio\"), 'name':(\"sprite-type\"), 'value':(\"singular\"), 'checked':(spriteType!=='segmented') }, {\"type\":true,\"name\":true,\"value\":true,\"checked\":true})) + \"/>Singular</label></div></div><div class=\\\"form-group\\\"><label class=\\\"col-sm-3 control-label\\\">Actions</label><div class=\\\"col-sm-9\\\">\");\nvar defaultActionNames = _.pluck(view.thangType.getDefaultActions(), 'name')\nvar actions = view.thangType.getActions()\n// iterate actions\n;(function(){\n  var $$obj = actions;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var action = $$obj[$index];\n\nbuf.push(\"<div class=\\\"checkbox\\\"><label><input\" + (jade.attrs({ 'type':(\"checkbox\"), 'name':(\"action\"), 'value':(action.name), 'checked':(_.contains(defaultActionNames, action.name)) }, {\"type\":true,\"name\":true,\"value\":true,\"checked\":true})) + \"/>\" + (jade.escape((jade.interp = action.name) == null ? '' : jade.interp)) + \"</label></div>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var action = $$obj[$index];\n\nbuf.push(\"<div class=\\\"checkbox\\\"><label><input\" + (jade.attrs({ 'type':(\"checkbox\"), 'name':(\"action\"), 'value':(action.name), 'checked':(_.contains(defaultActionNames, action.name)) }, {\"type\":true,\"name\":true,\"value\":true,\"checked\":true})) + \"/>\" + (jade.escape((jade.interp = action.name) == null ? '' : jade.interp)) + \"</label></div>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div></div></div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div><div class=\\\"modal-footer\\\"><button data-dismiss=\\\"modal\\\" class=\\\"btn btn-default\\\">Cancel</button><button id=\\\"save-btn\\\" class=\\\"btn btn-primary\\\">Save</button><div class=\\\"progress progress-striped active hide\\\"><div style=\\\"width: 100%\\\" class=\\\"progress-bar\\\"></div></div></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ModalView = require 'views/core/ModalView'\r\ntemplate = require 'templates/editor/thang/export-thang-type-modal'\r\nSpriteExporter = require 'lib/sprites/SpriteExporter'\r\n\r\nmodule.exports = class ExportThangTypeModal extends ModalView\r\n  id: \"export-thang-type-modal\"\r\n  template: template\r\n  plain: true\r\n\r\n  events:\r\n    'click #save-btn': 'onClickSaveButton'\r\n\r\n  initialize: (options, @thangType) ->\r\n    @builder = null\r\n    @getFilename = _.once(@getFilename)\r\n\r\n  colorMap: {\r\n    red: { hue: 0, saturation: 0.75, lightness: 0.5 }\r\n    blue: { hue: 0.66, saturation: 0.75, lightness: 0.5 }\r\n    green: { hue: 0.33, saturation: 0.75, lightness: 0.5 }\r\n  }\r\n  getColorLabel: -> @$('#color-config-select').val()\r\n  getColorConfig: ->\r\n    color = @colorMap[@getColorLabel()]\r\n    return { team: color } if color\r\n    return null\r\n  getActionNames: -> _.map @$('input[name=\"action\"]:checked'), (el) -> $(el).val()\r\n  getResolutionFactor: -> parseInt(@$('#resolution-input').val()) or SPRITE_RESOLUTION_FACTOR\r\n  getFilename: -> 'spritesheet-'+_.string.slugify(moment().format())+'.png'\r\n  getSpriteType: -> @$('input[name=\"sprite-type\"]:checked').val()\r\n\r\n  onClickSaveButton: ->\r\n    @$('.modal-footer button').addClass('hide')\r\n    @$('.modal-footer .progress').removeClass('hide')\r\n    @$('input, select').attr('disabled', true)\r\n    options = {\r\n      resolutionFactor: @getResolutionFactor()\r\n      actionNames: @getActionNames()\r\n      colorConfig: @getColorConfig()\r\n      spriteType: @getSpriteType()\r\n    }\r\n    @exporter = new SpriteExporter(@thangType, options)\r\n    @exporter.build()\r\n    @listenToOnce @exporter, 'build', @onExporterBuild\r\n\r\n  onExporterBuild: (e) ->\r\n    @spriteSheet = e.spriteSheet\r\n    src = @spriteSheet._images[0].toDataURL()\r\n    src = src.replace('data:image/png;base64,', '').replace(/\\ /g, '+')\r\n    body =\r\n      filename: @getFilename()\r\n      mimetype: 'image/png'\r\n      path: \"db/thang.type/#{@thangType.get('original')}\"\r\n      b64png: src\r\n    $.ajax('/file', {type: 'POST', data: body, success: @onSpriteSheetUploaded})\r\n\r\n  onSpriteSheetUploaded: =>\r\n    spriteSheetData = {\r\n      actionNames: @getActionNames()\r\n      animations: @spriteSheet._data\r\n      frames: ([\r\n        f.rect.x\r\n        f.rect.y\r\n        f.rect.width\r\n        f.rect.height\r\n        0\r\n        f.regX\r\n        f.regY\r\n      ] for f in @spriteSheet._frames)\r\n      image: \"db/thang.type/#{@thangType.get('original')}/\"+@getFilename()\r\n      resolutionFactor: @getResolutionFactor()\r\n      spriteType: @getSpriteType()\r\n    }\r\n    if config = @getColorConfig()\r\n      spriteSheetData.colorConfig = config\r\n    if label = @getColorLabel()\r\n      spriteSheetData.colorLabel = label\r\n    spriteSheets = _.clone(@thangType.get('prerenderedSpriteSheetData') or [])\r\n    spriteSheets.push(spriteSheetData)\r\n    @thangType.set('prerenderedSpriteSheetData', spriteSheets)\r\n    @thangType.save()\r\n    @listenToOnce @thangType, 'sync', @hide\r\n\r\nwindow.SomeModal = module.exports"]}