{"version":3,"sources":["app/views/editor/thang/ThangTypeColorsTabView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,WAAW,QAAQ,qBAAR;;AACX,WAAW,QAAQ,mCAAR;;AACX,gBAAgB,QAAQ,2BAAR;;AACf,WAAY,QAAQ,YAAR,EAAZ;;AACD,QAAQ,eAAR;;AAEA,MAAM,CAAC,OAAP,GAAuB;;;mCACrB,KAAI;;mCACJ,WAAU;;mCACV,YAAW;;mCAEX,SAAQ;;EAEK,gCAAC,SAAD,EAAa,OAAb;AACX;IADY,IAAC,aAAD;;;IACZ,wDAAM,OAAN;IACA,IAAC,WAAU,CAAC,SAAZ,CAAsB,IAAC,UAAvB;IACA,IAAC,YAAD,GAAe;MAAC,KAAK,CAAN;MAAS,YAAY,GAArB;MAA0B,WAAW,GAArC;;IACf,IAAkD,IAAC,UAAS,CAAC,GAAX,CAAe,KAAf,CAAlD;MAAA,IAAC,cAAD,GAAqB,kBAAc,IAAC,UAAf,EAArB;;IACA,IAAI;aAAA;QACF,KAAC,OAAD;eACA,KAAC,gBAAD;MAFE;IAAA;IAGJ,IAAC,SAAD,GAAY,YAAY,CAAZ,EAAe,IAAf;EARD;;mCAUb,UAAS;AACP;;SAAY,CAAE,OAAd;;IACA,cAAc,IAAC,SAAf;WACA;EAHO;;mCAKT,cAAa;IACX;IACA,KAAc,IAAC,WAAU,CAAC,QAAZ,EAAd;AAAA;;IACA,IAAC,mBAAD;IACA,IAAC,UAAD;IACA,IAAC,YAAD;WACA,IAAC,WAAD;EANW;;mCAUb,cAAa;IACX,IAAC,UAAD,GAAa,IAAC,WAAD,CAAY,EAAE,aAAF,EAAiB,IAAC,IAAlB,CAAZ,EAAoC,CAApC,EAAuC,IAAC,mBAAD,CAAoB,KAApB,CAAvC;IACb,IAAC,iBAAD,GAAoB,IAAC,WAAD,CAAY,EAAE,oBAAF,EAAwB,IAAC,IAAzB,CAAZ,EAA2C,EAA3C,EAA+C,IAAC,mBAAD,CAAoB,YAApB,CAA/C;WACpB,IAAC,gBAAD,GAAmB,IAAC,WAAD,CAAY,EAAE,mBAAF,EAAuB,IAAC,IAAxB,CAAZ,EAA0C,EAA1C,EAA8C,IAAC,mBAAD,CAAoB,WAApB,CAA9C;EAHR;;mCAKb,qBAAoB,SAAC,QAAD;WAClB;aAAA,SAAC,CAAD,EAAI,MAAJ;QACE,KAAC,YAAY,UAAb,GAAyB,MAAM,CAAC,KAAP,GAAe;eACxC,KAAC,gBAAD;MAFF;IAAA;EADkB;;mCAOpB,YAAW;AACT;IAAA,SAAS,IAAC,IAAG,CAAC,IAAL,CAAU,kBAAV;IACT,IAAC,MAAD,GAAa,YAAQ,CAAC,KAAT,CAAe,MAAO,GAAtB;IACb,QAAQ,CAAC,MAAM,CAAC,MAAhB,CAAuB,EAAvB;IACA,QAAQ,CAAC,MAAM,CAAC,gBAAhB,CAAiC,MAAjC,EAAyC,IAAC,MAA1C;WACA,IAAC,gBAAD;EALS;;mCAOX,kBAAiB;AACf;IAAA,MAAc,IAAC,wBAAD,IAA6B,IAAC,UAAS,CAAC,GAAX,CAAe,KAAf,CAA3C;AAAA;;IACA,aAAa,IAAC,UAAS,CAAC,UAAX;IACb;;AAAc;WAAA;;YAA0C,CAAC,CAAC;uBAA5C,CAAC,CAAC;;AAAF;;;IACd,QAAQ,IAAC,OAAD,GAAU,UAAU,CAAC;IAC7B,YAAY,UAAW;IACvB,KAAiC,SAAjC;AAAA,aAAO,IAAC,gBAAD,GAAP;;IACA,IAAkC,IAAC,UAAnC;MAAA,IAAC,MAAK,CAAC,WAAP,CAAmB,IAAC,UAApB;;IACA,UAAU;MAAC,aAAa,EAAd;;IACV,OAAO,CAAC,WAAY,KAAC,wBAAuB,CAAC,YAAzB,CAApB,GAA6D,IAAC;IAC9D,IAAC,cAAa,CAAC,UAAf,CAA0B,OAA1B;IACA,IAAC,cAAa,CAAC,cAAf;IACA,IAAC,UAAD,GAAa,IAAC,cAAa,CAAC,cAAf,CAA8B,SAA9B;IACb,gGAAsC,IAAC,UAAS,CAAC;IACjD,SAAS,IAAI,CAAC,GAAL,CAAS,MAAM,MAAM,CAAC,KAAtB,EAA6B,MAAM,MAAM,CAAC,MAA1C;IACT,IAAC,UAAS,CAAC,MAAX,GAAoB;IACpB,IAAC,UAAS,CAAC,MAAX,GAAoB;IACpB,IAAC,UAAS,CAAC,IAAX,GAAkB,MAAM,CAAC;IACzB,IAAC,UAAS,CAAC,IAAX,GAAkB,MAAM,CAAC;WACzB,IAAC,MAAK,CAAC,QAAP,CAAgB,IAAC,UAAjB;EAnBe;;mCAqBjB,kBAAiB;AACf;IAAA,KAAc,IAAC,UAAS,CAAC,GAAX,CAAe,KAAf,CAAd;AAAA;;IACA,aAAa,IAAC,UAAS,CAAC,UAAX;IACb,OAAO,UAAU,CAAC;IAClB,IAAkC,IAAC,UAAnC;MAAA,IAAC,MAAK,CAAC,WAAP,CAAmB,IAAC,UAApB;;IACA,qBAAc,IAAI,CAAE,mBAApB;AAAA;;IACA,UAAU;MAAC,aAAa,EAAd;;IACV,OAAO,CAAC,WAAY,KAAC,wBAAuB,CAAC,YAAzB,CAApB,GAA6D,IAAC;IAC9D,IAAC,cAAa,CAAC,UAAf,CAA0B,OAA1B;IACA,IAAC,cAAa,CAAC,cAAf;IACA,IAAC,UAAD,GAAa,IAAC,cAAa,CAAC,uBAAf,CAAuC,IAAI,CAAC,SAA5C;IACb,SAAS,IAAI,CAAC,GAAL,CAAS,MAAM,IAAC,UAAS,CAAC,MAAM,CAAC,KAAjC,EAAwC,MAAM,IAAC,UAAS,CAAC,MAAM,CAAC,MAAhE;IACT,IAAC,UAAS,CAAC,MAAX,GAAoB;IACpB,IAAC,UAAS,CAAC,MAAX,GAAoB;IACpB,IAAC,UAAS,CAAC,IAAX,GAAkB,IAAC,UAAS,CAAC,MAAM,CAAC;IACpC,IAAC,UAAS,CAAC,IAAX,GAAkB,IAAC,UAAS,CAAC,MAAM,CAAC;WACpC,IAAC,MAAK,CAAC,QAAP,CAAgB,IAAC,UAAjB;EAhBe;;mCAkBjB,qBAAoB;AAClB;IAAA,UAAU,EAAE,aAAF,CAAgB,CAAC,IAAjB,CAAsB,IAAtB,EAA4B,eAA5B;IACV;;AAAU;AAAA;WAAA;;qBAAA;AAAA;;;IACV;;AAAU;WAAA;;YAA0B;uBAA1B,CAAC,CAAC;;AAAF;;;IACV,SAAS,CAAC,CAAC,IAAF,CAAO,MAAP;IACT,MAAM,CAAC,IAAP,CAAY,SAAC,CAAD,EAAI,CAAJ;AACV;MAAA,OAAO,SAAS,CAAT;MACP,OAAO,SAAS,CAAT;MACP,IAAG,IAAK,GAAL,GAAU,IAAK,GAAlB;eAA0B,CAAC,EAA3B;OAAA;eAAkC,EAAlC;;IAHU,CAAZ;AAKA;;MACE,SAAS,EAAE,mBAAF,CAAsB,CAAC,QAAvB,CAAgC,KAAhC;MACT,MAAM,CAAC,GAAP,CAAW,YAAX,EAAyB,KAAzB;MACA,MAAM,CAAC,GAAP,CAAW,KAAX;MACA,OAAO,CAAC,MAAR,CAAe,MAAf;AAJF;IAKA,OAAO,CAAC,KAAR,CAAc;aAAA,SAAC,CAAD;QACZ,EAAE,CAAC,CAAC,MAAJ,CAAW,CAAC,WAAZ,CAAwB,UAAxB;eACA,KAAC,iBAAD;MAFY;IAAA,QAAd;IAGA,IAAC,IAAG,CAAC,IAAL,CAAU,gBAAV,CAA2B,CAAC,WAA5B,CAAwC,OAAxC;WACA,IAAC,QAAD,GAAW;EAnBO;;mCAqBpB,aAAY;AACV;IAAA,KAAc,IAAC,UAAS,CAAC,MAAzB;AAAA;;IACA,OAAO,IAAC,UAAS,CAAC,GAAX,CAAe,aAAf;;MACP,OAAQ;;IACR,iEAAuC,CAAE;IACzC,gBACE;MAAA,MAAM,IAAN;MACA,QAAQ,MADR;MAEA,UAAU,EAAY,EAAE,CAAC,OAAH,MAAgB,IAAC,UAAS,CAAC,cAAX,CAA0B,EAA1B,CAA5B,iBAFV;MAGA,WACE;QAAA,QAAQ,IAAC,qBAAT;QACA,QAAQ,IAAC,qBADT;OAJF;MAMA,aACE;QAAA,qBAAqB,cAArB;OAPF;;IAQF,IAAC,YAAD,GAAe,IAAC,IAAG,CAAC,IAAL,CAAU,sBAAV,CAAiC,CAAC,MAAlC,CAAyC,aAAzC;IACf,IAAC,YAAW,CAAC,KAAb;IACA,IAAC,YAAW,CAAC,IAAb;IACA,OAAO,MAAM,CAAC,IAAP,CAAY,IAAC,YAAW,CAAC,eAAzB;IACP,IAAsD,IAAK,GAA3D;8EAAqC,CAAE,GAAG,CAAC,KAA3C;;EAlBU;;mCAoBZ,uBAAsB;IACpB,IAAC,UAAS,CAAC,GAAX,CAAe,aAAf,EAA8B,IAAC,YAAW,CAAC,IAA3C;WACA,QAAQ,CAAC,QAAQ,CAAC,OAAlB,CAA0B,wCAA1B,EAAoE;MAAA,aAAa,IAAC,YAAW,CAAC,IAA1B;KAApE;EAFoB;;mCAItB,uBAAsB,SAAC,CAAD,EAAI,QAAJ;AACpB;IAAA,IAAC,IAAG,CAAC,IAAL,CAAU,uBAAV,CAAkC,CAAC,MAAnC,CAA0C,QAAQ,CAAC,MAAT,GAAkB,CAA5D;IACA,SAAS,IAAC,YAAW,CAAC,qBAAb;IACT,KAAc,MAAd;AAAA;;IACA,IAAC,wBAAD,GAA2B;IAE3B,SAAS;AACT;AAAA;;MAAA,MAAO,OAAP,GAAgB;AAAhB;IAEA,SAAS;AACT;AAAA;;MACE,IAAgB,gBAAhB;AAAA;;MACA,IAA2B,MAAO,KAAlC;QAAA,MAAO,MAAK,CAAC,EAAN,CAAP,GAAmB,KAAnB;;AAFF;IAIA,IAAC,QAAO,CAAC,IAAT,CAAc,QAAd,CAAuB,CAAC,WAAxB,CAAoC,UAApC;IACA,IAAC,QAAO,CAAC,IAAT,CAAc,QAAd,CAAuB,CAAC,IAAxB,CAA6B,SAAC,CAAD,EAAI,MAAJ;MAC3B,IAAkC,MAAO,GAAE,MAAF,CAAS,CAAC,GAAV,GAAzC;eAAA,EAAE,MAAF,CAAS,CAAC,QAAV,CAAmB,UAAnB;;IAD2B,CAA7B;WAGA,IAAC,gBAAD;EAlBoB;;mCAoBtB,mBAAkB;AAChB;IAAA,SAAS;IACT,IAAC,QAAO,CAAC,IAAT,CAAc,QAAd,CAAuB,CAAC,IAAxB,CAA6B,SAAC,CAAD,EAAI,MAAJ;MAC3B,KAAc,EAAE,MAAF,CAAS,CAAC,QAAV,CAAmB,UAAnB,CAAd;AAAA;;aACA,MAAO,GAAE,MAAF,CAAS,CAAC,GAAV,GAAP,GAA0B;IAFC,CAA7B;IAIA,SAAS;AACT;AAAA;;MACE,IAAgB,gBAAhB;AAAA;;MACA,IAAoB,MAAO,MAAK,CAAC,EAAN,CAA3B;QAAA,MAAM,CAAC,IAAP,CAAY,GAAZ;;AAFF;IAIA,IAAC,wBAAuB,CAAC,GAAzB,CAA6B,GAA7B,EAAkC,MAAlC;WACA,IAAC,gBAAD;EAZgB;;;;GA3JkC;;AAyKhD;;;;;;;2BACJ,aAAY;;2BACZ,cAAa;WAAG;EAAH;;;;GAFc,UAAU,CAAC,OAAO,CAAC","file":"public/javascripts/app/views/editor/thang/ThangTypeColorsTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\r\ntemplate = require 'templates/editor/thang/colors_tab'\r\nSpriteBuilder = require 'lib/sprites/SpriteBuilder'\r\n{hexToHSL} = require 'core/utils'\r\nrequire 'vendor/treema'\r\n\r\nmodule.exports = class ThangTypeColorsTabView extends CocoView\r\n  id: 'editor-thang-colors-tab-view'\r\n  template: template\r\n  className: 'tab-pane'\r\n\r\n  offset: 0\r\n\r\n  constructor: (@thangType, options) ->\r\n    super options\r\n    @supermodel.loadModel @thangType\r\n    @colorConfig = {hue: 0, saturation: 0.5, lightness: 0.5}\r\n    @spriteBuilder = new SpriteBuilder(@thangType) if @thangType.get('raw')\r\n    f = =>\r\n      @offset++\r\n      @updateMovieClip()\r\n    @interval = setInterval f, 1000\r\n\r\n  destroy: ->\r\n    @colorGroups?.destroy()\r\n    clearInterval @interval\r\n    super()\r\n\r\n  afterRender: ->\r\n    super()\r\n    return unless @supermodel.finished()\r\n    @createShapeButtons()\r\n    @initStage()\r\n    @initSliders()\r\n    @tryToBuild()\r\n\r\n  # sliders\r\n\r\n  initSliders: ->\r\n    @hueSlider = @initSlider $('#hue-slider', @$el), 0, @makeSliderCallback 'hue'\r\n    @saturationSlider = @initSlider $('#saturation-slider', @$el), 50, @makeSliderCallback 'saturation'\r\n    @lightnessSlider = @initSlider $('#lightness-slider', @$el), 50, @makeSliderCallback 'lightness'\r\n\r\n  makeSliderCallback: (property) ->\r\n    (e, result) =>\r\n      @colorConfig[property] = result.value / 100\r\n      @updateMovieClip()\r\n\r\n  # movie clip\r\n\r\n  initStage: ->\r\n    canvas = @$el.find('#tinting-display')\r\n    @stage = new createjs.Stage(canvas[0])\r\n    createjs.Ticker.setFPS 20\r\n    createjs.Ticker.addEventListener('tick', @stage)\r\n    @updateMovieClip()\r\n\r\n  updateMovieClip: ->\r\n    return unless @currentColorGroupTreema and @thangType.get('raw')\r\n    actionDict = @thangType.getActions()\r\n    animations = (a.animation for key, a of actionDict when a.animation)\r\n    index = @offset % animations.length\r\n    animation = animations[index]\r\n    return @updateContainer() unless animation\r\n    @stage.removeChild(@movieClip) if @movieClip\r\n    options = {colorConfig: {}}\r\n    options.colorConfig[@currentColorGroupTreema.keyForParent] = @colorConfig\r\n    @spriteBuilder.setOptions options\r\n    @spriteBuilder.buildColorMaps()\r\n    @movieClip = @spriteBuilder.buildMovieClip animation\r\n    bounds = @movieClip.frameBounds?[0] ? @movieClip.nominalBounds\r\n    larger = Math.min(400 / bounds.width, 400 / bounds.height)\r\n    @movieClip.scaleX = larger\r\n    @movieClip.scaleY = larger\r\n    @movieClip.regX = bounds.x\r\n    @movieClip.regY = bounds.y\r\n    @stage.addChild @movieClip\r\n\r\n  updateContainer: ->\r\n    return unless @thangType.get('raw')\r\n    actionDict = @thangType.getActions()\r\n    idle = actionDict.idle\r\n    @stage.removeChild(@container) if @container\r\n    return unless idle?.container\r\n    options = {colorConfig: {}}\r\n    options.colorConfig[@currentColorGroupTreema.keyForParent] = @colorConfig\r\n    @spriteBuilder.setOptions options\r\n    @spriteBuilder.buildColorMaps()\r\n    @container = @spriteBuilder.buildContainerFromStore idle.container\r\n    larger = Math.min(400 / @container.bounds.width, 400 / @container.bounds.height)\r\n    @container.scaleX = larger\r\n    @container.scaleY = larger\r\n    @container.regX = @container.bounds.x\r\n    @container.regY = @container.bounds.y\r\n    @stage.addChild @container\r\n\r\n  createShapeButtons: ->\r\n    buttons = $('<div></div>').prop('id', 'shape-buttons')\r\n    shapes = (shape for key, shape of @thangType.get('raw')?.shapes or {})\r\n    colors = (s.fc for s in shapes when s.fc?)\r\n    colors = _.uniq(colors)\r\n    colors.sort (a, b) ->\r\n      aHSL = hexToHSL(a)\r\n      bHSL = hexToHSL(b)\r\n      if aHSL[0] > bHSL[0] then -1 else 1\r\n\r\n    for color in colors\r\n      button = $('<button></button>').addClass('btn')\r\n      button.css('background', color)\r\n      button.val color\r\n      buttons.append(button)\r\n    buttons.click (e) =>\r\n      $(e.target).toggleClass('selected')\r\n      @updateColorGroup()\r\n    @$el.find('#shape-buttons').replaceWith(buttons)\r\n    @buttons = buttons\r\n\r\n  tryToBuild: ->\r\n    return unless @thangType.loaded\r\n    data = @thangType.get('colorGroups')\r\n    data ?= {}\r\n    schema = @thangType.schema().properties?.colorGroups\r\n    treemaOptions =\r\n      data: data\r\n      schema: schema\r\n      readOnly: true unless me.isAdmin() or @thangType.hasWriteAccess(me)\r\n      callbacks:\r\n        change: @onColorGroupsChanged\r\n        select: @onColorGroupSelected\r\n      nodeClasses:\r\n        'thang-color-group': ColorGroupNode\r\n    @colorGroups = @$el.find('#color-groups-treema').treema treemaOptions\r\n    @colorGroups.build()\r\n    @colorGroups.open()\r\n    keys = Object.keys @colorGroups.childrenTreemas\r\n    @colorGroups.childrenTreemas[keys[0]]?.$el.click() if keys[0]\r\n\r\n  onColorGroupsChanged: =>\r\n    @thangType.set('colorGroups', @colorGroups.data)\r\n    Backbone.Mediator.publish 'editor:thang-type-color-groups-changed', colorGroups: @colorGroups.data\r\n\r\n  onColorGroupSelected: (e, selected) =>\r\n    @$el.find('#color-group-settings').toggle selected.length > 0\r\n    treema = @colorGroups.getLastSelectedTreema()\r\n    return unless treema\r\n    @currentColorGroupTreema = treema\r\n\r\n    shapes = {}\r\n    shapes[shape] = true for shape in treema.data\r\n\r\n    colors = {}\r\n    for key, shape of @thangType.get('raw')?.shapes or {}\r\n      continue unless shape.fc?\r\n      colors[shape.fc] = true if shapes[key]\r\n\r\n    @buttons.find('button').removeClass('selected')\r\n    @buttons.find('button').each (i, button) ->\r\n      $(button).addClass('selected') if colors[$(button).val()]\r\n\r\n    @updateMovieClip()\r\n\r\n  updateColorGroup: ->\r\n    colors = {}\r\n    @buttons.find('button').each (i, button) ->\r\n      return unless $(button).hasClass('selected')\r\n      colors[$(button).val()] = true\r\n\r\n    shapes = []\r\n    for key, shape of @thangType.get('raw')?.shapes or {}\r\n      continue unless shape.fc?\r\n      shapes.push(key) if colors[shape.fc]\r\n\r\n    @currentColorGroupTreema.set('/', shapes)\r\n    @updateMovieClip()\r\n\r\nclass ColorGroupNode extends TreemaNode.nodeMap.array\r\n  collection: false\r\n  canAddChild: -> false\r\n"]}