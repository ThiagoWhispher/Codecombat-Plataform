{"version":3,"sources":["app/templates/modal/model-modal.jade","app/views/modal/ModelModal.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/modal/ModelModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\">\");\n// iterate view.models\n;(function(){\n  var $$obj = view.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var model = $$obj[$index];\n\nbuf.push(\"<div\" + (jade.attrs({ 'data-model-id':(model.id), \"class\": [('model-container')] }, {\"data-model-id\":true})) + \"><h3>\" + (jade.escape(null == (jade.interp = model.type() + ': ' + model.id) ? \"\" : jade.interp)) + \"</h3><div\" + (jade.attrs({ 'data-model-id':(model.id), \"class\": [('model-treema')] }, {\"data-model-id\":true})) + \"></div><btn data-i18n=\\\"common.save\\\" class=\\\"btn btn-success save-model\\\">Save</btn></div><hr/>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var model = $$obj[$index];\n\nbuf.push(\"<div\" + (jade.attrs({ 'data-model-id':(model.id), \"class\": [('model-container')] }, {\"data-model-id\":true})) + \"><h3>\" + (jade.escape(null == (jade.interp = model.type() + ': ' + model.id) ? \"\" : jade.interp)) + \"</h3><div\" + (jade.attrs({ 'data-model-id':(model.id), \"class\": [('model-treema')] }, {\"data-model-id\":true})) + \"></div><btn data-i18n=\\\"common.save\\\" class=\\\"btn btn-success save-model\\\">Save</btn></div><hr/>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" data-i18n=\\\"modal.okay\\\" class=\\\"btn btn-primary\\\">Okay</button></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ModalView = require 'views/core/ModalView'\r\ntemplate = require 'templates/modal/model-modal'\r\nrequire 'vendor/treema'\r\n\r\nmodule.exports = class ModelModal extends ModalView\r\n  id: 'model-modal'\r\n  template: template\r\n  plain: true\r\n\r\n  events: 'click .save-model': 'onSaveModel'\r\n\r\n  constructor: (options) ->\r\n    super options\r\n    @models = options.models\r\n    for model in @models when not model.loaded\r\n      @supermodel.loadModel model\r\n      model.fetch cache: false\r\n\r\n  afterRender: ->\r\n    return unless @supermodel.finished()\r\n    @modelTreemas = {}\r\n    for model in @models\r\n      data = $.extend true, {}, model.attributes\r\n      schema = $.extend true, {}, model.schema()\r\n      treemaOptions =\r\n        schema: schema\r\n        data: data\r\n        readOnly: false\r\n      modelTreema = @$el.find(\".model-treema[data-model-id='#{model.id}']\").treema treemaOptions\r\n      modelTreema?.build()\r\n      modelTreema?.open()\r\n      @openTastyTreemas modelTreema, model\r\n      @modelTreemas[model.id] = modelTreema\r\n\r\n  openTastyTreemas: (modelTreema, model) ->\r\n    # To save on quick inspection, let's auto-open the properties we're most likely to want to see.\r\n    delicacies = ['code']\r\n    for dish in delicacies\r\n      child = modelTreema.childrenTreemas[dish]\r\n      child?.open()\r\n      if child and dish is 'code' and model.type() is 'LevelSession' and team = modelTreema.get('team')\r\n        desserts = {\r\n          humans: ['programmable-tharin', 'programmable-librarian']\r\n          ogres: ['programmable-brawler', 'programmable-shaman']\r\n        }[team]\r\n        for dessert in desserts\r\n          child.childrenTreemas[dessert]?.open()\r\n\r\n  onSaveModel: (e) ->\r\n    container = $(e.target).closest('.model-container')\r\n    model = _.find @models, id: container.data('model-id')\r\n    treema = @modelTreemas[model.id]\r\n    for key, val of treema.data when not _.isEqual val, model.get key\r\n      console.log 'Updating', key, 'from', model.get(key), 'to', val\r\n      model.set key, val\r\n    for key, val of model.attributes when treema.get(key) is undefined and not _.string.startsWith key, '_'\r\n      console.log 'Deleting', key, 'which was', val, 'but man, that ain\\'t going to work, now is it?'\r\n      #model.unset key\r\n    if errors = model.validate()\r\n      return console.warn model, 'failed validation with errors:', errors\r\n    return unless res = model.patch()\r\n    res.error =>\r\n      return if @destroyed\r\n      console.error model, 'failed to save with error:', res.responseText\r\n    res.success (model, response, options) =>\r\n      return if @destroyed\r\n      @hide()\r\n\r\n  destroy: ->\r\n    @modelTreemas[model].destroy() for model of @modelTreemas\r\n    super()\r\n"]}