{"version":3,"sources":["app/templates/modal/revert-modal.jade","app/views/modal/RevertModal.coffee"],"names":[],"mappings":"AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AAAA;;ACAA;EAAA;;;AAAA,YAAY,QAAQ,sBAAR;;AACZ,WAAW,QAAQ,8BAAR;;AACX,YAAY,QAAQ,kBAAR;;AAEZ,MAAM,CAAC,OAAP,GAAuB;;;;;;;wBACrB,KAAI;;wBACJ,WAAU;;wBAEV,SACE;IAAA,gCAAgC,eAAhC;;;wBAEF,gBAAe,SAAC,CAAD;AACb;IAAA,KAAK,EAAE,CAAC,CAAC,MAAJ,CAAW,CAAC,GAAZ;IACL,SAAS,CAAC,QAAS,IAAG,CAAC,MAAvB;IACA,EAAE,CAAC,CAAC,MAAJ,CAAW,CAAC,OAAZ,CAAoB,IAApB,CAAyB,CAAC,MAA1B;WACA,IAAC,cAAD,GAAiB;EAJJ;;wBAMf,gBAAe;AACb;IAAA,IAAI;IACJ,SAAS,CAAC,CAAC,MAAF,CAAS,SAAS,CAAC,QAAnB;IACT;;AAAU;WAAA;;YAAuB,CAAC,CAAC,eAAF;uBAAvB;;AAAA;;;IACV,CAAC,CAAC,MAAF,GAAW;WACX;EALa;;wBAOf,WAAU;IACR,IAAqB,IAAC,cAAtB;aAAA,QAAQ,CAAC,MAAT;;EADQ;;;;GApB+B","file":"public/javascripts/app/views/modal/RevertModal.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,models = locals_.models;buf.push(\"<div class=\\\"modal-dialog game\\\"><div class=\\\"background-wrapper\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\">\");\nif ( view.closeButton)\n{\nbuf.push(\"<div type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" class=\\\"button close\\\">&times;</div>\");\n}\nbuf.push(\"<h3 data-i18n=\\\"editor.revert_models\\\">Revert Models</h3></div><div class=\\\"modal-body\\\"><table id=\\\"changed-models\\\" class=\\\"table table-striped\\\">\");\n// iterate models\n;(function(){\n  var $$obj = models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var model = $$obj[$index];\n\nbuf.push(\"<tr><td>\" + (jade.escape((jade.interp = model.type()) == null ? '' : jade.interp)) + \": \" + (jade.escape((jade.interp = model.get('name')) == null ? '' : jade.interp)) + \"</td><td><button\" + (jade.attrs({ 'value':(model.id), 'data-i18n':(\"editor.revert\") }, {\"value\":true,\"data-i18n\":true})) + \">Revert</button></td></tr>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var model = $$obj[$index];\n\nbuf.push(\"<tr><td>\" + (jade.escape((jade.interp = model.type()) == null ? '' : jade.interp)) + \": \" + (jade.escape((jade.interp = model.get('name')) == null ? '' : jade.interp)) + \"</td><td><button\" + (jade.attrs({ 'value':(model.id), 'data-i18n':(\"editor.revert\") }, {\"value\":true,\"data-i18n\":true})) + \">Revert</button></td></tr>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</table></div><div class=\\\"modal-body wait secret\\\"><h3>Reticulating Splines...</h3><div class=\\\"progress progress-striped active\\\"><div class=\\\"progress-bar\\\"></div></div></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" data-i18n=\\\"modal.okay\\\" class=\\\"btn btn-primary\\\">Okay</button></div></div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","ModalView = require 'views/core/ModalView'\r\ntemplate = require 'templates/modal/revert-modal'\r\nCocoModel = require 'models/CocoModel'\r\n\r\nmodule.exports = class RevertModal extends ModalView\r\n  id: 'revert-modal'\r\n  template: template\r\n\r\n  events:\r\n    'click #changed-models button': 'onRevertModel'\r\n\r\n  onRevertModel: (e) ->\r\n    id = $(e.target).val()\r\n    CocoModel.backedUp[id].revert()\r\n    $(e.target).closest('tr').remove()\r\n    @reloadOnClose = true\r\n\r\n  getRenderData: ->\r\n    c = super()\r\n    models = _.values CocoModel.backedUp\r\n    models = (m for m in models when m.hasLocalChanges())\r\n    c.models = models\r\n    c\r\n\r\n  onHidden: ->\r\n    location.reload() if @reloadOnClose\r\n"]}