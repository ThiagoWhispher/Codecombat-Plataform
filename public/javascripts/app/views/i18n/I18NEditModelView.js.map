{"version":3,"sources":["app/views/i18n/I18NEditModelView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/i18n/I18NEditModelView.js","sourcesContent":["RootView = require 'views/core/RootView'\r\nlocale = require 'locale/locale'\r\nPatch = require 'models/Patch'\r\nPatches = require 'collections/Patches'\r\nPatchModal = require 'views/editor/PatchModal'\r\ntemplate = require 'templates/i18n/i18n-edit-model-view'\r\ndeltasLib = require 'core/deltas'\r\nace = require 'ace'\r\n\r\n###\r\n  This view is the superclass for all views which Diplomats use to submit translations\r\n  for database documents. They all work mostly the same, except they each set their\r\n  `@modelClass` which is a patchable Backbone model class, and they use `@wrapRow()`\r\n  to dynamically specify which properties are being translated.\r\n###\r\n  \r\nUNSAVED_CHANGES_MESSAGE = 'You have unsaved changes! Really discard them?'\r\n\r\nmodule.exports = class I18NEditModelView extends RootView\r\n  className: 'editor i18n-edit-model-view'\r\n  template: template\r\n\r\n  events:\r\n    'input .translation-input': 'onInputChanged'\r\n    'change #language-select': 'onLanguageSelectChanged'\r\n    'click #patch-submit': 'onSubmitPatch'\r\n    'click .open-patch-link': 'onClickOpenPatchLink'\r\n\r\n  constructor: (options, @modelHandle) ->\r\n    super(options)\r\n\r\n    @model = new @modelClass(_id: @modelHandle)\r\n    @supermodel.trackRequest(@model.fetch())\r\n    @patches = new Patches()\r\n    @listenTo @patches, 'change', -> @renderSelectors('#patches-col')\r\n    @patches.comparator = '_id'\r\n    @supermodel.trackRequest(@patches.fetchMineFor(@model))\r\n\r\n    @selectedLanguage = me.get('preferredLanguage', true)\r\n    @madeChanges = false\r\n\r\n  showLoading: ($el) ->\r\n    $el ?= @$el.find('.outer-content')\r\n    super($el)\r\n\r\n  onLoaded: ->\r\n    super()\r\n    @originalModel = @model.clone()\r\n\r\n  getRenderData: ->\r\n    c = super()\r\n\r\n    c.model = @model\r\n    c.selectedLanguage = @selectedLanguage\r\n\r\n    @translationList = []\r\n    if @supermodel.finished() then @buildTranslationList() else []\r\n    result.index = index for result, index in @translationList\r\n    c.translationList = @translationList\r\n\r\n    c\r\n\r\n  afterRender: ->\r\n    super()\r\n\r\n    @ignoreLanguageSelectChanges = true\r\n    $select = @$el.find('#language-select').empty()\r\n    @addLanguagesToSelect($select, @selectedLanguage)\r\n    @$el.find('option[value=\"en-US\"]').remove()\r\n    @ignoreLanguageSelectChanges = false\r\n    editors = []\r\n\r\n    @$el.find('tr[data-format=\"markdown\"]').each((index, el) =>\r\n      foundEnEl = enEl=$(el).find('.english-value-row div')[0]\r\n      if foundEnEl?\r\n        englishEditor = ace.edit(foundEnEl)\r\n        englishEditor.el = enEl\r\n        englishEditor.setReadOnly(true)\r\n        editors.push englishEditor\r\n      foundToEl = toEl=$(el).find('.to-value-row div')[0]\r\n      if foundToEl?\r\n        toEditor = ace.edit(foundToEl)\r\n        toEditor.el = toEl\r\n        toEditor.on 'change', @onEditorChange\r\n        editors.push toEditor\r\n    )\r\n\r\n    for editor in editors\r\n      session = editor.getSession()\r\n      session.setTabSize 2\r\n      session.setMode 'ace/mode/markdown'\r\n      session.setNewLineMode = 'unix'\r\n      session.setUseSoftTabs true\r\n      editor.setOptions({ maxLines: Infinity })\r\n\r\n  onEditorChange: (event, editor) =>\r\n    return if @destroyed\r\n    index = $(editor.el).data('index')\r\n    rowInfo = @translationList[index]\r\n    value = editor.getValue()\r\n    @onTranslationChanged(rowInfo, value)\r\n\r\n  wrapRow: (title, key, enValue, toValue, path, format) ->\r\n    @translationList.push {\r\n      title: title,\r\n      key: key,\r\n      enValue: enValue,\r\n      toValue: toValue or '',\r\n      path: path\r\n      format: format\r\n    }\r\n\r\n  buildTranslationList: -> [] # overwrite\r\n\r\n  onInputChanged: (e) ->\r\n    index = $(e.target).data('index')\r\n    rowInfo = @translationList[index]\r\n    value = $(e.target).val()\r\n    @onTranslationChanged(rowInfo, value)\r\n\r\n  onTranslationChanged: (rowInfo, value) ->\r\n    #- Navigate down to where the translation will live\r\n    base = @model.attributes\r\n\r\n    for seg in rowInfo.path\r\n      base = base[seg]\r\n\r\n    base = base.i18n\r\n\r\n    base[@selectedLanguage] ?= {}\r\n    base = base[@selectedLanguage]\r\n\r\n    if rowInfo.key.length > 1\r\n      for seg in rowInfo.key[..-2]\r\n        base[seg] ?= {}\r\n        base = base[seg]\r\n\r\n    #- Set the data in a non-kosher way\r\n    base[rowInfo.key[rowInfo.key.length-1]] = value\r\n    @model.saveBackup()\r\n\r\n    #- Enable patch submit button\r\n    @$el.find('#patch-submit').attr('disabled', null)\r\n    @madeChanges = true\r\n\r\n  onLanguageSelectChanged: (e) ->\r\n    return if @ignoreLanguageSelectChanges\r\n    if @madeChanges\r\n      return unless confirm(UNSAVED_CHANGES_MESSAGE)\r\n    @selectedLanguage = $(e.target).val()\r\n    if @selectedLanguage\r\n      me.set('preferredLanguage', @selectedLanguage)\r\n      me.patch()\r\n    @madeChanges = false\r\n    @model.set(@originalModel.clone().attributes)\r\n    @render()\r\n\r\n  onClickOpenPatchLink: (e) ->\r\n    patchID = $(e.currentTarget).data('patch-id')\r\n    patch = @patches.get(patchID)\r\n    modal = new PatchModal(patch, @model)\r\n    @openModalView(modal)\r\n\r\n  onLeaveMessage: ->\r\n    if @madeChanges\r\n      return UNSAVED_CHANGES_MESSAGE\r\n\r\n  onSubmitPatch: (e) ->\r\n    delta = @originalModel.getDeltaWith(@model)\r\n    flattened = deltasLib.flattenDelta(delta)\r\n    collection = _.string.underscored @model.constructor.className\r\n    patch = new Patch({\r\n      delta\r\n      target: { collection, 'id': @model.id }\r\n      commitMessage: \"Diplomat submission for lang #{@selectedLanguage}: #{flattened.length} change(s).\"\r\n    })\r\n    errors = patch.validate()\r\n    button = $(e.target)\r\n    button.attr('disabled', 'disabled')\r\n    return button.text('No changes submitted, did not save patch.') unless delta\r\n    return button.text('Failed to Submit Changes') if errors\r\n    res = patch.save(null, { url: _.result(@model, 'url') + '/patch' })\r\n    return button.text('Failed to Submit Changes') unless res\r\n    button.text('Submitting...')\r\n    Promise.resolve(res)\r\n    .then =>\r\n      @madeChanges = false\r\n      @patches.add(patch)\r\n      @renderSelectors('#patches-col')\r\n      button.text('Submit Changes')\r\n    .catch =>\r\n      button.text('Error Submitting Changes')\r\n      @$el.find('#patch-submit').attr('disabled', null)\r\n        \r\n"]}