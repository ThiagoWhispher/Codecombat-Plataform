{"version":3,"sources":["app/views/i18n/I18NHomeView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/i18n/I18NHomeView.js","sourcesContent":["RootView = require 'views/core/RootView'\r\ntemplate = require 'templates/i18n/i18n-home-view'\r\nCocoCollection = require 'collections/CocoCollection'\r\nCourses = require 'collections/Courses'\r\n\r\nLevelComponent = require 'models/LevelComponent'\r\nThangType = require 'models/ThangType'\r\nLevel = require 'models/Level'\r\nAchievement = require 'models/Achievement'\r\nCampaign = require 'models/Campaign'\r\nPoll = require 'models/Poll'\r\n\r\nlanguages = _.keys(require 'locale/locale').sort()\r\nPAGE_SIZE = 100\r\n\r\nmodule.exports = class I18NHomeView extends RootView\r\n  id: 'i18n-home-view'\r\n  template: template\r\n\r\n  events:\r\n    'change #language-select': 'onLanguageSelectChanged'\r\n\r\n  constructor: (options) ->\r\n    super(options)\r\n    @selectedLanguage = me.get('preferredLanguage') or ''\r\n\r\n    #-\r\n    @aggregateModels = new Backbone.Collection()\r\n    @aggregateModels.comparator = (m) ->\r\n      return 2 if m.specificallyCovered\r\n      return 1 if m.generallyCovered\r\n      return 0\r\n\r\n    project = ['name', 'components.original', 'i18n', 'i18nCoverage', 'slug']\r\n\r\n    @thangTypes = new CocoCollection([], { url: '/db/thang.type?view=i18n-coverage', project: project, model: ThangType })\r\n    @components = new CocoCollection([], { url: '/db/level.component?view=i18n-coverage', project: project, model: LevelComponent })\r\n    @levels = new CocoCollection([], { url: '/db/level?view=i18n-coverage', project: project, model: Level })\r\n    @achievements = new CocoCollection([], { url: '/db/achievement?view=i18n-coverage', project: project, model: Achievement })\r\n    @campaigns = new CocoCollection([], { url: '/db/campaign?view=i18n-coverage', project: project, model: Campaign })\r\n    @polls = new CocoCollection([], { url: '/db/poll?view=i18n-coverage', project: project, model: Poll })\r\n    @courses = new Courses()\r\n\r\n    for c in [@thangTypes, @components, @levels, @achievements, @campaigns, @polls, @courses]\r\n      c.skip = 0\r\n      c.fetch({data: {skip: 0, limit: PAGE_SIZE}, cache:false})\r\n      @supermodel.loadCollection(c, 'documents')\r\n      @listenTo c, 'sync', @onCollectionSynced\r\n\r\n\r\n  onCollectionSynced: (collection) ->\r\n    for model in collection.models\r\n      model.i18nURLBase = switch model.constructor.className\r\n        when 'ThangType' then '/i18n/thang/'\r\n        when 'LevelComponent' then '/i18n/component/'\r\n        when 'Achievement' then '/i18n/achievement/'\r\n        when 'Level' then '/i18n/level/'\r\n        when 'Campaign' then '/i18n/campaign/'\r\n        when 'Poll' then '/i18n/poll/'\r\n        when 'Course' then '/i18n/course/'\r\n    getMore = collection.models.length is PAGE_SIZE\r\n    @aggregateModels.add(collection.models)\r\n    @render()\r\n\r\n    if getMore\r\n      collection.skip += PAGE_SIZE\r\n      collection.fetch({data: {skip: collection.skip, limit: PAGE_SIZE}})\r\n\r\n  getRenderData: ->\r\n    c = super()\r\n    @updateCoverage()\r\n    c.languages = languages\r\n    c.selectedLanguage = @selectedLanguage\r\n    c.collection = @aggregateModels\r\n\r\n    covered = (m for m in @aggregateModels.models when m.specificallyCovered).length\r\n    total = @aggregateModels.models.length\r\n    c.progress = if total then parseInt(100 * covered / total) else 100\r\n    c.showGeneralCoverage = /-/.test(@selectedLanguage ? 'en')  # Only relevant for languages with more than one family, like zh-HANS\r\n\r\n    c\r\n\r\n  updateCoverage: ->\r\n    selectedBase = @selectedLanguage[..2]\r\n    relatedLanguages = (l for l in languages when _.string.startsWith(l, selectedBase) and l isnt @selectedLanguage)\r\n    for model in @aggregateModels.models\r\n      @updateCoverageForModel(model, relatedLanguages)\r\n      model.generallyCovered = true if _.string.startsWith @selectedLanguage, 'en'\r\n    @aggregateModels.sort()\r\n\r\n  updateCoverageForModel: (model, relatedLanguages) ->\r\n    model.specificallyCovered = true\r\n    model.generallyCovered = true\r\n    coverage = model.get('i18nCoverage')\r\n\r\n    if @selectedLanguage not in coverage\r\n      model.specificallyCovered = false\r\n      if not _.any((l in coverage for l in relatedLanguages))\r\n        model.generallyCovered = false\r\n        return\r\n\r\n  afterRender: ->\r\n    super()\r\n    @addLanguagesToSelect(@$el.find('#language-select'), @selectedLanguage)\r\n    @$el.find('option[value=\"en-US\"]').remove()\r\n\r\n  onLanguageSelectChanged: (e) ->\r\n    @selectedLanguage = $(e.target).val()\r\n    if @selectedLanguage\r\n      # simplest solution, see if this actually ends up being not what people want\r\n      me.set('preferredLanguage', @selectedLanguage)\r\n      me.patch()\r\n    @render()\r\n"]}