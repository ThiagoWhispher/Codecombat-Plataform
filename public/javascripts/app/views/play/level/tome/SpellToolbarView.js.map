{"version":3,"sources":["app/views/play/level/tome/SpellToolbarView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/SpellToolbarView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\r\ntemplate = require 'templates/play/level/tome/spell_toolbar'\r\n\r\nmodule.exports = class SpellToolbarView extends CocoView\r\n  className: 'spell-toolbar-view'\r\n  template: template\r\n  progressHoverDelay: 500\r\n\r\n  subscriptions:\r\n    'tome:spell-step-backward': 'onStepBackward'\r\n    'tome:spell-step-forward': 'onStepForward'\r\n\r\n  events:\r\n    'mousedown .spell-progress': 'onProgressMouseDown'\r\n    'mouseup .spell-progress': 'onProgressMouseUp'\r\n    'mousemove .spell-progress': 'onProgressMouseMove'\r\n    'tapstart .spell-progress': 'onProgressTapStart'\r\n    'tapend .spell-progress': 'onProgressTapEnd'\r\n    'tapmove .spell-progress': 'onProgressTapMove'\r\n    'click .step-backward': 'onStepBackward'\r\n    'click .step-forward': 'onStepForward'\r\n\r\n  constructor: (options) ->\r\n    super options\r\n    @ace = options.ace\r\n\r\n  afterRender: ->\r\n    super()\r\n\r\n  toggleFlow: (to) ->\r\n    @$el.find('.flow').toggle to\r\n\r\n  setStatementIndex: (statementIndex) ->\r\n    return unless total = @callState?.statementsExecuted\r\n    @statementIndex = Math.min(total - 1, Math.max(0, statementIndex))\r\n    @statementRatio = @statementIndex / (total - 1)\r\n    @statementTime = @callState.statements[@statementIndex]?.userInfo.time ? 0\r\n    @$el.find('.progress-bar').css('width', 100 * @statementRatio + '%')\r\n    @$el.find('.step-backward').prop('disabled', @statementIndex is 0)\r\n    @$el.find('.step-forward').prop('disabled', @statementIndex is total - 1)\r\n    @updateMetrics()\r\n    _.defer =>\r\n      Backbone.Mediator.publish 'tome:spell-statement-index-updated', statementIndex: @statementIndex, ace: @ace\r\n\r\n  updateMetrics: ->\r\n    statementsExecuted = @callState.statementsExecuted\r\n    $metrics = @$el.find('.metrics')\r\n    return $metrics.hide() if @suppressMetricsUpdates or not (statementsExecuted or @metrics.statementsExecuted)\r\n    if @metrics.callsExecuted > 1\r\n      $metrics.find('.call-index').text @callIndex + 1\r\n      $metrics.find('.calls-executed').text @metrics.callsExecuted\r\n      $metrics.find('.calls-metric').show().attr('title', \"Method call #{@callIndex + 1} of #{@metrics.callsExecuted} calls\")\r\n    else\r\n      $metrics.find('.calls-metric').hide()\r\n    if @metrics.statementsExecuted\r\n      $metrics.find('.statement-index').text @statementIndex + 1\r\n      $metrics.find('.statements-executed').text statementsExecuted\r\n      if @metrics.statementsExecuted > statementsExecuted\r\n        $metrics.find('.statements-executed-total').text \" (#{@metrics.statementsExecuted})\"\r\n        titleSuffix = \" (#{@metrics.statementsExecuted} statements total)\"\r\n      else\r\n        $metrics.find('.statements-executed-total').text ''\r\n        titleSuffix = ''\r\n      $metrics.find('.statements-metric').show().attr('title', \"Statement #{@statementIndex + 1} of #{statementsExecuted} this call#{titleSuffix}\")\r\n    else\r\n      $metrics.find('.statements-metric').hide()\r\n    left = @$el.find('.scrubber-handle').position().left + @$el.find('.spell-progress').position().left\r\n    $metrics.finish().show().css({left: left - $metrics.width() / 2}).delay(2000).fadeOut('fast')\r\n\r\n  setStatementRatio: (ratio) ->\r\n    return unless total = @callState?.statementsExecuted\r\n    statementIndex = Math.floor ratio * total\r\n    @setStatementIndex statementIndex unless statementIndex is @statementIndex\r\n\r\n  onProgressMouseDown: (e) ->\r\n    @dragging = true\r\n    @scrubProgress e\r\n    Backbone.Mediator.publish 'level:set-playing', playing: false\r\n\r\n  onProgressMouseUp: (e) ->\r\n    @dragging = false\r\n\r\n  onProgressMouseMove: (e) ->\r\n    return unless @dragging\r\n    @scrubProgress e\r\n\r\n  onProgressTapStart: (e, touchData) ->\r\n    # Haven't tested tap versions, don't even need them for iPad app, but hey, it worked for the playback scrubber.\r\n    @dragging = true\r\n    @scrubProgress e, touchData\r\n\r\n  onProgressTapEnd: (e, touchData) ->\r\n    @dragging = false\r\n\r\n  onProgressTapMove: (e, touchData) ->\r\n    return unless @dragging\r\n    @scrubProgress e, touchData\r\n\r\n  scrubProgress: (e, touchData) ->\r\n    screenOffsetX = e.clientX ? touchData?.position.x ? 0\r\n    offsetX = screenOffsetX - @$el.find('.spell-progress').offset().left\r\n    offsetX = Math.max offsetX, 0\r\n    @setStatementRatio offsetX / @$el.find('.spell-progress').width()\r\n    @updateTime()\r\n    @updateScroll()\r\n\r\n  onStepBackward: (e) -> @step -1\r\n  onStepForward: (e) -> @step 1\r\n  step: (delta) ->\r\n    lastTime = @statementTime\r\n    @setStatementIndex @statementIndex + delta\r\n    @updateTime() if @statementTime isnt lastTime\r\n    @updateScroll()\r\n    Backbone.Mediator.publish 'level:set-playing', playing: false\r\n\r\n  updateTime: ->\r\n    @maintainIndexScrub = true\r\n    clearTimeout @maintainIndexScrubTimeout if @maintainIndexScrubTimeout\r\n    @maintainIndexScrubTimeout = _.delay (=> @maintainIndexScrub = false), 500\r\n    Backbone.Mediator.publish 'level:set-time', time: @statementTime, scrubDuration: 500\r\n\r\n  updateScroll: ->\r\n    return unless statementStart = @callState?.statements?[@statementIndex]?.range[0]\r\n    text = @ace.getValue() # code in editor\r\n    currentLine = statementStart.row\r\n    @ace.scrollToLine currentLine, true, true\r\n\r\n  setCallState: (callState, statementIndex, @callIndex, @metrics) ->\r\n    return if callState is @callState and statementIndex is @statementIndex\r\n    return unless @callState = callState\r\n    @suppressMetricsUpdates = true\r\n    if not @maintainIndexScrub and not @dragging and statementIndex? and callState.statements[statementIndex]?.userInfo.time isnt @statementTime\r\n      @setStatementIndex statementIndex\r\n    else\r\n      @setStatementRatio @statementRatio\r\n    @suppressMetricsUpdates = false\r\n"]}