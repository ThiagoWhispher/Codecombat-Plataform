{"version":3,"sources":["app/templates/play/level/tome/cast-button-view.jade","app/views/play/level/tome/CastButtonView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/CastButtonView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view;if ( view.options.level.isType('game-dev'))\n{\nbuf.push(\"<button class=\\\"btn btn-lg btn-illustrated btn-success game-dev-play-btn\\\"><span data-i18n=\\\"play_level.test_level\\\"></span></button><button class=\\\"btn btn-lg btn-illustrated btn-success done-button secret\\\"><span data-i18n=\\\"play_level.done\\\"></span></button>\");\n}\nelse\n{\nbuf.push(\"<button\" + (jade.attrs({ 'title':(view.castVerbose()), \"class\": [('btn'),('btn-lg'),('btn-illustrated'),('cast-button')] }, {\"title\":true})) + \"><span data-i18n=\\\"play_level.tome_cast_button_ran\\\">Ran</span></button>\");\nif ( !view.observing)\n{\nif ( view.mirror)\n{\nbuf.push(\"<div class=\\\"ladder-submission-view\\\"></div>\");\n}\nelse\n{\nbuf.push(\"<button\" + (jade.attrs({ 'title':(view.castRealTimeVerbose()), \"class\": [('btn'),('btn-lg'),('btn-illustrated'),('submit-button')] }, {\"title\":true})) + \"><span data-i18n=\\\"play_level.tome_submit_button\\\">Submit</span><span class=\\\"spl secret submit-again-time\\\"></span></button><button class=\\\"btn btn-lg btn-illustrated btn-success done-button secret\\\"><span data-i18n=\\\"play_level.done\\\">Done</span></button>\");\nif ( view.autoSubmitsToLadder)\n{\nbuf.push(\"<div class=\\\"hidden\\\"><div class=\\\"ladder-submission-view\\\"></div></div>\");\n}\n}\n}\n};return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","CocoView = require 'views/core/CocoView'\r\ntemplate = require 'templates/play/level/tome/cast-button-view'\r\n{me} = require 'core/auth'\r\nLadderSubmissionView = require 'views/play/common/LadderSubmissionView'\r\nLevelSession = require 'models/LevelSession'\r\n\r\nmodule.exports = class CastButtonView extends CocoView\r\n  id: 'cast-button-view'\r\n  template: template\r\n\r\n  events:\r\n    'click .cast-button': 'onCastButtonClick'\r\n    'click .submit-button': 'onCastRealTimeButtonClick'\r\n    'click .done-button': 'onDoneButtonClick'\r\n    'click .game-dev-play-btn': 'onClickGameDevPlayButton'\r\n\r\n  subscriptions:\r\n    'tome:spell-changed': 'onSpellChanged'\r\n    'tome:cast-spells': 'onCastSpells'\r\n    'tome:manual-cast-denied': 'onManualCastDenied'\r\n    'god:new-world-created': 'onNewWorld'\r\n    'goal-manager:new-goal-states': 'onNewGoalStates'\r\n    'god:goals-calculated': 'onGoalsCalculated'\r\n    'playback:ended-changed': 'onPlaybackEndedChanged'\r\n\r\n  constructor: (options) ->\r\n    super options\r\n    @spells = options.spells\r\n    @castShortcut = '⇧↵'\r\n    @updateReplayabilityInterval = setInterval @updateReplayability, 1000\r\n    @observing = options.session.get('creator') isnt me.id\r\n    @loadMirrorSession() if @options.level.get('slug') in ['ace-of-coders', 'elemental-wars', 'the-battle-of-sky-span']\r\n    @mirror = @mirrorSession?\r\n    @autoSubmitsToLadder = @options.level.get('slug') in ['wakka-maul']\r\n\r\n  destroy: ->\r\n    clearInterval @updateReplayabilityInterval\r\n    super()\r\n\r\n  afterRender: ->\r\n    super()\r\n    @castButton = $('.cast-button', @$el)\r\n    spell.view?.createOnCodeChangeHandlers() for spellKey, spell of @spells\r\n    if @options.level.get('hidesSubmitUntilRun') or @options.level.get('hidesRealTimePlayback') or @options.level.isType('web-dev')\r\n      @$el.find('.submit-button').hide()  # Hide Submit for the first few until they run it once.\r\n    if @options.session.get('state')?.complete and (@options.level.get('hidesRealTimePlayback') or @options.level.isType('web-dev'))\r\n      @$el.find('.done-button').show()\r\n    if @options.level.get('slug') in ['course-thornbush-farm', 'thornbush-farm']\r\n      @$el.find('.submit-button').hide()  # Hide submit until first win so that script can explain it.\r\n    @updateReplayability()\r\n    @updateLadderSubmissionViews()\r\n\r\n  attachTo: (spellView) ->\r\n    @$el.detach().prependTo(spellView.toolbarView.$el).show()\r\n\r\n  castShortcutVerbose: ->\r\n    shift = $.i18n.t 'keyboard_shortcuts.shift'\r\n    enter = $.i18n.t 'keyboard_shortcuts.enter'\r\n    \"#{shift}+#{enter}\"\r\n\r\n  castVerbose: ->\r\n    @castShortcutVerbose() + ': ' + $.i18n.t('keyboard_shortcuts.run_code')\r\n\r\n  castRealTimeVerbose: ->\r\n    castRealTimeShortcutVerbose = (if @isMac() then 'Cmd' else 'Ctrl') + '+' + @castShortcutVerbose()\r\n    castRealTimeShortcutVerbose + ': ' + $.i18n.t('keyboard_shortcuts.run_real_time')\r\n\r\n  onCastButtonClick: (e) ->\r\n    Backbone.Mediator.publish 'tome:manual-cast', {}\r\n\r\n  onCastRealTimeButtonClick: (e) ->\r\n    if @options.level.get('replayable') and (timeUntilResubmit = @options.session.timeUntilResubmit()) > 0\r\n      Backbone.Mediator.publish 'tome:manual-cast-denied', timeUntilResubmit: timeUntilResubmit\r\n    else\r\n      Backbone.Mediator.publish 'tome:manual-cast', {realTime: true}\r\n    @updateReplayability()\r\n\r\n  onClickGameDevPlayButton: ->\r\n    Backbone.Mediator.publish 'tome:manual-cast', {realTime: true}\r\n\r\n  onDoneButtonClick: (e) ->\r\n    return if @options.level.hasLocalChanges()  # Don't award achievements when beating level changed in level editor\r\n    @options.session.recordScores @world?.scores, @options.level\r\n    Backbone.Mediator.publish 'level:show-victory', { showModal: true, manual: true }\r\n\r\n  onSpellChanged: (e) ->\r\n    @updateCastButton()\r\n\r\n  onCastSpells: (e) ->\r\n    return if e.preload\r\n    @casting = true\r\n    if @hasStartedCastingOnce  # Don't play this sound the first time\r\n      @playSound 'cast', 0.5 unless @options.level.isType('game-dev')\r\n    @hasStartedCastingOnce = true\r\n    @updateCastButton()\r\n\r\n  onManualCastDenied: (e) ->\r\n    wait = moment().add(e.timeUntilResubmit, 'ms').fromNow()\r\n    #@playSound 'manual-cast-denied', 1.0   # find some sound for this?\r\n    noty text: \"You can try again #{wait}.\", layout: 'center', type: 'warning', killer: false, timeout: 6000\r\n\r\n  onNewWorld: (e) ->\r\n    @casting = false\r\n    if @hasCastOnce  # Don't play this sound the first time\r\n      @playSound 'cast-end', 0.5 unless @options.level.isType('game-dev')\r\n      # Worked great for live beginner tournaments, but probably annoying for asynchronous tournament mode.\r\n      myHeroID = if me.team is 'ogres' then 'Hero Placeholder 1' else 'Hero Placeholder'\r\n      if @autoSubmitsToLadder and not e.world.thangMap[myHeroID]?.errorsOut and not me.get('anonymous')\r\n        _.delay (=> @ladderSubmissionView?.rankSession()), 1000 if @ladderSubmissionView\r\n    @hasCastOnce = true\r\n    @updateCastButton()\r\n    @world = e.world\r\n\r\n  onNewGoalStates: (e) ->\r\n    winnable = e.overallStatus is 'success'\r\n    return if @winnable is winnable\r\n    @winnable = winnable\r\n    @$el.toggleClass 'winnable', @winnable\r\n    Backbone.Mediator.publish 'tome:winnability-updated', winnable: @winnable, level: @options.level\r\n    if @options.level.get('hidesRealTimePlayback') or @options.level.isType('web-dev', 'game-dev')\r\n      @$el.find('.done-button').toggle @winnable\r\n    else if @winnable and @options.level.get('slug') in ['course-thornbush-farm', 'thornbush-farm']\r\n      @$el.find('.submit-button').show()  # Hide submit until first win so that script can explain it.\r\n\r\n  onGoalsCalculated: (e) ->\r\n    # When preloading, with real-time playback enabled, we highlight the submit button when we think they'll win.\r\n    return unless e.god is @god\r\n    return unless e.preload\r\n    return if @options.level.get 'hidesRealTimePlayback'\r\n    return if @options.level.get('slug') in ['course-thornbush-farm', 'thornbush-farm']  # Don't show it until they actually win for this first one.\r\n    @onNewGoalStates e\r\n\r\n  onPlaybackEndedChanged: (e) ->\r\n    return unless e.ended and @winnable\r\n    @$el.toggleClass 'has-seen-winning-replay', true\r\n\r\n  updateCastButton: ->\r\n    return if _.some @spells, (spell) => not spell.loaded\r\n\r\n    async.some _.values(@spells), (spell, callback) =>\r\n      spell.hasChangedSignificantly spell.getSource(), null, callback\r\n    , (castable) =>\r\n      Backbone.Mediator.publish 'tome:spell-has-changed-significantly-calculation', hasChangedSignificantly: castable\r\n      @castButton.toggleClass('castable', castable).toggleClass('casting', @casting)\r\n      if @casting\r\n        castText = $.i18n.t('play_level.tome_cast_button_running')\r\n      else if castable or true\r\n        castText = $.i18n.t('play_level.tome_cast_button_run')\r\n        unless @options.level.get 'hidesRunShortcut'  # Hide for first few.\r\n          castText += ' ' + @castShortcut\r\n      else\r\n        castText = $.i18n.t('play_level.tome_cast_button_ran')\r\n      @castButton.text castText\r\n      #@castButton.prop 'disabled', not castable\r\n      @ladderSubmissionView?.updateButton()\r\n\r\n  updateReplayability: =>\r\n    return if @destroyed\r\n    return unless @options.level.get 'replayable'\r\n    timeUntilResubmit = @options.session.timeUntilResubmit()\r\n    disabled = timeUntilResubmit > 0\r\n    submitButton = @$el.find('.submit-button').toggleClass('disabled', disabled)\r\n    submitAgainLabel = submitButton.find('.submit-again-time').toggleClass('secret', not disabled)\r\n    if disabled\r\n      waitTime = moment().add(timeUntilResubmit, 'ms').fromNow()\r\n      submitAgainLabel.text waitTime\r\n\r\n  loadMirrorSession: ->\r\n    url = \"/db/level/#{@options.level.get('slug') or @options.level.id}/session\"\r\n    url += \"?team=#{if me.team is 'humans' then 'ogres' else 'humans'}\"\r\n    mirrorSession = new LevelSession().setURL url\r\n    @mirrorSession = @supermodel.loadModel(mirrorSession, {cache: false}).model\r\n\r\n  updateLadderSubmissionViews: ->\r\n    @removeSubView subview for key, subview of @subviews when subview instanceof LadderSubmissionView\r\n    placeholder = @$el.find('.ladder-submission-view')\r\n    return unless placeholder.length\r\n    @ladderSubmissionView = new LadderSubmissionView session: @options.session, level: @options.level, mirrorSession: @mirrorSession\r\n    @insertSubView @ladderSubmissionView, placeholder\r\n"]}