{"version":3,"sources":["app/templates/play/level/tome/spell.jade","app/views/play/level/tome/Spell.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/tome/Spell.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view;buf.push(\"<img src=\\\"/images/level/code_editor_background.png\\\" class=\\\"code-background\\\"/><span class=\\\"code-background\\\"></span><div class=\\\"ace\\\"></div><div data-i18n=\\\"play_level.code_saved\\\" class=\\\"save-status\\\"></div><div class=\\\"programming-language-container\\\">\");\nif ( view.spell.level.isType('web-dev'))\n{\nvar campaign = view.spell.level.get('campaign') || '';\nif ( campaign.indexOf('web-dev-1') >= 0)\n{\nbuf.push(\"<span data-i18n=\\\"teacher.language\\\" class=\\\"programming-language-label\\\"></span><span class=\\\"programming-language-label spr\\\">:</span><span class=\\\"programming-language\\\">HTML</span>\");\n}\nelse\n{\nbuf.push(\"<span data-i18n=\\\"play_level.languages\\\" class=\\\"programming-language-label\\\"></span><span class=\\\"programming-language-label spr\\\">:</span><span class=\\\"programming-language spr\\\">HTML</span><span class=\\\"programming-language-label spr\\\">/</span><span class=\\\"programming-language\\\">JavaScript</span>\");\n}\n}\nelse\n{\nbuf.push(\"<span data-i18n=\\\"play_level.programming_language\\\" class=\\\"programming-language-label\\\"></span><span class=\\\"programming-language-label spr\\\">:</span><span class=\\\"programming-language\\\">\" + (jade.escape(null == (jade.interp = view.spell.displayCodeLanguage) ? \"\" : jade.interp)) + \"</span>\");\n}\nbuf.push(\"</div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","SpellView = require './SpellView'\r\nSpellTopBarView = require './SpellTopBarView'\r\n{me} = require 'core/auth'\r\n{createAetherOptions} = require 'lib/aether_utils'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class Spell\r\n  loaded: false\r\n  view: null\r\n  topBarView: null\r\n\r\n  constructor: (options) ->\r\n    @spellKey = options.spellKey\r\n    @pathComponents = options.pathComponents\r\n    @session = options.session\r\n    @otherSession = options.otherSession\r\n    @spectateView = options.spectateView\r\n    @spectateOpponentCodeLanguage = options.spectateOpponentCodeLanguage\r\n    @observing = options.observing\r\n    @supermodel = options.supermodel\r\n    @skipProtectAPI = options.skipProtectAPI\r\n    @worker = options.worker\r\n    @level = options.level\r\n    @createFromProgrammableMethod options.programmableMethod, options.language\r\n    if @canRead()  # We can avoid creating these views if we'll never use them.\r\n      @view = new SpellView {spell: @, level: options.level, session: @session, otherSession: @otherSession, worker: @worker, god: options.god, @supermodel, levelID: options.levelID}\r\n      @view.render()  # Get it ready and code loaded in advance\r\n      @topBarView = new SpellTopBarView\r\n        hintsState: options.hintsState\r\n        spell: @\r\n        supermodel: @supermodel\r\n        codeLanguage: @language\r\n        level: options.level\r\n        session: options.session\r\n        courseID: options.courseID\r\n      @topBarView.render()\r\n    Backbone.Mediator.publish 'tome:spell-created', spell: @\r\n\r\n  createFromProgrammableMethod: (programmableMethod, codeLanguage) ->\r\n    p = programmableMethod\r\n    @commentI18N = p.i18n\r\n    @commentContext = p.context\r\n    @languages = p.languages ? {}\r\n    @languages.javascript ?= p.source\r\n    @name = p.name\r\n    @permissions = read: p.permissions?.read ? [], readwrite: p.permissions?.readwrite ? ['humans']  # teams\r\n    @team = @permissions.readwrite[0] ? 'common'\r\n    if @canWrite()\r\n      @setLanguage codeLanguage\r\n    else if @otherSession and @team is @otherSession.get 'team'\r\n      @setLanguage @otherSession.get('submittedCodeLanguage') or @otherSession.get('codeLanguage')\r\n    else\r\n      @setLanguage 'javascript'\r\n\r\n    @source = @originalSource\r\n    @parameters = p.parameters\r\n    if @permissions.readwrite.length and sessionSource = @session.getSourceFor(@spellKey)\r\n      if sessionSource isnt '// Should fill in some default source\\n'  # TODO: figure out why session is getting this default source in there and stop it\r\n        @source = sessionSource\r\n    if p.aiSource and not @otherSession and not @canWrite()\r\n      @source = @originalSource = p.aiSource\r\n      @isAISource = true\r\n\r\n  destroy: ->\r\n    @view?.destroy()\r\n    @topBarView?.destroy()\r\n    @thang = null\r\n    @worker = null\r\n\r\n  setLanguage: (@language) ->\r\n    @language = 'html' if @level.isType('web-dev')\r\n    @displayCodeLanguage = utils.capitalLanguages[@language]\r\n    @originalSource = @languages[@language] ? @languages.javascript\r\n    @originalSource = @addPicoCTFProblem() if window.serverConfig.picoCTF\r\n\r\n    if @level.isType('web-dev')\r\n      # Pull apart the structural wrapper code and the player code, remember the wrapper code, and strip indentation on player code.\r\n      playerCode = utils.extractPlayerCodeTag(@originalSource)\r\n      @wrapperCode = @originalSource.replace /<playercode>[\\s\\S]*<\\/playercode>/, '☃'  # ☃ serves as placeholder for constructHTML\r\n      @originalSource = playerCode\r\n\r\n    # Translate comments chosen spoken language.\r\n    return unless @commentContext\r\n    context = $.extend true, {}, @commentContext\r\n    if @commentI18N\r\n      spokenLanguage = me.get 'preferredLanguage'\r\n      while spokenLanguage\r\n        spokenLanguage = spokenLanguage.substr 0, spokenLanguage.lastIndexOf('-') if fallingBack?\r\n        if spokenLanguageContext = @commentI18N[spokenLanguage]?.context\r\n          context = _.merge context, spokenLanguageContext\r\n          break\r\n        fallingBack = true\r\n    try\r\n      @originalSource = _.template @originalSource, context\r\n      @wrapperCode = _.template @wrapperCode, context\r\n    catch e\r\n      console.error \"Couldn't create example code template of\", @originalSource, \"\\nwith context\", context, \"\\nError:\", e\r\n\r\n    if /loop/.test(@originalSource) and @level.isType('course', 'course-ladder')\r\n      # Temporary hackery to make it look like we meant while True: in our sample code until we can update everything\r\n      @originalSource = switch @language\r\n        when 'python' then @originalSource.replace /loop:/, 'while True:'\r\n        when 'javascript' then @originalSource.replace /loop {/, 'while (true) {'\r\n        when 'lua' then @originalSource.replace /loop\\n/, 'while true then\\n'\r\n        when 'coffeescript' then @originalSource\r\n        else @originalSource\r\n\r\n  constructHTML: (source) ->\r\n    @wrapperCode.replace '☃', source\r\n\r\n  addPicoCTFProblem: ->\r\n    return @originalSource unless problem = @level.picoCTFProblem\r\n    description = \"\"\"\r\n      -- #{problem.name} --\r\n      #{problem.description}\r\n    \"\"\".replace /<p>(.*?)<\\/p>/gi, '$1'\r\n    (\"// #{line}\" for line in description.split('\\n')).join('\\n') + '\\n' + @originalSource\r\n\r\n  addThang: (thang) ->\r\n    if @thang?.thang.id is thang.id\r\n      @thang.thang = thang\r\n    else\r\n      @thang = {thang: thang, aether: @createAether(thang), castAether: null}\r\n\r\n  removeThangID: (thangID) ->\r\n    @thang = null if @thang?.thang.id is thangID\r\n\r\n  canRead: (team) ->\r\n    (team ? me.team) in @permissions.read or (team ? me.team) in @permissions.readwrite\r\n\r\n  canWrite: (team) ->\r\n    (team ? me.team) in @permissions.readwrite\r\n\r\n  getSource: ->\r\n    @view?.getSource() ? @source\r\n\r\n  transpile: (source) ->\r\n    if source\r\n      @source = source\r\n    else\r\n      source = @getSource()\r\n    unless @language is 'html'\r\n      @thang?.aether.transpile source\r\n    null\r\n\r\n  # NOTE: By default, I think this compares the current source code with the source *last saved to the server* (not the last time it was run)\r\n  hasChanged: (newSource=null, currentSource=null) ->\r\n    (newSource ? @originalSource) isnt (currentSource ? @source)\r\n\r\n  hasChangedSignificantly: (newSource=null, currentSource=null, cb) ->\r\n    unless aether = @thang?.aether\r\n      console.error @toString(), 'couldn\\'t find a spellThang with aether', @thang\r\n      cb false\r\n    if @worker\r\n      workerMessage =\r\n        function: 'hasChangedSignificantly'\r\n        a: (newSource ? @originalSource)\r\n        spellKey: @spellKey\r\n        b: (currentSource ? @source)\r\n        careAboutLineNumbers: true\r\n        careAboutLint: true\r\n      @worker.addEventListener 'message', (e) =>\r\n        workerData = JSON.parse e.data\r\n        if workerData.function is 'hasChangedSignificantly' and workerData.spellKey is @spellKey\r\n          @worker.removeEventListener 'message', arguments.callee, false\r\n          cb(workerData.hasChanged)\r\n      @worker.postMessage JSON.stringify(workerMessage)\r\n    else\r\n      cb(aether.hasChangedSignificantly((newSource ? @originalSource), (currentSource ? @source), true, true))\r\n\r\n  createAether: (thang) ->\r\n    writable = @permissions.readwrite.length > 0 and not @isAISource\r\n    skipProtectAPI = @skipProtectAPI or not writable or @level.isType('game-dev')\r\n    problemContext = @createProblemContext thang\r\n    includeFlow = @level.isType('hero', 'hero-ladder', 'hero-coop', 'course', 'course-ladder', 'game-dev') and not skipProtectAPI\r\n    aetherOptions = createAetherOptions\r\n      functionName: @name\r\n      codeLanguage: @language\r\n      functionParameters: @parameters\r\n      skipProtectAPI: skipProtectAPI\r\n      includeFlow: includeFlow\r\n      problemContext: problemContext\r\n      useInterpreter: true\r\n    aether = new Aether aetherOptions\r\n    if @worker\r\n      workerMessage =\r\n        function: 'createAether'\r\n        spellKey: @spellKey\r\n        options: aetherOptions\r\n      @worker.postMessage JSON.stringify workerMessage\r\n    aether\r\n\r\n  updateLanguageAether: (@language) ->\r\n    @thang?.aether?.setLanguage @language\r\n    @thang?.castAether = null\r\n    Backbone.Mediator.publish 'tome:spell-changed-language', spell: @, language: @language\r\n    if @worker\r\n      workerMessage =\r\n        function: 'updateLanguageAether'\r\n        newLanguage: @language\r\n      @worker.postMessage JSON.stringify workerMessage\r\n    @transpile()\r\n\r\n  toString: ->\r\n    \"<Spell: #{@spellKey}>\"\r\n\r\n  createProblemContext: (thang) ->\r\n    # Create problemContext Aether can use to craft better error messages\r\n    # stringReferences: values that should be referred to as a string instead of a variable (e.g. \"Brak\", not Brak)\r\n    # thisMethods: methods available on the 'this' object\r\n    # thisProperties: properties available on the 'this' object\r\n    # commonThisMethods: methods that are available sometimes, but not awlays\r\n\r\n    # NOTE: Assuming the first createProblemContext call has everything we need, and we'll use that forevermore\r\n    return @problemContext if @problemContext?\r\n\r\n    @problemContext = { stringReferences: [], thisMethods: [], thisProperties: [] }\r\n    # TODO: These should be read from the database\r\n    @problemContext.commonThisMethods = ['moveRight', 'moveLeft', 'moveUp', 'moveDown', 'attack', 'findNearestEnemy', 'buildXY', 'moveXY', 'say', 'move', 'distance', 'findEnemies', 'findFriends', 'addFlag', 'findFlag', 'removeFlag', 'findFlags', 'attackRange', 'cast', 'buildTypes', 'jump', 'jumpTo', 'attackXY']\r\n    return @problemContext unless thang?\r\n\r\n    # Populate stringReferences\r\n    for key, value of thang.world?.thangMap\r\n      if (value.isAttackable or value.isSelectable) and value.id not in @problemContext.stringReferences\r\n        @problemContext.stringReferences.push value.id\r\n\r\n    # Populate thisMethods and thisProperties\r\n    if thang.programmableProperties?\r\n      for prop in thang.programmableProperties\r\n        if _.isFunction(thang[prop])\r\n          @problemContext.thisMethods.push prop\r\n        else\r\n          @problemContext.thisProperties.push prop\r\n\r\n    # TODO: See SpellPaletteView.createPalette() for other interesting contextual properties\r\n\r\n    @problemContext\r\n\r\n  reloadCode: ->\r\n    # We pressed the reload button. Fetch our original source again in case it changed.\r\n    return unless programmableMethod = @thang?.thang?.programmableMethods?[@name]\r\n    @createFromProgrammableMethod programmableMethod, @language\r\n"]}