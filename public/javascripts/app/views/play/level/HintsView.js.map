{"version":3,"sources":["app/templates/play/level/hints-view.jade","app/views/play/level/HintsView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/play/level/HintsView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view;buf.push(\"<button class=\\\"close-hint-btn btn btn-illustrated btn-danger\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button><h1 class=\\\"text-center hint-title\\\"><span>\" + (jade.escape(null == (jade.interp = view.state.get('hintsTitle')) ? \"\" : jade.interp)) + \"</span></h1><div class=\\\"hint-body\\\">\" + (null == (jade.interp = view.getProcessedHint()) ? \"\" : jade.interp) + \"</div><div class=\\\"row btn-area\\\"><div class=\\\"col-md-4\\\">\");\nif ( view.state.get('hintIndex') > 0)\n{\nbuf.push(\"<button data-i18n=\\\"about.previous\\\" class=\\\"previous-btn btn btn-illustrated pull-left\\\"></button>\");\n}\nbuf.push(\"</div><div class=\\\"col-md-4\\\"><h2 class=\\\"text-center hint-pagination\\\">\" + (jade.escape((jade.interp = view.state.get('hintIndex')+1) == null ? '' : jade.interp)) + \" / \" + (jade.escape((jade.interp = view.hintsState.get('total')) == null ? '' : jade.interp)) + \"</h2></div><div class=\\\"col-md-4\\\">\");\nif ( view.state.get('hintIndex') < view.hintsState.get('total') - 1)\n{\nbuf.push(\"<button data-i18n=\\\"play.next\\\" class=\\\"next-btn btn btn-illustrated pull-right\\\"></button>\");\n}\nbuf.push(\"</div></div><div class=\\\"clearfix\\\"></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","CocoView = require 'views/core/CocoView'\r\nState = require 'models/State'\r\nace = require 'ace'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class HintsView extends CocoView\r\n  template: require('templates/play/level/hints-view')\r\n  className: 'hints-view'\r\n  hintUsedThresholdSeconds: 10\r\n\r\n  events:\r\n    'click .next-btn': 'onClickNextButton'\r\n    'click .previous-btn': 'onClickPreviousButton'\r\n    'click .close-hint-btn': 'hideView'\r\n\r\n  subscriptions:\r\n    'level:show-victory': 'hideView'\r\n    'tome:manual-cast': 'hideView'\r\n\r\n  initialize: (options) ->\r\n    {@level, @session, @hintsState} = options\r\n    @state = new State({\r\n      hintIndex: 0\r\n      hintsViewTime: {}\r\n      hintsUsed: {}\r\n    })\r\n    @updateHint()\r\n\r\n    debouncedRender = _.debounce(@render)\r\n    @listenTo(@state, 'change', debouncedRender)\r\n    @listenTo(@hintsState, 'change', debouncedRender)\r\n    @listenTo(@state, 'change:hintIndex', @updateHint)\r\n    @listenTo(@hintsState, 'change:hidden', @visibilityChanged)\r\n\r\n  destroy: ->\r\n    clearInterval(@timerIntervalID)\r\n    super()\r\n\r\n  afterRender: ->\r\n    @$el.toggleClass('hide', @hintsState.get('hidden'))\r\n    super()\r\n    @playSound 'game-menu-open'\r\n    @$('a').attr 'target', '_blank'\r\n    codeLanguage = @options.session.get('codeLanguage') or me.get('aceConfig')?.language or 'python'\r\n\r\n    oldEditor.destroy() for oldEditor in @aceEditors ? []\r\n    @aceEditors = []\r\n    aceEditors = @aceEditors\r\n    @$el.find('pre:has(code[class*=\"lang-\"])').each ->\r\n      aceEditor = utils.initializeACE @, codeLanguage\r\n      aceEditors.push aceEditor\r\n\r\n  getProcessedHint: ->\r\n    language = @session.get('codeLanguage')\r\n    hint = @state.get('hint')\r\n    return unless hint\r\n\r\n    # process\r\n    translated = utils.i18n(hint, 'body')\r\n    filtered = utils.filterMarkdownCodeLanguages(translated, language)\r\n    markedUp = marked(filtered)\r\n\r\n    return markedUp\r\n\r\n  updateHint: ->\r\n    index = @state.get('hintIndex')\r\n    hintsTitle = $.i18n.t('play_level.hints_title').replace('{{number}}', index + 1)\r\n    @state.set({ hintsTitle, hint: @hintsState.getHint(index) })\r\n\r\n  onClickNextButton: ->\r\n    window.tracker?.trackEvent 'Hints Next Clicked', category: 'Students', levelSlug: @level.get('slug'), hintCount: @hintsState.get('hints')?.length ? 0, hintCurrent: @state.get('hintIndex'), []\r\n    max = @hintsState.get('total') - 1\r\n    @state.set('hintIndex', Math.min(@state.get('hintIndex') + 1, max))\r\n    @playSound 'menu-button-click'\r\n    @updateHintTimer()\r\n\r\n  onClickPreviousButton: ->\r\n    window.tracker?.trackEvent 'Hints Previous Clicked', category: 'Students', levelSlug: @level.get('slug'), hintCount: @hintsState.get('hints')?.length ? 0, hintCurrent: @state.get('hintIndex'), []\r\n    @state.set('hintIndex', Math.max(@state.get('hintIndex') - 1, 0))\r\n    @playSound 'menu-button-click'\r\n    @updateHintTimer()\r\n\r\n  hideView: ->\r\n    @hintsState?.set('hidden', true)\r\n    @playSound 'game-menu-close'\r\n\r\n  visibilityChanged: (e) ->\r\n    @updateHintTimer()\r\n\r\n  updateHintTimer: ->\r\n    clearInterval(@timerIntervalID)\r\n    unless @hintsState.get('hidden') or @state.get('hintsUsed')?[@state.get('hintIndex')]\r\n      @timerIntervalID = setInterval(@incrementHintViewTime, 1000)\r\n\r\n  incrementHintViewTime: =>\r\n    hintIndex = @state.get('hintIndex')\r\n    hintsViewTime = @state.get('hintsViewTime')\r\n    hintsViewTime[hintIndex] ?= 0\r\n    hintsViewTime[hintIndex]++\r\n    hintsUsed = @state.get('hintsUsed')\r\n    if hintsViewTime[hintIndex] > @hintUsedThresholdSeconds and not hintsUsed[hintIndex]\r\n      window.tracker?.trackEvent 'Hint Used', category: 'Students', levelSlug: @level.get('slug'), hintCount: @hintsState.get('hints')?.length ? 0, hintCurrent: hintIndex, []\r\n      hintsUsed[hintIndex] = true\r\n      @state.set('hintsUsed', hintsUsed)\r\n      clearInterval(@timerIntervalID)\r\n    @state.set('hintsViewTime', hintsViewTime)\r\n"]}