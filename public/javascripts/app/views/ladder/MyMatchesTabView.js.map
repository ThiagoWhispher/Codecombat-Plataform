{"version":3,"sources":["app/views/ladder/MyMatchesTabView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/ladder/MyMatchesTabView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\r\nLevel = require 'models/Level'\r\nLevelSession = require 'models/LevelSession'\r\nLeaderboardCollection  = require 'collections/LeaderboardCollection'\r\nLadderSubmissionView = require 'views/play/common/LadderSubmissionView'\r\n{teamDataFromLevel} = require './utils'\r\nrequire 'vendor/d3'\r\n\r\nmodule.exports = class MyMatchesTabView extends CocoView\r\n  id: 'my-matches-tab-view'\r\n  template: require 'templates/play/ladder/my_matches_tab'\r\n\r\n  initialize: (options, @level, @sessions) ->\r\n    @nameMap = {}\r\n    @previouslyRankingTeams = {}\r\n    @refreshMatches 20\r\n\r\n  refreshMatches: (@refreshDelay) ->\r\n    @teams = teamDataFromLevel @level\r\n\r\n    convertMatch = (match, submitDate) =>\r\n      opponent = match.opponents[0]\r\n      state = 'win'\r\n      state = 'loss' if match.metrics.rank > opponent.metrics.rank\r\n      state = 'tie' if match.metrics.rank is opponent.metrics.rank\r\n      fresh = match.date > (new Date(new Date() - @refreshDelay * 1000)).toISOString()\r\n      if fresh\r\n        @playSound 'chat_received'\r\n      {\r\n        state: state\r\n        opponentName: @nameMap[opponent.userID]\r\n        opponentID: opponent.userID\r\n        when: moment(match.date).fromNow()\r\n        sessionID: opponent.sessionID\r\n        stale: match.date < submitDate\r\n        fresh: fresh\r\n        codeLanguage: match.codeLanguage\r\n        simulator: if match.simulator then JSON.stringify(match.simulator) + ' | seed ' + match.randomSeed else ''\r\n      }\r\n\r\n    for team in @teams\r\n      team.session = (s for s in @sessions.models when s.get('team') is team.id)[0]\r\n      stats = @statsFromSession team.session\r\n      team.readyToRank = team.session?.readyToRank()\r\n      team.isRanking = team.session?.get('isRanking')\r\n      team.matches = (convertMatch(match, team.session.get('submitDate')) for match in (stats?.matches or []))\r\n      team.matches.reverse()\r\n      team.score = (stats?.totalScore ? 10).toFixed(2)\r\n      team.wins = _.filter(team.matches, {state: 'win', stale: false}).length\r\n      team.ties = _.filter(team.matches, {state: 'tie', stale: false}).length\r\n      team.losses = _.filter(team.matches, {state: 'loss', stale: false}).length\r\n      scoreHistory = stats?.scoreHistory\r\n      if scoreHistory?.length > 1\r\n        team.scoreHistory = scoreHistory\r\n\r\n      if not team.isRanking and @previouslyRankingTeams[team.id]\r\n        @playSound 'cast-end'\r\n      @previouslyRankingTeams[team.id] = team.isRanking\r\n\r\n    @loadNames()\r\n\r\n  loadNames: ->\r\n    # Only fetch the names for the userIDs we don't already have in @nameMap\r\n    ids = []\r\n    for session in @sessions.models\r\n      matches = @statsFromSession(session).matches or []\r\n      for match in matches\r\n        id = match.opponents[0].userID\r\n        unless id\r\n          console.error 'Found bad opponent ID in malformed match:', match, 'from session', session\r\n          continue\r\n        ids.push id unless @nameMap[id]\r\n\r\n    ids = _.uniq ids\r\n    return unless ids.length\r\n\r\n    success = (nameMap) =>\r\n      return if @destroyed\r\n      for session in @sessions.models\r\n        matches = @statsFromSession(session).matches or []\r\n        for match in matches\r\n          opponent = match.opponents[0]\r\n          continue if @nameMap[opponent.userID]\r\n          opponentUser = nameMap[opponent.userID]\r\n          name = opponentUser?.name\r\n          name ||= opponentUser.firstName + ' ' + opponentUser.lastName if opponentUser?.firstName\r\n          name ||= \"Anonymous #{opponent.userID.substr(18)}\" if opponentUser\r\n          unless name\r\n            console.log 'found', nameMap[opponent.userID], 'for', opponent.userID, \"http://codecombat.com/db/user/#{opponent.userID}\"\r\n          name ||= '<bad match data>'\r\n          if name.length > 21\r\n            name = name.substr(0, 18) + '...'\r\n          @nameMap[opponent.userID] = name\r\n      @render() if @supermodel.finished()\r\n\r\n    userNamesRequest = @supermodel.addRequestResource 'user_names', {\r\n      url: '/db/user/-/names'\r\n      data: {ids: ids}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    userNamesRequest.load()\r\n\r\n  afterRender: ->\r\n    super()\r\n    @removeSubView subview for key, subview of @subviews when subview instanceof LadderSubmissionView\r\n    @$el.find('.ladder-submission-view').each (i, el) =>\r\n      placeholder = $(el)\r\n      sessionID = placeholder.data('session-id')\r\n      session = _.find @sessions.models, {id: sessionID}\r\n      if @level.get('slug') in ['ace-of-coders', 'elemental-wars', 'the-battle-of-sky-span']\r\n        mirrorSession = (s for s in @sessions.models when s.get('team') isnt session.get('team'))[0]\r\n      ladderSubmissionView = new LadderSubmissionView session: session, level: @level, mirrorSession: mirrorSession\r\n      @insertSubView ladderSubmissionView, placeholder\r\n\r\n    @$el.find('.score-chart-wrapper').each (i, el) =>\r\n      scoreWrapper = $(el)\r\n      team = _.find @teams, name: scoreWrapper.data('team-name')\r\n      @generateScoreLineChart(scoreWrapper.attr('id'), team.scoreHistory, team.name)\r\n\r\n    @$el.find('tr.fresh').removeClass('fresh', 5000)\r\n\r\n  statsFromSession: (session) ->\r\n    return null unless session\r\n    if @options.league\r\n      return _.find(session.get('leagues') or [], leagueID: @options.league.id)?.stats ? {}\r\n    session.attributes\r\n\r\n  generateScoreLineChart: (wrapperID, scoreHistory, teamName) =>\r\n    margin =\r\n      top: 20\r\n      right: 20\r\n      bottom: 30\r\n      left: 50\r\n\r\n    width = 450 - margin.left - margin.right\r\n    height = 125\r\n    x = d3.time.scale().range([0, width])\r\n    y = d3.scale.linear().range([height, 0])\r\n\r\n    xAxis = d3.svg.axis().scale(x).orient('bottom').ticks(4).outerTickSize(0)\r\n    yAxis = d3.svg.axis().scale(y).orient('left').ticks(4).outerTickSize(0)\r\n\r\n    line = d3.svg.line().x(((d) -> x(d.date))).y((d) -> y(d.close))\r\n    selector = '#' + wrapperID\r\n\r\n    svg = d3.select(selector).append('svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', \"translate(#{margin.left}, #{margin.top})\")\r\n    time = 0\r\n    data = scoreHistory.map (d) ->\r\n      time +=1\r\n      return {\r\n        date: time\r\n        close: d[1] * 100\r\n      }\r\n\r\n    x.domain(d3.extent(data, (d) -> d.date))\r\n    y.domain(d3.extent(data, (d) -> d.close))\r\n\r\n    svg.append('g')\r\n      .attr('class', 'y axis')\r\n      .call(yAxis)\r\n      .append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', 4)\r\n      .attr('dy', '.75em')\r\n      .style('text-anchor', 'end')\r\n      .text('Score')\r\n    lineClass = 'line'\r\n    if teamName.toLowerCase() is 'ogres' then lineClass = 'ogres-line'\r\n    if teamName.toLowerCase() is 'humans' then lineClass = 'humans-line'\r\n    svg.append('path')\r\n      .datum(data)\r\n      .attr('class', lineClass)\r\n      .attr('d', line)\r\n"]}