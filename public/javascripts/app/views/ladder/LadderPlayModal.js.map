{"version":3,"sources":["app/views/ladder/LadderPlayModal.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/ladder/LadderPlayModal.js","sourcesContent":["ModalView = require 'views/core/ModalView'\r\ntemplate = require 'templates/play/ladder/play_modal'\r\nThangType = require 'models/ThangType'\r\n{me} = require 'core/auth'\r\nLeaderboardCollection = require 'collections/LeaderboardCollection'\r\n{teamDataFromLevel} = require './utils'\r\n\r\nmodule.exports = class LadderPlayModal extends ModalView\r\n  id: 'ladder-play-modal'\r\n  template: template\r\n  closeButton: true\r\n  @shownTutorialButton: false\r\n  tutorialLevelExists: null\r\n\r\n  events:\r\n    'click #skip-tutorial-button': 'hideTutorialButtons'\r\n    'change #tome-language': 'updateLanguage'\r\n\r\n  defaultAceConfig:\r\n    language: 'javascript'\r\n    keyBindings: 'default'\r\n    invisibles: false\r\n    indentGuides: false\r\n    behaviors: false\r\n    liveCompletion: true\r\n\r\n  initialize: (options, @level, @session, @team) ->\r\n    @otherTeam = if @team is 'ogres' then 'humans' else 'ogres'\r\n    @wizardType = ThangType.loadUniversalWizard()\r\n    @startLoadingChallengersMaybe()\r\n    @levelID = @level.get('slug') or @level.id\r\n    @language = @session?.get('codeLanguage') ? me.get('aceConfig')?.language ? 'python'\r\n    @languages = [\r\n      {id: 'python', name: 'Python'}\r\n      {id: 'javascript', name: 'JavaScript'}\r\n      {id: 'coffeescript', name: 'CoffeeScript (Experimental)'}\r\n      {id: 'lua', name: 'Lua'}\r\n      {id: 'java', name: 'Java'}\r\n    ]\r\n    @myName = me.get('name') || 'Newcomer'\r\n\r\n    teams = []\r\n    teams[t.id] = t for t in teamDataFromLevel @level\r\n    @teamColor = teams[@team].primaryColor\r\n    @teamBackgroundColor = teams[@team].bgColor\r\n    @opponentTeamColor = teams[@otherTeam].primaryColor\r\n    @opponentTeamBackgroundColor = teams[@otherTeam].bgColor\r\n\r\n  updateLanguage: ->\r\n    aceConfig = _.cloneDeep me.get('aceConfig') ? {}\r\n    aceConfig = _.defaults aceConfig, @defaultAceConfig\r\n    aceConfig.language = @$el.find('#tome-language').val()\r\n    me.set 'aceConfig', aceConfig\r\n    me.patch()\r\n    if @session\r\n      @session.set 'codeLanguage', aceConfig.language\r\n      @session.patch()\r\n\r\n  # PART 1: Load challengers from the db unless some are in the matches\r\n  startLoadingChallengersMaybe: ->\r\n    if @options.league\r\n      matches = _.find(@session?.get('leagues'), leagueID: @options.league.id)?.stats.matches\r\n    else\r\n      matches = @session?.get('matches')\r\n    if matches?.length then @loadNames() else @loadChallengers()\r\n\r\n  loadChallengers: ->\r\n    @challengersCollection = new ChallengersData(@level, @team, @otherTeam, @session, @options.league)\r\n    @listenTo(@challengersCollection, 'sync', @loadNames)\r\n\r\n  # PART 2: Loading the names of the other users\r\n\r\n  loadNames: ->\r\n    @challengers = @getChallengers()\r\n    ids = (challenger.opponentID for challenger in _.values @challengers)\r\n\r\n    for challenger in _.values @challengers\r\n      continue unless challenger and @wizardType.loaded\r\n      if (not challenger.opponentImageSource) and challenger.opponentWizard?.colorConfig\r\n        challenger.opponentImageSource = @wizardType.getPortraitSource(\r\n          {colorConfig: challenger.opponentWizard.colorConfig})\r\n\r\n    success = (@nameMap) =>\r\n      for challenger in _.values(@challengers)\r\n        challenger.opponentName = @nameMap[challenger.opponentID]?.name or 'Anonymous'\r\n        challenger.opponentWizard = @nameMap[challenger.opponentID]?.wizard or {}\r\n      @checkWizardLoaded()\r\n\r\n    userNamesRequest = @supermodel.addRequestResource 'user_names', {\r\n      url: '/db/user/-/names'\r\n      data: {ids: ids, wizard: true}\r\n      method: 'POST'\r\n      success: success\r\n    }, 0\r\n    userNamesRequest.load()\r\n\r\n  # PART 3: Make sure wizard is loaded\r\n\r\n  checkWizardLoaded: ->\r\n    if @wizardType.loaded then @finishRendering() else @listenToOnce(@wizardType, 'sync', @finishRendering)\r\n\r\n  # PART 4: Render\r\n\r\n  finishRendering: ->\r\n    return if @destroyed\r\n    @checkTutorialLevelExists (exists) =>\r\n      @tutorialLevelExists = exists\r\n      @render()\r\n      @maybeShowTutorialButtons()\r\n    @genericPortrait = @wizardType.getPortraitSource()\r\n    myColorConfig = me.get('wizard')?.colorConfig\r\n    @myPortrait = if myColorConfig then @wizardType.getPortraitSource({colorConfig: myColorConfig}) else @genericPortrait\r\n\r\n  maybeShowTutorialButtons: ->\r\n    return if @session or LadderPlayModal.shownTutorialButton or not @tutorialLevelExists\r\n    @$el.find('#normal-view').addClass('secret')\r\n    @$el.find('.modal-header').addClass('secret')\r\n    @$el.find('#noob-view').removeClass('secret')\r\n    LadderPlayModal.shownTutorialButton = true\r\n\r\n  hideTutorialButtons: ->\r\n    @$el.find('#normal-view').removeClass('secret')\r\n    @$el.find('.modal-header').removeClass('secret')\r\n    @$el.find('#noob-view').addClass('secret')\r\n\r\n  checkTutorialLevelExists: (cb) ->\r\n    levelID = @level.get('slug') or @level.id\r\n    tutorialLevelID = \"#{levelID}-tutorial\"\r\n    success = => cb true\r\n    failure = => cb false\r\n    $.ajax\r\n      type: 'GET'\r\n      url: \"/db/level/#{tutorialLevelID}/exists\"\r\n      success: success\r\n      error: failure\r\n\r\n  # Choosing challengers\r\n\r\n  getChallengers: ->\r\n    # make an object of challengers to everything needed to link to them\r\n    challengers = {}\r\n    if @challengersCollection\r\n      easyInfo = @challengeInfoFromSession(@challengersCollection.easyPlayer.models[0])\r\n      mediumInfo = @challengeInfoFromSession(@challengersCollection.mediumPlayer.models[0])\r\n      hardInfo = @challengeInfoFromSession(@challengersCollection.hardPlayer.models[0])\r\n    else\r\n      if @options.league\r\n        matches = _.find(@session?.get('leagues'), leagueID: @options.league.id)?.stats.matches\r\n      else\r\n        matches = @session?.get('matches')\r\n      won = (m for m in matches when m.metrics.rank < m.opponents[0].metrics.rank)\r\n      lost = (m for m in matches when m.metrics.rank > m.opponents[0].metrics.rank)\r\n      tied = (m for m in matches when m.metrics.rank is m.opponents[0].metrics.rank)\r\n      easyInfo = @challengeInfoFromMatches(won)\r\n      mediumInfo = @challengeInfoFromMatches(tied)\r\n      hardInfo = @challengeInfoFromMatches(lost)\r\n    @addChallenger easyInfo, challengers, 'easy'\r\n    @addChallenger mediumInfo, challengers, 'medium'\r\n    @addChallenger hardInfo, challengers, 'hard'\r\n    challengers\r\n\r\n  addChallenger: (info, challengers, title) ->\r\n    # check for duplicates first\r\n    return unless info\r\n    for key, value of challengers\r\n      return if value.sessionID is info.sessionID\r\n    challengers[title] = info\r\n\r\n  challengeInfoFromSession: (session) ->\r\n    # given a model from the db, return info needed for a link to the match\r\n    return unless session\r\n    return {\r\n      sessionID: session.id\r\n      opponentID: session.get 'creator'\r\n      codeLanguage: session.get 'submittedCodeLanguage'\r\n    }\r\n\r\n  challengeInfoFromMatches: (matches) ->\r\n    return unless matches?.length\r\n    match = _.sample matches\r\n    opponent = match.opponents[0]\r\n    return {\r\n      sessionID: opponent.sessionID\r\n      opponentID: opponent.userID\r\n      codeLanguage: opponent.codeLanguage\r\n    }\r\n\r\nclass ChallengersData\r\n  constructor: (@level, @team, @otherTeam, @session, @league) ->\r\n    _.extend @, Backbone.Events\r\n    if @league\r\n      score = _.find(@session?.get('leagues'), leagueID: @league.id)?.stats?.totalScore or 10\r\n    else\r\n      score = @session?.get('totalScore') or 10\r\n    for player in [\r\n      {type: 'easyPlayer', order: 1, scoreOffset: score - 5}\r\n      {type: 'mediumPlayer', order: 1, scoreOffset: score}\r\n      {type: 'hardPlayer', order: -1, scoreOffset: score + 5}\r\n    ]\r\n      playerResource = @[player.type] = new LeaderboardCollection(@level, @collectionParameters(order: player.order, scoreOffset: player.scoreOffset))\r\n      playerResource.fetch cache: false\r\n      @listenToOnce playerResource, 'sync', @challengerLoaded\r\n\r\n  collectionParameters: (parameters) ->\r\n    parameters.team = @otherTeam\r\n    parameters.limit = 1\r\n    parameters['leagues.leagueID'] = @league.id if @league\r\n    parameters\r\n\r\n  challengerLoaded: ->\r\n    if @allLoaded()\r\n      @loaded = true\r\n      @trigger 'sync'\r\n\r\n  playerIDs: ->\r\n    collections = [@easyPlayer, @mediumPlayer, @hardPlayer]\r\n    (c.models[0].get('creator') for c in collections when c?.models[0])\r\n\r\n  allLoaded: ->\r\n    _.all [@easyPlayer.loaded, @mediumPlayer.loaded, @hardPlayer.loaded]\r\n"]}