{"version":3,"sources":["app/views/core/CreateAccountModal/BasicInfoView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/core/CreateAccountModal/BasicInfoView.js","sourcesContent":["CocoView = require 'views/core/CocoView'\r\nAuthModal = require 'views/core/AuthModal'\r\ntemplate = require 'templates/core/create-account-modal/basic-info-view'\r\nforms = require 'core/forms'\r\nerrors = require 'core/errors'\r\nUser = require 'models/User'\r\nState = require 'models/State'\r\n\r\n###\r\nThis view handles the primary form for user details â€” name, email, password, etc,\r\nand the AJAX that actually creates the user.\r\n\r\nIt also handles facebook/g+ login, which if used, open one of two other screens:\r\nsso-already-exists: If the facebook/g+ connection is already associated with a user, they're given a log in button\r\nsso-confirm: If this is a new facebook/g+ connection, ask for a username, then allow creation of a user\r\n\r\nThe sso-confirm view *inherits from this view* in order to share its account-creation logic and events.\r\nThis means the selectors used in these events must work in both templates.\r\n\r\nThis view currently uses the old form API instead of stateful render.\r\nIt needs some work to make error UX and rendering better, but is functional.\r\n###\r\n\r\nmodule.exports = class BasicInfoView extends CocoView\r\n  id: 'basic-info-view'\r\n  template: template\r\n\r\n  events:\r\n    'change input[name=\"email\"]': 'onChangeEmail'\r\n    'change input[name=\"name\"]': 'onChangeName'\r\n    'change input[name=\"password\"]': 'onChangePassword'\r\n    'click .back-button': 'onClickBackButton'\r\n    'submit form': 'onSubmitForm'\r\n    'click .use-suggested-name-link': 'onClickUseSuggestedNameLink'\r\n    'click #facebook-signup-btn': 'onClickSsoSignupButton'\r\n    'click #gplus-signup-btn': 'onClickSsoSignupButton'\r\n\r\n  initialize: ({ @signupState } = {}) ->\r\n    @state = new State {\r\n      suggestedNameText: '...'\r\n      checkEmailState: 'standby' # 'checking', 'exists', 'available'\r\n      checkEmailValue: null\r\n      checkEmailPromise: null\r\n      checkNameState: 'standby' # same\r\n      checkNameValue: null\r\n      checkNamePromise: null\r\n      error: ''\r\n    }\r\n    @listenTo @state, 'change:checkEmailState', -> @renderSelectors('.email-check')\r\n    @listenTo @state, 'change:checkNameState', -> @renderSelectors('.name-check')\r\n    @listenTo @state, 'change:error', -> @renderSelectors('.error-area')\r\n    @listenTo @signupState, 'change:facebookEnabled', -> @renderSelectors('.auth-network-logins')\r\n    @listenTo @signupState, 'change:gplusEnabled', -> @renderSelectors('.auth-network-logins')\r\n  \r\n  # These values are passed along to AuthModal if the user clicks \"Sign In\" (handled by CreateAccountModal)\r\n  updateAuthModalInitialValues: (values) ->\r\n    @signupState.set {\r\n      authModalInitialValues: _.merge @signupState.get('authModalInitialValues'), values\r\n    }, { silent: true }\r\n    \r\n  onChangeEmail: (e) ->\r\n    @updateAuthModalInitialValues { email: @$(e.currentTarget).val() }\r\n    @checkEmail()\r\n    \r\n  checkEmail: ->\r\n    email = @$('[name=\"email\"]').val()\r\n\r\n    if @signupState.get('path') isnt 'student' and (not _.isEmpty(email) and email is @state.get('checkEmailValue'))\r\n      return @state.get('checkEmailPromise')\r\n      \r\n    if not (email and forms.validateEmail(email))\r\n      @state.set({\r\n        checkEmailState: 'standby'\r\n        checkEmailValue: email\r\n        checkEmailPromise: null\r\n      })\r\n      return Promise.resolve()\r\n      \r\n    @state.set({\r\n      checkEmailState: 'checking'\r\n      checkEmailValue: email\r\n      \r\n      checkEmailPromise: (User.checkEmailExists(email)\r\n      .then ({exists}) =>\r\n        return unless email is @$('[name=\"email\"]').val()\r\n        if exists\r\n          @state.set('checkEmailState', 'exists')\r\n        else\r\n          @state.set('checkEmailState', 'available')\r\n      .catch (e) =>\r\n        @state.set('checkEmailState', 'standby')\r\n        throw e\r\n      )\r\n    })\r\n    return @state.get('checkEmailPromise')\r\n\r\n  onChangeName: (e) ->\r\n    @updateAuthModalInitialValues { name: @$(e.currentTarget).val() }\r\n    @checkName()\r\n\r\n  checkName: ->\r\n    name = @$('input[name=\"name\"]').val()\r\n\r\n    if name is @state.get('checkNameValue')\r\n      return @state.get('checkNamePromise')\r\n\r\n    if not name\r\n      @state.set({\r\n        checkNameState: 'standby'\r\n        checkNameValue: name\r\n        checkNamePromise: null\r\n      })\r\n      return Promise.resolve()\r\n\r\n    @state.set({\r\n      checkNameState: 'checking'\r\n      checkNameValue: name\r\n\r\n      checkNamePromise: (User.checkNameConflicts(name)\r\n      .then ({ suggestedName, conflicts }) =>\r\n        return unless name is @$('input[name=\"name\"]').val()\r\n        if conflicts\r\n          suggestedNameText = $.i18n.t('signup.name_taken').replace('{{suggestedName}}', suggestedName)\r\n          @state.set({ checkNameState: 'exists', suggestedNameText })\r\n        else\r\n          @state.set { checkNameState: 'available' }\r\n      .catch (error) =>\r\n        @state.set('checkNameState', 'standby')\r\n        throw error\r\n      )\r\n    })\r\n\r\n    return @state.get('checkNamePromise')\r\n\r\n  onChangePassword: (e) ->\r\n    @updateAuthModalInitialValues { password: @$(e.currentTarget).val() }\r\n\r\n  checkBasicInfo: (data) ->\r\n    # TODO: Move this to somewhere appropriate\r\n    tv4.addFormat({\r\n      'email': (email) ->\r\n        if forms.validateEmail(email)\r\n          return null\r\n        else\r\n          return {code: tv4.errorCodes.FORMAT_CUSTOM, message: \"Please enter a valid email address.\"}\r\n    })\r\n    \r\n    forms.clearFormAlerts(@$el)\r\n    \r\n    if data.name and forms.validateEmail(data.name)\r\n      forms.setErrorToProperty(@$el, 'name', $.i18n.t('signup.name_is_email'))\r\n      return false\r\n    \r\n    res = tv4.validateMultiple data, @formSchema()\r\n    forms.applyErrorsToForm(@$('form'), res.errors) unless res.valid\r\n    return res.valid\r\n  \r\n  formSchema: ->\r\n    type: 'object'\r\n    properties:\r\n      email: User.schema.properties.email\r\n      name: User.schema.properties.name\r\n      password: User.schema.properties.password\r\n    required: ['name', 'password'].concat (if @signupState.get('path') is 'student' then ['firstName', 'lastName'] else ['email'])\r\n  \r\n  onClickBackButton: -> @trigger 'nav-back'\r\n  \r\n  onClickUseSuggestedNameLink: (e) ->\r\n    @$('input[name=\"name\"]').val(@state.get('suggestedName'))\r\n    forms.clearFormAlerts(@$el.find('input[name=\"name\"]').closest('.form-group').parent())\r\n\r\n  onSubmitForm: (e) ->\r\n    @state.unset('error')\r\n    e.preventDefault()\r\n    data = forms.formToObject(e.currentTarget)\r\n    valid = @checkBasicInfo(data)\r\n    return unless valid\r\n\r\n    @displayFormSubmitting()\r\n    AbortError = new Error()\r\n    \r\n    @checkEmail()\r\n    .then @checkName()\r\n    .then =>\r\n      if not (@state.get('checkEmailState') in ['available', 'standby'] and @state.get('checkNameState') is 'available')\r\n        throw AbortError\r\n\r\n      # update User\r\n      emails = _.assign({}, me.get('emails'))\r\n      emails.generalNews ?= {}\r\n      emails.generalNews.enabled = @$('#subscribe-input').is(':checked') and not _.isEmpty(@state.get('checkEmailValue'))\r\n      me.set('emails', emails)\r\n      me.set(_.pick(data, 'firstName', 'lastName'))\r\n      \r\n      unless _.isNaN(@signupState.get('birthday').getTime())\r\n        me.set('birthday', @signupState.get('birthday').toISOString())\r\n\r\n      me.set(_.omit(@signupState.get('ssoAttrs') or {}, 'email', 'facebookID', 'gplusID'))\r\n\r\n      jqxhr = me.save()\r\n      if not jqxhr\r\n        console.error(me.validationError)\r\n        throw new Error('Could not save user')\r\n\r\n      return new Promise(jqxhr.then)\r\n    \r\n    .then =>\r\n      # Use signup method\r\n      window.tracker?.identify()\r\n      switch @signupState.get('ssoUsed')\r\n        when 'gplus'\r\n          { email, gplusID } = @signupState.get('ssoAttrs')\r\n          { name } = forms.formToObject(@$el)\r\n          jqxhr = me.signupWithGPlus(name, email, gplusID)\r\n        when 'facebook'\r\n          { email, facebookID } = @signupState.get('ssoAttrs')\r\n          { name } = forms.formToObject(@$el)\r\n          jqxhr = me.signupWithFacebook(name, email, facebookID)\r\n        else\r\n          { name, email, password } = forms.formToObject(@$el)\r\n          jqxhr = me.signupWithPassword(name, email, password)\r\n\r\n      return new Promise(jqxhr.then)\r\n      \r\n    .then =>\r\n      { classCode, classroom } = @signupState.attributes\r\n      if classCode and classroom\r\n        return new Promise(classroom.joinWithCode(classCode).then)\r\n      \r\n    .then =>\r\n      @finishSignup()\r\n        \r\n    .catch (e) =>\r\n      @displayFormStandingBy()\r\n      if e is AbortError\r\n        return\r\n      else\r\n        console.error 'BasicInfoView form submission Promise error:', e\r\n        @state.set('error', e.responseJSON?.message or 'Unknown Error')\r\n      \r\n  finishSignup: ->\r\n    @trigger 'signup'\r\n\r\n  displayFormSubmitting: ->\r\n    @$('#create-account-btn').text($.i18n.t('signup.creating')).attr('disabled', true)\r\n    @$('input').attr('disabled', true)\r\n    \r\n  displayFormStandingBy: ->\r\n    @$('#create-account-btn').text($.i18n.t('login.sign_up')).attr('disabled', false)\r\n    @$('input').attr('disabled', false)\r\n\r\n  onClickSsoSignupButton: (e) ->\r\n    e.preventDefault()\r\n    ssoUsed = $(e.currentTarget).data('sso-used')\r\n    handler = if ssoUsed is 'facebook' then application.facebookHandler else application.gplusHandler\r\n    handler.connect({\r\n      context: @\r\n      success: ->\r\n        handler.loadPerson({\r\n          context: @\r\n          success: (ssoAttrs) ->\r\n            @signupState.set { ssoAttrs }\r\n            { email } = ssoAttrs\r\n            User.checkEmailExists(email).then ({exists}) =>\r\n              @signupState.set {\r\n                ssoUsed\r\n                email: ssoAttrs.email\r\n              }\r\n              if exists\r\n                @trigger 'sso-connect:already-in-use'\r\n              else\r\n                @trigger 'sso-connect:new-user'\r\n        })\r\n    })\r\n"]}