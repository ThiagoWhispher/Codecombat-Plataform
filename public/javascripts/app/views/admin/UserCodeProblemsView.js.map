{"version":3,"sources":["app/views/admin/UserCodeProblemsView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;AAAA,WAAW,QAAQ,qBAAR;;AACX,WAAW,QAAQ,oCAAR;;AACX,kBAAkB,QAAQ,wBAAR;;AAElB,MAAM,CAAC,OAAP,GAAuB;;;iCAGrB,KAAI;;iCACJ,WAAU;;EAEG,8BAAC,OAAD;IACX,sDAAM,OAAN;IACA,IAAC,aAAD,GAAgB;IAChB,IAAC,oBAAD;EAHW;;iCAKb,sBAAqB;AAOnB;IAAA,YAAgB;IAChB,IAAG,SAAS,CAAC,QAAV,OAAwB,CAA3B;MACE,SAAS,CAAC,QAAV,CAAmB,EAAnB;MACA,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,OAAV,KAAsB,CAAxC,EAFF;KAAA;MAIE,SAAS,CAAC,QAAV,CAAmB,SAAS,CAAC,QAAV,KAAuB,CAA1C,EAJF;;IAMA,aAAa,CACX,CAAC,OAAD,EAAU,GAAV,CADW,EAEX,CAAC,MAAD,EAAS,UAAT,CAFW,EAGX,CAAC,OAAD,EAAU,SAAV,CAHW,EAIX,CAAC,KAAD,EAAQ,SAAS,CAAC,QAAV,EAAR,CAJW;IAMb,aAAa,CAAC,CAAC,KAAF,CAAQ;MAAC,YAAW,IAAI,CAAC,SAAL,CAAe,UAAf,CAAZ;KAAR;IACb,4BAA4B,QAAQ,CAAC,UAAU,CAAC,MAApB,CAA2B;MACrD,OAAO,eAD8C;MAErD,KAAK,2BAA2B,UAFqB;KAA3B;IAI5B,IAAC,iBAAD,GAAwB;IACxB,IAAC,iBAAgB,CAAC,KAAlB;WACA,IAAC,SAAD,CAAU,IAAC,iBAAX,EAA6B,KAA7B,EAAoC;MAClC,IAAC,aAAD,GAAgB;aAChB,IAAC,OAAD;IAFkC,CAApC;EA3BmB;;iCA+BrB,gBAAe;AACb;IAAA,IAAI;IACJ,CAAC,CAAC,YAAF,GAAiB,IAAC;IAClB,CAAC,CAAC,gBAAF;;AAAsB;AAAA;WAAA;;qBAAA,OAAO,CAAC;AAAR;;;WACtB;EAJa;;;;GA1CmC","file":"public/javascripts/app/views/admin/UserCodeProblemsView.js","sourcesContent":["RootView = require 'views/core/RootView'\r\ntemplate = require 'templates/admin/user-code-problems'\r\nUserCodeProblem = require 'models/UserCodeProblem'\r\n\r\nmodule.exports = class UserCodeProblemsView extends RootView\r\n  # TODO: Pagination, choosing filters on the page itself.\r\n\r\n  id: 'admin-user-code-problems-view'\r\n  template: template\r\n\r\n  constructor: (options) ->\r\n    super options\r\n    @fetchingData = true\r\n    @getUserCodeProblems()\r\n\r\n  getUserCodeProblems: ->\r\n    # can have this page show arbitrary conditions, see mongoose queries\r\n    # http://mongoosejs.com/docs/queries.html\r\n    # Each list in conditions is a function call.\r\n    # The first arg is the function name\r\n    # The rest are the args for the function\r\n\r\n    lastMonth = new Date()\r\n    if lastMonth.getMonth() is 1\r\n      lastMonth.setMonth 12\r\n      lastMonth.setYear lastMonth.getYear() - 1\r\n    else\r\n      lastMonth.setMonth lastMonth.getMonth() - 1\r\n\r\n    conditions = [\r\n      ['limit', 300]\r\n      ['sort', '-created']\r\n      ['where', 'created']\r\n      ['gte', lastMonth.toString()]\r\n    ]\r\n    conditions = $.param({conditions:JSON.stringify(conditions)})\r\n    UserCodeProblemCollection = Backbone.Collection.extend({\r\n      model: UserCodeProblem\r\n      url: '/db/user.code.problem?' + conditions\r\n    })\r\n    @userCodeProblems = new UserCodeProblemCollection()\r\n    @userCodeProblems.fetch()\r\n    @listenTo @userCodeProblems, 'all', ->\r\n      @fetchingData = false\r\n      @render()\r\n\r\n  getRenderData: ->\r\n    c = super()\r\n    c.fetchingData = @fetchingData\r\n    c.userCodeProblems = (problem.attributes for problem in @userCodeProblems.models)\r\n    c\r\n"]}