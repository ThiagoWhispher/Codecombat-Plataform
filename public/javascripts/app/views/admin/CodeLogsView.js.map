{"version":3,"sources":["app/views/admin/CodeLogsView.coffee"],"names":[],"mappings":";AAAA;EAAA;;;;AAAA,WAAW,QAAQ,qBAAR;;AACX,WAAW,QAAQ,+BAAR;;AACX,oBAAoB,QAAQ,sBAAR;;AACpB,UAAU,QAAQ,gBAAR;;AACV,QAAQ,QAAQ,YAAR;;AAER,mBAAmB,QAAQ,oBAAR;;AAEnB,MAAM,CAAC,OAAP,GAAuB;;;;;;;;yBACrB,WAAU;;yBACV,KAAI;;yBACJ,UAAS;;yBACT,SACE;IAAA,mBAAmB,iBAAnB;IACA,wBAAwB,eADxB;IAEA,2BAA2B,kBAF3B;;;yBAIF,aAAY;IAEV,IAAC,SAAD,GAAgB;IAChB,IAAC,WAAU,CAAC,YAAZ,CAAyB,IAAC,SAAQ,CAAC,WAAV,EAAzB;IACA,IAAC,cAAD,GAAiB,CAAC,CAAC,QAAF,CAAW,IAAC,cAAZ,EAA2B,GAA3B;WACjB,IAAC,iBAAD,GAAoB,CAAC,CAAC,QAAF,CAAW,IAAC,iBAAZ,EAA8B,GAA9B;EALV;;yBAQZ,gBAAe,SAAC,CAAD;AACb;IAAA,SAAS,EAAE,gBAAF,CAAoB,GAAE,CAAC;IAChC,IAAO,WAAU,EAAjB;aACE,OAAO,CAAC,OAAR,CAAgB,IAAC,SAAQ,CAAC,aAAV,CAAwB,MAAxB,CAAhB,CACA,CAAC,IADD,CACM;eAAA,SAAC,CAAD;iBACJ,KAAC,gBAAD,CAAiB,eAAjB;QADI;MAAA,QADN,EADF;KAAA;aAKE,OAAO,CAAC,OAAR,CAAgB,IAAC,SAAQ,CAAC,WAAV,EAAhB,CACA,CAAC,IADD,CACM;eAAA,SAAC,CAAD;iBACJ,KAAC,gBAAD,CAAiB,eAAjB;QADI;MAAA,QADN,EALF;;EAFa;;yBAWf,mBAAkB,SAAC,CAAD;AAChB;IAAA,OAAO,EAAE,mBAAF,CAAuB,GAAE,CAAC;IACjC,IAAO,SAAQ,EAAf;aACE,OAAO,CAAC,OAAR,CAAgB,IAAC,SAAQ,CAAC,WAAV,CAAsB,IAAtB,CAAhB,CACA,CAAC,IADD,CACM;eAAA,SAAC,CAAD;iBACJ,KAAC,gBAAD,CAAiB,eAAjB;QADI;MAAA,QADN,EADF;KAAA;aAKE,OAAO,CAAC,OAAR,CAAgB,IAAC,SAAQ,CAAC,WAAV,EAAhB,CACA,CAAC,IADD,CACM;eAAA,SAAC,CAAD;iBACJ,KAAC,gBAAD,CAAiB,eAAjB;QADI;MAAA,QADN,EALF;;EAFgB;;yBAWlB,kBAAiB,SAAC,CAAD;WACf,IAAC,cAAD,CAAe,IAAC,iBAAD,GAAwB,qBAAiB;MAAA,QAAO,EAAE,CAAC,CAAC,MAAJ,CAAW,CAAC,IAAZ,CAAiB,SAAjB,CAAP;KAAjB,CAAvC;EADe;;yBAGjB,gBAAe;IACb,IAAG,oBAAH;MACE,IAAC,QAAO,CAAC,GAAT,CAAa,MAAb;MACA,IAAC,QAAO,CAAC,MAAT;aACA,IAAC,QAAD,GAAW,KAHb;;EADa;;yBAMf,gBAAe,SAAC,CAAD;WACb,IAAC,cAAD;EADa;;yBAGf,UAAS;IACP,IAAC,cAAD;WACA;EAFO;;;;GAnDiC","file":"public/javascripts/app/views/admin/CodeLogsView.js","sourcesContent":["RootView = require 'views/core/RootView'\r\ntemplate = require 'templates/admin/codelogs-view'\r\nCodeLogCollection = require 'collections/CodeLogs'\r\nCodeLog = require 'models/CodeLog'\r\nutils = require 'core/utils'\r\n\r\nCodePlaybackView = require './CodePlaybackView'\r\n\r\nmodule.exports = class CodeLogsView extends RootView\r\n  template: template\r\n  id: 'codelogs-view'\r\n  tooltip: null\r\n  events:\r\n    'click .playback': 'onClickPlayback'\r\n    'input #userid-search': 'onUserIDInput'\r\n    'input #levelslug-search': 'onLevelSlugInput'\r\n\r\n  initialize: ->\r\n    #@spade = new Spade()\r\n    @codelogs = new CodeLogCollection()\r\n    @supermodel.trackRequest(@codelogs.fetchLatest())\r\n    @onUserIDInput = _.debounce(@onUserIDInput, 300)\r\n    @onLevelSlugInput = _.debounce(@onLevelSlugInput, 300)\r\n    #@supermodel.trackRequest(@codelogs.fetch())\r\n\r\n  onUserIDInput: (e) ->\r\n    userID = $('#userid-search')[0].value\r\n    unless userID is ''\r\n      Promise.resolve(@codelogs.fetchByUserID(userID))\r\n      .then (e) => \r\n        @renderSelectors '#codelogtable'\r\n    else \r\n      Promise.resolve(@codelogs.fetchLatest())\r\n      .then (e) => \r\n        @renderSelectors '#codelogtable'\r\n\r\n  onLevelSlugInput: (e) ->\r\n    slug = $('#levelslug-search')[0].value\r\n    unless slug is ''\r\n      Promise.resolve(@codelogs.fetchBySlug(slug))\r\n      .then (e) => \r\n        @renderSelectors '#codelogtable'\r\n    else\r\n      Promise.resolve(@codelogs.fetchLatest())\r\n      .then (e) => \r\n        @renderSelectors '#codelogtable'\r\n\r\n  onClickPlayback: (e) ->\r\n    @insertSubView @codePlaybackView = new CodePlaybackView rawLog:$(e.target).data('codelog')\r\n\r\n  deleteTooltip: ->\r\n    if @tooltip?\r\n      @tooltip.off 'blur'\r\n      @tooltip.remove()\r\n      @tooltip = null\r\n\r\n  onBlurTooltip: (e) =>\r\n    @deleteTooltip()\r\n\r\n  destroy: ->\r\n    @deleteTooltip()\r\n    super()\r\n"]}