{"version":3,"sources":["app/templates/courses/teacher-class-view.jade","app/views/courses/TeacherClassView.coffee"],"names":[],"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","file":"public/javascripts/app/views/courses/TeacherClassView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),view = locals_.view,state = locals_.state,_ = locals_._,i18n = locals_.i18n,translate = locals_.translate,dotClass = locals_.dotClass,levelName = locals_.levelName,context = locals_.context,moment = locals_.moment,link = locals_.link,labelText = locals_.labelText,me = locals_.me,serverConfig = locals_.serverConfig,document = locals_.document;var enrollmentStatusTab_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<!-- TODO: Have search input in all tabs--><!--form.form-inline.text-center.m-t-3--><!--  #search-form-group.form-group--><!--    label(for=\\\"student-search\\\") Search for student:--><!--    input#student-search.form-control.m-l-1(type=\\\"search\\\")--><!--    span.glyphicon.glyphicon-search.form-control-feedback--><table id=\\\"license-status-table\\\" class=\\\"table table-condensed m-t-3\\\"><thead><!-- Checkbox code works, but don't need it yet.--><!--th.checkbox-col.select-all<div class=\\\"checkbox-flat\\\"><input type=\\\"checkbox\\\" id=\\\"checkbox-all-students\\\"/><label for=\\\"checkbox-all-students\\\" class=\\\"checkmark\\\"></label></div>--><th><div class=\\\"sort-buttons small\\\"><span data-i18n=\\\"teacher.sort_by\\\"></span><span class=\\\"spr\\\">:</span><button data-i18n=\\\"general.name\\\" value=\\\"name\\\" class=\\\"sort-button sort-by-name\\\"></button><button data-i18n=\\\"user.status\\\" value=\\\"status\\\" class=\\\"sort-button sort-by-status\\\"></button></div></th></thead><tbody>\");\nvar searchTerm = view.state.get('searchTerm');\n// iterate state.get('students').search(searchTerm)\n;(function(){\n  var $$obj = state.get('students').search(searchTerm);\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var student = $$obj[$index];\n\nvar status = student.prepaidStatus()\nbuf.push(\"<tr class=\\\"student-row alternating-background\\\"><!--td.checkbox-col.student-checkbox<div class=\\\"checkbox-flat\\\"><input\" + (jade.attrs({ 'type':('checkbox'), 'id':('checkbox-student-' + student.id), 'data-student-id':(student.id) }, {\"type\":true,\"id\":true,\"data-student-id\":true})) + \"/><label\" + (jade.attrs({ 'for':('checkbox-student-' + student.id), \"class\": [('checkmark')] }, {\"for\":true})) + \"></label></div>--><td class=\\\"student-info-col\\\"><div class=\\\"student-info\\\"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div><div class=\\\"student-email small-details\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div></div></td><td class=\\\"status-col\\\"><span data-i18n=\\\"user.status\\\"></span><span class=\\\"spr\\\">:</span><strong\" + (jade.attrs({ \"class\": [(status === 'expired' ? 'text-danger' : '')] }, {\"class\":true})) + \">\" + (jade.escape(null == (jade.interp = view.studentStatusString(student)) ? \"\" : jade.interp)) + \"</strong></td><td class=\\\"enroll-col\\\">\");\nif ( status !== 'enrolled')\n{\nbuf.push(\"<button\" + (jade.attrs({ 'data-i18n':(\"teacher.apply_license\"), 'data-user-id':(student.id), 'data-event-action':(\"Teachers Class Enrollment Enroll Student\"), \"class\": [('enroll-student-button'),('btn'),('btn-navy')] }, {\"data-i18n\":true,\"data-user-id\":true,\"data-event-action\":true})) + \"></button>\");\n}\nelse\n{\nif ( student.prepaidType() === 'course')\n{\nbuf.push(\"<span data-i18n=\\\"teacher.full_license\\\"></span>\");\n}\nelse if ( student.prepaidType() === 'starter_license')\n{\nbuf.push(\"<span data-i18n=\\\"teacher.starter_license\\\"></span>\");\n}\n}\nbuf.push(\"</td></tr>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var student = $$obj[$index];\n\nvar status = student.prepaidStatus()\nbuf.push(\"<tr class=\\\"student-row alternating-background\\\"><!--td.checkbox-col.student-checkbox<div class=\\\"checkbox-flat\\\"><input\" + (jade.attrs({ 'type':('checkbox'), 'id':('checkbox-student-' + student.id), 'data-student-id':(student.id) }, {\"type\":true,\"id\":true,\"data-student-id\":true})) + \"/><label\" + (jade.attrs({ 'for':('checkbox-student-' + student.id), \"class\": [('checkmark')] }, {\"for\":true})) + \"></label></div>--><td class=\\\"student-info-col\\\"><div class=\\\"student-info\\\"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div><div class=\\\"student-email small-details\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div></div></td><td class=\\\"status-col\\\"><span data-i18n=\\\"user.status\\\"></span><span class=\\\"spr\\\">:</span><strong\" + (jade.attrs({ \"class\": [(status === 'expired' ? 'text-danger' : '')] }, {\"class\":true})) + \">\" + (jade.escape(null == (jade.interp = view.studentStatusString(student)) ? \"\" : jade.interp)) + \"</strong></td><td class=\\\"enroll-col\\\">\");\nif ( status !== 'enrolled')\n{\nbuf.push(\"<button\" + (jade.attrs({ 'data-i18n':(\"teacher.apply_license\"), 'data-user-id':(student.id), 'data-event-action':(\"Teachers Class Enrollment Enroll Student\"), \"class\": [('enroll-student-button'),('btn'),('btn-navy')] }, {\"data-i18n\":true,\"data-user-id\":true,\"data-event-action\":true})) + \"></button>\");\n}\nelse\n{\nif ( student.prepaidType() === 'course')\n{\nbuf.push(\"<span data-i18n=\\\"teacher.full_license\\\"></span>\");\n}\nelse if ( student.prepaidType() === 'starter_license')\n{\nbuf.push(\"<span data-i18n=\\\"teacher.starter_license\\\"></span>\");\n}\n}\nbuf.push(\"</td></tr>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</tbody></table>\");\n};\nvar bulkAssignControls_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"bulk-assign-controls form-inline\\\"><div\" + (jade.attrs({ \"class\": [('no-students-selected'),('small-details'),(state.get('errors').assigningToNobody ? 'visible' : '')] }, {\"class\":true})) + \"><span data-i18n=\\\"teacher.no_students_selected\\\"></span></div><span class=\\\"small\\\"><span data-i18n=\\\"teacher.bulk_assign\\\"></span><span>:</span></span><select class=\\\"bulk-course-select form-control\\\">\");\n// iterate _.rest(view.latestReleasedCourses)\n;(function(){\n  var $$obj = _.rest(view.latestReleasedCourses);\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var course = $$obj[$index];\n\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id), 'selected':((course===state.get('selectedCourse'))) }, {\"value\":true,\"selected\":true})) + \">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)));\nif ( !view.availableCourseMap[course.id])\n{\nbuf.push(jade.escape(null == (jade.interp = \" \" + translate('teacher.paren_new')) ? \"\" : jade.interp));\n}\nbuf.push(\"</option>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var course = $$obj[$index];\n\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id), 'selected':((course===state.get('selectedCourse'))) }, {\"value\":true,\"selected\":true})) + \">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)));\nif ( !view.availableCourseMap[course.id])\n{\nbuf.push(jade.escape(null == (jade.interp = \" \" + translate('teacher.paren_new')) ? \"\" : jade.interp));\n}\nbuf.push(\"</option>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select><button class=\\\"btn btn-primary-alt assign-to-selected-students\\\"><span data-i18n=\\\"teacher.assign_to_selected_students\\\"></span></button></div>\");\n};\nvar copyCodes_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"copy-button-group form-inline m-b-3\\\"><div class=\\\"form-group\\\"><input\" + (jade.attrs({ 'id':('join-code-input'), 'value':(state.get('classCode')), \"class\": [('text-h4'),('semibold')] }, {\"value\":true})) + \"/></div><button id=\\\"copy-code-btn\\\" class=\\\"form-control btn btn-lg btn-forest\\\"><span data-i18n=\\\"teacher.copy_class_code\\\"></span></button><div data-i18n=\\\"teacher.class_code_blurb\\\" class=\\\"text-center small class-code-blurb\\\"></div></div><div class=\\\"copy-button-group form-inline m-b-3\\\"><div class=\\\"form-group\\\"><input\" + (jade.attrs({ 'id':('join-url-input'), 'value':(state.get('joinURL')), \"class\": [('form-control'),('text-h4'),('semibold')] }, {\"value\":true})) + \"/></div><button id=\\\"copy-url-btn\\\" class=\\\"form-control btn btn-lg btn-forest\\\"><span data-i18n=\\\"teacher.copy_class_url\\\"></span></button><div data-i18n=\\\"teacher.class_join_url_blurb\\\" class=\\\"text-center small class-code-blurb\\\"></div></div>\");\n};\nvar progressDotLabel_mixin = function(label){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"dot-label text-center\\\"><div class=\\\"dot-label-inner\\\">\" + (jade.escape(null == (jade.interp = label) ? \"\" : jade.interp)) + \"</div></div>\");\n};\nvar studentLevelProgressDot_mixin = function(progress, level, levelNumber){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\ndotClass = progress.completed ? 'forest' : (progress.started ? 'gold' : '');\nlevelName = i18n(level.attributes, 'name')\ncontext = _.merge(progress, { levelName: levelName, levelNumber: levelNumber, moment: moment, practice: level.get('practice') })\nlink = null;\nlabelText = levelNumber;\nif ( level.isLadder())\n{\nvar course = view.state.get('selectedCourse');\nvar courseInstance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id });\nif ( courseInstance)\n{\nlink = view.urls.courseArenaLadder({level: level, courseInstance: courseInstance});\nlabelText = translate('courses.arena');\n}\nelse\n{\nlabelText = translate('courses.arena');\n}\ndotClass += ' progress-dot-lg';\n}\nelse if ( level.isProject())\n{\nif ( progress.started)\n{\nlink = view.urls.playDevLevel({level: level, session: progress.session, course: view.state.get('selectedCourse')});\nlabelText = translate('teacher.view_student_project');\ndotClass = 'navy';\n}\nelse\n{\nlabelText = translate('teacher.project');\n}\ndotClass += ' progress-dot-lg';\n}\nelse if ( level.get('practice'))\n{\nif ( !(progress.completed || progress.started))\n{\nlabelText = ''\ndotClass += ' practice'\n}\n}\nbuf.push(\"<div\" + (jade.attrs({ 'data-html':('true'), 'data-title':(view.singleStudentLevelProgressDotTemplate(context)), \"class\": [('progress-dot'),('level-progress-dot'),(dotClass)] }, {\"class\":true,\"data-html\":true,\"data-title\":true})) + \">\");\nif ( link)\n{\nbuf.push(\"<a\" + (jade.attrs({ 'href':(link) }, {\"href\":true})) + \">\");\nprogressDotLabel_mixin(labelText);\nbuf.push(\"</a>\");\n}\nelse\n{\nprogressDotLabel_mixin(labelText);\n}\nbuf.push(\"</div>\");\n};\nvar allStudentsLevelProgressDot_mixin = function(progress, level, levelNumber){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\ndotClass = progress.completed ? 'forest' : (progress.started ? 'gold' : '');\nlevelName = i18n(level.attributes, 'name')\ncontext = _.merge(progress, { levelName: levelName, levelNumber: levelNumber, numStudents: view.students.length, practice: level.get('practice') })\nlink = null;\nlabelText = levelNumber;\nif ( level.isLadder())\n{\nvar course = view.state.get('selectedCourse');\nvar courseInstance = course && view.classroom ? view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id }) : null;\nif ( courseInstance)\n{\nlink = view.urls.courseArenaLadder({level: level, courseInstance: courseInstance});\nlabelText = translate('teacher.view_arena_ladder');\n}\nelse\n{\nlabelText = translate('courses.arena');\n}\ndotClass = 'navy progress-dot-lg';\n}\nelse if ( level.isProject())\n{\nlabelText = translate('teacher.project')\ndotClass += ' progress-dot-lg';\n}\nelse if ( level.get('practice'))\n{\nif ( !(progress.completed || progress.started))\n{\nlabelText = ''\ndotClass += ' practice'\n}\n}\nbuf.push(\"<div\" + (jade.attrs({ 'data-html':('true'), 'data-title':(view.allStudentsLevelProgressDotTemplate(context)), \"class\": [('progress-dot'),('level-progress-dot'),(dotClass)] }, {\"class\":true,\"data-html\":true,\"data-title\":true})) + \">\");\nif ( link)\n{\nbuf.push(\"<a\" + (jade.attrs({ 'href':(link) }, {\"href\":true})) + \">\");\nprogressDotLabel_mixin(labelText);\nbuf.push(\"</a>\");\n}\nelse\n{\nprogressDotLabel_mixin(labelText);\n}\nbuf.push(\"</div>\");\n};\nvar studentCourseProgressDot_mixin = function(progress, levelsTotal, label){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\ndotClass = progress.completed ? 'forest' : (progress.started ? 'gold' : '');\n_.assign(progress, { levelsTotal: levelsTotal })\nbuf.push(\"<div\" + (jade.attrs({ 'data-html':('true'), 'data-title':(view.singleStudentCourseProgressDotTemplate(progress)), \"class\": [('progress-dot'),(dotClass)] }, {\"class\":true,\"data-html\":true,\"data-title\":true})) + \">\");\nprogressDotLabel_mixin(label);\nbuf.push(\"</div>\");\n};\nvar studentLevelsRow_mixin = function(student){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"student-levels-row alternating-background\\\"><div class=\\\"student-info\\\"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div><div class=\\\"student-email small-details\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div></div><div class=\\\"student-levels-progress\\\">\");\nvar course = state.get('selectedCourse')\nvar levels = view.classroom.getLevels({courseID: course.id}).models\n// iterate levels\n;(function(){\n  var $$obj = levels;\n  if ('number' == typeof $$obj.length) {\n\n    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {\n      var level = $$obj[index];\n\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, level: level, user: student })\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nstudentLevelProgressDot_mixin(progress, level, levelNumber);\n    }\n\n  } else {\n    var $$l = 0;\n    for (var index in $$obj) {\n      $$l++;      var level = $$obj[index];\n\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, level: level, user: student })\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nstudentLevelProgressDot_mixin(progress, level, levelNumber);\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div>\");\n};\nvar courseOverview_mixin = function(course){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nvar levels = view.classroom.getLevels({courseID: course.id}).models\nbuf.push(\"<div class=\\\"course-overview-row\\\"><div class=\\\"course-title student-name\\\"><span>\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</span><span>\" + (jade.escape(null == (jade.interp = ': ') ? \"\" : jade.interp)) + \"</span><span data-i18n=\\\"teacher.course_overview\\\"></span></div><div class=\\\"course-overview-progress\\\">\");\n// iterate levels\n;(function(){\n  var $$obj = levels;\n  if ('number' == typeof $$obj.length) {\n\n    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {\n      var level = $$obj[index];\n\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, level: level })\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nallStudentsLevelProgressDot_mixin(progress, level, levelNumber);\n    }\n\n  } else {\n    var $$l = 0;\n    for (var index in $$obj) {\n      $$l++;      var level = $$obj[index];\n\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, level: level })\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), index + 1)\nallStudentsLevelProgressDot_mixin(progress, level, levelNumber);\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div>\");\n};\nvar courseProgressTab_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div id=\\\"course-progress-tab\\\" class=\\\"m-t-3\\\">\");\nif ( view.courses)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><span data-i18n=\\\"teacher.select_course\\\"></span><span class=\\\"spr\\\">:</span><select class=\\\"course-select\\\">\");\n// iterate view.latestReleasedCourses\n;(function(){\n  var $$obj = view.latestReleasedCourses;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var course = $$obj[$index];\n\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id), 'selected':((course===state.get('selectedCourse'))) }, {\"value\":true,\"selected\":true})) + \">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)));\nif ( !view.availableCourseMap[course.id])\n{\nbuf.push(jade.escape(null == (jade.interp = \" \" + translate('teacher.paren_new')) ? \"\" : jade.interp));\n}\nbuf.push(\"</option>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var course = $$obj[$index];\n\nbuf.push(\"<option\" + (jade.attrs({ 'value':(course.id), 'selected':((course===state.get('selectedCourse'))) }, {\"value\":true,\"selected\":true})) + \">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)));\nif ( !view.availableCourseMap[course.id])\n{\nbuf.push(jade.escape(null == (jade.interp = \" \" + translate('teacher.paren_new')) ? \"\" : jade.interp));\n}\nbuf.push(\"</option>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</select></div>\");\n}\nbuf.push(\"<h4 data-i18n=\\\"teacher.progress_color_key\\\" class=\\\"m-b-2\\\"></h4><div id=\\\"progress-color-key-row\\\" class=\\\"row\\\"><div class=\\\"col col-md-2 col-xs-4\\\"><div class=\\\"progress-dot forest\\\"></div><div class=\\\"key-text\\\"><span data-i18n=\\\"play_level.level_complete\\\" class=\\\"small\\\"></span></div><div class=\\\"clearfix\\\"></div></div><div class=\\\"col col-md-2 col-xs-4\\\"><div class=\\\"progress-dot gold\\\"></div><div class=\\\"key-text\\\"><span data-i18n=\\\"teacher.level_in_progress\\\" class=\\\"small\\\"></span></div><div class=\\\"clearfix\\\"></div></div><div class=\\\"col col-md-2 col-xs-4\\\"><div class=\\\"progress-dot navy\\\"></div><div class=\\\"key-text\\\"><span data-i18n=\\\"teacher.project_or_arena\\\" class=\\\"small\\\"></span></div><div class=\\\"clearfix\\\"></div></div><div class=\\\"col col-md-2 col-xs-4\\\"><div class=\\\"progress-dot\\\"></div><div class=\\\"key-text\\\"><span data-i18n=\\\"teacher.level_not_started\\\" class=\\\"small\\\"></span></div><div class=\\\"clearfix\\\"></div></div></div>\");\nvar course = state.get('selectedCourse');\nvar courseInstance = view.courseInstances.findWhere({ courseID: course.id, classroomID: view.classroom.id });\nif ( course && view.availableCourseMap[course.id] && courseInstance && courseInstance.get('members').length > 0)\n{\nbuf.push(\"<div class=\\\"render-on-course-sync\\\">\");\ncourseOverview_mixin(course);\nbuf.push(\"<div class=\\\"student-levels-table\\\">\");\nsortButtons_mixin();\n// iterate state.get('students').models\n;(function(){\n  var $$obj = state.get('students').models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var student = $$obj[$index];\n\nif ( _.contains(state.get('selectedCourse').members, student.id))\n{\nstudentLevelsRow_mixin(student);\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var student = $$obj[$index];\n\nif ( _.contains(state.get('selectedCourse').members, student.id))\n{\nstudentLevelsRow_mixin(student);\n}\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div></div>\");\n}\nelse\n{\nbuf.push(\"<br/><h2 class=\\\"text-center\\\"><i data-i18n=\\\"teacher.no_student_assigned\\\"></i></h2>\");\n}\nbuf.push(\"<div class=\\\"unassigned-students render-on-course-sync\\\">\");\nif ( state.get('selectedCourse') && state.get('selectedCourse').members.length < state.get('students').length)\n{\nbuf.push(\"<h2>\");\nvar courseName = i18n(state.get('selectedCourse').attributes, 'name');\nbuf.push(\"<span>\" + (jade.escape(null == (jade.interp = translate('teacher.students_not_assigned').replace('{{courseName}}', courseName)) ? \"\" : jade.interp)) + \"</span></h2>\");\n// iterate state.get('students').models\n;(function(){\n  var $$obj = state.get('students').models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var student = $$obj[$index];\n\nif (!( _.contains(state.get('selectedCourse').members, student.id)))\n{\nbuf.push(\"<div class=\\\"row unassigned-student-row alternating-background\\\"><div class=\\\"student-name col-sm-3\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div><div class=\\\"student-email small-details col-sm-3\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-4\\\"><div class=\\\"latest-completed truncate small\\\"><i class=\\\"m-r-1\\\"><span data-i18n=\\\"teacher.latest_completed\\\"></span></i>\");\nlongLevelName_mixin(student.latestCompleteLevel);\nbuf.push(\"</div></div><div class=\\\"col-sm-2\\\"><div\" + (jade.attrs({ 'data-user-id':(student.id), 'data-course-id':(state.get('selectedCourse').id), \"class\": [('assign-student-button'),('btn'),('btn-md'),('btn-navy'),('pull-right')] }, {\"data-user-id\":true,\"data-course-id\":true})) + \"><span data-i18n=\\\"teacher.assign_course\\\"></span></div></div></div>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var student = $$obj[$index];\n\nif (!( _.contains(state.get('selectedCourse').members, student.id)))\n{\nbuf.push(\"<div class=\\\"row unassigned-student-row alternating-background\\\"><div class=\\\"student-name col-sm-3\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div><div class=\\\"student-email small-details col-sm-3\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-4\\\"><div class=\\\"latest-completed truncate small\\\"><i class=\\\"m-r-1\\\"><span data-i18n=\\\"teacher.latest_completed\\\"></span></i>\");\nlongLevelName_mixin(student.latestCompleteLevel);\nbuf.push(\"</div></div><div class=\\\"col-sm-2\\\"><div\" + (jade.attrs({ 'data-user-id':(student.id), 'data-course-id':(state.get('selectedCourse').id), \"class\": [('assign-student-button'),('btn'),('btn-md'),('btn-navy'),('pull-right')] }, {\"data-user-id\":true,\"data-course-id\":true})) + \"><span data-i18n=\\\"teacher.assign_course\\\"></span></div></div></div>\");\n}\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</div></div>\");\n};\nvar studentRow_mixin = function(student){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<tr class=\\\"student-row alternating-background\\\"><td class=\\\"checkbox-col student-checkbox\\\"><div class=\\\"checkbox-flat\\\"><input\" + (jade.attrs({ 'type':('checkbox'), 'id':('checkbox-student-' + student.id), 'data-student-id':(student.id), 'checked':(state.get('checkboxStates')[student.id]) }, {\"type\":true,\"id\":true,\"data-student-id\":true,\"checked\":true})) + \"/><label\" + (jade.attrs({ 'for':('checkbox-student-' + student.id), \"class\": [('checkmark')] }, {\"for\":true})) + \"></label></div></td><td class=\\\"student-info-col\\\"><div class=\\\"student-info\\\">\");\nif ( student.get('deleted'))\n{\nbuf.push(\"<em>(deleted)</em>\");\n}\nvar url = '/teachers/classes/' + view.classroom.id + '/' + student.id;\nbuf.push(\"<a\" + (jade.attrs({ 'href':(url) }, {\"href\":true})) + \"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</div></a><div class=\\\"student-email small-details\\\">\" + (jade.escape(null == (jade.interp = student.get('email')) ? \"\" : jade.interp)) + \"</div></div></td><td class=\\\"hidden\\\"><a\" + (jade.attrs({ 'data-student-id':(student.id), \"class\": [('edit-student-button')] }, {\"data-student-id\":true})) + \"><span class=\\\"glyphicon glyphicon-edit\\\"></span><span data-i18n=\\\"teacher.edit\\\"></span></a></td><td class=\\\"latest-level-col small\\\"><div><i><span data-i18n=\\\"teacher.latest_completed\\\"></span></i></div><div>\");\nlongLevelName_mixin(student.latestCompleteLevel);\nbuf.push(\"</div></td><td>\");\nif ( state.get('progressData'))\n{\nvar courses = view.sortedCourses.map(function(c) { return view.courses.get(c._id); });\nvar courseLabelsArray = view.helper.courseLabelsArray(courses);\n// iterate view.sortedCourses\n;(function(){\n  var $$obj = view.sortedCourses;\n  if ('number' == typeof $$obj.length) {\n\n    for (var index = 0, $$l = $$obj.length; index < $$l; index++) {\n      var trimCourse = $$obj[index];\n\nvar course = view.courses.get(trimCourse._id);\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\nif ( instance && instance.hasMember(student))\n{\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, user: student })\nvar levelsTotal = _.reject(trimCourse.levels, 'practice').length\nvar label = courseLabelsArray[index];\nstudentCourseProgressDot_mixin(progress, levelsTotal, label);\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var index in $$obj) {\n      $$l++;      var trimCourse = $$obj[index];\n\nvar course = view.courses.get(trimCourse._id);\nvar instance = view.courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })\nif ( instance && instance.hasMember(student))\n{\nvar progress = state.get('progressData').get({ classroom: view.classroom, course: course, user: student })\nvar levelsTotal = _.reject(trimCourse.levels, 'practice').length\nvar label = courseLabelsArray[index];\nstudentCourseProgressDot_mixin(progress, levelsTotal, label);\n}\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</td><td><div class=\\\"pull-right\\\"><a\" + (jade.attrs({ 'data-student-id':(student.id), \"class\": [('edit-student-link'),('small'),('center-block'),('text-center'),('m-r-2')] }, {\"data-student-id\":true})) + \"><div class=\\\"glyphicon glyphicon-edit\\\"></div><div data-i18n=\\\"teacher.edit\\\"></div></a><a\" + (jade.attrs({ 'data-student-id':(student.id), \"class\": [('remove-student-link'),('small'),('center-block'),('text-center'),('m-r-2')] }, {\"data-student-id\":true})) + \"><div class=\\\"glyphicon glyphicon-remove\\\"></div><div data-i18n=\\\"teacher.remove\\\"></div></a></div></td></tr>\");\n};\nvar sortButtons_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"sort-buttons small\\\"><span data-i18n=\\\"teacher.sort_by\\\"></span><span class=\\\"spr\\\">:</span><button data-i18n=\\\"general.name\\\" value=\\\"name\\\" class=\\\"sort-button sort-by-name\\\"></button><button data-i18n=\\\"teacher.progress\\\" value=\\\"progress\\\" class=\\\"sort-button sort-by-progress\\\"></button></div>\");\n};\nvar studentsTab_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div id=\\\"students-tab\\\">\");\nbulkAssignControls_mixin();\nbuf.push(\"<table class=\\\"students-table\\\"><thead><th class=\\\"checkbox-col select-all small text-center\\\"><span data-i18n=\\\"teacher.select_all\\\"></span><div class=\\\"checkbox-flat\\\">\");\nvar allStudentsChecked = _.all(state.get('checkboxStates'))\nbuf.push(\"<input\" + (jade.attrs({ 'type':('checkbox'), 'id':('checkbox-all-students'), 'checked':(allStudentsChecked) }, {\"type\":true,\"id\":true,\"checked\":true})) + \"/><label for=\\\"checkbox-all-students\\\" class=\\\"checkmark\\\"></label></div></th><th>\");\nsortButtons_mixin();\nbuf.push(\"</th></thead><tbody>\");\n// iterate state.get('students').models\n;(function(){\n  var $$obj = state.get('students').models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var student = $$obj[$index];\n\nstudentRow_mixin(student);\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var student = $$obj[$index];\n\nstudentRow_mixin(student);\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</tbody></table></div>\");\n};\nvar addStudentsButton_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"add-students\\\"><a\" + (jade.attrs({ 'data-classroom-id':(view.classroom.id), \"class\": [('add-students-btn'),('btn'),('btn-lg'),('btn-primary')] }, {\"data-classroom-id\":true})) + \"><span data-i18n=\\\"teacher.add_students_manually\\\"></span></a></div>\");\n};\nvar inlineUserList_mixin = function(users){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nif ( users)\n{\nbuf.push(\"<ul class=\\\"inline-student-list small\\\">\");\n// iterate users\n;(function(){\n  var $$obj = users;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var student = $$obj[$index];\n\nbuf.push(\"<li><span class=\\\"inline-student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</span></li>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var student = $$obj[$index];\n\nbuf.push(\"<li><span class=\\\"inline-student-name\\\">\" + (jade.escape(null == (jade.interp = student.broadName()) ? \"\" : jade.interp)) + \"</span></li>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</ul>\");\n}\n};\nvar longLevelName_mixin = function(data){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nif ( data)\n{\nbuf.push(\"<div class=\\\"level-name\\\"><span>\" + (jade.escape(null == (jade.interp = data.courseName + ': ') ? \"\" : jade.interp)) + \"</span><span data-i18n=\\\"play_level.level\\\"></span><span class=\\\"spl\\\">\" + (jade.escape(null == (jade.interp = data.levelNumber) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nelse\n{\nbuf.push(\"<div data-i18n=\\\"teacher.not_applicable\\\" class=\\\"level-name\\\"></div>\");\n}\n};\nvar breadcrumbs_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<div class=\\\"breadcrumbs\\\"><a data-i18n=\\\"teacher.my_classes\\\" href=\\\"/teachers/classes\\\"></a><span class=\\\"spl spr\\\">></span><span>\" + (jade.escape(null == (jade.interp = view.classroom.get('name')) ? \"\" : jade.interp)) + \"</span></div>\");\n};\nvar accountLinks_mixin = function(){\nvar block = this.block, attributes = this.attributes || {}, escaped = this.escaped || {};\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\"), 'data-i18n':(\"nav.profile\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li><li><a href=\\\"/account/settings\\\" data-i18n=\\\"play.settings\\\"></a></li><li><a id=\\\"logout-button\\\" data-i18n=\\\"login.log_out\\\"></a></li>\");\n};\nbuf.push(\"<div class=\\\"style-flat\\\"><nav id=\\\"main-nav\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid container\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><div class=\\\"navbar-header\\\"><button data-toggle=\\\"collapse\\\" data-target=\\\"#navbar-collapse\\\" aria-expanded=\\\"false\\\" class=\\\"navbar-toggle collapsed\\\"><span data-i18n=\\\"nav.toggle_nav\\\" class=\\\"sr-only\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><a href=\\\"/\\\" class=\\\"navbar-brand\\\">\");\nif ( serverConfig.codeNinjas)\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\" class=\\\"code-ninjas-powered-by\\\"/><img src=\\\"/images/pages/base/code-ninjas-logo-right.png\\\" class=\\\"code-ninjas-logo\\\"/>\");\n}\nelse\n{\nbuf.push(\"<img id=\\\"logo-img\\\" src=\\\"/images/pages/base/logo.png\\\"/>\");\n}\nbuf.push(\"<span class=\\\"glyphicon glyphicon-home\\\"></span></a></div><div id=\\\"navbar-collapse\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\">\");\nif ( (!me.isStudent() && !me.isTeacher()))\n{\nbuf.push(\"<li><a href=\\\"/play\\\" data-i18n=\\\"common.play\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li>\");\nif ( me.isStudent())\n{\nbuf.push(\"<li><a href=\\\"/students\\\" data-i18n=\\\"nav.my_courses\\\"></a></li>\");\n}\nif ( !me.isAnonymous() && me.isTeacher())\n{\nbuf.push(\"<li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li></ul>\");\nif ( me.isAnonymous())\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><a id=\\\"create-account-link\\\" data-i18n=\\\"login.sign_up\\\" class=\\\"signup-button\\\"></a></li><li><a id=\\\"login-link\\\" data-i18n=\\\"login.log_in\\\" class=\\\"login-button\\\"></a></li></ul>\");\n}\nelse\n{\nbuf.push(\"<ul class=\\\"nav navbar-nav hidden-md hidden-lg\\\"><li class=\\\"disabled\\\"><a><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span>\" + (jade.escape(null == (jade.interp = me.displayName()) ? \"\" : jade.interp)) + \"</span></a></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown hidden-xs hidden-sm\\\"><a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"dropdown-toggle\\\"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),('img-circle-small'),('m-r-1'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/><span data-i18n=\\\"nav.my_account\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li class=\\\"user-dropdown-header text-center\\\"><span class=\\\"user-level\\\">\" + (jade.escape(null == (jade.interp = me.level()) ? \"\" : jade.interp)) + \"</span><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\") }, {\"href\":true})) + \"><img\" + (jade.attrs({ 'src':(me.getPhotoURL()), \"class\": [('img-circle'),((me.isTeacher() ? 'border-navy' : ''))] }, {\"class\":true,\"src\":true})) + \"/></a><h5>\" + (jade.escape(null == (jade.interp = me.broadName()) ? \"\" : jade.interp)) + \"</h5></li>\");\naccountLinks_mixin();\nbuf.push(\"</ul></li></ul>\");\n}\nbuf.push(\"<ul class=\\\"nav navbar-nav\\\"><li><div id=\\\"language-dropdown-wrapper\\\"><select class=\\\"language-dropdown form-control\\\"></select></div></li></ul></div></div></div></div></nav>\");\nvar path = document.location.pathname\nbuf.push(\"<div id=\\\"teacher-dashboard-nav\\\"><nav class=\\\"navbar\\\"><div class=\\\"container-fluid container\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#teacher-dashboard-nav-collapse\\\" class=\\\"navbar-toggle collapsed\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button><span data-i18n=\\\"teacher.teacher_dashboard\\\" class=\\\"navbar-brand text-h4\\\"></span></div><div id=\\\"teacher-dashboard-nav-collapse\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/classes') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/classes\\\"><small data-i18n=\\\"teacher.my_classes\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/courses') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/courses\\\"><small data-i18n=\\\"teacher.courses\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/licenses') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/licenses\\\"><small data-i18n=\\\"teacher.enrollments\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/resources') === 0 && path.indexOf('/teachers/resources/faq') !== 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/resources\\\"><small data-i18n=\\\"teacher.resource_hub\\\" class=\\\"label\\\"></small></a></li><li\" + (jade.attrs({ \"class\": [(path.indexOf('/teachers/resources/faq') === 0 ? 'active' : '')] }, {\"class\":true})) + \"><a href=\\\"/teachers/resources/faq\\\"><small data-i18n=\\\"teacher.educator_faq\\\" class=\\\"label\\\"></small></a></li></ul></div></div></nav></div><div id=\\\"site-content-area\\\">\");\nvar classroom = view.classroom\nif ( !me.isTeacher() && !me.isAdmin())\n{\nbuf.push(\"<div class=\\\"alert alert-danger text-center\\\"><div class=\\\"container\\\"><!-- DNT: Temporary--><h3>ATTENTION: Please upgrade your account to a Teacher Account.</h3><p>We are transitioning to a new improved classroom management system for instructors.\\nPlease convert your account to ensure you retain access to your classrooms.</p><a href=\\\"/teachers/update-account\\\" class=\\\"btn btn-primary btn-lg\\\">Upgrade to teacher account</a></div></div>\");\n}\nif ( classroom.loaded)\n{\nbuf.push(\"<div class=\\\"container\\\">\");\nbreadcrumbs_mixin();\nif ( classroom.get('archived'))\n{\nbuf.push(\"<div class=\\\"row center-block text-center m-t-3 m-b-3\\\"><div class=\\\"unarchive-btn btn btn-lg btn-navy\\\"><span data-i18n=\\\"teacher.unarchive_this_class\\\"></span></div></div>\");\n}\nbuf.push(\"<h3 class=\\\"m-t-2\\\">\" + (jade.escape(null == (jade.interp = classroom.get('name')) ? \"\" : jade.interp)) + \"</h3><a\" + (jade.attrs({ 'data-classroom-id':(classroom.id), \"class\": [('label'),('edit-classroom')] }, {\"data-classroom-id\":true})) + \"><span data-i18n=\\\"teacher.edit_class_settings\\\"></span></a><h4>\" + (jade.escape(null == (jade.interp = classroom.get('description')) ? \"\" : jade.interp)) + \"</h4><div class=\\\"classroom-info-row row m-t-5\\\"><div class=\\\"classroom-details col-md-3\\\">\");\nvar stats = state.get('classStats')\nbuf.push(\"<h4 data-i18n=\\\"teacher.class_overview\\\" class=\\\"m-b-2\\\"></h4><div class=\\\"language small-details\\\"><span data-i18n=\\\"teacher.language\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = classroom.capitalLanguage) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"student-count small-details\\\"><span data-i18n=\\\"courses.students\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = classroom.get('members').length) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"average-playtime small-details\\\"><span data-i18n=\\\"teacher.avg_playtime\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = stats.averagePlaytime) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"total-playtime small-details\\\"><span data-i18n=\\\"teacher.total_playtime\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = stats.totalPlaytime) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"average-complete small-details\\\"><span data-i18n=\\\"teacher.avg_completed\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = stats.averageLevelsComplete) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"total-complete small-details\\\"><span data-i18n=\\\"teacher.total_completed\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = stats.totalLevelsComplete) ? \"\" : jade.interp)) + \"</span></div><div class=\\\"total-complete small-details\\\"><span data-i18n=\\\"teacher.created\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = moment(classroom.created()).format('l')) ? \"\" : jade.interp)) + \"</span></div>\");\nif ( view.students && view.students.models.length > 0)\n{\nbuf.push(\"<button class=\\\"export-student-progress-btn btn btn-lg btn-primary\\\"><span data-i18n=\\\"teacher.export_student_progress\\\"></span></button>\");\n}\nbuf.push(\"</div><div class=\\\"completeness-info col-md-4\\\"><h4 class=\\\"m-b-2\\\">&nbsp;</h4>\");\nif ( state.get('earliestIncompleteLevel'))\n{\nbuf.push(\"<div class=\\\"small-details\\\"><span data-i18n=\\\"teacher.earliest_incomplete\\\"></span><span>:</span></div>\");\nlongLevelName_mixin(state.get('earliestIncompleteLevel'));\ninlineUserList_mixin(state.get('earliestIncompleteLevel').users);\n}\nif ( state.get('latestCompleteLevel'))\n{\nbuf.push(\"<div class=\\\"small-details m-t-3\\\"><span data-i18n=\\\"teacher.latest_complete\\\"></span><span>:</span></div>\");\nlongLevelName_mixin(state.get('latestCompleteLevel'));\ninlineUserList_mixin(state.get('latestCompleteLevel').users);\n}\nbuf.push(\"</div><div class=\\\"adding-students col-md-5\\\"><h4 class=\\\"m-b-2\\\"><span data-i18n=\\\"courses.add_students\\\"></span><span>:</span></h4>\");\ncopyCodes_mixin();\naddStudentsButton_mixin();\nbuf.push(\"</div></div>\");\nif ( view.students.length > 0)\n{\nbuf.push(\"<ul role=\\\"tablist\\\" class=\\\"nav nav-tabs m-t-5\\\">\");\nvar activeTab = state.get('activeTab');\nbuf.push(\"<li\" + (jade.attrs({ \"class\": [((activeTab === \"#students-tab\" ? 'active' : ''))] }, {\"class\":true})) + \"><a href=\\\"#students-tab\\\" class=\\\"students-tab-btn\\\"><div data-i18n=\\\"courses.students\\\" class=\\\"small-details text-center\\\"></div></a></li><div class=\\\"tab-spacer\\\"></div><li\" + (jade.attrs({ \"class\": [((activeTab === \"#course-progress-tab\" ? 'active' : ''))] }, {\"class\":true})) + \"><a href=\\\"#course-progress-tab\\\" class=\\\"course-progress-tab-btn\\\"><div data-i18n=\\\"teacher.course_progress\\\" class=\\\"small-details text-center\\\"></div></a></li><div class=\\\"tab-spacer\\\"></div><li\" + (jade.attrs({ \"class\": [((activeTab === \"#license-status-tab\" ? 'active' : ''))] }, {\"class\":true})) + \"><a href=\\\"#license-status-tab\\\" class=\\\"course-progress-tab-btn\\\"><div data-i18n=\\\"teacher.license_status\\\" class=\\\"small-details text-center\\\"></div></a></li><div class=\\\"tab-filler\\\"></div></ul><div class=\\\"tab-content\\\">\");\nif ( activeTab === '#students-tab')\n{\nstudentsTab_mixin();\n}\nelse if ( activeTab === '#course-progress-tab')\n{\ncourseProgressTab_mixin();\n}\nelse if ( activeTab === '#license-status-tab')\n{\nenrollmentStatusTab_mixin();\n}\nbuf.push(\"</div>\");\n}\nelse\n{\nbuf.push(\"<div class=\\\"text-center m-t-5 m-b-5\\\"><div class=\\\"text-h2\\\"><span data-i18n=\\\"teacher.no_students_yet\\\"></span></div><div class=\\\"text-h4\\\"><span data-i18n=\\\"teacher.try_refreshing\\\"></span></div></div>\");\n}\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div><div class=\\\"container-fluid\\\"><div id=\\\"footer\\\" class=\\\"small\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong>CodeCombat</strong></li><li><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a></li><li><a href=\\\"/about#jobs\\\" data-i18n=\\\"nav.jobs\\\"></a></li><li><a href=\\\"http://blog.codecombat.com/\\\" data-i18n=\\\"nav.blog\\\"></a></li><li><a href=\\\"/legal\\\" data-i18n=\\\"nav.legal\\\"></a></li><li><a href=\\\"/privacy\\\" data-i18n=\\\"nav.privacy\\\"></a></li></ul></div>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.schools\\\"></strong></li><li><a href=\\\"/teachers/resources/faq\\\" data-i18n=\\\"teacher.educator_faq\\\"></a></li><li><a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a></li><li><a href=\\\"/teachers/resources\\\" data-i18n=\\\"nav.resource_hub\\\"></a></li><li><a href=\\\"/teachers/demo\\\" data-i18n=\\\"new_home.request_demo\\\"></a></li></ul></div>\");\n}\nbuf.push(\"<div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.get_involved\\\"></strong></li><li><a href=\\\"/community\\\" data-i18n=\\\"nav.community\\\"></a></li><li><a href=\\\"/contribute\\\" data-i18n=\\\"nav.contribute\\\"></a></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"/play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a></li><li><a href=\\\"https://github.com/codecombat/codecombat\\\" data-i18n=\\\"nav.open_source\\\"></a></li></ul></div><div class=\\\"col-sm-3\\\"><ul class=\\\"list-unstyled\\\"><li><strong data-i18n=\\\"nav.support\\\"></strong></li>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<li><a tabindex=\\\"-1\\\" data-i18n=\\\"nav.contact\\\" class=\\\"contact-modal\\\"></a></li>\");\n}\nbuf.push(\"<li><a href=\\\"https://www.facebook.com/codecombat\\\" data-i18n=\\\"nav.facebook\\\"></a></li><li><a href=\\\"https://twitter.com/codecombat\\\" data-i18n=\\\"nav.twitter\\\"></a></li></ul></div></div></div></div><div id=\\\"final-footer\\\" class=\\\"small text-center\\\">Copyright ©2016 CodeCombat. All Rights Reserved.<br class=\\\"hidden-lg hidden-md\\\"/><img src=\\\"/images/pages/base/logo.png\\\" alt=\\\"CodeCombat\\\"/><br class=\\\"hidden-lg hidden-md\\\"/>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<span data-i18n=\\\"nav.help_pref\\\" class=\\\"spr\\\"></span>\");\nvar supportEmail = (me.get('preferredLanguage', true) || 'en-US').split('-')[0] == 'nl' ? 'klantenservice@codecombat.nl' : 'team@codecombat.com';\nbuf.push(\"<a\" + (jade.attrs({ 'href':(\"mailto:\" + supportEmail) }, {\"href\":true})) + \">\" + (jade.escape(null == (jade.interp = supportEmail) ? \"\" : jade.interp)) + \"</a><span data-i18n=\\\"nav.help_suff\\\" class=\\\"spl\\\"></span>\");\n}\nbuf.push(\"</div></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","RootView = require 'views/core/RootView'\r\nState = require 'models/State'\r\ntemplate = require 'templates/courses/teacher-class-view'\r\nhelper = require 'lib/coursesHelper'\r\nutils = require 'core/utils'\r\nClassroomSettingsModal = require 'views/courses/ClassroomSettingsModal'\r\nInviteToClassroomModal = require 'views/courses/InviteToClassroomModal'\r\nActivateLicensesModal = require 'views/courses/ActivateLicensesModal'\r\nEditStudentModal = require 'views/teachers/EditStudentModal'\r\nRemoveStudentModal = require 'views/courses/RemoveStudentModal'\r\nCoursesNotAssignedModal = require './CoursesNotAssignedModal'\r\n\r\nCampaigns = require 'collections/Campaigns'\r\nClassroom = require 'models/Classroom'\r\nClassrooms = require 'collections/Classrooms'\r\nLevels = require 'collections/Levels'\r\nLevelSessions = require 'collections/LevelSessions'\r\nUser = require 'models/User'\r\nUsers = require 'collections/Users'\r\nCourse = require 'models/Course'\r\nCourses = require 'collections/Courses'\r\nCourseInstance = require 'models/CourseInstance'\r\nCourseInstances = require 'collections/CourseInstances'\r\nPrepaids = require 'collections/Prepaids'\r\n\r\n{ STARTER_LICENSE_COURSE_IDS } = require 'core/constants'\r\n\r\nmodule.exports = class TeacherClassView extends RootView\r\n  id: 'teacher-class-view'\r\n  template: template\r\n  helper: helper\r\n\r\n  events:\r\n    'click .nav-tabs a': 'onClickNavTabLink'\r\n    'click .unarchive-btn': 'onClickUnarchive'\r\n    'click .edit-classroom': 'onClickEditClassroom'\r\n    'click .add-students-btn': 'onClickAddStudents'\r\n    'click .edit-student-link': 'onClickEditStudentLink'\r\n    'click .sort-button': 'onClickSortButton'\r\n    'click #copy-url-btn': 'onClickCopyURLButton'\r\n    'click #copy-code-btn': 'onClickCopyCodeButton'\r\n    'click .remove-student-link': 'onClickRemoveStudentLink'\r\n    'click .assign-student-button': 'onClickAssignStudentButton'\r\n    'click .enroll-student-button': 'onClickEnrollStudentButton'\r\n    'click .assign-to-selected-students': 'onClickBulkAssign'\r\n    'click .export-student-progress-btn': 'onClickExportStudentProgress'\r\n    'click .select-all': 'onClickSelectAll'\r\n    'click .student-checkbox': 'onClickStudentCheckbox'\r\n    'keyup #student-search': 'onKeyPressStudentSearch'\r\n    'change .course-select, .bulk-course-select': 'onChangeCourseSelect'\r\n\r\n  getInitialState: ->\r\n    {\r\n      sortAttribute: 'name'\r\n      sortDirection: 1\r\n      activeTab: '#' + (Backbone.history.getHash() or 'students-tab')\r\n      students: new Users()\r\n      classCode: \"\"\r\n      joinURL: \"\"\r\n      errors:\r\n        assigningToNobody: false\r\n      selectedCourse: undefined\r\n      checkboxStates: {}\r\n      classStats:\r\n        averagePlaytime: \"\"\r\n        totalPlaytime: \"\"\r\n        averageLevelsComplete: \"\"\r\n        totalLevelsComplete: \"\"\r\n        enrolledUsers: \"\"\r\n    }\r\n\r\n  getTitle: -> return @classroom?.get('name')\r\n\r\n  initialize: (options, classroomID) ->\r\n    super(options)\r\n    # wrap templates so they translate when called\r\n    translateTemplateText = (template, context) => $('<div />').html(template(context)).i18n().html()\r\n    @singleStudentCourseProgressDotTemplate = _.wrap(require('templates/teachers/hovers/progress-dot-single-student-course'), translateTemplateText)\r\n    @singleStudentLevelProgressDotTemplate = _.wrap(require('templates/teachers/hovers/progress-dot-single-student-level'), translateTemplateText)\r\n    @allStudentsLevelProgressDotTemplate = _.wrap(require('templates/teachers/hovers/progress-dot-all-students-single-level'), translateTemplateText)\r\n\r\n    @urls = require('core/urls')\r\n\r\n    @debouncedRender = _.debounce @render\r\n\r\n    @state = new State(@getInitialState())\r\n    @updateHash @state.get('activeTab') # TODO: Don't push to URL history (maybe don't use url fragment for default tab)\r\n\r\n    @classroom = new Classroom({ _id: classroomID })\r\n    @supermodel.trackRequest @classroom.fetch()\r\n    @onKeyPressStudentSearch = _.debounce(@onKeyPressStudentSearch, 200)\r\n    @sortedCourses = []\r\n\r\n    @prepaids = new Prepaids()\r\n    @supermodel.trackRequest @prepaids.fetchByCreator(me.id)\r\n\r\n    @students = new Users()\r\n    @classroom.sessions = new LevelSessions()\r\n    @listenTo @classroom, 'sync', ->\r\n      jqxhrs = @students.fetchForClassroom(@classroom, removeDeleted: true)\r\n      @supermodel.trackRequests jqxhrs\r\n\r\n      requests = @classroom.sessions.fetchForAllClassroomMembers(@classroom)\r\n      @supermodel.trackRequests(requests)\r\n\r\n    @students.comparator = (student1, student2) =>\r\n      dir = @state.get('sortDirection')\r\n      value = @state.get('sortValue')\r\n      if value is 'name'\r\n        return (if student1.broadName().toLowerCase() < student2.broadName().toLowerCase() then -dir else dir)\r\n\r\n      if value is 'progress'\r\n        # TODO: I would like for this to be in the Level model,\r\n        #   but it doesn't know about its own courseNumber.\r\n        level1 = student1.latestCompleteLevel\r\n        level2 = student2.latestCompleteLevel\r\n        return -dir if not level1\r\n        return dir if not level2\r\n        return dir * (level1.courseNumber - level2.courseNumber or level1.levelNumber - level2.levelNumber)\r\n\r\n      if value is 'status'\r\n        statusMap = { expired: 0, 'not-enrolled': 1, enrolled: 2 }\r\n        diff = statusMap[student1.prepaidStatus()] - statusMap[student2.prepaidStatus()]\r\n        return dir * diff if diff\r\n        return (if student1.broadName().toLowerCase() < student2.broadName().toLowerCase() then -dir else dir)\r\n\r\n    @courses = new Courses()\r\n    @supermodel.trackRequest @courses.fetch()\r\n\r\n    @courseInstances = new CourseInstances()\r\n    @supermodel.trackRequest @courseInstances.fetchForClassroom(classroomID)\r\n\r\n    @levels = new Levels()\r\n    @supermodel.trackRequest @levels.fetchForClassroom(classroomID, {data: {project: 'original,concepts,primerLanguage,practice,shareable,i18n'}})\r\n\r\n    @attachMediatorEvents()\r\n    window.tracker?.trackEvent 'Teachers Class Loaded', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n\r\n  attachMediatorEvents: () ->\r\n    # Model/Collection events\r\n    @listenTo @classroom, 'sync change update', ->\r\n      classCode = @classroom.get('codeCamel') or @classroom.get('code')\r\n      @state.set {\r\n        classCode: classCode\r\n        joinURL: document.location.origin + \"/students?_cc=\" + classCode\r\n      }\r\n      @sortedCourses = @classroom.getSortedCourses()\r\n      @availableCourseMap = {}\r\n      @availableCourseMap[course._id] = true for course in @sortedCourses\r\n      @debouncedRender()\r\n    @listenTo @courses, 'sync change update', ->\r\n      @setCourseMembers() # Is this necessary?\r\n      @state.set selectedCourse: @courses.first() unless @state.get('selectedCourse')\r\n    @listenTo @courseInstances, 'sync change update', ->\r\n      @setCourseMembers()\r\n    @listenTo @students, 'sync change update add remove reset', ->\r\n      # Set state/props of things that depend on students?\r\n      # Set specific parts of state based on the models, rather than just dumping the collection there?\r\n      @calculateProgressAndLevels()\r\n      classStats = @calculateClassStats()\r\n      @state.set classStats: classStats if classStats\r\n      @state.set students: @students\r\n      checkboxStates = {}\r\n      for student in @students.models\r\n        checkboxStates[student.id] = @state.get('checkboxStates')[student.id] or false\r\n      @state.set { checkboxStates }\r\n    @listenTo @students, 'sort', ->\r\n      @state.set students: @students\r\n    @listenTo @, 'course-select:change', ({ selectedCourse }) ->\r\n      @state.set selectedCourse: selectedCourse\r\n\r\n  setCourseMembers: =>\r\n    for course in @courses.models\r\n      course.instance = @courseInstances.findWhere({ courseID: course.id, classroomID: @classroom.id })\r\n      course.members = course.instance?.get('members') or []\r\n    null\r\n\r\n  onLoaded: ->\r\n    # Get latest courses for student assignment dropdowns\r\n    @latestReleasedCourses = if me.isAdmin() then @courses.models else @courses.where({releasePhase: 'released'})\r\n    @latestReleasedCourses = utils.sortCourses(@latestReleasedCourses)\r\n    @removeDeletedStudents() # TODO: Move this to mediator listeners? For both classroom and students?\r\n    @calculateProgressAndLevels()\r\n\r\n    # render callback setup\r\n    @listenTo @courseInstances, 'sync change update', @debouncedRender\r\n    @listenTo @state, 'sync change', ->\r\n      if _.isEmpty(_.omit(@state.changed, 'searchTerm'))\r\n        @renderSelectors('#license-status-table')\r\n      else\r\n        @debouncedRender()\r\n    @listenTo @students, 'sort', @debouncedRender\r\n    super()\r\n\r\n  afterRender: ->\r\n    super(arguments...)\r\n    $('.progress-dot, .btn-view-project-level').each (i, el) ->\r\n      dot = $(el)\r\n      dot.tooltip({\r\n        html: true\r\n        container: dot\r\n      }).delegate '.tooltip', 'mousemove', ->\r\n        dot.tooltip('hide')\r\n\r\n  calculateProgressAndLevels: ->\r\n    return unless @supermodel.progress is 1\r\n    # TODO: How to structure this in @state?\r\n    for student in @students.models\r\n      # TODO: this is a weird hack\r\n      studentsStub = new Users([ student ])\r\n      student.latestCompleteLevel = helper.calculateLatestComplete(@classroom, @courses, @courseInstances, studentsStub)\r\n\r\n    earliestIncompleteLevel = helper.calculateEarliestIncomplete(@classroom, @courses, @courseInstances, @students)\r\n    latestCompleteLevel = helper.calculateLatestComplete(@classroom, @courses, @courseInstances, @students)\r\n\r\n    classroomsStub = new Classrooms([ @classroom ])\r\n    progressData = helper.calculateAllProgress(classroomsStub, @courses, @courseInstances, @students)\r\n    # conceptData: helper.calculateConceptsCovered(classroomsStub, @courses, @campaigns, @courseInstances, @students)\r\n\r\n    @state.set {\r\n      earliestIncompleteLevel\r\n      latestCompleteLevel\r\n      progressData\r\n      classStats: @calculateClassStats()\r\n    }\r\n\r\n  onClickNavTabLink: (e) ->\r\n    e.preventDefault()\r\n    hash = $(e.target).closest('a').attr('href')\r\n    @updateHash(hash)\r\n    @state.set activeTab: hash\r\n\r\n  updateHash: (hash) ->\r\n    return if application.testing\r\n    window.location.hash = hash\r\n\r\n  onClickCopyCodeButton: ->\r\n    window.tracker?.trackEvent 'Teachers Class Copy Class Code', category: 'Teachers', classroomID: @classroom.id, classCode: @state.get('classCode'), ['Mixpanel']\r\n    @$('#join-code-input').val(@state.get('classCode')).select()\r\n    @tryCopy()\r\n\r\n  onClickCopyURLButton: ->\r\n    window.tracker?.trackEvent 'Teachers Class Copy Class URL', category: 'Teachers', classroomID: @classroom.id, url: @state.get('joinURL'), ['Mixpanel']\r\n    @$('#join-url-input').val(@state.get('joinURL')).select()\r\n    @tryCopy()\r\n\r\n  onClickUnarchive: ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    window.tracker?.trackEvent 'Teachers Class Unarchive', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n    @classroom.save { archived: false }\r\n\r\n  onClickEditClassroom: (e) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    window.tracker?.trackEvent 'Teachers Class Edit Class Started', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n    classroom = @classroom\r\n    modal = new ClassroomSettingsModal({ classroom: classroom })\r\n    @openModalView(modal)\r\n    @listenToOnce modal, 'hide', @render\r\n\r\n  onClickEditStudentLink: (e) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    window.tracker?.trackEvent 'Teachers Class Students Edit', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n    user = @students.get($(e.currentTarget).data('student-id'))\r\n    modal = new EditStudentModal({ user, @classroom })\r\n    @openModalView(modal)\r\n\r\n  onClickRemoveStudentLink: (e) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    user = @students.get($(e.currentTarget).data('student-id'))\r\n    modal = new RemoveStudentModal({\r\n      classroom: @classroom\r\n      user: user\r\n      courseInstances: @courseInstances\r\n    })\r\n    @openModalView(modal)\r\n    modal.once 'remove-student', @onStudentRemoved, @\r\n\r\n  onStudentRemoved: (e) ->\r\n    @students.remove(e.user)\r\n    window.tracker?.trackEvent 'Teachers Class Students Removed', category: 'Teachers', classroomID: @classroom.id, userID: e.user.id, ['Mixpanel']\r\n\r\n  onClickAddStudents: (e) =>\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    window.tracker?.trackEvent 'Teachers Class Add Students', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n    modal = new InviteToClassroomModal({ classroom: @classroom })\r\n    @openModalView(modal)\r\n    @listenToOnce modal, 'hide', @render\r\n\r\n  removeDeletedStudents: () ->\r\n    return unless @classroom.loaded and @students.loaded\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    _.remove(@classroom.get('members'), (memberID) =>\r\n      not @students.get(memberID) or @students.get(memberID)?.get('deleted')\r\n    )\r\n    true\r\n\r\n  onClickSortButton: (e) ->\r\n    value = $(e.target).val()\r\n    if value is @state.get('sortValue')\r\n      @state.set('sortDirection', -@state.get('sortDirection'))\r\n    else\r\n      @state.set({\r\n        sortValue: value\r\n        sortDirection: 1\r\n      })\r\n    @students.sort()\r\n\r\n  onKeyPressStudentSearch: (e) ->\r\n    @state.set('searchTerm', $(e.target).val())\r\n\r\n  onChangeCourseSelect: (e) ->\r\n    @trigger 'course-select:change', { selectedCourse: @courses.get($(e.currentTarget).val()) }\r\n\r\n  getSelectedStudentIDs: ->\r\n    Object.keys(_.pick @state.get('checkboxStates'), (checked) -> checked)\r\n\r\n  ensureInstance: (courseID) ->\r\n\r\n  onClickEnrollStudentButton: (e) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    userID = $(e.currentTarget).data('user-id')\r\n    user = @students.get(userID)\r\n    selectedUsers = new Users([user])\r\n    @enrollStudents(selectedUsers)\r\n    window.tracker?.trackEvent $(e.currentTarget).data('event-action'), category: 'Teachers', classroomID: @classroom.id, userID: userID, ['Mixpanel']\r\n\r\n  enrollStudents: (selectedUsers) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    modal = new ActivateLicensesModal { @classroom, selectedUsers, users: @students }\r\n    @openModalView(modal)\r\n    modal.once 'redeem-users', (enrolledUsers) =>\r\n      enrolledUsers.each (newUser) =>\r\n        user = @students.get(newUser.id)\r\n        if user\r\n          user.set(newUser.attributes)\r\n      null\r\n\r\n  onClickExportStudentProgress: ->\r\n    # TODO: Does not yield .csv download on Safari, and instead opens a new tab with the .csv contents\r\n    window.tracker?.trackEvent 'Teachers Class Export CSV', category: 'Teachers', classroomID: @classroom.id, ['Mixpanel']\r\n    courseLabels = \"\"\r\n    courses = (@courses.get(c._id) for c in @sortedCourses)\r\n    courseLabelsArray = helper.courseLabelsArray(courses)\r\n    for course, index in courses\r\n      courseLabels += \"#{courseLabelsArray[index]} Levels,#{courseLabelsArray[index]} Playtime,\"\r\n    csvContent = \"data:text/csv;charset=utf-8,Name,Username,Email,Total Levels, Total Playtime,#{courseLabels}Concepts\\n\"\r\n    levelCourseIdMap = {}\r\n    levelPracticeMap = {}\r\n    language = @classroom.get('aceConfig')?.language\r\n    for trimCourse in @classroom.get('courses')\r\n      for trimLevel in trimCourse.levels\r\n        continue if language and trimLevel.primerLanguage is language\r\n        if trimLevel.practice\r\n          levelPracticeMap[trimLevel.original] = true\r\n          continue\r\n        levelCourseIdMap[trimLevel.original] = trimCourse._id\r\n    for student in @students.models\r\n      concepts = []\r\n      for trimCourse in @classroom.get('courses')\r\n        course = @courses.get(trimCourse._id)\r\n        instance = @courseInstances.findWhere({ courseID: course.id, classroomID: @classroom.id })\r\n        if instance and instance.hasMember(student)\r\n          for trimLevel in trimCourse.levels\r\n            level = @levels.findWhere({ original: trimLevel.original })\r\n            progress = @state.get('progressData').get({ classroom: @classroom, course: course, level: level, user: student })\r\n            concepts.push(level.get('concepts') ? []) if progress?.completed\r\n      concepts = _.union(_.flatten(concepts))\r\n      conceptsString = _.map(concepts, (c) -> $.i18n.t(\"concepts.\" + c)).join(', ')\r\n      courseCountsMap = {}\r\n      levels = 0\r\n      playtime = 0\r\n      for session in @classroom.sessions.models\r\n        continue unless session.get('creator') is student.id\r\n        continue unless session.get('state')?.complete\r\n        continue if levelPracticeMap[session.get('level')?.original]\r\n        levels++\r\n        playtime += session.get('playtime') or 0\r\n        if courseID = levelCourseIdMap[session.get('level')?.original]\r\n          courseCountsMap[courseID] ?= {levels: 0, playtime: 0}\r\n          courseCountsMap[courseID].levels++\r\n          courseCountsMap[courseID].playtime += session.get('playtime') or 0\r\n      playtimeString = if playtime is 0 then \"0\" else moment.duration(playtime, 'seconds').humanize()\r\n      for course in @sortedCourses\r\n        courseCountsMap[course._id] ?= {levels: 0, playtime: 0}\r\n      courseCounts = []\r\n      for course in @sortedCourses\r\n        courseID = course._id\r\n        data = courseCountsMap[courseID]\r\n        courseCounts.push\r\n          id: courseID\r\n          levels: data.levels\r\n          playtime: data.playtime\r\n      utils.sortCourses(courseCounts)\r\n      courseCountsString = \"\"\r\n      for counts, index in courseCounts\r\n        courseCountsString += \"#{counts.levels},\"\r\n        if counts.playtime is 0\r\n          courseCountsString += \"0,\"\r\n        else\r\n          courseCountsString += \"#{moment.duration(counts.playtime, 'seconds').humanize()},\"\r\n      csvContent += \"#{student.broadName()},#{student.get('name')},#{student.get('email') or ''},#{levels},#{playtimeString},#{courseCountsString}\\\"#{conceptsString}\\\"\\n\"\r\n    csvContent = csvContent.substring(0, csvContent.length - 1)\r\n    encodedUri = encodeURI(csvContent)\r\n    window.open(encodedUri)\r\n\r\n  onClickAssignStudentButton: (e) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    userID = $(e.currentTarget).data('user-id')\r\n    user = @students.get(userID)\r\n    members = [userID]\r\n    courseID = $(e.currentTarget).data('course-id')\r\n    @assignCourse courseID, members\r\n    window.tracker?.trackEvent 'Teachers Class Students Assign Selected', category: 'Teachers', classroomID: @classroom.id, courseID: courseID, userID: userID, ['Mixpanel']\r\n\r\n  onClickBulkAssign: ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    courseID = @$('.bulk-course-select').val()\r\n    selectedIDs = @getSelectedStudentIDs()\r\n    assigningToNobody = selectedIDs.length is 0\r\n    @state.set errors: { assigningToNobody }\r\n    return if assigningToNobody\r\n    @assignCourse courseID, selectedIDs\r\n    window.tracker?.trackEvent 'Teachers Class Students Assign Selected', category: 'Teachers', classroomID: @classroom.id, courseID: courseID, ['Mixpanel']\r\n\r\n  assignCourse: (courseID, members) ->\r\n    return unless me.id is @classroom.get('ownerID') # May be viewing page as admin\r\n    courseInstance = null\r\n    numberEnrolled = 0\r\n    remainingSpots = 0\r\n\r\n    return Promise.resolve()\r\n    # Find or make the necessary course instances\r\n    .then =>\r\n      courseInstance = @courseInstances.findWhere({ courseID, classroomID: @classroom.id })\r\n      if not courseInstance\r\n        courseInstance = new CourseInstance {\r\n          courseID,\r\n          classroomID: @classroom.id\r\n          ownerID: @classroom.get('ownerID')\r\n          aceConfig: {}\r\n        }\r\n        courseInstance.notyErrors = false # handling manually\r\n        @courseInstances.add(courseInstance)\r\n        return courseInstance.save()\r\n\r\n    # Automatically apply licenses to students if necessary\r\n    .then =>\r\n      # Find the prepaids and users we're acting on (for both starter and full license cases)\r\n      availablePrepaids = @prepaids.filter((prepaid) -> prepaid.status() is 'available' and prepaid.includesCourse(courseID))\r\n      unenrolledStudents = _(members)\r\n        .map((userID) => @students.get(userID))\r\n        .filter((user) => not user.isEnrolled() or not user.prepaidIncludesCourse(courseID))\r\n        .value()\r\n      totalSpotsAvailable = _.reduce(prepaid.openSpots() for prepaid in availablePrepaids, (val, total) -> val + total) or 0\r\n\r\n      canAssignCourses = totalSpotsAvailable >= _.size(unenrolledStudents)\r\n      if not canAssignCourses\r\n        # These ones just matter for display\r\n        availableFullLicenses = @prepaids.filter((prepaid) -> prepaid.status() is 'available' and prepaid.get('type') is 'course')\r\n        numStudentsWithoutFullLicenses = _(members)\r\n          .map((userID) => @students.get(userID))\r\n          .filter((user) => user.prepaidType() isnt 'course' or not user.isEnrolled())\r\n          .size()\r\n        numFullLicensesAvailable = _.reduce(prepaid.openSpots() for prepaid in availableFullLicenses, (val, total) -> val + total) or 0\r\n        modal = new CoursesNotAssignedModal({\r\n          selected: members.length\r\n          numStudentsWithoutFullLicenses\r\n          numFullLicensesAvailable\r\n          courseID\r\n        })\r\n        @openModalView(modal)\r\n        error = new Error('Not enough licenses available')\r\n        error.handled = true\r\n        throw error\r\n\r\n      numberEnrolled = _.size(unenrolledStudents)\r\n      remainingSpots = totalSpotsAvailable - numberEnrolled\r\n\r\n      requests = []\r\n\r\n      for prepaid in availablePrepaids\r\n        for i in _.range(prepaid.openSpots())\r\n          break unless _.size(unenrolledStudents) > 0\r\n          user = unenrolledStudents.shift()\r\n          requests.push(prepaid.redeem(user))\r\n\r\n      @trigger 'begin-redeem-for-assign-course'\r\n      return $.when(requests...)\r\n\r\n    # Add the students to the course instances\r\n    .then =>\r\n      # refresh prepaids, since the racing multiple parallel redeem requests in the previous `then` probably did not\r\n      # end up returning the final result of all those requests together.\r\n      @prepaids.fetchByCreator(me.id)\r\n      @students.fetchForClassroom(@classroom, removeDeleted: true)\r\n\r\n      @trigger 'begin-assign-course'\r\n      if members.length\r\n        noty text: $.i18n.t('teacher.assigning_course'), layout: 'center', type: 'information', killer: true\r\n        return courseInstance.addMembers(members)\r\n\r\n    # Show a success/errror notification\r\n    .then =>\r\n      course = @courses.get(courseID)\r\n      lines = [\r\n        $.i18n.t('teacher.assigned_msg_1')\r\n          .replace('{{numberAssigned}}', members.length)\r\n          .replace('{{courseName}}', course.get('name'))\r\n      ]\r\n      if numberEnrolled > 0\r\n        lines.push(\r\n          $.i18n.t('teacher.assigned_msg_2')\r\n            .replace('{{numberEnrolled}}', numberEnrolled)\r\n        )\r\n        lines.push(\r\n          $.i18n.t('teacher.assigned_msg_3')\r\n          .replace('{{remainingSpots}}', remainingSpots)\r\n        )\r\n      noty text: lines.join('<br />'), layout: 'center', type: 'information', killer: true, timeout: 5000\r\n\r\n      # TODO: refresh existing student progress. student may have progress from outside current classroom, and the course may have been updated upon assignment\r\n      @calculateProgressAndLevels()\r\n      @classroom.fetch()\r\n\r\n    .catch (e) =>\r\n      # TODO: Use this handling for errors site-wide?\r\n      return if e.handled\r\n      throw e if e instanceof Error and not application.isProduction()\r\n      text = if e instanceof Error then 'Runtime error' else e.responseJSON?.message or e.message or $.i18n.t('loading_error.unknown')\r\n      noty { text, layout: 'center', type: 'error', killer: true, timeout: 5000 }\r\n\r\n  onClickSelectAll: (e) ->\r\n    e.preventDefault()\r\n    checkboxStates = _.clone @state.get('checkboxStates')\r\n    if _.all(checkboxStates)\r\n      for studentID of checkboxStates\r\n        checkboxStates[studentID] = false\r\n    else\r\n      for studentID of checkboxStates\r\n        checkboxStates[studentID] = true\r\n    @state.set { checkboxStates }\r\n\r\n  onClickStudentCheckbox: (e) ->\r\n    e.preventDefault()\r\n    checkbox = $(e.currentTarget).find('input')\r\n    studentID = checkbox.data('student-id')\r\n    checkboxStates = _.clone @state.get('checkboxStates')\r\n    checkboxStates[studentID] = not checkboxStates[studentID]\r\n    @state.set { checkboxStates }\r\n\r\n  calculateClassStats: ->\r\n    return {} unless @classroom.sessions?.loaded and @students.loaded\r\n    stats = {}\r\n\r\n    playtime = 0\r\n    total = 0\r\n    for session in @classroom.sessions.models\r\n      pt = session.get('playtime') or 0\r\n      playtime += pt\r\n      total += 1\r\n    stats.averagePlaytime = if playtime and total then moment.duration(playtime / total, \"seconds\").humanize() else 0\r\n    stats.totalPlaytime = if playtime then moment.duration(playtime, \"seconds\").humanize() else 0\r\n    # TODO: Humanize differently ('1 hour' instead of 'an hour')\r\n\r\n    levelIncludeMap = {}\r\n    language = @classroom.get('aceConfig')?.language\r\n    for level in @levels.models\r\n      levelIncludeMap[level.get('original')] = not level.get('practice') and (not language? or level.get('primerLanguage') isnt language)\r\n    completeSessions = @classroom.sessions.filter (s) -> s.get('state')?.complete and levelIncludeMap[s.get('level')?.original]\r\n    stats.averageLevelsComplete = if @students.size() then (_.size(completeSessions) / @students.size()).toFixed(1) else 'N/A'  # '\r\n    stats.totalLevelsComplete = _.size(completeSessions)\r\n\r\n    enrolledUsers = @students.filter (user) -> user.isEnrolled()\r\n    stats.enrolledUsers = _.size(enrolledUsers)\r\n\r\n    return stats\r\n\r\n  studentStatusString: (student) ->\r\n    status = student.prepaidStatus()\r\n    expires = student.get('coursePrepaid')?.endDate\r\n    string = switch status\r\n      when 'not-enrolled' then $.i18n.t('teacher.status_not_enrolled')\r\n      when 'enrolled' then (if expires then $.i18n.t('teacher.status_enrolled') else '-')\r\n      when 'expired' then $.i18n.t('teacher.status_expired')\r\n    return string.replace('{{date}}', moment(expires).utc().format('l'))\r\n"]}