{"version":3,"sources":["app/views/courses/CourseEnrollView.coffee"],"names":[],"mappings":"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","file":"public/javascripts/app/views/courses/CourseEnrollView.js","sourcesContent":["app = require 'core/application'\r\nCreateAccountModal = require 'views/core/CreateAccountModal'\r\nCocoCollection = require 'collections/CocoCollection'\r\nCourse = require 'models/Course'\r\nRootView = require 'views/core/RootView'\r\nstripeHandler = require 'core/services/stripe'\r\ntemplate = require 'templates/courses/course-enroll'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class CourseEnrollView extends RootView\r\n  id: 'course-enroll-view'\r\n  template: template\r\n\r\n  events:\r\n    'click .btn-buy': 'onClickBuy'\r\n    'change .class-name': 'onNameChange'\r\n    'change .course-select': 'onChangeCourse'\r\n    'change .input-seats': 'onSeatsChange'\r\n    'change #programming-language-select': 'onChangeProgrammingLanguageSelect'\r\n\r\n  subscriptions:\r\n    'stripe:received-token': 'onStripeReceivedToken'\r\n\r\n  constructor: (options, @courseID) ->\r\n    super options\r\n    @courseID ?= options.courseID\r\n    @seats = 20\r\n    @selectedLanguage = 'python'\r\n\r\n    @courses = new CocoCollection([], { url: \"/db/course\", model: Course})\r\n    @listenTo @courses, 'sync', @onCoursesLoaded\r\n    @supermodel.loadCollection(@courses, 'courses')\r\n\r\n  afterRender: ->\r\n    super()\r\n    if @selectedCourse\r\n      @$el.find('.course-select').val(@selectedCourse.id)\r\n    else\r\n      @$el.find('.course-select').val('All Courses')\r\n\r\n  onCoursesLoaded: ->\r\n    if @courseID\r\n      @selectedCourse = _.find @courses.models, (a) => a.id is @courseID\r\n    else if @courses.models.length > 0\r\n      @selectedCourse = @courses.models[0]\r\n    @renderNewPrice()\r\n\r\n  onClickBuy: (e) ->\r\n    return @openModalView new CreateAccountModal() if me.isAnonymous()\r\n\r\n    if @price is 0\r\n      @seats = 9999\r\n      @state = 'creating'\r\n      @createClass()\r\n      return\r\n\r\n    if @seats < 1 or not _.isFinite(@seats)\r\n      alert(\"Please enter the maximum number of students needed for your class.\")\r\n      return\r\n\r\n    @state = undefined\r\n    @stateMessage = undefined\r\n    @render()\r\n\r\n    # Show Stripe handler\r\n    courseTitle = @selectedCourse?.get('name') ? 'All Courses'\r\n    application.tracker?.trackEvent 'Started course purchase', {course: courseTitle, price: @price, seats: @seats}\r\n    stripeHandler.open\r\n      amount: @price\r\n      description: \"#{courseTitle} for #{@seats} students\"\r\n      bitcoin: true\r\n      alipay: if me.get('country') is 'china' or (me.get('preferredLanguage') or 'en-US')[...2] is 'zh' then true else 'auto'\r\n\r\n  onStripeReceivedToken: (e) ->\r\n    @state = 'purchasing'\r\n    @render?()\r\n    @createClass(e.token.id)\r\n\r\n  onChangeCourse: (e) ->\r\n    @selectedCourse = _.find @courses.models, (a) -> a.id is $(e.target).val()\r\n    @renderNewPrice()\r\n\r\n  onChangeProgrammingLanguageSelect: (e) ->\r\n    @selectedLanguage = @$('#programming-language-select').val()\r\n\r\n  onNameChange: (e) ->\r\n    @className = $('.class-name').val()\r\n\r\n  onSeatsChange: (e) ->\r\n    @seats = $(e.target).val()\r\n    @seats = 20 if @seats < 1 or not _.isFinite(@seats)\r\n    @renderNewPrice()\r\n\r\n  createClass: (token) ->\r\n    data =\r\n      name: @className\r\n      seats: @seats\r\n      stripe:\r\n        token: token\r\n        timestamp: new Date().getTime()\r\n      aceConfig: { language: @selectedLanguage }\r\n\r\n    data.courseID = @selectedCourse.id if @selectedCourse\r\n    jqxhr = $.post('/db/course_instance/-/create', data)\r\n    jqxhr.done (data, textStatus, jqXHR) =>\r\n      application.tracker?.trackEvent 'Finished course purchase', {course: @selectedCourse?.get('name') ? 'All Courses', price: @price, seats: @seats}\r\n      # TODO: handle fetch errors\r\n      me.fetch(cache: false).always =>\r\n        courseID = @selectedCourse?.id ? @courses.models[0]?.id\r\n        route = \"/students/#{courseID}\"\r\n        viewArgs = [{}, courseID]\r\n        if data?.length > 0\r\n          courseInstanceID = data[0]._id\r\n          route += \"/#{courseInstanceID}\"\r\n          viewArgs[0].courseInstanceID = courseInstanceID\r\n        Backbone.Mediator.publish 'router:navigate',\r\n          route: route\r\n          viewClass: 'views/courses/CourseDetailsView'\r\n          viewArgs: viewArgs\r\n    jqxhr.fail (xhr, textStatus, errorThrown) =>\r\n      console.error 'Got an error purchasing a course:', textStatus, errorThrown\r\n      application.tracker?.trackEvent 'Failed course purchase', status: textStatus\r\n      if xhr.status is 402\r\n        @state = 'declined'\r\n        @stateMessage = arguments[2]\r\n      else\r\n        @state = 'unknown_error'\r\n        @stateMessage = \"#{xhr.status}: #{xhr.responseText}\"\r\n      @render?()\r\n\r\n  renderNewPrice: ->\r\n    if @selectedCourse\r\n      coursePrices = [@selectedCourse.get('pricePerSeat')]\r\n    else\r\n      coursePrices = (c.get('pricePerSeat') for c in @courses.models)\r\n    @price = utils.getCourseBundlePrice(coursePrices, @seats)\r\n    @price = 0 if me.isAdmin()\r\n    @render?()\r\n"]}