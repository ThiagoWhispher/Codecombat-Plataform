{"version":3,"sources":["app/templates/courses/classroom-view.jade","app/views/courses/ClassroomView.coffee"],"names":[],"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","file":"public/javascripts/app/views/courses/ClassroomView.js","sourcesContent":["var __templateData = function anonymous(locals\n/**/) {\nvar buf = [];\nvar locals_ = (locals || {}),features = locals_.features,me = locals_.me,view = locals_.view,_ = locals_._,i18n = locals_.i18n,usesSocialMedia = locals_.usesSocialMedia,isIE = locals_.isIE,fbRef = locals_.fbRef;buf.push(\"<div id=\\\"site-nav\\\"><a href=\\\"/\\\"><img id=\\\"nav-logo\\\" src=\\\"/images/pages/base/logo.png\\\" title=\\\"CodeCombat - Learn how to code by playing a game\\\" alt=\\\"CodeCombat\\\"/></a><div id=\\\"site-nav-links\\\"><a href=\\\"/\\\"><img id=\\\"small-nav-logo\\\" src=\\\"/images/pages/base/logo.png\\\" title=\\\"CodeCombat - Learn how to code by playing a game\\\" alt=\\\"CodeCombat\\\"/></a><a href=\\\"/\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span></a>\");\nif ( !features.playViewsOnly)\n{\nbuf.push(\"<a href=\\\"/play\\\" data-i18n=\\\"common.play\\\"></a><a href=\\\"/play/ladder\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a>\");\nif ( me.isStudent())\n{\nbuf.push(\"<a href=\\\"/students\\\" data-i18n=\\\"nav.my_courses\\\"></a>\");\n}\nif ( me.isTeacher())\n{\nbuf.push(\"<a href=\\\"/teachers/classes\\\" data-i18n=\\\"nav.my_classrooms\\\"></a>\");\n}\nbuf.push(\"<a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a><a\" + (jade.attrs({ 'href':(view.forumLink()), 'data-i18n':(\"nav.forum\") }, {\"href\":true,\"data-i18n\":true})) + \"></a><a href=\\\"/community\\\" data-i18n=\\\"nav.community\\\"></a>\");\nif ( me.get('anonymous') === false)\n{\nbuf.push(\"<span class=\\\"dropdown\\\"><button href=\\\"#\\\" data-toggle=\\\"dropdown\\\" class=\\\"btn btn-sm header-font dropdown-toggle\\\">\");\nif ( me.get('photoURL'))\n{\nbuf.push(\"<img\" + (jade.attrs({ 'src':(me.getPhotoURL(18)), 'alt':(\"\"), \"class\": [('account-settings-image')] }, {\"src\":true,\"alt\":true})) + \"/>\");\n}\nelse\n{\nbuf.push(\"<i class=\\\"glyphicon glyphicon-user\\\"></i>\");\n}\nbuf.push(\"<span data-i18n=\\\"nav.account\\\" href=\\\"/account\\\" class=\\\"spl spr\\\"></span><span class=\\\"caret\\\"></span></button><ul role=\\\"menu\\\" class=\\\"dropdown-menu\\\"><li class=\\\"user-dropdown-header\\\"><span class=\\\"user-level\\\">\" + (jade.escape(null == (jade.interp = me.level()) ? \"\" : jade.interp)) + \"</span><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\") }, {\"href\":true})) + \"><div\" + (jade.attrs({ 'style':(\"background-image: url(\" + (me.getPhotoURL()) + \")\"), \"class\": [('img-circle')] }, {\"style\":true})) + \"></div></a><h3>\" + (jade.escape(null == (jade.interp = me.broadName()) ? \"\" : jade.interp)) + \"</h3></li><li><a\" + (jade.attrs({ 'href':(\"/user/\" + (me.getSlugOrID()) + \"\"), 'data-i18n':(\"nav.profile\") }, {\"href\":true,\"data-i18n\":true})) + \"></a></li><li><a href=\\\"/account/settings\\\" data-i18n=\\\"play.settings\\\"></a></li>\");\nif ( me.isAdmin() || !(me.isTeacher() || me.isStudent()))\n{\nbuf.push(\"<li><a href=\\\"/account/payments\\\" data-i18n=\\\"account.payments\\\"></a></li>\");\n}\nif ( me.isAdmin() || !(me.isTeacher() || me.isStudent()) || me.hasSubscription())\n{\nbuf.push(\"<li><a href=\\\"/account/subscription\\\" data-i18n=\\\"account.subscription\\\"></a></li>\");\n}\nif ( me.isAdmin() || !(me.isTeacher() || me.isStudent()))\n{\nbuf.push(\"<li><a href=\\\"/account/prepaid\\\" data-i18n=\\\"account.prepaid_codes\\\"></a></li>\");\n}\nbuf.push(\"<li><a id=\\\"logout-button\\\" data-i18n=\\\"login.log_out\\\"></a></li></ul></span>\");\n}\nelse\n{\nbuf.push(\"<button data-i18n=\\\"login.sign_up\\\" class=\\\"btn btn-sm btn-primary header-font signup-button\\\"></button><button data-i18n=\\\"login.log_in\\\" class=\\\"btn btn-sm btn-default header-font login-button\\\"></button>\");\n}\n}\nbuf.push(\"<select class=\\\"language-dropdown form-control\\\"></select></div></div><div id=\\\"site-content-area\\\">\");\nif ( !me.isAnonymous() && me.isTeacher())\n{\nbuf.push(\"<div class=\\\"alert alert-danger text-center\\\"><!-- DNT: Temporary--><h3>ATTENTION TEACHERS:</h3><p>We are transitioning to a new classroom management system; this page will soon be student-only.</p><a href=\\\"/teachers/classes\\\">Go to teachers area.</a></div>\");\n}\nvar isOwner = view.classroom ? view.classroom.get('ownerID') === me.id : false;\nif ( isOwner)\n{\nbuf.push(\"<a href=\\\"/teachers/classes\\\" data-i18n=\\\"courses.back_classrooms\\\"></a>\");\n}\nelse\n{\nbuf.push(\"<a href=\\\"/students\\\" data-i18n=\\\"courses.back_courses\\\"></a>\");\n}\nif ( !me.isAnonymous())\n{\nbuf.push(\"<h1><span class=\\\"spr\\\">\" + (jade.escape(null == (jade.interp = view.classroom.get('name')) ? \"\" : jade.interp)) + \"</span>\");\nif ( isOwner)\n{\nbuf.push(\"<a id=\\\"edit-class-details-link\\\"><small data-i18n=\\\"courses.edit_details\\\"></small></a>\");\n}\nbuf.push(\"</h1>\");\nif ( view.classroom.get('description'))\n{\nbuf.push(\"<p>\" + (jade.escape(null == (jade.interp = view.classroom.get('description')) ? \"\" : jade.interp)) + \"</p>\");\n}\nbuf.push(\"<h3 data-i18n=\\\"courses.stats\\\"></h3><table class=\\\"progress-stats-container\\\">\");\nvar stats = view.classStats()\nbuf.push(\"<tr><td data-i18n=\\\"courses.total_students\\\"></td><td><span class=\\\"spr\\\">\" + (jade.escape(null == (jade.interp = _.size(view.classroom.get('members'))) ? \"\" : jade.interp)) + \"</span></td></tr><tr><td data-i18n=\\\"courses.average_time\\\"></td><td>\" + (jade.escape(null == (jade.interp = stats.averagePlaytime) ? \"\" : jade.interp)) + \"</td></tr><tr><td data-i18n=\\\"courses.total_time\\\"></td><td>\" + (jade.escape(null == (jade.interp = stats.totalPlaytime) ? \"\" : jade.interp)) + \"</td></tr><tr><td data-i18n=\\\"courses.average_levels\\\"></td><td>\" + (jade.escape(null == (jade.interp = stats.averageLevelsComplete) ? \"\" : jade.interp)) + \"</td></tr><tr><td data-i18n=\\\"courses.total_levels\\\"></td><td>\" + (jade.escape(null == (jade.interp = stats.totalLevelsComplete) ? \"\" : jade.interp)) + \"</td></tr></table><h1><span data-i18n=\\\"courses.students\\\"></span>\");\nif ( view.teacherMode)\n{\nbuf.push(\"<div id=\\\"main-button-area\\\" class=\\\"pull-right\\\"><button id=\\\"add-students-btn\\\" data-i18n=\\\"courses.add_students\\\" class=\\\"btn btn-primary text-uppercase\\\"></button><button id=\\\"activate-licenses-btn\\\" data-i18n=\\\"courses.enroll_paid\\\" class=\\\"btn btn-info text-uppercase\\\"></button><a\" + (jade.attrs({ 'href':(\"/courses/purchase?from-classroom=\"+view.classroom.id), 'data-i18n':(\"courses.purchase_enrollments\"), \"class\": [('btn'),('btn-success'),('text-uppercase')] }, {\"href\":true,\"data-i18n\":true})) + \"></a></div>\");\n}\nbuf.push(\"</h1><hr/>\");\n// iterate view.users.models\n;(function(){\n  var $$obj = view.users.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var user = $$obj[$index];\n\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</div></div><div class=\\\"col-md-6\\\">\");\nif ( view.teacherMode)\n{\nbuf.push(\"<a\" + (jade.attrs({ 'data-user-id':(user.id), \"class\": [('remove-student-link'),('pull-right'),('text-uppercase')] }, {\"data-user-id\":true})) + \"><span class=\\\"glyphicon glyphicon-remove\\\"></span><span data-i18n=\\\"courses.remove_student\\\" class=\\\"spl\\\"></span></a>\");\n}\nbuf.push(\"</div></div>\");\nvar lastPlayedString = view.userLastPlayedString(user);\nvar playtime = view.userPlaytimeString(user);\nif ( lastPlayedString || playtime)\n{\nbuf.push(\"<div id=\\\"student-stats-row\\\" class=\\\"row\\\">\");\nif ( lastPlayedString)\n{\nbuf.push(\"<div class=\\\"col-sm-6\\\"><span data-i18n=\\\"user.last_played\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = lastPlayedString) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nif ( playtime)\n{\nbuf.push(\"<div class=\\\"col-sm-6\\\"><span data-i18n=\\\"clans.playtime\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = playtime) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nbuf.push(\"</div>\");\n}\nvar paidFor = user.isEnrolled();\n// iterate view.courseInstances.models\n;(function(){\n  var $$obj = view.courseInstances.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var courseInstance = $$obj[$index];\n\nvar inCourse = _.contains(courseInstance.get('members'), user.id);\nif ( !(inCourse || view.teacherMode))\n{\ncontinue;\n}\nvar course = view.courses.get(courseInstance.get('courseID'));\nvar sessions = courseInstance.sessionsByUser[user.id] || [];\nif ( !(course.get('free') || paidFor))\n{\ncontinue;\n}\nif ( inCourse)\n{\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-sm-3 text-right\\\">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-9\\\">\");\nif ( inCourse)\n{\nvar levels = view.classroom.getLevels({courseID: course.id});\nvar numLevels = levels.size();\nvar sessionMap = _.zipObject(_.map(sessions, function(s) { return s.get('level').original; }), sessions);\nvar levelCellWidth = 100.00;\nif ( numLevels > 0)\n{\nlevelCellWidth = 100.00 / numLevels;\n}\nvar css = \"width:\"+levelCellWidth+\"%;\"\nvar i = 0;\nbuf.push(\"<div class=\\\"progress\\\">\");\n// iterate levels.models\n;(function(){\n  var $$obj = levels.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div></div>\");\n}\nelse if ( paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><button\" + (jade.attrs({ 'data-user-id':(user.id), 'data-course-instance-cid':(courseInstance.cid), \"class\": [('enable-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true,\"data-course-instance-cid\":true})) + \"><span data-i18n=\\\"courses.assign\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</span></button></div>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var courseInstance = $$obj[$index];\n\nvar inCourse = _.contains(courseInstance.get('members'), user.id);\nif ( !(inCourse || view.teacherMode))\n{\ncontinue;\n}\nvar course = view.courses.get(courseInstance.get('courseID'));\nvar sessions = courseInstance.sessionsByUser[user.id] || [];\nif ( !(course.get('free') || paidFor))\n{\ncontinue;\n}\nif ( inCourse)\n{\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-sm-3 text-right\\\">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-9\\\">\");\nif ( inCourse)\n{\nvar levels = view.classroom.getLevels({courseID: course.id});\nvar numLevels = levels.size();\nvar sessionMap = _.zipObject(_.map(sessions, function(s) { return s.get('level').original; }), sessions);\nvar levelCellWidth = 100.00;\nif ( numLevels > 0)\n{\nlevelCellWidth = 100.00 / numLevels;\n}\nvar css = \"width:\"+levelCellWidth+\"%;\"\nvar i = 0;\nbuf.push(\"<div class=\\\"progress\\\">\");\n// iterate levels.models\n;(function(){\n  var $$obj = levels.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div></div>\");\n}\nelse if ( paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><button\" + (jade.attrs({ 'data-user-id':(user.id), 'data-course-instance-cid':(courseInstance.cid), \"class\": [('enable-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true,\"data-course-instance-cid\":true})) + \"><span data-i18n=\\\"courses.assign\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</span></button></div>\");\n}\n    }\n\n  }\n}).call(this);\n\nif ( view.teacherMode && !paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><p><em><span data-i18n=\\\"courses.enroll\\\" class=\\\"spr\\\"></span><strong>\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</strong><span data-i18n=\\\"courses.to_assign\\\" class=\\\"spl\\\"></span></em></p><p><button\" + (jade.attrs({ 'data-user-id':(user.id), \"class\": [('activate-single-license-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true})) + \"><span data-i18n=\\\"courses.enroll\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</span></button></p></div>\");\n}\nbuf.push(\"<hr/>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var user = $$obj[$index];\n\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><div class=\\\"student-name\\\">\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</div></div><div class=\\\"col-md-6\\\">\");\nif ( view.teacherMode)\n{\nbuf.push(\"<a\" + (jade.attrs({ 'data-user-id':(user.id), \"class\": [('remove-student-link'),('pull-right'),('text-uppercase')] }, {\"data-user-id\":true})) + \"><span class=\\\"glyphicon glyphicon-remove\\\"></span><span data-i18n=\\\"courses.remove_student\\\" class=\\\"spl\\\"></span></a>\");\n}\nbuf.push(\"</div></div>\");\nvar lastPlayedString = view.userLastPlayedString(user);\nvar playtime = view.userPlaytimeString(user);\nif ( lastPlayedString || playtime)\n{\nbuf.push(\"<div id=\\\"student-stats-row\\\" class=\\\"row\\\">\");\nif ( lastPlayedString)\n{\nbuf.push(\"<div class=\\\"col-sm-6\\\"><span data-i18n=\\\"user.last_played\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = lastPlayedString) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nif ( playtime)\n{\nbuf.push(\"<div class=\\\"col-sm-6\\\"><span data-i18n=\\\"clans.playtime\\\"></span><span class=\\\"spr\\\">:</span><span>\" + (jade.escape(null == (jade.interp = playtime) ? \"\" : jade.interp)) + \"</span></div>\");\n}\nbuf.push(\"</div>\");\n}\nvar paidFor = user.isEnrolled();\n// iterate view.courseInstances.models\n;(function(){\n  var $$obj = view.courseInstances.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var courseInstance = $$obj[$index];\n\nvar inCourse = _.contains(courseInstance.get('members'), user.id);\nif ( !(inCourse || view.teacherMode))\n{\ncontinue;\n}\nvar course = view.courses.get(courseInstance.get('courseID'));\nvar sessions = courseInstance.sessionsByUser[user.id] || [];\nif ( !(course.get('free') || paidFor))\n{\ncontinue;\n}\nif ( inCourse)\n{\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-sm-3 text-right\\\">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-9\\\">\");\nif ( inCourse)\n{\nvar levels = view.classroom.getLevels({courseID: course.id});\nvar numLevels = levels.size();\nvar sessionMap = _.zipObject(_.map(sessions, function(s) { return s.get('level').original; }), sessions);\nvar levelCellWidth = 100.00;\nif ( numLevels > 0)\n{\nlevelCellWidth = 100.00 / numLevels;\n}\nvar css = \"width:\"+levelCellWidth+\"%;\"\nvar i = 0;\nbuf.push(\"<div class=\\\"progress\\\">\");\n// iterate levels.models\n;(function(){\n  var $$obj = levels.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div></div>\");\n}\nelse if ( paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><button\" + (jade.attrs({ 'data-user-id':(user.id), 'data-course-instance-cid':(courseInstance.cid), \"class\": [('enable-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true,\"data-course-instance-cid\":true})) + \"><span data-i18n=\\\"courses.assign\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</span></button></div>\");\n}\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var courseInstance = $$obj[$index];\n\nvar inCourse = _.contains(courseInstance.get('members'), user.id);\nif ( !(inCourse || view.teacherMode))\n{\ncontinue;\n}\nvar course = view.courses.get(courseInstance.get('courseID'));\nvar sessions = courseInstance.sessionsByUser[user.id] || [];\nif ( !(course.get('free') || paidFor))\n{\ncontinue;\n}\nif ( inCourse)\n{\nbuf.push(\"<div class=\\\"row\\\"><div class=\\\"col-sm-3 text-right\\\">\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</div><div class=\\\"col-sm-9\\\">\");\nif ( inCourse)\n{\nvar levels = view.classroom.getLevels({courseID: course.id});\nvar numLevels = levels.size();\nvar sessionMap = _.zipObject(_.map(sessions, function(s) { return s.get('level').original; }), sessions);\nvar levelCellWidth = 100.00;\nif ( numLevels > 0)\n{\nlevelCellWidth = 100.00 / numLevels;\n}\nvar css = \"width:\"+levelCellWidth+\"%;\"\nvar i = 0;\nbuf.push(\"<div class=\\\"progress\\\">\");\n// iterate levels.models\n;(function(){\n  var $$obj = levels.models;\n  if ('number' == typeof $$obj.length) {\n\n    for (var $index = 0, $$l = $$obj.length; $index < $$l; $index++) {\n      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in $$obj) {\n      $$l++;      var trimModel = $$obj[$index];\n\nvar level = view.levels.get(trimModel.get('original')); // get the level loaded through the db\nvar levelNumber = view.classroom.getLevelNumber(level.get('original'), i + 1)\ni++\nvar session = sessionMap[level.get('original')];\nbuf.push(\"<a\" + (jade.attrs({ 'href':(view.getLevelURL(level, course, courseInstance, session)) }, {\"href\":true})) + \">\");\nvar content = view.levelPopoverContent(level, session, levelNumber);\nif ( session && session.get('state') && session.get('state').complete)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-complete')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse if ( session)\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-started')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nelse\n{\nbuf.push(\"<div\" + (jade.attrs({ 'style':(css), 'data-content':(content), 'data-toggle':('popover'), \"class\": [('progress-bar'),('progress-bar-default')] }, {\"style\":true,\"data-content\":true,\"data-toggle\":true})) + \">\" + (jade.escape(null == (jade.interp = levelNumber) ? \"\" : jade.interp)) + \"</div>\");\n}\nbuf.push(\"</a>\");\n    }\n\n  }\n}).call(this);\n\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div></div>\");\n}\nelse if ( paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><button\" + (jade.attrs({ 'data-user-id':(user.id), 'data-course-instance-cid':(courseInstance.cid), \"class\": [('enable-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true,\"data-course-instance-cid\":true})) + \"><span data-i18n=\\\"courses.assign\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = i18n(course.attributes, 'name')) ? \"\" : jade.interp)) + \"</span></button></div>\");\n}\n    }\n\n  }\n}).call(this);\n\nif ( view.teacherMode && !paidFor)\n{\nbuf.push(\"<div class=\\\"text-center\\\"><p><em><span data-i18n=\\\"courses.enroll\\\" class=\\\"spr\\\"></span><strong>\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</strong><span data-i18n=\\\"courses.to_assign\\\" class=\\\"spl\\\"></span></em></p><p><button\" + (jade.attrs({ 'data-user-id':(user.id), \"class\": [('activate-single-license-btn'),('btn'),('btn-info'),('btn-sm'),('text-uppercase')] }, {\"data-user-id\":true})) + \"><span data-i18n=\\\"courses.enroll\\\" class=\\\"spr\\\"></span><span>\" + (jade.escape(null == (jade.interp = user.broadName()) ? \"\" : jade.interp)) + \"</span></button></p></div>\");\n}\nbuf.push(\"<hr/>\");\n    }\n\n  }\n}).call(this);\n\n}\nbuf.push(\"</div><div class=\\\"achievement-corner\\\"></div><div id=\\\"site-footer\\\"><img id=\\\"footer-background\\\" src=\\\"/images/pages/base/nav_background.png\\\"/><div\" + (jade.attrs({ 'id':('footer-links'), \"class\": [(features.playViewsOnly ? 'hide' : '')] }, {\"class\":true})) + \"><a href=\\\"/about\\\" data-i18n=\\\"nav.about\\\"></a>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<a tabindex=\\\"-1\\\" data-i18n=\\\"nav.contact\\\" class=\\\"contact-modal\\\"></a>\");\n}\nbuf.push(\"<a href=\\\"http://blog.codecombat.com/\\\" data-i18n=\\\"nav.blog\\\"></a><a href=\\\"https://jobs.lever.co/codecombat\\\" tabindex=\\\"-1\\\" data-i18n=\\\"nav.careers\\\"></a><a href=\\\"/legal\\\" tabindex=\\\"-1\\\" data-i18n=\\\"nav.legal\\\"></a><a href=\\\"/privacy\\\" tabindex=\\\"-1\\\" data-i18n=\\\"legal.privacy_title\\\"></a><a href=\\\"/contribute\\\" tabindex=\\\"-1\\\" data-i18n=\\\"nav.contribute\\\"></a>\");\nif ( !me.isStudent())\n{\nbuf.push(\"<a href=\\\"/play/ladder\\\" tabindex=\\\"-1\\\" data-i18n=\\\"game_menu.multiplayer_tab\\\"></a>\");\n}\nif ( me.isAdmin())\n{\nbuf.push(\"<a href=\\\"/admin\\\">Admin</a>\");\n}\nif ( usesSocialMedia)\n{\nbuf.push(\"<div class=\\\"share-buttons\\\">\");\nif ( !isIE)\n{\nbuf.push(\"<div data-href=\\\"http://codecombat.com\\\" data-size=\\\"medium\\\" class=\\\"g-plusone\\\"></div>\");\n}\nbuf.push(\"<div\" + (jade.attrs({ 'data-href':(\"https://www.facebook.com/codecombat\"), 'data-send':(\"false\"), 'data-layout':(\"button_count\"), 'data-width':(\"350\"), 'data-show-faces':(\"true\"), 'data-ref':(\"coco_footer_\" + (fbRef) + \"\"), \"class\": [('fb-like')] }, {\"data-href\":true,\"data-send\":true,\"data-layout\":true,\"data-width\":true,\"data-show-faces\":true,\"data-ref\":true})) + \"></div>\");\nif ( !isIE)\n{\nbuf.push(\"<a href=\\\"https://twitter.com/CodeCombat\\\" data-show-count=\\\"true\\\" data-show-screen-name=\\\"false\\\" data-dnt=\\\"true\\\" data-align=\\\"right\\\" data-i18n=\\\"nav.twitter_follow\\\" class=\\\"twitter-follow-button\\\"></a><iframe src=\\\"https://ghbtns.com/github-btn.html?user=codecombat&amp;repo=codecombat&amp;type=watch&amp;count=true\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"110\\\" height=\\\"20\\\" class=\\\"github-star-button\\\"></iframe>\");\n}\nbuf.push(\"</div>\");\n}\nbuf.push(\"</div><div id=\\\"footer-credits\\\"><span><span>© All Rights Reserved</span><br/><span>CodeCombat 2015</span></span><img id=\\\"footer-logo\\\" src=\\\"/images/pages/base/logo.png\\\" alt=\\\"CodeCombat\\\"/><span><span>Site Design by</span><br/><a href=\\\"http://www.fullyillustrated.com/\\\">Fully Illustrated</a></span><!--a.firebase-bade(href=\\\"https://www.firebase.com/\\\")  // Not using right now--><!--  img(src=\\\"/images/pages/base/firebase.png\\\", alt=\\\"Powered by Firebase\\\")--></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","Campaign = require 'models/Campaign'\r\nCocoCollection = require 'collections/CocoCollection'\r\nCourse = require 'models/Course'\r\nCourseInstance = require 'models/CourseInstance'\r\nClassroom = require 'models/Classroom'\r\nClassrooms = require 'collections/Classrooms'\r\nLevelSession = require 'models/LevelSession'\r\nPrepaids = require 'collections/Prepaids'\r\nLevels = require 'collections/Levels'\r\nRootView = require 'views/core/RootView'\r\ntemplate = require 'templates/courses/classroom-view'\r\nUser = require 'models/User'\r\nutils = require 'core/utils'\r\nPrepaid = require 'models/Prepaid'\r\nClassroomSettingsModal = require 'views/courses/ClassroomSettingsModal'\r\nActivateLicensesModal = require 'views/courses/ActivateLicensesModal'\r\nInviteToClassroomModal = require 'views/courses/InviteToClassroomModal'\r\nRemoveStudentModal = require 'views/courses/RemoveStudentModal'\r\npopoverTemplate = require 'templates/courses/classroom-level-popover'\r\n\r\nmodule.exports = class ClassroomView extends RootView\r\n  id: 'classroom-view'\r\n  template: template\r\n  teacherMode: false\r\n\r\n  events:\r\n    'click #edit-class-details-link': 'onClickEditClassDetailsLink'\r\n    'click #activate-licenses-btn': 'onClickActivateLicensesButton'\r\n    'click .activate-single-license-btn': 'onClickActivateSingleLicenseButton'\r\n    'click #add-students-btn': 'onClickAddStudentsButton'\r\n    'click .enable-btn': 'onClickEnableButton'\r\n    'click .remove-student-link': 'onClickRemoveStudentLink'\r\n\r\n  initialize: (options, classroomID) ->\r\n    return if me.isAnonymous()\r\n    @classroom = new Classroom({_id: classroomID})\r\n    @supermodel.loadModel @classroom\r\n    @courses = new CocoCollection([], { url: \"/db/course\", model: Course})\r\n    @courses.comparator = '_id'\r\n    @supermodel.loadCollection(@courses)\r\n    @courses.comparator = '_id'\r\n    @courseInstances = new CocoCollection([], { url: \"/db/course_instance\", model: CourseInstance})\r\n    @courseInstances.comparator = 'courseID'\r\n    @supermodel.loadCollection(@courseInstances, { data: { classroomID: classroomID } })\r\n    @prepaids = new Prepaids()\r\n    @prepaids.comparator = '_id'\r\n    @prepaids.fetchByCreator(me.id)\r\n    @supermodel.loadCollection(@prepaids)\r\n    @users = new CocoCollection([], { url: \"/db/classroom/#{classroomID}/members?memberLimit=100\", model: User })\r\n    @users.comparator = (user) => user.broadName().toLowerCase()\r\n    @supermodel.loadCollection(@users)\r\n    @listenToOnce @courseInstances, 'sync', @onCourseInstancesSync\r\n    @sessions = new CocoCollection([], { model: LevelSession })\r\n    @ownedClassrooms = new Classrooms()\r\n    @ownedClassrooms.fetchMine({data: {project: '_id'}})\r\n    @supermodel.trackCollection(@ownedClassrooms)\r\n    @levels = new Levels()\r\n    @levels.fetchForClassroom(classroomID, {data: {project: 'name,original,practice,slug'}})\r\n    @levels.on 'add', (model) -> @_byId[model.get('original')] = model # so you can 'get' them\r\n    @supermodel.trackCollection(@levels)\r\n    window.tracker?.trackEvent 'Students Class Loaded', category: 'Students', classroomID: classroomID, ['Mixpanel']\r\n\r\n  onCourseInstancesSync: ->\r\n    @sessions = new CocoCollection([], { model: LevelSession })\r\n    for courseInstance in @courseInstances.models\r\n      sessions = new CocoCollection([], { url: \"/db/course_instance/#{courseInstance.id}/level_sessions\", model: LevelSession })\r\n      @supermodel.loadCollection(sessions, { data: { project: ['level', 'playtime', 'creator', 'changed', 'state.complete'].join(' ') } })\r\n      courseInstance.sessions = sessions\r\n      sessions.courseInstance = courseInstance\r\n      courseInstance.sessionsByUser = {}\r\n      @listenToOnce sessions, 'sync', (sessions) ->\r\n        @sessions.add(sessions.slice())\r\n        for courseInstance in @courseInstances.models\r\n          courseInstance.sessionsByUser = courseInstance.sessions.groupBy('creator')\r\n\r\n    # Generate course instance JIT, in the meantime have models w/out equivalents in the db\r\n    for course in @courses.models\r\n      query = {courseID: course.id, classroomID: @classroom.id}\r\n      courseInstance = @courseInstances.findWhere(query)\r\n      if not courseInstance\r\n        courseInstance = new CourseInstance(query)\r\n        @courseInstances.add(courseInstance)\r\n        courseInstance.sessions = new CocoCollection([], {model: LevelSession})\r\n        sessions.courseInstance = courseInstance\r\n        courseInstance.sessionsByUser = {}\r\n\r\n  onLoaded: ->\r\n    @teacherMode = me.isAdmin() or @classroom.get('ownerID') is me.id\r\n    userSessions = @sessions.groupBy('creator')\r\n    for user in @users.models\r\n      user.sessions = new CocoCollection(userSessions[user.id], { model: LevelSession })\r\n      user.sessions.comparator = 'changed'\r\n      user.sessions.sort()\r\n    for courseInstance in @courseInstances.models\r\n      courseID = courseInstance.get('courseID')\r\n      course = @courses.get(courseID)\r\n      courseInstance.sessions.course = course\r\n    super()\r\n\r\n  afterRender: ->\r\n    @$('[data-toggle=\"popover\"]').popover({\r\n      html: true\r\n      trigger: 'hover'\r\n      placement: 'top'\r\n    })\r\n    super()\r\n\r\n  onClickActivateLicensesButton: ->\r\n    modal = new ActivateLicensesModal({\r\n      classroom: @classroom\r\n      users: @users\r\n    })\r\n    @openModalView(modal)\r\n    modal.once 'redeem-users', -> document.location.reload()\r\n    application.tracker?.trackEvent 'Classroom started enroll students', category: 'Courses'\r\n\r\n  onClickActivateSingleLicenseButton: (e) ->\r\n    userID = $(e.target).closest('.btn').data('user-id')\r\n    if @prepaids.totalMaxRedeemers() - @prepaids.totalRedeemers() > 0\r\n      # Have an unused enrollment, enroll student immediately instead of opening the enroll modal\r\n      prepaid = @prepaids.find((prepaid) -> prepaid.status() is 'available')\r\n      $.ajax({\r\n        method: 'POST'\r\n        url: _.result(prepaid, 'url') + '/redeemers'\r\n        data: { userID: userID }\r\n        success: =>\r\n          application.tracker?.trackEvent 'Classroom finished enroll student', category: 'Courses', userID: userID\r\n          # TODO: do a lighter refresh here. @render() did not work out.\r\n          document.location.reload()\r\n        error: (jqxhr, textStatus, errorThrown) ->\r\n          if jqxhr.status is 402\r\n            message = arguments[2]\r\n          else\r\n            message = \"#{jqxhr.status}: #{jqxhr.responseText}\"\r\n          console.err message\r\n      })\r\n    else\r\n      user = @users.get(userID)\r\n      modal = new ActivateLicensesModal({\r\n        classroom: @classroom\r\n        users: @users\r\n        user: user\r\n      })\r\n      @openModalView(modal)\r\n      modal.once 'redeem-users', -> document.location.reload()\r\n      application.tracker?.trackEvent 'Classroom started enroll student', category: 'Courses', userID: userID\r\n\r\n  onClickEditClassDetailsLink: ->\r\n    modal = new ClassroomSettingsModal({classroom: @classroom})\r\n    @openModalView(modal)\r\n    @listenToOnce modal, 'hidden', @render\r\n\r\n  userLastPlayedString: (user) ->\r\n    return '' unless user.sessions?\r\n    session = user.sessions.last()\r\n    return '' unless session\r\n    course = session.collection.course\r\n    levelOriginal = session.get('level').original\r\n    level = @levels.findWhere({original: levelOriginal})\r\n    lastPlayed = \"\"\r\n    lastPlayed += course.get('name') if course\r\n    lastPlayed += \", #{level.get('name')}\" if level\r\n    lastPlayed\r\n\r\n  userPlaytimeString: (user) ->\r\n    return '' unless user.sessions?\r\n    playtime = _.reduce user.sessions.pluck('playtime'), (s1, s2) -> (s1 or 0) + (s2 or 0)\r\n    return '' unless playtime\r\n    return moment.duration(playtime, 'seconds').humanize()\r\n\r\n  classStats: ->\r\n    stats = {}\r\n\r\n    playtime = 0\r\n    total = 0\r\n    for session in @sessions.models\r\n      pt = session.get('playtime') or 0\r\n      playtime += pt\r\n      total += 1\r\n    stats.averagePlaytime = if playtime and total then moment.duration(playtime / total, \"seconds\").humanize() else 0\r\n    stats.totalPlaytime = if playtime then moment.duration(playtime, \"seconds\").humanize() else 0\r\n\r\n    levelPracticeMap = {}\r\n    levelPracticeMap[level.id] = level.get('practice') ? false for level in @levels.models\r\n    completeSessions = @sessions.filter (s) -> s.get('state')?.complete and not levelPracticeMap[s.get('levelID')]\r\n    stats.averageLevelsComplete = if @users.size() then (_.size(completeSessions) / @users.size()).toFixed(1) else 'N/A'  # '\r\n    stats.totalLevelsComplete = _.size(completeSessions)\r\n\r\n    enrolledUsers = @users.filter (user) -> user.isEnrolled()\r\n    stats.enrolledUsers = _.size(enrolledUsers)\r\n    return stats\r\n\r\n  onClickAddStudentsButton: (e) ->\r\n    modal = new InviteToClassroomModal({classroom: @classroom})\r\n    @openModalView(modal)\r\n    application.tracker?.trackEvent 'Classroom started add students', category: 'Courses', classroomID: @classroom.id\r\n\r\n  onClickEnableButton: (e) ->\r\n    $button = $(e.target).closest('.btn')\r\n    courseInstance = @courseInstances.get($button.data('course-instance-cid'))\r\n    console.log 'looking for course instance', courseInstance, 'for', $button.data('course-instance-cid'), 'out of', @courseInstances\r\n    userID = $button.data('user-id')\r\n    $button.attr('disabled', true)\r\n    application.tracker?.trackEvent 'Course assign student', category: 'Courses', courseInstanceID: courseInstance.id, userID: userID\r\n\r\n    onCourseInstanceCreated = =>\r\n      courseInstance.addMember(userID)\r\n      @listenToOnce courseInstance, 'sync', @render\r\n\r\n    if courseInstance.isNew()\r\n      # adding the first student to this course, so generate the course instance for it\r\n      if not courseInstance.saving\r\n        courseInstance.save(null, {validate: false})\r\n        courseInstance.saving = true\r\n      courseInstance.once 'sync', onCourseInstanceCreated\r\n    else\r\n      onCourseInstanceCreated()\r\n\r\n    # TODO: update newly visible level progress bar (currently all white)\r\n\r\n  onClickRemoveStudentLink: (e) ->\r\n    user = @users.get($(e.target).closest('a').data('user-id'))\r\n    modal = new RemoveStudentModal({\r\n      classroom: @classroom\r\n      user: user\r\n      courseInstances: @courseInstances\r\n    })\r\n    @openModalView(modal)\r\n    modal.once 'remove-student', @onStudentRemoved, @\r\n\r\n  onStudentRemoved: (e) ->\r\n    @users.remove(e.user)\r\n    @render()\r\n    application.tracker?.trackEvent 'Classroom removed student', category: 'Courses', classroomID: @classroom.id, userID: e.user.id\r\n\r\n  levelPopoverContent: (level, session, i) ->\r\n    return null unless level\r\n    context = {\r\n      moment: moment\r\n      level: level\r\n      session: session\r\n      i: i\r\n      canViewSolution: @teacherMode\r\n    }\r\n    return popoverTemplate(context)\r\n\r\n  getLevelURL: (level, course, courseInstance, session) ->\r\n    return null unless @teacherMode and _.all(arguments)\r\n    \"/play/level/#{level.get('slug')}?course=#{course.id}&course-instance=#{courseInstance.id}&session=#{session.id}&observing=true\"\r\n"]}