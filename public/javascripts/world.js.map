{"version":3,"sources":["app/lib/world/GoalManager.coffee","app/lib/world/Grid.coffee","app/lib/world/box2d.coffee","app/lib/world/component.coffee","app/lib/world/ellipse.coffee","app/lib/world/errors.coffee","app/lib/world/line_segment.coffee","app/lib/world/names.coffee","app/lib/world/rand.coffee","app/lib/world/rectangle.coffee","app/lib/world/script_event_prereqs.coffee","app/lib/world/system.coffee","app/lib/world/systems/action.coffee","app/lib/world/systems/collision.coffee","app/lib/world/systems/movement.coffee","app/lib/world/thang.coffee","app/lib/world/thang_state.coffee","app/lib/world/vector.coffee","app/lib/world/world.coffee","app/lib/world/world_frame.coffee","app/lib/world/world_script_note.coffee","app/lib/world/world_utils.coffee","app/core/CocoClass.coffee","app/core/utils.coffee","vendor/scripts/Box2dWeb-2.1.a.3.js","vendor/scripts/string_score.js","bower_components/underscore.string/lib/underscore.string.js","vendor/scripts/coffeescript.js"],"names":[],"mappings":"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","file":"public/javascripts/world.js","sourcesContent":["CocoClass = require 'core/CocoClass'\r\nutils = require 'core/utils'\r\n\r\nmodule.exports = class GoalManager extends CocoClass\r\n  # The Goal Manager is created both on the main thread and\r\n  # each time the world is generated. The one in world generation\r\n  # records which code and world related goals\r\n  # are completed or failed, and then the results are sent back\r\n  # and saved to the main thread instance.\r\n  # The main instance handles goals based on UI notifications,\r\n  # and keeps track of what the goals are at any given point.\r\n\r\n  # Goals can only have only one goal property. Otherwise who knows what will happen.\r\n  # If you want weird goals or hybrid goals, make a custom goal.\r\n\r\n  nextGoalID: 0\r\n  nicks: ['GoalManager']\r\n\r\n  constructor: (@world, @initialGoals, @team, options) ->\r\n    super()\r\n    @options = options or {}\r\n    @init()\r\n\r\n  init: ->\r\n    @goals = []\r\n    @goalStates = {} # goalID -> object (complete, frameCompleted)\r\n    @userCodeMap = {} # @userCodeMap.thangID.methodName.aether.raw = codeString\r\n    @thangTeams = {}\r\n    @initThangTeams()\r\n    @addGoal goal for goal in @initialGoals if @initialGoals\r\n\r\n  initThangTeams: ->\r\n    return unless @world\r\n    for thang in @world.thangs when thang.team and thang.isAttackable\r\n      continue unless thang.team\r\n      @thangTeams[thang.team] = [] unless @thangTeams[thang.team]\r\n      @thangTeams[thang.team].push(thang.id)\r\n\r\n  subscriptions:\r\n    'god:new-world-created': 'onNewWorldCreated'\r\n    'god:new-html-goal-states': 'onNewHTMLGoalStates'\r\n    'level:restarted': 'onLevelRestarted'\r\n\r\n  backgroundSubscriptions:\r\n    'world:thang-died': 'onThangDied'\r\n    'world:thang-touched-goal': 'onThangTouchedGoal'\r\n    'world:thang-left-map': 'onThangLeftMap'\r\n    'world:thang-collected-item': 'onThangCollectedItem'\r\n    'world:user-code-problem': 'onUserCodeProblem'\r\n    'world:lines-of-code-counted': 'onLinesOfCodeCounted'\r\n\r\n  onLevelRestarted: ->\r\n    @goals = []\r\n    @goalStates = {}\r\n    @userCodeMap = {}\r\n    @notifyGoalChanges()\r\n    @addGoal goal for goal in @initialGoals if @initialGoals\r\n\r\n  # INTERFACE AND LIFETIME OVERVIEW\r\n\r\n  # world generator gets current goals from the main instance\r\n  getGoals: -> @goals\r\n\r\n  # background instance created by world generator,\r\n  # gets these goals and code, and is told to be all ears during world gen\r\n  setGoals: (@goals) ->\r\n  setCode: (@userCodeMap) -> @updateCodeGoalStates()\r\n  worldGenerationWillBegin: ->\r\n    @initGoalStates()\r\n    @checkForInitialUserCodeProblems()\r\n\r\n  # World generator feeds world events to the goal manager to keep track\r\n  submitWorldGenerationEvent: (channel, event, frameNumber) ->\r\n    func = @backgroundSubscriptions[channel]\r\n    func = utils.normalizeFunc(func, @)\r\n    return unless func\r\n    func.call(@, event, frameNumber)\r\n\r\n  # after world generation, generated goal states\r\n  # are grabbed to send back to main instance\r\n  worldGenerationEnded: (finalFrame) -> @wrapUpGoalStates(finalFrame)\r\n  getGoalStates: -> @goalStates\r\n\r\n  # main instance gets them and updates their existing goal states,\r\n  # passes the word along\r\n  onNewWorldCreated: (e) ->\r\n    @world = e.world\r\n    @updateGoalStates(e.goalStates) if e.goalStates?\r\n\r\n  onNewHTMLGoalStates: (e) ->\r\n    @updateGoalStates(e.goalStates) if e.goalStates?\r\n\r\n  updateGoalStates: (newGoalStates) ->\r\n    for goalID, goalState of newGoalStates\r\n      continue unless @goalStates[goalID]?\r\n      @goalStates[goalID] = goalState\r\n    @notifyGoalChanges()\r\n\r\n  # IMPLEMENTATION DETAILS\r\n\r\n  addGoal: (goal) ->\r\n    goal = $.extend(true, {}, goal)\r\n    goal.id = @nextGoalID++ if not goal.id\r\n    return if @goalStates[goal.id]?\r\n    @goals.push(goal)\r\n    goal.isPositive = @goalIsPositive goal.id\r\n    @goalStates[goal.id] = {status: 'incomplete', keyFrame: 0, team: goal.team}\r\n    @notifyGoalChanges()\r\n    return unless goal.notificationGoal\r\n    f = (channel) => (event) => @onNote(channel, event)\r\n    channel = goal.notificationGoal.channel\r\n    @addNewSubscription(channel, f(channel))\r\n\r\n  notifyGoalChanges: ->\r\n    return if @options.headless\r\n    overallStatus = @checkOverallStatus()\r\n    event =\r\n      goalStates: @goalStates\r\n      goals: @goals\r\n      overallStatus: overallStatus\r\n      timedOut: @world? and (@world.totalFrames is @world.maxTotalFrames and overallStatus not in ['success', 'failure'])\r\n    Backbone.Mediator.publish('goal-manager:new-goal-states', event)\r\n\r\n  checkOverallStatus: (ignoreIncomplete=false) ->\r\n    overallStatus = null\r\n    goals = if @goalStates then _.values @goalStates else []\r\n    goals = (g for g in goals when not g.optional)\r\n    goals = (g for g in goals when g.team in [undefined, @team]) if @team\r\n    statuses = (goal.status for goal in goals)\r\n    overallStatus = 'success' if statuses.length > 0 and _.every(statuses, (s) -> s is 'success' or (ignoreIncomplete and s is null))\r\n    overallStatus = 'failure' if statuses.length > 0 and 'failure' in statuses\r\n    #console.log 'got overallStatus', overallStatus, 'from goals', goals, 'goalStates', @goalStates, 'statuses', statuses\r\n    overallStatus\r\n\r\n  # WORLD GOAL TRACKING\r\n\r\n  initGoalStates: ->\r\n    @goalStates = {}\r\n    return unless @goals\r\n    for goal in @goals\r\n      state = {\r\n        status: null # should eventually be either 'success', 'failure', or 'incomplete'\r\n        keyFrame: 0 # when it became a 'success' or 'failure'\r\n        team: goal.team\r\n        optional: goal.optional\r\n      }\r\n      @initGoalState(state, [goal.killThangs, goal.saveThangs], 'killed')\r\n      for getTo in goal.getAllToLocations ? []\r\n        @initGoalState(state, [getTo.getToLocation?.who, []], 'arrived')\r\n      for keepFrom in goal.keepAllFromLocations ? []\r\n        @initGoalState(state, [[], keepFrom.keepFromLocation?.who], 'arrived')\r\n      @initGoalState(state, [goal.getToLocations?.who, goal.keepFromLocations?.who], 'arrived')\r\n      @initGoalState(state, [goal.leaveOffSides?.who, goal.keepFromLeavingOffSides?.who], 'left')\r\n      @initGoalState(state, [goal.collectThangs?.targets, goal.keepFromCollectingThangs?.targets], 'collected')\r\n      @initGoalState(state, [goal.codeProblems], 'problems')\r\n      @initGoalState(state, [_.keys(goal.linesOfCode ? {})], 'lines')\r\n      @goalStates[goal.id] = state\r\n\r\n  checkForInitialUserCodeProblems: ->\r\n    # There might have been some user code problems reported before the goal manager started listening.\r\n    return unless @world\r\n    for thang in @world.thangs when thang.isProgrammable\r\n      for message, problem of thang.publishedUserCodeProblems\r\n        @onUserCodeProblem {thang: thang, problem: problem}, 0\r\n\r\n  onThangDied: (e, frameNumber) ->\r\n    for goal in @goals ? []\r\n      @checkKillThangs(goal.id, goal.killThangs, e.thang, frameNumber) if goal.killThangs?\r\n      @checkKillThangs(goal.id, goal.saveThangs, e.thang, frameNumber) if goal.saveThangs?\r\n\r\n  checkKillThangs: (goalID, targets, thang, frameNumber) ->\r\n    return unless thang.id in targets or thang.team in targets\r\n    @updateGoalState(goalID, thang.id, 'killed', frameNumber)\r\n\r\n  onThangTouchedGoal: (e, frameNumber) ->\r\n    for goal in @goals ? []\r\n      @checkArrived(goal.id, goal.getToLocations.who, goal.getToLocations.targets, e.actor, e.touched.id, frameNumber) if goal.getToLocations?\r\n      if goal.getAllToLocations?\r\n        for getTo in goal.getAllToLocations\r\n          @checkArrived(goal.id, getTo.getToLocation.who, getTo.getToLocation.targets, e.actor, e.touched.id, frameNumber)\r\n      @checkArrived(goal.id, goal.keepFromLocations.who, goal.keepFromLocations.targets, e.actor, e.touched.id, frameNumber) if goal.keepFromLocations?\r\n      if goal.keepAllFromLocations?\r\n        for keepFrom in goal.keepAllFromLocations\r\n          @checkArrived(goal.id, keepFrom.keepFromLocation.who , keepFrom.keepFromLocation.targets, e.actor, e.touched.id, frameNumber )\r\n\r\n  checkArrived: (goalID, who, targets, thang, touchedID, frameNumber) ->\r\n    return unless touchedID in targets\r\n    return unless thang.id in who or thang.team in who\r\n    @updateGoalState(goalID, thang.id, 'arrived', frameNumber)\r\n\r\n  onThangLeftMap: (e, frameNumber) ->\r\n    for goal in @goals ? []\r\n      @checkLeft(goal.id, goal.leaveOffSides.who, goal.leaveOffSides.sides, e.thang, e.side, frameNumber) if goal.leaveOffSides?\r\n      @checkLeft(goal.id, goal.keepFromLeavingOffSides.who, goal.keepFromLeavingOffSides.sides, e.thang, e.side, frameNumber) if goal.keepFromLeavingOffSides?\r\n\r\n  checkLeft: (goalID, who, sides, thang, side, frameNumber) ->\r\n    return if sides and side and not (side in sides)\r\n    return unless thang.id in who or thang.team in who\r\n    @updateGoalState(goalID, thang.id, 'left', frameNumber)\r\n\r\n  onThangCollectedItem: (e, frameNumber) ->\r\n    for goal in @goals ? []\r\n      @checkCollected(goal.id, goal.collectThangs.who, goal.collectThangs.targets, e.actor, e.item.id, frameNumber) if goal.collectThangs?\r\n      @checkCollected(goal.id, goal.keepFromCollectingThangs.who, goal.keepFromCollectingThangs.targets, e.actor, e.item.id, frameNumber) if goal.keepFromCollectingThangs?\r\n\r\n  checkCollected: (goalID, who, targets, thang, itemID, frameNumber) ->\r\n    return unless itemID in targets\r\n    return unless thang.id in who or thang.team in who\r\n    @updateGoalState(goalID, itemID, 'collected', frameNumber)\r\n\r\n  onUserCodeProblem: (e, frameNumber) ->\r\n    for goal in @goals ? [] when goal.codeProblems\r\n      @checkCodeProblem goal.id, goal.codeProblems, e.thang, frameNumber\r\n\r\n  checkCodeProblem: (goalID, who, thang, frameNumber) ->\r\n    return unless thang.id in who or thang.team in who\r\n    @updateGoalState goalID, thang.id, 'problems', frameNumber\r\n\r\n  onLinesOfCodeCounted: (e, frameNumber) ->\r\n    for goal in @goals ? [] when goal.linesOfCode\r\n      @checkLinesOfCode goal.id, goal.linesOfCode, e.thang, e.linesUsed, frameNumber\r\n\r\n  checkLinesOfCode: (goalID, who, thang, linesUsed, frameNumber) ->\r\n    return unless linesAllowed = who[thang.id] ? who[thang.team]\r\n    @updateGoalState goalID, thang.id, 'lines', frameNumber if linesUsed > linesAllowed\r\n\r\n  wrapUpGoalStates: (finalFrame) ->\r\n    for goalID, state of @goalStates\r\n      if state.status is null\r\n        if @goalIsPositive(goalID)\r\n          state.status = 'incomplete'\r\n        else\r\n          state.status = 'success'\r\n          state.keyFrame = 'end' # special case for objective UI to handle\r\n\r\n  # UI EVENT GOAL TRACKING\r\n\r\n  onNote: (channel, e) ->\r\n    # TODO for UI event related goals\r\n\r\n  # HELPER FUNCTIONS\r\n\r\n  # It's a pretty similar pattern for each of the above goals.\r\n  # Once you determine a thang has done the thing, you mark it done in the progress object.\r\n  initGoalState: (state, whos, progressObjectName) ->\r\n    # 'whos' is an array of goal 'who' values.\r\n    # This inits the progress object for the goal tracking.\r\n\r\n    arrays = (prop for prop in whos when prop?.length)\r\n    return unless arrays.length\r\n    state[progressObjectName] ?= {}\r\n    for array in arrays\r\n      for thang in array\r\n        if @thangTeams[thang]?\r\n          for t in @thangTeams[thang]\r\n            state[progressObjectName][t] = false\r\n        else\r\n          state[progressObjectName][thang] = false\r\n\r\n  getGoalState: (goalID) ->\r\n    @goalStates[goalID].status\r\n\r\n  setGoalState: (goalID, status) ->\r\n    state = @goalStates[goalID]\r\n    state.status = status\r\n    if overallStatus = @checkOverallStatus true\r\n      matchedGoals = (_.find(@goals, {id: goalID}) for goalID, goalState of @goalStates when goalState.status is overallStatus)\r\n      mostEagerGoal = _.min matchedGoals, 'worldEndsAfter'\r\n      victory = overallStatus is 'success'\r\n      tentative = overallStatus is 'success'\r\n      @world?.endWorld victory, mostEagerGoal.worldEndsAfter, tentative if mostEagerGoal isnt Infinity\r\n\r\n  updateGoalState: (goalID, thangID, progressObjectName, frameNumber) ->\r\n    # A thang has done something related to the goal!\r\n    # Mark it down and update the goal state.\r\n    goal = _.find @goals, {id: goalID}\r\n    state = @goalStates[goalID]\r\n    stateThangs = state[progressObjectName]\r\n    stateThangs[thangID] = true\r\n    success = @goalIsPositive goalID\r\n    if success\r\n      numNeeded = goal.howMany ? Math.max(1, _.size stateThangs)\r\n    else\r\n      # saveThangs: by default we would want to save all the Thangs, which means that we would want none of them to be 'done'\r\n      numNeeded = _.size(stateThangs) - Math.max((goal.howMany ? 1), _.size stateThangs) + 1\r\n    numDone = _.filter(stateThangs).length\r\n    #console.log 'needed', numNeeded, 'done', numDone, 'of total', _.size(stateThangs), 'with how many', goal.howMany, 'and stateThangs', stateThangs, 'for', goalID, thangID, 'on frame', frameNumber, 'all Thangs', _.keys(stateThangs), _.values(stateThangs)\r\n    return unless numDone >= numNeeded\r\n    return if state.status and not success  # already failed it; don't wipe keyframe\r\n    state.status = if success then 'success' else 'failure'\r\n    state.keyFrame = frameNumber\r\n    #console.log goalID, 'became', success, 'on frame', frameNumber, 'with overallStatus', @checkOverallStatus true\r\n    if overallStatus = @checkOverallStatus true\r\n      matchedGoals = (_.find(@goals, {id: goalID}) for goalID, goalState of @goalStates when goalState.status is overallStatus)\r\n      mostEagerGoal = _.min matchedGoals, 'worldEndsAfter'\r\n      victory = overallStatus is 'success'\r\n      tentative = overallStatus is 'success'\r\n      @world?.endWorld victory, mostEagerGoal.worldEndsAfter, tentative if mostEagerGoal isnt Infinity\r\n\r\n  goalIsPositive: (goalID) ->\r\n    # Positive goals are completed when all conditions are true (kill all these thangs)\r\n    # Negative goals fail when any are true (keep all these thangs from being killed)\r\n    goal = _.find(@goals, {id: goalID}) ? {}\r\n    return false for prop of goal when @positiveGoalMap[prop] is 0\r\n    true\r\n\r\n  positiveGoalMap:\r\n    killThangs: 1\r\n    saveThangs: 0\r\n    getToLocations: 1\r\n    getAllToLocations: 1\r\n    keepFromLocations: 0\r\n    keepAllFromLocations: 0\r\n    leaveOffSides: 1\r\n    keepFromLeavingOffSides: 0\r\n    collectThangs: 1\r\n    keepFromCollectingThangs: 0\r\n    linesOfCode: 0\r\n    codeProblems: 0\r\n\r\n  updateCodeGoalStates: ->\r\n    # TODO\r\n\r\n  # teardown\r\n\r\n  destroy: ->\r\n    super()\r\n","# TODO: this thing needs a bit of thinking/testing for grid square alignments, exclusive vs. inclusive mins/maxes, etc.\r\n\r\nmodule.exports = class Grid\r\n  constructor: (thangs, @width, @height, @padding=0, @left=0, @bottom=0, @rogue=false) ->\r\n    @width = Math.ceil @width\r\n    @height = Math.ceil @height\r\n    @left = Math.floor @left\r\n    @bottom = Math.floor @bottom\r\n    @update thangs\r\n\r\n  update: (thangs) ->\r\n    @grid = []\r\n    for y in [0 .. @height]\r\n      @grid.push []\r\n      for x in [0 .. @width]\r\n        @grid[y].push []\r\n    if @rogue\r\n      thangs = (t for t in thangs when t.collides or t.spriteName is 'Gem' and not t.dead)\r\n    else\r\n      thangs = (t for t in thangs when t.collides)\r\n    for thang in thangs\r\n      rect = thang.rectangle()\r\n      [minX, maxX, minY, maxY] = [9001, -9001, 9001, -9001]\r\n      for v in rect.vertices()\r\n        minX = Math.min(minX, v.x - @padding)\r\n        minY = Math.min(minY, v.y - @padding)\r\n        maxX = Math.max(maxX, v.x + @padding)\r\n        maxY = Math.max(maxY, v.y + @padding)\r\n      for y in @columns minY, maxY\r\n        for x in @rows minX, maxX\r\n          @grid[y][x].push thang\r\n\r\n  contents: (gx, gy, width=1, height=1) ->\r\n    thangs = []\r\n    for y in @columns gy - height / 2, gy + height / 2\r\n      for x in @rows gx - width / 2, gx + width / 2\r\n        for thang in @grid[y][x]\r\n          thangs.push thang if thang.collides and not (thang in thangs) and thang.id isnt 'Add Thang Phantom'\r\n    thangs\r\n\r\n  clampColumn: (y) ->\r\n    y = Math.max 0, Math.floor(y) - @bottom\r\n    Math.min @grid.length, Math.ceil(y) - @bottom\r\n\r\n  clampRow: (x) ->\r\n    x = Math.max 0, Math.floor(x) - @left\r\n    Math.min @grid[0]?.length or 0, Math.ceil(x) - @left\r\n\r\n  columns: (minY, maxY) ->\r\n    [@clampColumn(minY) ... @clampColumn(maxY)]\r\n\r\n  rows: (minX, maxX) ->\r\n    [@clampRow(minX) ... @clampRow(maxX)]\r\n\r\n  toString: (rogue=false) ->\r\n    upsideDown = _.clone @grid\r\n    upsideDown.reverse()\r\n    ((@charForThangs thangs, rogue for thangs in row).join(' ') for row in upsideDown).join(\"\\n\")\r\n\r\n  charForThangs: (thangs, rogue) ->\r\n    return thangs.length or ' ' unless rogue\r\n    return '.' unless thangs.length\r\n    return '@' if _.find thangs, (t) -> /Hero Placeholder/.test t.id\r\n    return '>' if _.find thangs, spriteName: 'Spike Walls'\r\n    return 'F' if _.find thangs, spriteName: 'Fence Wall'\r\n    return 'T' if _.find thangs, spriteName: 'Fire Trap'\r\n    return ' ' if _.find thangs, spriteName: 'Dungeon Wall'\r\n    return 'G' if _.find thangs, spriteName: 'Gem'\r\n    return 'C' if _.find thangs, spriteName: 'Treasure Chest'\r\n    return '*' if _.find thangs, spriteName: 'Spear'\r\n    return 'o' if _.find thangs, type: 'munchkin'\r\n    return 'O' if _.find thangs, (t) -> t.team is 'ogres'\r\n    return 'H' if _.find thangs, (t) -> t.team is 'humans'\r\n    return 'N' if _.find thangs, (t) -> t.team is 'neutral'\r\n    return '?'\r\n","# Box2D is defined in global namespace\r\n\r\n# Used to have Box2DJS, but got rid of it.\r\nif Box2D?  # box2dweb, compiled from Flash port: https://code.google.com/p/box2dweb/\r\n  module.exports = box2d =\r\n    b2Vec2: Box2D.Common.Math.b2Vec2\r\n    b2BodyDef: Box2D.Dynamics.b2BodyDef\r\n    b2Body: Box2D.Dynamics.b2Body\r\n    b2FixtureDef: Box2D.Dynamics.b2FixtureDef\r\n    b2Fixture: Box2D.Dynamics.b2Fixture\r\n    b2FilterData: Box2D.Dynamics.b2FilterData\r\n    b2World: Box2D.Dynamics.b2World\r\n    b2ContactListener: Box2D.Dynamics.b2ContactListener\r\n    b2MassData: Box2D.Collision.Shapes.b2MassData\r\n    b2PolygonShape: Box2D.Collision.Shapes.b2PolygonShape\r\n    b2CircleShape: Box2D.Collision.Shapes.b2CircleShape\r\n  window.BOX2D_ENABLED = true\r\nelse  # no Box2D\r\n  module.exports = null\r\n","componentKeywords = ['attach', 'constructor', 'validateArguments', 'toString', 'isComponent']  # Array is faster than object\r\n\r\nmodule.exports = class Component\r\n  @className: 'Component'\r\n  isComponent: true\r\n  constructor: (config) ->\r\n    for key, value of config\r\n      @[key] = value  # Hmm, might want to _.cloneDeep here? What if the config has nested object values and the Thang modifies them, then we re-use the config for, say, missile spawning? Well, for now we'll clone in the missile.\r\n\r\n  attach: (thang) ->\r\n    # Optimize; this is much of the World constructor time\r\n    for key, value of @ when key not in componentKeywords and key[0] isnt '_'\r\n      oldValue = thang[key]\r\n      if typeof oldValue is 'function'\r\n        thang.appendMethod key, value\r\n      else\r\n        thang[key] = value\r\n\r\n  validateArguments:\r\n    additionalProperties: false\r\n\r\n  toString: ->\r\n    \"<Component: #{@constructor.className}\"\r\n","Vector = require './vector'\r\nLineSegment = require './line_segment'\r\nRectangle = require './rectangle'\r\n\r\nclass Ellipse\r\n  @className: \"Ellipse\"\r\n\r\n  # TODO: add class methods for add, multiply, subtract, divide, rotate\r\n\r\n  isEllipse: true\r\n  apiProperties: ['x', 'y', 'width', 'height', 'rotation', 'distanceToPoint', 'distanceSquaredToPoint', 'distanceToRectangle', 'distanceSquaredToRectangle', 'distanceToEllipse', 'distanceSquaredToEllipse', 'distanceToShape', 'distanceSquaredToShape', 'containsPoint', 'intersectsLineSegment', 'intersectsRectangle', 'intersectsEllipse', 'getPos', 'containsPoint', 'copy']\r\n\r\n  constructor: (@x=0, @y=0, @width=0, @height=0, @rotation=0) ->\r\n\r\n  copy: ->\r\n    new Ellipse(@x, @y, @width, @height, @rotation)\r\n\r\n  getPos: ->\r\n    new Vector(@x, @y)\r\n\r\n  rectangle: ->\r\n    new Rectangle(@x, @y, @width, @height, @rotation)\r\n\r\n  axisAlignedBoundingBox: (rounded=true) ->\r\n    @rectangle().axisAlignedBoundingBox()\r\n\r\n  distanceToPoint: (p) ->\r\n    @rectangle().distanceToPoint p  # TODO: actually implement ellipse ellipse-point distance\r\n\r\n  distanceSquaredToPoint: (p) ->\r\n    # Doesn't handle rotation; just supposed to be faster than distanceToPoint.\r\n    @rectangle().distanceSquaredToPoint p  # TODO: actually implement ellipse-point distance\r\n\r\n  distanceToRectangle: (other) ->\r\n    Math.sqrt @distanceSquaredToRectangle other\r\n\r\n  distanceSquaredToRectangle: (other) ->\r\n    @rectangle().distanceSquaredToRectangle other  # TODO: actually implement ellipse-rectangle distance\r\n\r\n  distanceToEllipse: (ellipse) ->\r\n    Math.sqrt @distanceSquaredToEllipse ellipse\r\n\r\n  distanceSquaredToEllipse: (ellipse) ->\r\n    @rectangle().distanceSquaredToEllipse ellipse  # TODO: actually implement ellipse-ellipse distance\r\n\r\n  distanceToShape: (shape) ->\r\n    Math.sqrt @distanceSquaredToShape shape\r\n\r\n  distanceSquaredToShape: (shape) ->\r\n    if shape.isEllipse then @distanceSquaredToEllipse shape else @distanceSquaredToRectangle shape\r\n\r\n  containsPoint: (p, withRotation=true) ->\r\n    # \"ellipse space\" is the cartesian space\r\n    # where the ellipse becomes the unit\r\n    # circle centered at (0, 0)\r\n    [x, y] = [p.x - @x, p.y - @y] # translate point into ellipse space\r\n    if withRotation and @rotation # optionally rotate point into ellipse space\r\n      c = Math.cos(@rotation)\r\n      s = Math.sin(@rotation)\r\n      [x, y] = [x*c + y*s, y*c - x*s]\r\n    x = x / @width * 2 # scale point into ellipse space\r\n    y = y / @height * 2\r\n    x*x + y*y <= 1 #if the resulting point falls on/in the unit circle at 0, 0\r\n\r\n\r\n  intersectsLineSegment: (p1, p2) ->\r\n    [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\r\n    m = (py1 - py2) / (px1 - px2)\r\n    m2 = Math.pow(m, 2)\r\n    c = py1 - (m * px1)\r\n    c2 = Math.pow(c, 2)\r\n    [a, b] = [@width / 2, @height / 2]\r\n    [h, k] = [@x, @y]\r\n    a2 = Math.pow(a, 2)\r\n    a4 = Math.pow(a, 2)\r\n    b2 = Math.pow(b, 2)\r\n    b4 = Math.pow(b, 4)\r\n    h2 = Math.pow(h, 2)\r\n    k2 = Math.pow(k, 2)\r\n    sint = Math.sin(@rotation)\r\n    sin2t = Math.sin(2 * @rotation)\r\n    cost = Math.cos(@rotation)\r\n    cos2t = Math.cos(2 * @rotation)\r\n    if (not isNaN m) and m != Infinity and m != -Infinity\r\n      numeratorLeft = (-a2 * c * m * cos2t) - (a2 * c * m) + (a2 * c * sin2t) - (a2 * h * m * sin2t) - (a2 * h * cos2t) + (a2 * h) + (a2 * k * m * cos2t) + (a2 * k * m) - (a2 * k * sin2t)\r\n      numeratorMiddle = Math.SQRT2 * Math.sqrt((a4 * b2 * m2 * cos2t) + (a4 * b2 * m2) - (2 * a4 * b2 * m * sin2t) - (a4 * b2 * cos2t) + (a4 * b2) - (a2 * b4 * m2 * cos2t) + (a2 * b4 * m2) + (2 * a2 * b4 * m * sin2t) + (a2 * b4 * cos2t) + (a2 * b4) - (2 * a2 * b2 * c2) - (4 * a2 * b2 * c * h * m) + (4 * a2 * b2 * c * k) - (2 * a2 * b2 * h2 * m2) + (4 * a2 * b2 * h * k * m) - (2 * a2 * b2 * k2))\r\n      numeratorRight = (b2 * c * m * cos2t) - (b2 * c * m) - (b2 * c * sin2t) + (b2 * h * m * sin2t) + (b2 * h * cos2t) + (b2 * h) - (b2 * k * m * cos2t) + (b2 * k * m) + (b2 * k * sin2t)\r\n      denominator = (a2 * m2 * cos2t) + (a2 * m2) - (2 * a2 * m * sin2t) - (a2 * cos2t) + a2 - (b2 * m2 * cos2t) + (b2 * m2) + (2 * b2 * m * sin2t) + (b2 * cos2t) + b2\r\n      solution1 = (-numeratorLeft - numeratorMiddle + numeratorRight) / denominator\r\n      solution2 = (-numeratorLeft + numeratorMiddle + numeratorRight) / denominator\r\n      if (not isNaN solution1) and (not isNaN solution2)\r\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\r\n        if (littleX <= solution1 and bigX >= solution1) or (littleX <= solution2 and bigX >= solution2)\r\n          return true\r\n      if (not isNaN solution1) or (not isNaN solution2)\r\n        solution = if not isNaN solution1 then solution1 else solution2\r\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\r\n        if littleX <= solution and bigX >= solution\r\n          return true\r\n      else\r\n        return false\r\n    else\r\n      x = px1\r\n      x2 = Math.pow(x, 2)\r\n      numeratorLeft = (-a2 * h * sin2t) + (a2 * k * cos2t) + (a2 * k) + (a2 * x * sin2t)\r\n      numeratorMiddle = Math.SQRT2 * Math.sqrt((a4 * b2 * cos2t) + (a4 * b2) - (a2 * b4 * cos2t) + (a2 * b4) - (2 * a2 * b2 * h2) + (4 * a2 * b2 * h * x) - (2 * a2 * b2 * x2))\r\n      numeratorRight = (b2 * h * sin2t) - (b2 * k * cos2t) + (b2 * k) - (b2 * x * sin2t)\r\n      denominator = (a2 * cos2t) + a2 - (b2 * cos2t) + b2\r\n      solution1 = (numeratorLeft - numeratorMiddle + numeratorRight) / denominator\r\n      solution2 = (numeratorLeft + numeratorMiddle + numeratorRight) / denominator\r\n      if (not isNaN solution1) or (not isNaN solution2)\r\n        solution = if not isNaN solution1 then solution1 else solution2\r\n        [littleY, bigY] = if py1 < py2 then [py1, py2] else [py2, py1]\r\n        if littleY <= solution and bigY >= solution\r\n          return true\r\n      else\r\n        return false\r\n    false\r\n\r\n  intersectsRectangle: (rectangle) ->\r\n    rectangle.intersectsEllipse @\r\n\r\n  intersectsEllipse: (ellipse) ->\r\n    @rectangle().intersectsEllipse ellipse  # TODO: actually implement ellipse-ellipse intersection\r\n    #return true if @containsPoint ellipse.getPos()\r\n\r\n  intersectsShape: (shape) ->\r\n    if shape.isEllipse then @intersectsEllipse shape else @intersectsRectangle shape\r\n\r\n  toString: ->\r\n    return \"{x: #{@x.toFixed(0)}, y: #{@y.toFixed(0)}, w: #{@width.toFixed(0)}, h: #{@height.toFixed(0)}, rot: #{@rotation.toFixed(3)}}\"\r\n\r\n  serialize: ->\r\n    {CN: @constructor.className, x: @x, y: @y, w: @width, h: @height, r: @rotation}\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    new Ellipse o.x, o.y, o.w, o.h, o.r\r\n\r\n  serializeForAether: -> @serialize()\r\n  @deserializeFromAether: (o) -> @deserialize o\r\n\r\nmodule.exports = Ellipse\r\n","Vector = require './vector'\r\n\r\nmodule.exports.ArgumentError = class ArgumentError extends Error\r\n  @className: 'ArgumentError'\r\n  constructor: (@message, @functionName, @argumentName, @intendedType, @actualValue, @numArguments, @hint) ->\r\n    super @message\r\n    @name = 'ArgumentError'\r\n    if Error.captureStackTrace?\r\n      Error.captureStackTrace @, @constructor\r\n\r\n  toString: ->\r\n    s = \"`#{@functionName}`\"\r\n    if @argumentName is 'return'\r\n      s += \"'s return value\"\r\n    else if @argumentName is '_excess'\r\n      s += \" takes only #{@numArguments} argument#{if @numArguments > 1 then 's' else ''}.\"\r\n    else if @argumentName\r\n      s += \"'s argument `#{@argumentName}`\"\r\n    else\r\n      s += ' takes no arguments.'\r\n\r\n    actualType = typeof @actualValue\r\n    if not @actualValue?\r\n      actualType = 'null'\r\n    else if _.isArray @actualValue\r\n      actualType = 'array'\r\n    typeMismatch = @intendedType and not @intendedType.match actualType\r\n    if typeMismatch\r\n      v = ''\r\n      if actualType is 'string'\r\n        v = \"\\\"#{@actualValue}\\\"\"\r\n      else if actualType is 'number'\r\n        if Math.round(@actualValue) is @actualValue then @actualValue else @actualValue.toFixed(2)\r\n      else if actualType is 'boolean'\r\n        v = \"#{@actualValue}\"\r\n      else if (@actualValue? and @actualValue.id and @actualValue.trackedPropertiesKeys)\r\n        # (Don't import Thang, but determine whether it is Thang.)\r\n        v = @actualValue.toString()\r\n      else if @actualValue instanceof Vector\r\n        v = @actualValue.toString()\r\n      showValue = showValue or @actualValue instanceof Vector\r\n      s += \" should have type `#{@intendedType}`, but got `#{actualType}`#{if v then \": `#{v}`\" else ''}.\"\r\n    else if @argumentName and @argumentName isnt '_excess'\r\n      s += ' has a problem.'\r\n    s += '\\n' + @message if @message\r\n    s\r\n","class LineSegment\r\n  @className: \"LineSegment\"\r\n\r\n  constructor: (@a, @b) ->\r\n    @slope = (@a.y - @b.y) / (@a.x - @b.x)\r\n    @y0 = @a.y - (@slope * @a.x)\r\n    @left = if @a.x < @b.x then @a else @b\r\n    @right = if @a.x > @b.x then @a else @b\r\n    @bottom = if @a.y < @b.y then @a else @b\r\n    @top = if @a.y > @b.y then @a else @b\r\n\r\n  y: (x) ->\r\n    (@slope * x) + @y0\r\n\r\n  x: (y) ->\r\n    (y - @y0) / @slope\r\n\r\n  intersectsLineSegment: (lineSegment) ->\r\n    if lineSegment.slope is @slope\r\n      if lineSegment.y0 is @y0\r\n        if lineSegment.left.x is @left.x or lineSegment.left.x is @right.x or lineSegment.right.x is @right.x or lineSegment.right.x is @left.x\r\n          # segments are of the same line with shared start and/or end points\r\n          return true\r\n        else\r\n          [left, right] = if lineSegment.left.x < @left.x then [lineSegment, @] else [@, lineSegment]\r\n          if left.right.x > right.left.x\r\n            # segments are of the same line and one is contained within the other\r\n            return true\r\n    else if Math.abs(@slope) isnt Infinity and Math.abs(lineSegment.slope) isnt Infinity\r\n      x = (lineSegment.y0 - @y0) / (@slope - lineSegment.slope)\r\n      if x >= @left.x and x <= @right.x and x >= lineSegment.left.x and x <= lineSegment.right.x\r\n        return true\r\n    else if Math.abs(@slope) isnt Infinity or Math.abs(lineSegment.slope) isnt Infinity\r\n      [vertical, nonvertical] = if Math.abs(@slope) isnt Infinity then [lineSegment, @] else [@, lineSegment]\r\n      x = vertical.a.x\r\n      bottom = vertical.bottom.y\r\n      top = vertical.top.y\r\n      y = nonvertical.y(x)\r\n      left = nonvertical.left.x\r\n      right = nonvertical.right.x\r\n      if y >= bottom and y <= top and x >= left and x <= right\r\n        return true\r\n    false\r\n\r\n  pointOnLine: (point, segment=true) ->\r\n    if point.y is @y(point.x)\r\n      if segment\r\n        [littleY, bigY] = if @a.y < @b.y then [@a.y, @b.y] else [@b.y, @a.y]\r\n        if littleY <= point.y and bigY >= point.y\r\n          return true\r\n      else\r\n        return true\r\n    false\r\n\r\n  distanceSquaredToPoint: (point) ->\r\n    # http://stackoverflow.com/a/1501725/540620\r\n    return @a.distanceSquared point if @a.equals @b\r\n    res = Math.min point.distanceSquared(@a), point.distanceSquared(@b)\r\n    lineMagnitudeSquared = @a.distanceSquared @b\r\n    t = ((point.x - @a.x) * (@b.x - @a.x) + (point.y - @a.y) * (@b.y - @a.y)) / lineMagnitudeSquared\r\n    return @a.distanceSquared point if t < 0\r\n    return @b.distanceSquared point if t > 1\r\n    point.distanceSquared x: @a.x + t * (@b.x - @a.x), y: @a.y + t * (@b.y - @a.y)\r\n\r\n  distanceToPoint: (point) ->\r\n    Math.sqrt @distanceSquaredToPoint point\r\n\r\n  toString: ->\r\n    \"lineSegment(a=#{@a}, b=#{@b}, slope=#{@slope}, y0=#{@y0}, left=#{@left}, right=#{@right}, bottom=#{@bottom}, top=#{@top})\"\r\n\r\n  serialize: ->\r\n    {CN: @constructor.className, a: @a, b: @b}\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    new LineSegment o.a, o.b\r\n\r\n  serializeForAether: -> @serialize()\r\n  @deserializeFromAether: (o) -> @deserialize o\r\n\r\nmodule.exports = LineSegment\r\n","module.exports.thangNames = thangNames =\r\n  'Ogre Munchkin F': [\r\n    # Female\r\n    'Alali'\r\n    'Anabel'\r\n    'Delma'\r\n    'Dosha'\r\n    'Gurzunn'\r\n    'Hoot'\r\n    'Inski'\r\n    'Iyert'\r\n    'Lacos'\r\n    'Merna'\r\n    'Palt'\r\n    'Paulark'\r\n    'Pripp'\r\n    'Shmeal'\r\n    'Upfish'\r\n    'Yugark'\r\n    'Shema'\r\n  ]\r\n  'Ogre Munchkin M': [\r\n    # Male\r\n    'Blob'\r\n    'Brack'\r\n    'Cragg'\r\n    'Dobo'\r\n    'Draff'\r\n    'Eugen'\r\n    'Gert'\r\n    'Godel'\r\n    'Goreball'\r\n    'Gordok'\r\n    'Gorylo'\r\n    'Gort'\r\n    'Kog'\r\n    'Kogpole'\r\n    'Kratt'\r\n    'Leerer'\r\n    'Nerph'\r\n    'Oogre'\r\n    'Raack'\r\n    'Ragtime'\r\n    'Raort'\r\n    'Rexxar'\r\n    'Skoggen'\r\n    'Smerk'\r\n    'Snortt'\r\n    'Thabt'\r\n    'Toremon'\r\n    'Treg'\r\n    'Ursa'\r\n    'Vorobun'\r\n    'Weeb'\r\n    'Yart'\r\n    'Zozo'\r\n    'Zock'\r\n  ]\r\n  'Ogre Thrower': [\r\n    # Female\r\n    'Beebatha'\r\n    'Dross'\r\n    'Drumbaa'\r\n    'Durnath'\r\n    'Esha'\r\n    'Gragthar'\r\n    'Grel'\r\n    'Hamedi'\r\n    'Jinjin'\r\n    'Kraggan'\r\n    'Kyrgg'\r\n    'Makas'\r\n    'Moza'\r\n    'Pinakin'\r\n    'Rakash'\r\n    'Rasha'\r\n    'Savatha'\r\n    'Vujii'\r\n    'Wuda'\r\n    'Yetu'\r\n    'Zara'\r\n  ]\r\n  'Griffin Rider': [\r\n    # Female\r\n    'Aeoldan'\r\n    'Bestarius'\r\n    'Cristofide'\r\n    'Denestorath'\r\n    'Letholdus'\r\n    'Loretha'\r\n  ]\r\n  'Paladin': [\r\n    # Female\r\n    'Illumina'\r\n    'Celadia'\r\n    'Taric'\r\n    'Vaelia'\r\n    'Antary'\r\n    'Femae'\r\n  ]\r\n  'Ogre Witch': [\r\n    # Female\r\n    'Vyrryx'\r\n    'Yzzrith'\r\n    'Xith'\r\n  ]\r\n  'Ogre Chieftain': [\r\n    # Female\r\n    'Zagra Ux'\r\n    'Oniko'\r\n  ]\r\n  'Ogre Warlock': [\r\n    # Male\r\n    'Gronak'\r\n    'Sorgoth'\r\n    'Vax'\r\n    'Vyrryx'\r\n    'Vyjj'\r\n  ]\r\n  'Ogre Scout M': [\r\n    # Male\r\n    'Frandar'\r\n    'Karnaugh'\r\n    'Lanthon'\r\n    'Tarjan'\r\n    'Yorgalfen'\r\n  ]\r\n  'Ogre Scout F': [\r\n    # Female\r\n    'Freesa'\r\n    'Ganju'\r\n    'Hopper'\r\n    'Ralthora'\r\n    'Yugorota'\r\n  ]\r\n  'Burl': [\r\n    # Animal\r\n    'Borlit'\r\n    'Burlosh'\r\n    'Dorf'\r\n    'Teemer'\r\n  ]\r\n  'Sand Yak': [\r\n    # Animal\r\n    'Arngotho'\r\n    'Falthror'\r\n    'Girvan'\r\n    'Langthok'\r\n    'Ofgar'\r\n    'Randall'\r\n  ]\r\n  # Pets only have one name\r\n  'Raven Pet': ['Nevermore']\r\n  'Cougar Pet': ['Kitty']\r\n  'Frog Pet': ['Hypnotoad']\r\n  'Griffin Pet': ['']\r\n  'Pugicorn Pet': ['']\r\n  'Polar Bear Pet': ['Klondike']\r\n  'Wolf Pet': ['']\r\n  'Horse': [\r\n    # Animal\r\n    'Abby'\r\n    'Beauty'\r\n    'Cinnamon'\r\n    'Codasus'\r\n    'Ed'\r\n    'Fleetfire'\r\n    'Hurricane'\r\n    'Lovelace'\r\n    'Miracle'\r\n    'Mirial'\r\n    'Powder'\r\n    'Silver'\r\n    'Wildsilver'\r\n  ]\r\n  'Ogre M': [\r\n    # Male\r\n    'Axe Ox'\r\n    'Belch'\r\n    'Booz'\r\n    'Brusentsov'\r\n    'Demonik'\r\n    'Dronck'\r\n    'Gorlog'\r\n    'Grumus'\r\n    'Gug'\r\n    'Gurulax'\r\n    'Krogg'\r\n    'Kulgor'\r\n    'Mak Fod'\r\n    'Mokrul'\r\n    'Muthyala'\r\n    'Oni'\r\n    'Polifemo'\r\n    'Saltporker'\r\n    'Skrungt'\r\n    'Steve'\r\n    'Stinker'\r\n    'Tarlok'\r\n    'Trogdor'\r\n    'Trung'\r\n    'Vargutt'\r\n    'Vyle'\r\n  ]\r\n  'Ogre F': [\r\n    # Female\r\n    'Alkaz'\r\n    'Gar\\'ah'\r\n    'Glonc'\r\n    'Holkam'\r\n    'Kriskull'\r\n    'Mak\\'rah'\r\n    'Marghurk'\r\n    'Marnag'\r\n    'Martha'\r\n    'Morthrug'\r\n    'Nareng'\r\n    'Maleda'\r\n  ]\r\n  'Ogre Brawler': [\r\n    # Male\r\n    'Arelt'\r\n    'Borgag'\r\n    'Boz'\r\n    'Burobb'\r\n    'Dijkstro'\r\n    'Grognar'\r\n    'Grul\\'thock'\r\n    'Grumoll'\r\n    'Haggar'\r\n    'Heizenburg'\r\n    'Ironjaw'\r\n    'Mokuhr'\r\n    'Muul'\r\n    'Ork\\'han'\r\n    'Roast Beefy'\r\n    'Toharg'\r\n    'Trod'\r\n    'Tuguro'\r\n    'Turrok'\r\n    'York'\r\n    'Zabarek'\r\n    'Zagurk'\r\n    'Zeredd'\r\n  ]\r\n  'Ogre Fangrider': [\r\n    # Female\r\n    'Arizard'\r\n    'Bortrok'\r\n    'Boruvka'\r\n    'Doralt'\r\n    'Dreek'\r\n    'Flarsho'\r\n    'Geggret'\r\n    'Gurzthrot'\r\n    'Mizzy'\r\n    'Morzgret'\r\n    'Murgark'\r\n    'Muttin'\r\n    'Secka'\r\n  ]\r\n  'Ogre Shaman': [\r\n    # Female\r\n    'Ahst\\'durante'\r\n    'Aolian\\'Tak'\r\n    'Drun'\r\n    'Ghuk'\r\n    'Gogg'\r\n    'Gom'\r\n    'Grek'\r\n    'Gror'\r\n    'Grue'\r\n    'Il\\'Du\\'duka'\r\n    'Makas'\r\n    'Mogadishu'\r\n    'Nazgareth'\r\n    'Poult'\r\n    'Sham\\'uk'\r\n    'Torluk'\r\n    'Turann'\r\n    'Tuzang'\r\n    'Tuzell'\r\n    'Ugoki'\r\n    'Uld\\'Mak'\r\n    'Varreth'\r\n    'Yamizeb'\r\n    'Yerong'\r\n    'Yugargen'\r\n    'Zo\\'Goroth'\r\n    'Zulabar'\r\n  ]\r\n  'Skeleton': [\r\n    # Both\r\n    'Bloody Johnny'\r\n    'Bone Daddy'\r\n    'Bonejangles'\r\n    'Bonesworth'\r\n    'Bonette'\r\n    'Boneus'\r\n    'Doornail'\r\n    'Drybones'\r\n    'Grim'\r\n    'Haskell'\r\n    'Indiana Bones'\r\n    'James Bone'\r\n    'Kate'\r\n    'Palatine'\r\n    'Ribster'\r\n    'Rusty'\r\n    'Sacra'\r\n    'Scraps'\r\n    'Shelly'\r\n    'Shishka-Bob'\r\n    'Shishka-Joe'\r\n    'Shishka-Larry'\r\n    'Skeletor'\r\n    'Skellington'\r\n    'Skulldugger'\r\n    'Skully'\r\n    'Smitty'\r\n    'Sphenoid'\r\n    'Sternum'\r\n    'Talus'\r\n    'Tatava'\r\n    'Ulna'\r\n    'Yorick'\r\n  ]\r\n  'Ogre Headhunter': [\r\n    # Male\r\n    'Bob'\r\n    'Deadtooth'\r\n    'Ez the Cruel'\r\n    'Grroq'\r\n    'Mog'\r\n    'Mogvar'\r\n    'Ral\\'thuk'\r\n    'Soth'\r\n    'Ulxx'\r\n    'Ur'\r\n    'Veznyr'\r\n    'Warlegs'\r\n    'Xul Gor'\r\n  ]\r\n  'Trapper': [\r\n    # Male\r\n    'Senick'\r\n    'John'\r\n    'Kyle'\r\n  ]\r\n  'Forest Archer': [\r\n    # Female\r\n    'Naria'\r\n    'Sylva'\r\n    'Archia'\r\n  ]\r\n  'Raider': [\r\n    # Female\r\n    'Arryn'\r\n    'Thrat'\r\n  ]\r\n  'Goliath': [\r\n    # Male\r\n    'Okar'\r\n    'Ivan'\r\n  ]\r\n  'Guardian': [\r\n    # Female\r\n    'Illia'\r\n    'Gaia'\r\n  ]\r\n  'Pixie': [\r\n    # Female\r\n    'Zana'\r\n    'Eika'\r\n  ]\r\n  'Assassin': [\r\n    # Male\r\n    'Blackjack'\r\n    'Kha\\'Zix'\r\n    'Ritic'\r\n    'Rengar'\r\n    'Shade'\r\n    'Talon'\r\n    'Zed'\r\n    'Sherkey'\r\n  ]\r\n  'Necromancer': [\r\n    # Male\r\n    'Krekai'\r\n    'Kethum'\r\n    'Morcelu'\r\n    'Nalfar'\r\n    'Drezhul'\r\n  ]\r\n  'Master Wizard': [\r\n    # Female\r\n    'Lilith'\r\n    'Kuhafas'\r\n    'Usara'\r\n    'Veigar'\r\n    'Voldemort'\r\n    'Vallyria'\r\n  ]\r\n  'Archer F': [\r\n    # Female\r\n    'Agapi'\r\n    'Alden'\r\n    'Alleria'\r\n    'Atalanta'\r\n    'Artemis'\r\n    'Beatrice'\r\n    'Bachi'\r\n    'Beverly'\r\n    'Cairn'\r\n    'Cecily'\r\n    'Clare'\r\n    'Erica'\r\n    'Gemma'\r\n    'Ivy'\r\n    'Jensen'\r\n    'Katniss'\r\n    'Katreena'\r\n    'Keturah'\r\n    'Kim'\r\n    'Korra'\r\n    'Lina'\r\n    'Luna'\r\n    'Mercedes'\r\n    'Mira'\r\n    'Mirana'\r\n    'Natalie'\r\n    'Odette'\r\n    'Omar'\r\n    'Orly'\r\n    'Phoebe'\r\n    'Prim'\r\n    'Rosaline'\r\n    'Rowan'\r\n    'Tansy'\r\n    'Tauriel'\r\n    'Vereesa'\r\n    'Vesper'\r\n    'Yilitha'\r\n  ]\r\n  'Archer M': [\r\n    # Male\r\n    'Arty'\r\n    'Brian'\r\n    'Cole'\r\n    'Denin'\r\n    'Dev'\r\n    'Fidsdale'\r\n    'Gimsley'\r\n    'Hunter'\r\n    'Kikariy'\r\n    'Legolas'\r\n    'Loco'\r\n    'Logos'\r\n    'Lycan'\r\n    'Mars'\r\n    'Odysseos'\r\n    'Oliver'\r\n    'Quinn'\r\n    'Robin'\r\n    'Roman'\r\n    'Simon'\r\n    'Slyvos'\r\n    'Vican'\r\n    'Warshall'\r\n    'Yue Fei'\r\n    'Zhou Tong'\r\n    'Archy'\r\n  ]\r\n  'Peasant M': [\r\n    # Male\r\n    'Azgot'\r\n    'Brom'\r\n    'Blemmin'\r\n    'Carlton'\r\n    'Charles'\r\n    'Durfkor'\r\n    'Duan'\r\n    'Fendrel'\r\n    'Gawain'\r\n    'Hamming'\r\n    'Hector'\r\n    'Hershell'\r\n    'Hingle'\r\n    'Hodor'\r\n    'Jackson'\r\n    'James'\r\n    'Lyle'\r\n    'Merek'\r\n    'Paps'\r\n    'Piers'\r\n    'Shimron'\r\n    'Thad'\r\n    'Tybalt'\r\n    'Victor'\r\n    'Winkler'\r\n    'Yorik'\r\n    'Yusef'\r\n    'Yoltovic'\r\n  ]\r\n  'Peasant F': [\r\n    # Female\r\n    'Alexia'\r\n    'Alianor'\r\n    'Anastas'\r\n    'Bernadette'\r\n    'Brandy'\r\n    'Cristiana'\r\n    'Ellyn'\r\n    'Giselle'\r\n    'Gwendolin'\r\n    'Helena'\r\n    'Hilda'\r\n    'Icey'\r\n    'Katelyn'\r\n    'Mary'\r\n    'Matilda'\r\n    'Mertia'\r\n    'Millicent'\r\n    'Regan'\r\n    'Rose'\r\n    'Ruth'\r\n    'Tabitha'\r\n    'Thea'\r\n    'Lea'\r\n  ]\r\n  'Soldier M': [\r\n    # Male\r\n    'Aaron'\r\n    'Adam'\r\n    'Addison'\r\n    'Alan'\r\n    'Albert'\r\n    'Alistair'\r\n    'Andrew'\r\n    'Anthony'\r\n    'Antonio'\r\n    'Arthur'\r\n    'Augustus'\r\n    'Barron'\r\n    'Benjamin'\r\n    'Bill'\r\n    'Billy'\r\n    'Bobby'\r\n    'Bond'\r\n    'Brandon'\r\n    'Brian'\r\n    'Bruce'\r\n    'Carl'\r\n    'Carlos'\r\n    'Cecil'\r\n    'Charles'\r\n    'Chris'\r\n    'Christopher'\r\n    'Cid'\r\n    'Clarence'\r\n    'Craig'\r\n    'Daniel'\r\n    'Darius'\r\n    'David'\r\n    'Dax'\r\n    'Dennis'\r\n    'Donald'\r\n    'Douglas'\r\n    'Duke'\r\n    'Earl'\r\n    'Edward'\r\n    'Edwin'\r\n    'Eric'\r\n    'Ernest'\r\n    'Eugene'\r\n    'Ezra'\r\n    'Felix'\r\n    'Ferb'\r\n    'Frank'\r\n    'Fred'\r\n    'Gary'\r\n    'Gatsby'\r\n    'George'\r\n    'Gerald'\r\n    'Gordon'\r\n    'Gregory'\r\n    'Guan Yu'\r\n    'Halle'\r\n    'Harold'\r\n    'Harry'\r\n    'Henry'\r\n    'Hirium'\r\n    'Howard'\r\n    'Huburt'\r\n    'Hugo'\r\n    'Ieyasu'\r\n    'Jack'\r\n    'Jackson'\r\n    'James'\r\n    'Jason'\r\n    'Jax'\r\n    'Jeffrey'\r\n    'Jeremy'\r\n    'Jerry'\r\n    'Jesse'\r\n    'Jimmy'\r\n    'Joe'\r\n    'John'\r\n    'Johnny'\r\n    'Jonah'\r\n    'Jonathan'\r\n    'Jose'\r\n    'Joseph'\r\n    'Joshua'\r\n    'Juan'\r\n    'Jun Fan'\r\n    'Justin'\r\n    'Keith'\r\n    'Kenneth'\r\n    'Kevin'\r\n    'Kirin'\r\n    'Kumar'\r\n    'Larry'\r\n    'Lawrence'\r\n    'Leopold'\r\n    'Louis'\r\n    'Lucas'\r\n    'Lucian'\r\n    'Malcolm'\r\n    'Marcus'\r\n    'Mark'\r\n    'Martin'\r\n    'Matthew'\r\n    'Max'\r\n    'Maxwell'\r\n    'Michael'\r\n    'Miles'\r\n    'Mischa'\r\n    'Musashi'\r\n    'Nicholas'\r\n    'Nick'\r\n    'Noah'\r\n    'Orion'\r\n    'Parker'\r\n    'Patrick'\r\n    'Paul'\r\n    'Peter'\r\n    'Philip'\r\n    'Philippian'\r\n    'Phillip'\r\n    'Phineas'\r\n    'Pierce'\r\n    'Ralph'\r\n    'Randy'\r\n    'Raymond'\r\n    'Remy'\r\n    'Rex'\r\n    'Ricardo'\r\n    'Richard'\r\n    'Robert'\r\n    'Roderick'\r\n    'Roger'\r\n    'Ronald'\r\n    'Ronan'\r\n    'Roy'\r\n    'Russell'\r\n    'Ryan'\r\n    'Sage'\r\n    'Samson'\r\n    'Samuel'\r\n    'Scott'\r\n    'Sean'\r\n    'Shawn'\r\n    'Silas'\r\n    'Stephen'\r\n    'Sterling'\r\n    'Steve'\r\n    'Steven'\r\n    'Stormy'\r\n    'Tadakatsu'\r\n    'Terry'\r\n    'Thelonious'\r\n    'Theo'\r\n    'Thomas'\r\n    'Timothy'\r\n    'Todd'\r\n    'Tryndamere'\r\n    'Tyrone'\r\n    'Victor'\r\n    'Walter'\r\n    'Wayne'\r\n    'William'\r\n    'Willie'\r\n    'Zachary'\r\n  ]\r\n  'Soldier F': [\r\n    # Female\r\n    'Ahri'\r\n    'Alana'\r\n    'Alexandra'\r\n    'Alice'\r\n    'Allankrita'\r\n    'Amanda'\r\n    'Amy'\r\n    'Andrea'\r\n    'Angela'\r\n    'Ann'\r\n    'Anna'\r\n    'Anne'\r\n    'Annie'\r\n    'Ann-Maria'\r\n    'Aphrodite'\r\n    'Ashley'\r\n    'Barbara'\r\n    'Betty'\r\n    'Beverly'\r\n    'Bonnie'\r\n    'Brenda'\r\n    'Buffy'\r\n    'Carol'\r\n    'Carolyn'\r\n    'Catherine'\r\n    'Cheryl'\r\n    'Christina'\r\n    'Christine'\r\n    'Coco'\r\n    'Cynthia'\r\n    'Deborah'\r\n    'Debra'\r\n    'Denise'\r\n    'Diana'\r\n    'Diane'\r\n    'Donna'\r\n    'Doris'\r\n    'Dorothy'\r\n    'Elizabeth'\r\n    'Emma'\r\n    'Emily'\r\n    'Evelyn'\r\n    'Fiora'\r\n    'Frances'\r\n    'Gabrielle'\r\n    'Gloria'\r\n    'Gorgin'\r\n    'Heather'\r\n    'Helen'\r\n    'Helga'\r\n    'Holly'\r\n    'Imani'\r\n    'Irene'\r\n    'Jacqueline'\r\n    'Jane'\r\n    'Janet'\r\n    'Janice'\r\n    'Jean'\r\n    'Jennifer'\r\n    'Jessica'\r\n    'Joan'\r\n    'Jordan'\r\n    'Joyce'\r\n    'Judith'\r\n    'Judy'\r\n    'Julia'\r\n    'Julie'\r\n    'Karen'\r\n    'Katherine'\r\n    'Kathleen'\r\n    'Kathryn'\r\n    'Kathy'\r\n    'Kay'\r\n    'Kelly'\r\n    'Kimberly'\r\n    'Kira'\r\n    'Lana'\r\n    'Laura'\r\n    'Lillian'\r\n    'Linda'\r\n    'Lisa'\r\n    'Lois'\r\n    'Lori'\r\n    'Louise'\r\n    'Lukaz'\r\n    'Margaret'\r\n    'Maria'\r\n    'Mariah'\r\n    'Marie'\r\n    'Marilyn'\r\n    'Martha'\r\n    'Mary'\r\n    'Medusa'\r\n    'Melissa'\r\n    'Michelle'\r\n    'Mildred'\r\n    'Mulan'\r\n    'Nancy'\r\n    'Natasha'\r\n    'Nicole'\r\n    'Nikita'\r\n    'Norma'\r\n    'Pamela'\r\n    'Patricia'\r\n    'Paula'\r\n    'Phyllis'\r\n    'Rachel'\r\n    'Rebecca'\r\n    'Robin'\r\n    'Ronda'\r\n    'Rose'\r\n    'Ruby'\r\n    'Ruth'\r\n    'Sana'\r\n    'Sandra'\r\n    'Sara'\r\n    'Sarah'\r\n    'Scarlett'\r\n    'Shannon'\r\n    'Sharon'\r\n    'Shirley'\r\n    'Stephanie'\r\n    'Susan'\r\n    'Tammy'\r\n    'Teresa'\r\n    'Tess'\r\n    'Theresa'\r\n    'Tina'\r\n    'Trinity'\r\n    'Virginia'\r\n    'Wanda'\r\n  ]\r\n  'Ogre Peon M': [\r\n    # Male\r\n    'Ba Bo'\r\n    'Bubbage'\r\n    'Durbo'\r\n    'Jaro'\r\n    'Kurger'\r\n    'Mudwich'\r\n    'Toe Pod'\r\n    'Zugger'\r\n  ]\r\n  'Ogre Peon F': [\r\n    # Female\r\n    'Greeke'\r\n    'Iblet'\r\n    'Lorba'\r\n    'Vapa'\r\n    'Yamra'\r\n    'Zzoya'\r\n  ]\r\n  'Potion Master': [\r\n    # Male\r\n    'Amaranth'\r\n    'Alchemist'\r\n    'Arora'\r\n    'Artephius'\r\n    'Clause'\r\n    'Curie'\r\n    'Fluvius'\r\n    'Javin'\r\n    'Kanada'\r\n    'Omar'\r\n    'Paracelsus'\r\n    'Snake'\r\n    'Vanders'\r\n    'Warnsdorff'\r\n    'Zander'\r\n  ]\r\n  'Librarian': [\r\n    # Female\r\n    'Agathe'\r\n    'Agnes'\r\n    'Hushbaum'\r\n    'Mariam'\r\n    'Matilda'\r\n    'Merilda'\r\n    'Nordex'\r\n    'Satish'\r\n    'Vera'\r\n    'Charlotte'\r\n  ]\r\n  'Equestrian': [\r\n    # Male\r\n    'Neely'\r\n    'Reynaldo'\r\n    'Ryder'\r\n    'Thoron'\r\n  ]\r\n  'Knight': [\r\n    # Male\r\n    'Almeric'\r\n    'Alphonse'\r\n    'Altair'\r\n    'Arthur'\r\n    'Bertrand'\r\n    'Bronn'\r\n    'Bruce'\r\n    'Drake'\r\n    'Duran'\r\n    'Edward'\r\n    'Galahad'\r\n    'Hank'\r\n    'Hunfray'\r\n    'Jeph'\r\n    'Jorah'\r\n    'Lancelot'\r\n    'Mace'\r\n    'Neville'\r\n    'Shug'\r\n    'Tharin'\r\n    'Vint'\r\n    'Wain'\r\n  ]\r\n  'Captain': [\r\n    # Female\r\n    'Anya'\r\n    'Brigette'\r\n    'Dimia'\r\n    'Div'\r\n    'Hardcastle'\r\n    'Helena'\r\n    'Isa'\r\n    'Jan'\r\n    'Jane'\r\n    'Jarin'\r\n    'Karp'\r\n    'Katana'\r\n    'Leona'\r\n    'Lia'\r\n    'Lily'\r\n    'Nicks'\r\n    'Philips'\r\n    'Sarre'\r\n    'Sun Tzu'\r\n  ]\r\n  'Ninja': [\r\n    # Female\r\n    'Akali'\r\n    'Amara'\r\n    'Goemon'\r\n    'Itachi'\r\n    'Kennen'\r\n    'Kosaraju'\r\n    'Madara'\r\n    'Minato'\r\n    'Naruto'\r\n    'Obito'\r\n    'Sakura'\r\n    'Sasuke'\r\n    'Shen'\r\n    'Shigeru'\r\n    'Takashi'\r\n    'Zed'\r\n  ]\r\n  'Sorcerer': [\r\n    # Female\r\n    'Beazer'\r\n    'Claude'\r\n    'Gandalf'\r\n    'Izzrts'\r\n    'Kleene'\r\n    'Pender'\r\n    'Jezebel'\r\n  ]\r\n  'Samurai': [\r\n    # Male\r\n    'Hattori'\r\n    'Hirosha'\r\n    'Ieyasu'\r\n    'Izotokogawa'\r\n    'Keitaro'\r\n    'Miyoshi'\r\n    'Nobunaga'\r\n    'Yasuo'\r\n    'Yi'\r\n  ]\r\n  'Champion': [\r\n    # Female\r\n    'Ida'\r\n    'Jasmine'\r\n  ]\r\n  'Duelist': [\r\n    # Male\r\n    'Alejandro'\r\n  ]\r\n","# http://coffeescriptcookbook.com/chapters/math/generating-predictable-random-numbers\r\nclass Rand\r\n  @className: 'Rand'\r\n  # If created without a seed, uses current time as seed.\r\n  constructor: (@seed) ->\r\n    # Knuth and Lewis' improvements to Park and Miller's LCPRNG\r\n    @multiplier = 1664525\r\n    @modulo = 4294967296 # 2**32-1\r\n    @offset = 1013904223\r\n    unless @seed? and 0 <= @seed < @modulo\r\n      @seed = (new Date().valueOf() * new Date().getMilliseconds()) % @modulo\r\n\r\n  # sets new seed value, even handling negative numbers\r\n  setSeed: (seed) ->\r\n    @seed = ((seed % @modulo) + @modulo) % @modulo\r\n\r\n  # return a random integer 0 <= n < @modulo\r\n  randn: =>\r\n    # new_seed = (a * seed + c) % m\r\n    @seed = (@multiplier * @seed + @offset) % @modulo\r\n\r\n # return a random float 0 <= f < 1.0\r\n  randf: =>\r\n    @randn() / @modulo\r\n\r\n  # return a random int 0 <= f < n\r\n  rand: (n) =>\r\n    Math.floor @randf() * n\r\n\r\n  # return a random int min <= f < max\r\n  rand2: (min, max) =>\r\n    min + @rand max - min\r\n\r\n  # return a random float min <= f < max\r\n  randf2: (min, max) =>\r\n    min + @randf() * (max - min)\r\n\r\n  # return a random float within range around x\r\n  randfRange: (x, range) =>\r\n    x + (-0.5 + @randf()) * range\r\n\r\n  # shuffle array in place, and also return it\r\n  shuffle: (arr) =>\r\n    return arr unless arr.length > 2\r\n    for i in [arr.length-1 .. 1]\r\n      j = Math.floor @randf() * (i + 1)\r\n      t = arr[j]\r\n      arr[j] = arr[i]\r\n      arr[i] = t\r\n    arr\r\n  \r\n  choice: (arr) =>\r\n    return arr[@rand arr.length]\r\n\r\n\r\nmodule.exports = Rand\r\n","Vector = require './vector'\r\nLineSegment = require './line_segment'\r\n\r\nclass Rectangle\r\n  @className: 'Rectangle'\r\n  # Class methods for nondestructively operating - TODO: add rotate\r\n  for name in ['add', 'subtract', 'multiply', 'divide']\r\n    do (name) ->\r\n      Rectangle[name] = (a, b) ->\r\n        a.copy()[name](b)\r\n\r\n  isRectangle: true\r\n  apiProperties: ['x', 'y', 'width', 'height', 'rotation', 'getPos', 'vertices', 'touchesRect', 'touchesPoint', 'distanceToPoint', 'distanceSquaredToPoint', 'distanceToRectangle', 'distanceSquaredToRectangle', 'distanceToEllipse', 'distanceSquaredToEllipse', 'distanceToShape', 'distanceSquaredToShape', 'containsPoint', 'copy', 'intersectsLineSegment', 'intersectsEllipse', 'intersectsRectangle', 'intersectsShape']\r\n\r\n  constructor: (@x=0, @y=0, @width=0, @height=0, @rotation=0) ->\r\n\r\n  copy: ->\r\n    new Rectangle(@x, @y, @width, @height, @rotation)\r\n\r\n  getPos: ->\r\n    new Vector(@x, @y)\r\n\r\n  vertices: ->\r\n    # Counter-clockwise, starting from bottom left (when unrotated)\r\n    [w2, h2, cos, sin] = [@width / 2, @height / 2, Math.cos(@rotation), Math.sin(-@rotation)]\r\n    [\r\n      new Vector @x - (w2 * cos - h2 * sin), @y - (w2 * sin + h2 * cos)\r\n      new Vector @x - (w2 * cos + h2 * sin), @y - (w2 * sin - h2 * cos)\r\n      new Vector @x + (w2 * cos - h2 * sin), @y + (w2 * sin + h2 * cos)\r\n      new Vector @x + (w2 * cos + h2 * sin), @y + (w2 * sin - h2 * cos)\r\n    ]\r\n\r\n  lineSegments: ->\r\n    vertices = @vertices()\r\n    lineSegment0 = new LineSegment vertices[0], vertices[1]\r\n    lineSegment1 = new LineSegment vertices[1], vertices[2]\r\n    lineSegment2 = new LineSegment vertices[2], vertices[3]\r\n    lineSegment3 = new LineSegment vertices[3], vertices[0]\r\n    [lineSegment0, lineSegment1, lineSegment2, lineSegment3]\r\n\r\n  touchesRect: (other) ->\r\n    # Whether this rect shares part of any edge with other rect, for non-rotated, non-overlapping rectangles.\r\n    # I think it says kitty-corner rects touch, but I don't think I want that.\r\n    # Float instability might get me, too.\r\n    [bl1, tl1, tr1, br1] = @vertices()\r\n    [bl2, tl2, tr2, br2] = other.vertices()\r\n    return false if tl1.x > tr2.x or tl2.x > tr1.x\r\n    return false if bl1.y > tl2.y or bl2.y > tl1.y\r\n    return true if tl1.x is tr2.x or tl2.x is tr1.x\r\n    return true if tl1.y is bl2.y or tl2.y is bl1.y\r\n    false\r\n\r\n  touchesPoint: (p) ->\r\n    # Whether this rect has point p exactly on one of its edges, assuming no rotation.\r\n    [bl, tl, tr, br] = @vertices()\r\n    return false unless p.y >= bl.y and p.y <= tl.y\r\n    return false unless p.x >= bl.x and p.x <= br.x\r\n    return true if p.x is bl.x or p.x is br.x\r\n    return true if p.y is bl.y or p.y is tl.y\r\n    false\r\n\r\n  axisAlignedBoundingBox: (rounded=true) ->\r\n    box = @copy()\r\n    return box unless @rotation\r\n    box.rotation = 0\r\n    [left, top] = [9001, 9001]\r\n    for vertex in @vertices()\r\n      [left, top] = [Math.min(left, vertex.x), Math.min(top, vertex.y)]\r\n    if rounded\r\n      [left, top] = [Math.round(left), Math.round(top)]\r\n    [box.width, box.height] = [2 * (@x - left), 2 * (@y - top)]\r\n    box\r\n\r\n  distanceToPoint: (p) ->\r\n    # Get p in rect's coordinate space, then operate in one quadrant.\r\n    p = Vector.subtract(p, @getPos()).rotate(-@rotation)\r\n    dx = Math.max(Math.abs(p.x) - @width / 2, 0)\r\n    dy = Math.max(Math.abs(p.y) - @height / 2, 0)\r\n    Math.sqrt dx * dx + dy * dy\r\n\r\n  distanceSquaredToPoint: (p) ->\r\n    # Doesn't handle rotation; just supposed to be faster than distanceToPoint.\r\n    p = Vector.subtract(p, @getPos())\r\n    dx = Math.max(Math.abs(p.x) - @width / 2, 0)\r\n    dy = Math.max(Math.abs(p.y) - @height / 2, 0)\r\n    dx * dx + dy * dy\r\n\r\n  distanceToRectangle: (other) ->\r\n    Math.sqrt @distanceSquaredToRectangle other\r\n\r\n  distanceSquaredToRectangle: (other) ->\r\n    return 0 if @intersectsRectangle other\r\n    [firstVertices, secondVertices] = [@vertices(), other.vertices()]\r\n    [firstEdges, secondEdges] = [@lineSegments(), other.lineSegments()]\r\n    ans = Infinity\r\n    for i in [0 ... 4]\r\n      for j in [0 ... firstEdges.length]\r\n        ans = Math.min ans, firstEdges[j].distanceSquaredToPoint(secondVertices[i])\r\n      for j in [0 ... secondEdges.length]\r\n        ans = Math.min ans, secondEdges[j].distanceSquaredToPoint(firstVertices[i])\r\n    ans\r\n\r\n  distanceToEllipse: (ellipse) ->\r\n    Math.sqrt @distanceSquaredToEllipse ellipse\r\n\r\n  distanceSquaredToEllipse: (ellipse) ->\r\n    @distanceSquaredToRectangle ellipse.rectangle()  # TODO: actually implement rectangle-ellipse distance\r\n\r\n  distanceToShape: (shape) ->\r\n    Math.sqrt @distanceSquaredToShape shape\r\n\r\n  distanceSquaredToShape: (shape) ->\r\n    if shape.isEllipse then @distanceSquaredToEllipse shape else @distanceSquaredToRectangle shape\r\n\r\n  containsPoint: (p, withRotation=true) ->\r\n    if withRotation and @rotation\r\n      not @distanceToPoint(p)\r\n    else\r\n      @x - @width / 2 < p.x < @x + @width / 2 and @y - @height / 2 < p.y < @y + @height / 2\r\n\r\n  intersectsLineSegment: (p1, p2) ->\r\n    [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\r\n    m1 = (py1 - py2) / (px1 - px2)\r\n    b1 = py1 - (m1 * px1)\r\n    vertices = @vertices()\r\n    lineSegments = [[vertices[0], vertices[1]], [vertices[1], vertices[2]], [vertices[2], vertices[3]], [vertices[3], vertices[0]]]\r\n    for lineSegment in lineSegments\r\n      [px1, py1, px2, py2] = [p1.x, p1.y, p2.x, p2.y]\r\n      m2 = (py1 - py2) / (px1 - px2)\r\n      b2 = py1 - (m * px1)\r\n      if m1 isnt m2\r\n        m = m1 - m2\r\n        b = b2 - b1\r\n        x = b / m\r\n        [littleX, bigX] = if px1 < px2 then [px1, px2] else [px2, px1]\r\n        if x >= littleX and x <= bigX\r\n          y = (m1 * x) + b1\r\n          [littleY, bigY] = if py1 < py2 then [py1, py2] else [py2, py1]\r\n          if littleY <= solution and bigY >= solution\r\n            return true\r\n    false\r\n\r\n  intersectsRectangle: (rectangle) ->\r\n    return true if @containsPoint rectangle.getPos()\r\n    for thisLineSegment in @lineSegments()\r\n      for thatLineSegment in rectangle.lineSegments()\r\n        if thisLineSegment.intersectsLineSegment(thatLineSegment)\r\n          return true\r\n    false\r\n\r\n  intersectsEllipse: (ellipse) ->\r\n    return true if @containsPoint ellipse.getPos()\r\n    return true for lineSegment in @lineSegments() when ellipse.intersectsLineSegment lineSegment.a, lineSegment.b\r\n    false\r\n\r\n  intersectsShape: (shape) ->\r\n    if shape.isEllipse then @intersectsEllipse shape else @intersectsRectangle shape\r\n\r\n  subtract: (point) ->\r\n    @x -= point.x\r\n    @y -= point.y\r\n    @pos.subtract point\r\n    @\r\n\r\n  add: (point) ->\r\n    @x += point.x\r\n    @y += point.y\r\n    @pos.add point\r\n    @\r\n\r\n  divide: (n) ->\r\n    [@width, @height] = [@width / n, @height / n]\r\n    @\r\n\r\n  multiply: (n) ->\r\n    [@width, @height] = [@width * n, @height * n]\r\n    @\r\n\r\n  isEmpty: () ->\r\n    @width is 0 and @height is 0\r\n\r\n  invalid: () ->\r\n    return (@x is Infinity) || isNaN(@x) || @y is Infinity || isNaN(@y) || @width is Infinity || isNaN(@width) || @height is Infinity || isNaN(@height) || @rotation is Infinity || isNaN(@rotation)\r\n\r\n  toString: ->\r\n    return \"{x: #{@x.toFixed(0)}, y: #{@y.toFixed(0)}, w: #{@width.toFixed(0)}, h: #{@height.toFixed(0)}, rot: #{@rotation.toFixed(3)}}\"\r\n\r\n  serialize: ->\r\n    {CN: @constructor.className, x: @x, y: @y, w: @width, h: @height, r: @rotation}\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    new Rectangle o.x, o.y, o.w, o.h, o.r\r\n\r\n  serializeForAether: -> @serialize()\r\n  @deserializeFromAether: (o) -> @deserialize o\r\n\r\nmodule.exports = Rectangle\r\n","{downTheChain} = require './world_utils'\r\n\r\nmodule.exports.scriptMatchesEventPrereqs = scriptMatchesEventPrereqs = (script, event) ->\r\n  return true unless script.eventPrereqs\r\n  for ap in script.eventPrereqs\r\n    v = downTheChain(event, ap.eventProps)\r\n    return false if ap.equalTo? and v isnt ap.equalTo\r\n    return false if ap.notEqualTo? and v is ap.notEqualTo\r\n    return false if ap.greaterThan? and not (v > ap.greaterThan)\r\n    return false if ap.greaterThanOrEqualTo? and not (v >= ap.greaterThanOrEqualTo)\r\n    return false if ap.lessThan? and not (v < ap.lessThan)\r\n    return false if ap.lessThanOrEqualTo? and not (v <= ap.lessThanOrEqualTo)\r\n    return false if ap.containingString? and (not v or v.search(ap.containingString) is -1)\r\n    return false if ap.notContainingString? and v?.search(ap.notContainingString) isnt -1\r\n    return false if ap.containingRegexp? and (not v or v.search(new RegExp(ap.containingRegexp)) is -1)\r\n    return false if ap.notContainingRegexp? and v?.search(new RegExp(ap.notContainingRegexp)) isnt -1\r\n\r\n  return true\r\n","# The System will operate on its Thangs of interest in each WorldFrame.\r\n# Systems so far: AI, UI, Collision, Movement, Targeting, Programming, Combat, Vision, Hearing, Inventory, Actions\r\n# Other Systems might be things like Attraction, EdgeBounce, EdgeWrap, and non-physics ones, too, like Rendering, Animation, ...\r\n\r\nmodule.exports = class System\r\n  @className: 'System'\r\n  constructor: (@world, config) ->\r\n    # Unlike with Component, we don't automatically copy all our properties onto the World.\r\n    # Subclasses can copy select properties here if they like.\r\n    for key, value of (config ? {})\r\n      @[key] = value\r\n    @registries = []\r\n    @hashes = {}\r\n\r\n  # Start is called once the beginning, after all Thangs have been loaded.\r\n  start: (thangs) ->\r\n\r\n  # Update is called once per frame on all thangs that currently have exist=true in the World.\r\n  # We return a simple numeric hash that will combine to a frame hash help us determine whether this frame has changed later on.\r\n  update: (thangs) ->\r\n    hash = 0\r\n\r\n  # Finish is called once at the end, after all frames have been generated.\r\n  finish: (thangs) ->\r\n\r\n  addRegistry: (condition) ->\r\n    registry = []\r\n    @registries.push [registry, condition]\r\n    registry\r\n\r\n  # Register is called whenever a Thang changes important state (exists, dead, etc), and can be called more specifically by individual Thangs.\r\n  register: (thang) ->\r\n    for [registry, condition] in @registries\r\n      if condition thang\r\n        if thang not in registry\r\n          registry.push thang\r\n      else\r\n        thangIndex = registry.indexOf thang\r\n        if thangIndex isnt -1\r\n          registry.splice thangIndex, 1\r\n    null\r\n\r\n  # Override this to determine which registries have which conditions\r\n  checkRegistration: (thang, registry) ->\r\n\r\n  hashString: (s) ->\r\n    return @hashes[s] if s of @hashes\r\n    hash = 0\r\n    for i in [0 ... Math.min(s.length, 100)]\r\n      hash = hash * 31 + s.charCodeAt(i)\r\n    hash = @hashes[s] = hash % 3.141592653589793\r\n    hash\r\n\r\n  toString: ->\r\n    \"<System: #{@constructor.className}\"\r\n","module.exports.MAX_COOLDOWN = MAX_COOLDOWN = 9001\r\n","# http://codingowl.com/readblog.php?blogid=124\r\nmodule.exports.CollisionCategory = class CollisionCategory\r\n  @className: 'CollisionCategory'\r\n  constructor: (name, @superteamIndex=null, @collisionSystem) ->\r\n    # @superteamIndex is null for 'none', 'obstacles', and 'dead'.\r\n    # It's 0 for 'ground', 'air', and 'ground_and_air' units with no superteams.\r\n    # It's 1, 2, or 3 for the superteams it gets after that. We can only have 16 collision categories.\r\n    @ground = name.search('ground') isnt -1\r\n    @air = name.search('air') isnt -1\r\n    @name = CollisionCategory.nameFor name, @superteamIndex\r\n    @superteamIndex ?= 0 if @ground or @air\r\n    @number = 1 << @collisionSystem.totalCategories++\r\n    if @collisionSystem.totalCategories > 16 then console.log 'There should only be 16 collision categories!'\r\n    @mask = 0\r\n    @collisionSystem.allCategories[@name] = @\r\n    for otherCatName, otherCat of @collisionSystem.allCategories\r\n      if @collidesWith otherCat\r\n        @mask = @mask | otherCat.number\r\n        otherCat.mask = otherCat.mask | @number\r\n\r\n  collidesWith: (cat) ->\r\n    # 'none' collides with nothing\r\n    return false if @name is 'none' or cat.name is 'none'\r\n\r\n    # 'obstacles' collides with everything; could also try letting air units (but not ground_and_air) fly over these\r\n    return true if cat.name is 'obstacles' or @name is 'obstacles'\r\n\r\n    # 'dead' collides only with obstacles\r\n    return cat.name is 'obstacles' if @name is 'dead'\r\n    return @name is 'obstacles' if cat.name is 'dead'\r\n\r\n    # 'ground_and_air_<team>' units don't hit ground or air units on their team (so missiles don't hit same team)\r\n    sameTeam = @superteamIndex and cat.superteamIndex is @superteamIndex\r\n    return false if sameTeam and @ground and @air\r\n\r\n    # actually, 'ground_and_air<team>' units don't hit any ground_and_air units (temp missile collision fix)\r\n    return false if @ground and @air and cat.ground and cat.air\r\n\r\n    # 'ground' collides with 'ground'\r\n    return true if cat.ground and @ground\r\n\r\n    # 'air' collides with 'air'\r\n    return true if cat.air and @air\r\n\r\n    # doesn't collide (probably 'ground' and 'air')\r\n    false\r\n\r\n  @nameFor: (name, superteamIndex=null) ->\r\n    return name unless name.match('ground') or name.match('air')\r\n    name + '_' + (superteamIndex or 0)\r\n","module.exports.WATER_DENSITY = WATER_DENSITY = 1000  # kg / m^3\r\nmodule.exports.AIR_DENSITY = AIR_DENSITY = 1.225  # kg / m^3\r\nmodule.exports.VACUUM_DENSITY = VACUUM_DENSITY = 0.00000000000000129  # For an excellent laboratory vacuum; kg / m^3\r\nmodule.exports.SWAMP_DENSITY = SWAMP_DENSITY = WATER_DENSITY / 4  # Swamp is dense like water, but only covers part of unit\r\nmodule.exports.STANDARD_FRICTION = STANDARD_FRICTION = 0.7  # 0.7 =~ shoe on floor.\r\nmodule.exports.ICE_FRICTION = ICE_FRICTION = 0.1  # As low as 0.015 (steel on ice), as high as 0.4 (rubber on ice)\r\n","ThangState = require './thang_state'\r\n{thangNames} = require './names'\r\n{ArgumentError} = require './errors'\r\nRand = require './rand'\r\n\r\nmodule.exports = class Thang\r\n  @className: 'Thang'\r\n  @remainingThangNames: {}\r\n\r\n  @nextID: (spriteName, world) ->\r\n    originals = thangNames[spriteName] or [spriteName]\r\n    remaining = Thang.remainingThangNames[spriteName]\r\n    remaining = Thang.remainingThangNames[spriteName] = originals.slice() unless remaining?.length\r\n\r\n    baseName = remaining.splice(world.rand.rand(remaining.length), 1)[0]\r\n    i = 0\r\n    while true\r\n      name = if i then \"#{baseName} #{i}\" else baseName\r\n      extantThang = world.thangMap[name]\r\n      break unless extantThang\r\n      i++\r\n    name\r\n\r\n  @resetThangIDs: -> Thang.remainingThangNames = {}\r\n  isThang: true\r\n  apiProperties: ['id', 'spriteName', 'health', 'pos', 'team']\r\n\r\n  constructor: (@world, @spriteName, @id) ->\r\n    @spriteName ?= @constructor.className\r\n    @id ?= @constructor.nextID @spriteName, @world\r\n    @addTrackedProperties ['exists', 'boolean']  # TODO: move into Systems/Components, too?\r\n    #console.log \"Generated #{@toString()}.\"\r\n\r\n  destroy: ->\r\n    # Just trying to destroy __aetherAPIClone, but might as well nuke everything just in case\r\n    @[key] = undefined for key of @\r\n    @destroyed = true\r\n    @destroy = ->\r\n\r\n  updateRegistration: ->\r\n    system.register @ for system in @world.systems\r\n\r\n  publishNote: (channel, event) ->\r\n    event.thang = @\r\n    @world.publishNote channel, event\r\n\r\n  getGoalState: (goalID) ->\r\n    @world.getGoalState goalID\r\n\r\n  setGoalState: (goalID, status) ->\r\n    @world.setGoalState goalID, status\r\n\r\n  getThangByID: (id) ->\r\n    @world.getThangByID id\r\n\r\n  addComponents: (components...) ->\r\n    # We don't need to keep the components around after attaching them, but we will keep their initial config for recreating Thangs\r\n    @components ?= []\r\n    for [componentClass, componentConfig] in components\r\n      @components.push [componentClass, componentConfig]\r\n      if _.isString componentClass  # We had already turned it into a string, so re-classify it momentarily\r\n        componentClass = @world.classMap[componentClass]\r\n      else\r\n        @world?.classMap[componentClass.className] ?= componentClass\r\n      c = new componentClass componentConfig ? {}\r\n      c.attach @\r\n\r\n  # [prop, type]s of properties which have values tracked across WorldFrames. Also call keepTrackedProperty some non-expensive time when you change it or it will be skipped.\r\n  addTrackedProperties: (props...) ->\r\n    @trackedPropertiesKeys ?= []\r\n    @trackedPropertiesTypes ?= []\r\n    @trackedPropertiesUsed ?= []\r\n    for [prop, type] in props\r\n      unless type in ThangState.trackedPropertyTypes\r\n        # How should errors for busted Components work? We can't recover from this and run the world.\r\n        throw new Error \"Type #{type} for property #{prop} is not a trackable property type: #{ThangState.trackedPropertyTypes}\"\r\n      oldPropIndex = @trackedPropertiesKeys.indexOf prop\r\n      if oldPropIndex is -1\r\n        @trackedPropertiesKeys.push prop\r\n        @trackedPropertiesTypes.push type\r\n        @trackedPropertiesUsed.push false\r\n      else\r\n        oldType = @trackedPropertiesTypes[oldPropIndex]\r\n        if type isnt oldType\r\n          throw new Error \"Two types were specified for trackable property #{prop}: #{oldType} and #{type}.\"\r\n\r\n  keepTrackedProperty: (prop) ->\r\n    # Wish we could do this faster, but I can't think of how.\r\n    propIndex = @trackedPropertiesKeys.indexOf prop\r\n    if propIndex isnt -1\r\n      @trackedPropertiesUsed[propIndex] = true\r\n\r\n  # @trackedFinalProperties: names of properties which need to be tracked once at the end of the World; don't worry about types\r\n  addTrackedFinalProperties: (props...) ->\r\n    @trackedFinalProperties ?= []\r\n    @trackedFinalProperties = @trackedFinalProperties.concat (k for k in props when not (k in @trackedFinalProperties))\r\n\r\n  getState: ->\r\n    @_state = new ThangState @\r\n  setState: (state) ->\r\n    @_state = state.restore()\r\n\r\n  toString: -> @id\r\n\r\n  createMethodChain: (methodName) ->\r\n    @methodChains ?= {}\r\n    chain = @methodChains[methodName]\r\n    return chain if chain\r\n    chain = @methodChains[methodName] = {original: @[methodName], user: null, components: []}\r\n    @[methodName] = _.partial @callChainedMethod, methodName  # Optimize! _.partial is fastest I've found\r\n    chain\r\n\r\n  appendMethod: (methodName, newMethod) ->\r\n    # Components add methods that come after the original method\r\n    @createMethodChain(methodName).components.push newMethod\r\n\r\n  callChainedMethod: (methodName, args...) ->\r\n    # Optimize this like crazy--but how?\r\n    chain = @methodChains[methodName]\r\n    primaryMethod = chain.user or chain.original\r\n    ret = primaryMethod?.apply @, args\r\n    for componentMethod in chain.components\r\n      ret2 = componentMethod.apply @, args\r\n      ret = ret2 ? ret  # override return value only if not null\r\n    ret\r\n\r\n  getMethodSource: (methodName) ->\r\n    source = {}\r\n    if @methodChains? and methodName of @methodChains\r\n      chain = @methodChains[methodName]\r\n      source.original = chain.original.toString()\r\n      source.user = chain.user?.toString()\r\n    else\r\n      source.original = @[methodName]?.toString() ? ''\r\n    source.original = Aether.getFunctionBody source.original\r\n    source\r\n\r\n  serialize: ->\r\n    o = {spriteName: @spriteName, id: @id, components: [], finalState: {}}\r\n    for [componentClass, componentConfig], i in (@components ? [])\r\n      if _.isString componentClass\r\n        componentClassName = componentClass\r\n      else\r\n        componentClassName = componentClass.className\r\n        @world.classMap[componentClass.className] ?= componentClass\r\n      o.components.push [componentClassName, componentConfig]\r\n    for trackedFinalProperty in @trackedFinalProperties ? []\r\n      # TODO: take some (but not all) of serialize logic from ThangState to handle other types\r\n      o.finalState[trackedFinalProperty] = @[trackedFinalProperty]\r\n    # Since we might keep tracked properties later during streaming, we need to know which we think are unused.\r\n    o.unusedTrackedPropertyKeys = (@trackedPropertiesKeys[propIndex] for used, propIndex in @trackedPropertiesUsed when not used)\r\n    o\r\n\r\n  @deserialize: (o, world, classMap, levelComponents) ->\r\n    t = new Thang world, o.spriteName, o.id\r\n    for [componentClassName, componentConfig] in o.components\r\n      unless componentClass = classMap[componentClassName]\r\n        console.debug 'Compiling new Component while deserializing:', componentClassName\r\n        componentModel = _.find levelComponents, name: componentClassName\r\n        componentClass = world.loadClassFromCode componentModel.js, componentClassName, 'component'\r\n        world.classMap[componentClassName] = componentClass\r\n      t.addComponents [componentClass, componentConfig]\r\n    t.unusedTrackedPropertyKeys = o.unusedTrackedPropertyKeys\r\n    t.unusedTrackedPropertyValues = (t[prop] for prop in o.unusedTrackedPropertyKeys)\r\n    for prop, val of o.finalState\r\n      # TODO: take some (but not all) of deserialize logic from ThangState to handle other types\r\n      t[prop] = val\r\n    t\r\n\r\n  serializeForAether: ->\r\n    {CN: @constructor.className, id: @id}\r\n\r\n  getLankOptions: ->\r\n    colorConfigs = @teamColors or @world?.getTeamColors() or {}\r\n    options = {colorConfig: {}}\r\n    if @id is 'Hero Placeholder' and not @world.getThangByID 'Hero Placeholder 1'\r\n      return options  # No team colors for heroes on single-player levels\r\n    if @team and teamColor = colorConfigs[@team]\r\n      options.colorConfig.team = teamColor\r\n    if @color and color = @grabColorConfig @color\r\n      options.colorConfig.color = color\r\n    if @colors\r\n      options.colorConfig[colorType] = colorValue for colorType, colorValue of @colors\r\n    options\r\n\r\n  grabColorConfig: (color) ->\r\n    {\r\n      green: {hue: 0.33, saturation: 0.5, lightness: 0.5}\r\n      black: {hue: 0, saturation: 0, lightness: 0.25}\r\n      violet: {hue: 0.83, saturation: 0.5, lightness: 0.5}\r\n    }[color]\r\n","{clone, typedArraySupport} = require './world_utils'\r\nVector = require './vector'\r\n\r\nif typedArraySupport\r\n  FloatArrayType = Float32Array  # Better performance than Float64Array\r\n  bytesPerFloat = FloatArrayType.BYTES_PER_ELEMENT ? FloatArrayType.prototype.BYTES_PER_ELEMENT\r\nelse\r\n  bytesPerFloat = 4\r\n\r\nmodule.exports = class ThangState\r\n  @className: 'ThangState'\r\n  @trackedPropertyTypes: [\r\n    'boolean'\r\n    'number'\r\n    'string'\r\n    'array'  # will turn everything into strings\r\n    'object'  # grrr\r\n    'Vector'\r\n    'Thang'  # serialized as ids, like strings\r\n  ]\r\n\r\n  hasRestored: false\r\n  constructor: (thang) ->\r\n    @props = []  # parallel array to @thang's trackedPropertiesKeys/Types\r\n    return unless thang\r\n    @thang = thang\r\n    for prop, propIndex in thang.trackedPropertiesKeys\r\n      type = thang.trackedPropertiesTypes[propIndex]\r\n      value = thang[prop]\r\n      if type is 'Vector'\r\n        @props.push value?.copy()  # could try storing [x, y, z] or {x, y, z} here instead if this is expensive\r\n      else if type is 'object' or type is 'array'\r\n        @props.push clone(value, true)\r\n      else\r\n        @props.push value\r\n\r\n  # Either pass storage and type, or don't pass either of them\r\n  getStoredProp: (propIndex, type, storage) ->\r\n    # Optimize it\r\n    unless type\r\n      type = @trackedPropertyTypes[propIndex]\r\n      storage = @trackedPropertyValues[propIndex]\r\n    if type is 'Vector'\r\n      value = new Vector storage[3 * @frameIndex], storage[3 * @frameIndex + 1], storage[3 * @frameIndex + 2]\r\n    else if type is 'string'\r\n      specialKey = storage[@frameIndex]\r\n      value = @specialKeysToValues[specialKey]\r\n    else if type is 'Thang'\r\n      specialKey = storage[@frameIndex]\r\n      value = @thang.world.getThangByID @specialKeysToValues[specialKey]\r\n    else if type is 'array'\r\n      specialKey = storage[@frameIndex]\r\n      valueString = @specialKeysToValues[specialKey]\r\n      if valueString and valueString.length > 1\r\n        # Trim leading Group Separator and trailing Record Separator, split by Record Separators, restore string array.\r\n        value = valueString.substring(1, valueString.length - 1).split '\\x1E'\r\n      else\r\n        value = []\r\n    else\r\n      value = storage[@frameIndex]\r\n    value\r\n\r\n  getStateForProp: (prop) ->\r\n    # Get the property, whether we have it stored in @props or in @trackedPropertyValues. Optimize it.\r\n    # Figured based on http://jsperf.com/object-vs-array-vs-native-linked-list/13 that it should be faster with small arrays to do the indexOf reads (each up to 24x faster) than to do a single object read, and then we don't have to maintain an extra @props object; just keep array\r\n    propIndex = @trackedPropertyKeys.indexOf prop\r\n    if propIndex is -1\r\n      initialPropIndex = @thang.unusedTrackedPropertyKeys.indexOf prop\r\n      return null if initialPropIndex is -1\r\n      return @thang.unusedTrackedPropertyValues[initialPropIndex]\r\n    value = @props[propIndex]\r\n    return value if value isnt undefined or @hasRestored\r\n    return @props[propIndex] = @getStoredProp propIndex\r\n\r\n  restore: ->\r\n    # Restore trackedProperties' values to @thang, retrieving them from @trackedPropertyValues if needed. Optimize it.\r\n    return @ if @thang._state is @ and not @thang.partialState\r\n    unless @hasRestored  # Restoring in a deserialized World for first time\r\n      for prop, propIndex in @thang.unusedTrackedPropertyKeys when @trackedPropertyKeys.indexOf(prop) is -1\r\n        @thang[prop] = @thang.unusedTrackedPropertyValues[propIndex]\r\n      props = []\r\n      for prop, propIndex in @trackedPropertyKeys\r\n        type = @trackedPropertyTypes[propIndex]\r\n        storage = @trackedPropertyValues[propIndex]\r\n        props.push @thang[prop] = @getStoredProp propIndex, type, storage\r\n        #console.log @frameIndex, @thang.id, prop, propIndex, type, storage, 'got', @thang[prop]\r\n      @props = props\r\n      @trackedPropertyTypes = @trackedPropertyValues = @specialKeysToValues = null  # leave @trackedPropertyKeys for indexing\r\n      @hasRestored = true\r\n    else  # Restoring later times\r\n      for prop, propIndex in @thang.unusedTrackedPropertyKeys when @trackedPropertyKeys.indexOf(prop) is -1\r\n        @thang[prop] = @thang.unusedTrackedPropertyValues[propIndex]\r\n      for prop, propIndex in @trackedPropertyKeys\r\n        @thang[prop] = @props[propIndex]\r\n    @thang.partialState = false\r\n    @thang.stateChanged = true\r\n    @\r\n\r\n  restorePartial: (ratio) ->\r\n    # Don't think we need to worry about unusedTrackedPropertyValues here.\r\n    # If it's not tracked yet, it'll very rarely partially change between frames; we can afford to miss the first one.\r\n    inverse = 1 - ratio\r\n    for prop, propIndex in @trackedPropertyKeys when prop is 'pos' or prop is 'rotation'\r\n      if @hasRestored\r\n        value = @props[propIndex]\r\n      else\r\n        type = @trackedPropertyTypes[propIndex]\r\n        storage = @trackedPropertyValues[propIndex]\r\n        value = @getStoredProp propIndex, type, storage\r\n      if prop is 'pos'\r\n        if (@thang.teleport and @thang.pos.distanceSquared(value) > 900) or (@thang.pos.x is 0 and @thang.pos.y is 0)\r\n          # Don't interpolate; it was probably a teleport. https://github.com/codecombat/codecombat/issues/738\r\n          @thang.pos = value\r\n        else\r\n          @thang.pos = @thang.pos.copy()\r\n          @thang.pos.x = inverse * @thang.pos.x + ratio * value.x\r\n          @thang.pos.y = inverse * @thang.pos.y + ratio * value.y\r\n          @thang.pos.z = inverse * @thang.pos.z + ratio * value.z\r\n      else if prop is 'rotation'\r\n        @thang.rotation = inverse * @thang.rotation + ratio * value\r\n      @thang.partialState = true\r\n    @thang.stateChanged = true\r\n    @\r\n\r\n  serialize: (frameIndex, trackedPropertyIndices, trackedPropertyTypes, trackedPropertyValues, specialValuesToKeys, specialKeysToValues) ->\r\n    # Performance hotspot--called once per tracked property per Thang per frame. Optimize the crap out of it.\r\n    for type, newPropIndex in trackedPropertyTypes\r\n      originalPropIndex = trackedPropertyIndices[newPropIndex]\r\n      storage = trackedPropertyValues[newPropIndex]\r\n      value = @props[originalPropIndex]\r\n      if value\r\n        # undefined, null, false, 0 won't trigger in this serialization code scheme anyway, so we can't differentiate between them when deserializing\r\n        if type is 'Vector'\r\n          storage[3 * frameIndex] = value.x\r\n          storage[3 * frameIndex + 1] = value.y\r\n          storage[3 * frameIndex + 2] = value.z\r\n        else if type is 'string'\r\n          specialKey = specialValuesToKeys[value]\r\n          unless specialKey\r\n            specialKey = specialKeysToValues.length\r\n            specialValuesToKeys[value] = specialKey\r\n            specialKeysToValues.push value\r\n            storage[frameIndex] = specialKey\r\n          storage[frameIndex] = specialKey\r\n        else if type is 'Thang'\r\n          value = value.id\r\n          specialKey = specialValuesToKeys[value]\r\n          unless specialKey\r\n            specialKey = specialKeysToValues.length\r\n            specialValuesToKeys[value] = specialKey\r\n            specialKeysToValues.push value\r\n            storage[frameIndex] = specialKey\r\n          storage[frameIndex] = specialKey\r\n        else if type is 'array'\r\n          # We make sure the array keys won't collide with any string keys by using some unprintable characters.\r\n          stringPieces = ['\\x1D']  # Group Separator\r\n          for element in value\r\n            if element and element.id  # Was checking element.isThang, but we can't store non-strings anyway\r\n              element = element.id\r\n            stringPieces.push element, '\\x1E'  # Record Separator(s)\r\n          value = stringPieces.join('')\r\n          specialKey = specialValuesToKeys[value]\r\n          unless specialKey\r\n            specialKey = specialKeysToValues.length\r\n            specialValuesToKeys[value] = specialKey\r\n            specialKeysToValues.push value\r\n            storage[frameIndex] = specialKey\r\n          storage[frameIndex] = specialKey\r\n        else\r\n          storage[frameIndex] = value\r\n        #console.log @thang.id, 'assigned prop', originalPropIndex, newPropIndex, value, type, 'at', frameIndex, 'to', storage[frameIndex]\r\n    null\r\n\r\n  @deserialize: (world, frameIndex, thang, trackedPropertyKeys, trackedPropertyTypes, trackedPropertyValues, specialKeysToValues) ->\r\n    # Optimize like no tomorrow--most performance-sensitive part of the whole app, called once per WorldFrame per Thang per trackedProperty, blocking the UI\r\n    ts = new ThangState\r\n    ts.thang = thang\r\n    ts.frameIndex = frameIndex\r\n    ts.trackedPropertyKeys = trackedPropertyKeys\r\n    ts.trackedPropertyTypes = trackedPropertyTypes\r\n    ts.trackedPropertyValues = trackedPropertyValues\r\n    ts.specialKeysToValues = specialKeysToValues\r\n    ts\r\n\r\n  @transferableBytesNeededForType: (type, nFrames) ->\r\n    bytes = switch type\r\n      when 'boolean' then 1\r\n      when 'number' then bytesPerFloat\r\n      when 'Vector' then bytesPerFloat * 3\r\n      when 'string' then 4\r\n      when 'Thang' then 4  # turn them into strings of their ids\r\n      when 'array'  then 4  # turn them into strings and hope it doesn't explode?\r\n      else 0\r\n    # We need to be a multiple of bytesPerFloat otherwise bigger-byte array (Float64Array, etc.) offsets won't work\r\n    # http://www.kirupa.com/forum/showthread.php?378737-Typed-Arrays-Y-U-No-offset-at-values-other-than-multiples-of-element-size\r\n    bytesPerFloat * Math.ceil(nFrames * bytes / bytesPerFloat)\r\n\r\n  @createArrayForType: (type, nFrames, buffer, offset) ->\r\n    bytes = @transferableBytesNeededForType type, nFrames\r\n    storage = switch type\r\n      when 'boolean'\r\n        new Uint8Array(buffer, offset, nFrames)\r\n      when 'number'\r\n        new FloatArrayType(buffer, offset, nFrames)\r\n      when 'Vector'\r\n        new FloatArrayType(buffer, offset, nFrames * 3)\r\n      when 'string'\r\n        new Uint32Array(buffer, offset, nFrames)\r\n      when 'Thang'\r\n        new Uint32Array(buffer, offset, nFrames)\r\n      when 'array'\r\n        new Uint32Array(buffer, offset, nFrames)\r\n      else\r\n        []\r\n    [storage, bytes]\r\n\r\nunless typedArraySupport\r\n  # Fall back to normal arrays in IE 9\r\n  ThangState.createArrayForType = (type, nFrames, buffer, offset) ->\r\n    bytes = @transferableBytesNeededForType type, nFrames\r\n    elementsPerFrame = if type is 'Vector' then 3 else 1\r\n    storage = (0 for i in [0 ... nFrames * elementsPerFrame])\r\n    [storage, bytes]\r\n","# https://github.com/hornairs/blog/blob/master/assets/coffeescripts/flocking/vector.coffee\r\nclass Vector\r\n  @className: 'Vector'\r\n  # Class methods for nondestructively operating\r\n  for name in ['add', 'subtract', 'multiply', 'divide', 'limit', 'normalize', 'rotate']\r\n    do (name) ->\r\n      Vector[name] = (a, b, useZ) ->\r\n        a.copy()[name](b, useZ)\r\n  for name in ['magnitude', 'heading', 'distance', 'dot', 'equals', 'copy', 'distanceSquared']\r\n    do (name) ->\r\n      Vector[name] = (a, b, useZ) ->\r\n        a[name](b, useZ)\r\n\r\n  isVector: true\r\n  apiProperties: ['x', 'y', 'z', 'magnitude', 'heading', 'distance', 'dot', 'equals', 'copy', 'distanceSquared', 'add', 'subtract', 'multiply', 'divide', 'limit', 'normalize', 'rotate']\r\n\r\n  constructor: (x=0, y=0, z=0) ->\r\n    return new Vector x, y, z unless @ instanceof Vector\r\n    [@x, @y, @z] = [x, y, z]\r\n\r\n  copy: ->\r\n    new Vector(@x, @y, @z)\r\n\r\n\r\n  # Mutating methods:\r\n\r\n  normalize: (useZ) ->\r\n    m = @magnitude useZ\r\n    @divide m, useZ if m > 0\r\n    @\r\n\r\n  esper_normalize: (useZ) ->\r\n    @copy().normalize(useZ)\r\n\r\n  limit: (max) ->\r\n    if @magnitude() > max\r\n      @normalize()\r\n      @multiply(max)\r\n    else\r\n      @\r\n\r\n  esper_limit: (max) ->\r\n    @copy().limit(max)\r\n\r\n  subtract: (other, useZ) ->\r\n    @x -= other.x\r\n    @y -= other.y\r\n    @z -= other.z if useZ\r\n    @\r\n\r\n  esper_subtract: (other, useZ) ->\r\n    @copy().subtract(other, useZ)\r\n\r\n  add: (other, useZ) ->\r\n    @x += other.x\r\n    @y += other.y\r\n    @z += other.z if useZ\r\n    @\r\n\r\n  esper_add: (other, useZ) ->\r\n    @copy().add(other, useZ)\r\n\r\n  divide: (n, useZ) ->\r\n    [@x, @y] = [@x / n, @y / n]\r\n    @z = @z / n if useZ\r\n    @\r\n\r\n  esper_divide: (n, useZ) ->\r\n    @copy().divide(n, useZ)\r\n\r\n  multiply: (n, useZ) ->\r\n    [@x, @y] = [@x * n, @y * n]\r\n    @z = @z * n if useZ\r\n    @\r\n\r\n  esper_multiply: (n, useZ) ->\r\n    @copy().multiply(n, useZ)\r\n\r\n  # Rotate it around the origin\r\n  # If we ever want to make this also use z: https://en.wikipedia.org/wiki/Axes_conventions\r\n  rotate: (theta) ->\r\n    return @ unless theta\r\n    [@x, @y] = [Math.cos(theta) * @x - Math.sin(theta) * @y, Math.sin(theta) * @x + Math.cos(theta) * @y]\r\n    @\r\n\r\n  esper_rotate: (theta) ->\r\n    @copy().rotate(theta)\r\n\r\n  # Non-mutating methods:\r\n\r\n  magnitude: (useZ) ->\r\n    sum = @x * @x + @y * @y\r\n    sum += @z * @z if useZ\r\n    Math.sqrt sum\r\n\r\n  magnitudeSquared: (useZ) ->\r\n    sum = @x * @x + @y * @y\r\n    sum += @z * @z if useZ\r\n    sum\r\n\r\n  heading: ->\r\n    -1 * Math.atan2(-1 * @y, @x)\r\n\r\n  distance: (other, useZ) ->\r\n    dx = @x - other.x\r\n    dy = @y - other.y\r\n    sum = dx * dx + dy * dy\r\n    if useZ\r\n      dz = @z - other.z\r\n      sum += dz * dz\r\n    Math.sqrt sum\r\n\r\n  distanceSquared: (other, useZ) ->\r\n    dx = @x - other.x\r\n    dy = @y - other.y\r\n    sum = dx * dx + dy * dy\r\n    if useZ\r\n      dz = @z - other.z\r\n      sum += dz * dz\r\n    sum\r\n\r\n  dot: (other, useZ) ->\r\n    sum = @x * other.x + @y * other.y\r\n    sum += @z * other.z if useZ\r\n    sum\r\n\r\n  # Not the strict projection, the other isn't converted to a unit vector first.\r\n  projectOnto: (other, useZ) ->\r\n    other.copy().multiply(@dot(other, useZ), useZ)\r\n\r\n  isZero: (useZ) ->\r\n    result = @x is 0 and @y is 0\r\n    result = result and @z is 0 if useZ\r\n    result\r\n\r\n  equals: (other, useZ) ->\r\n    result = other and @x is other.x and @y is other.y\r\n    result = result and @z is other.z if useZ\r\n    result\r\n\r\n  invalid: () ->\r\n    return (@x is Infinity) || isNaN(@x) || @y is Infinity || isNaN(@y) || @z is Infinity || isNaN(@z)\r\n\r\n  toString: (precision = 2) ->\r\n    return \"{x: #{@x.toFixed(precision)}, y: #{@y.toFixed(precision)}, z: #{@z.toFixed(precision)}}\"\r\n\r\n\r\n  serialize: ->\r\n    {CN: @constructor.className, x: @x, y: @y, z: @z}\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    new Vector o.x, o.y, o.z\r\n\r\n  serializeForAether: -> @serialize()\r\n  @deserializeFromAether: (o) -> @deserialize o\r\n\r\nmodule.exports = Vector\r\n","Vector = require './vector'\r\nRectangle = require './rectangle'\r\nEllipse = require './ellipse'\r\nLineSegment = require './line_segment'\r\nWorldFrame = require './world_frame'\r\nThang = require './thang'\r\nThangState = require './thang_state'\r\nRand = require './rand'\r\nWorldScriptNote = require './world_script_note'\r\n{now, consolidateThangs, typedArraySupport} = require './world_utils'\r\nComponent = require 'lib/world/component'\r\nSystem = require 'lib/world/system'\r\nPROGRESS_UPDATE_INTERVAL = 100\r\nDESERIALIZATION_INTERVAL = 10\r\nREAL_TIME_BUFFER_MIN = 2 * PROGRESS_UPDATE_INTERVAL\r\nREAL_TIME_BUFFER_MAX = 3 * PROGRESS_UPDATE_INTERVAL\r\nREAL_TIME_BUFFERED_WAIT_INTERVAL = 0.5 * PROGRESS_UPDATE_INTERVAL\r\nREAL_TIME_COUNTDOWN_DELAY = 3000  # match CountdownScreen\r\nITEM_ORIGINAL = '53e12043b82921000051cdf9'\r\nEXISTS_ORIGINAL = '524b4150ff92f1f4f8000024'\r\nCOUNTDOWN_LEVELS = ['sky-span']\r\n\r\nmodule.exports = class World\r\n  @className: 'World'\r\n  age: 0\r\n  ended: false\r\n  preloading: false  # Whether we are just preloading a world in case we soon cast it\r\n  debugging: false  # Whether we are just rerunning to debug a world we've already cast\r\n  headless: false  # Whether we are just simulating for goal states instead of all serialized results\r\n  framesSerializedSoFar: 0\r\n  framesClearedSoFar: 0\r\n  apiProperties: ['age', 'dt']\r\n  realTimeBufferMax: REAL_TIME_BUFFER_MAX / 1000\r\n  constructor: (@userCodeMap, classMap) ->\r\n    # classMap is needed for deserializing Worlds, Thangs, and other classes\r\n    @classMap = classMap ? {Vector: Vector, Rectangle: Rectangle, Thang: Thang, Ellipse: Ellipse, LineSegment: LineSegment}\r\n    Thang.resetThangIDs()\r\n\r\n    @userCodeMap ?= {}\r\n    @thangs = []\r\n    @thangMap = {}\r\n    @systems = []\r\n    @systemMap = {}\r\n    @scriptNotes = []\r\n    @rand = new Rand 0  # Existence System may change this seed\r\n    @frames = [new WorldFrame(@, 0)]\r\n\r\n  destroy: ->\r\n    @goalManager?.destroy()\r\n    thang.destroy() for thang in @thangs\r\n    @[key] = undefined for key of @\r\n    @destroyed = true\r\n    @destroy = ->\r\n\r\n  getFrame: (frameIndex) ->\r\n    # Optimize it a bit--assume we have all if @ended and are at the previous frame otherwise\r\n    frames = @frames\r\n    if @ended\r\n      frame = frames[frameIndex]\r\n    else if frameIndex\r\n      frame = frames[frameIndex - 1].getNextFrame()\r\n      frames.push frame\r\n    else\r\n      frame = frames[0]\r\n    @age = frameIndex * @dt\r\n    frame\r\n\r\n  getThangByID: (id) ->\r\n    @thangMap[id]\r\n\r\n  setThang: (thang) ->\r\n    thang.stateChanged = true\r\n    for old, i in @thangs\r\n      if old.id is thang.id\r\n        @thangs[i] = thang\r\n        break\r\n    @thangMap[thang.id] = thang\r\n\r\n  thangDialogueSounds: (startFrame=0) ->\r\n    return [] unless startFrame < @frames.length\r\n    [sounds, seen] = [[], {}]\r\n    for frameIndex in [startFrame ... @frames.length]\r\n      frame = @frames[frameIndex]\r\n      for thangID, state of frame.thangStateMap\r\n        continue unless state.thang.say and sayMessage = state.getStateForProp 'sayMessage'\r\n        soundKey = state.thang.spriteName + ':' + sayMessage\r\n        unless seen[soundKey]\r\n          sounds.push [state.thang.spriteName, sayMessage]\r\n          seen[soundKey] = true\r\n    sounds\r\n\r\n  setGoalManager: (@goalManager) ->\r\n\r\n  addError: (error) ->\r\n    (@runtimeErrors ?= []).push error\r\n    (@unhandledRuntimeErrors ?= []).push error\r\n\r\n  loadFrames: (loadedCallback, errorCallback, loadProgressCallback, preloadedCallback, skipDeferredLoading, loadUntilFrame) ->\r\n    return if @aborted\r\n    @totalFrames = 2 if @justBegin\r\n    console.log 'Warning: loadFrames called on empty World (no thangs).' unless @thangs.length\r\n    continueLaterFn = =>\r\n      @loadFrames(loadedCallback, errorCallback, loadProgressCallback, preloadedCallback, skipDeferredLoading, loadUntilFrame) unless @destroyed\r\n    if @realTime and not @countdownFinished\r\n      @realTimeSpeedFactor = 1\r\n      unless @showsCountdown\r\n        if @levelID in ['woodland-cleaver', 'village-guard', 'shield-rush']\r\n          @realTimeSpeedFactor = 2\r\n        else if @levelID in ['thornbush-farm', 'back-to-back', 'ogre-encampment', 'peasant-protection', 'munchkin-swarm', 'munchkin-harvest', 'swift-dagger', 'shrapnel', 'arcane-ally', 'touch-of-death', 'bonemender']\r\n          @realTimeSpeedFactor = 3\r\n      if @showsCountdown\r\n        return setTimeout @finishCountdown(continueLaterFn), REAL_TIME_COUNTDOWN_DELAY\r\n      else\r\n        @finishCountdown continueLaterFn\r\n    t1 = now()\r\n    @t0 ?= t1\r\n    @worldLoadStartTime ?= t1\r\n    @lastRealTimeUpdate ?= 0\r\n    frameToLoadUntil = if loadUntilFrame then loadUntilFrame + 1 else @totalFrames  # Might stop early if debugging.\r\n    i = @frames.length\r\n    while true\r\n      if @indefiniteLength\r\n        break if not @realTime # realtime has been stopped\r\n        break if @victory? # game won or lost  # TODO: give a couple seconds of buffer after victory is set instead of ending instantly\r\n      else\r\n        break if i >= frameToLoadUntil\r\n        break if i >= @totalFrames\r\n      return unless @shouldContinueLoading t1, loadProgressCallback, skipDeferredLoading, continueLaterFn\r\n      @adjustFlowSettings loadUntilFrame if @debugging\r\n      try\r\n        @getFrame(i)\r\n        ++i  # Increment this after we have succeeded in getting the frame, otherwise we'll have to do that frame again\r\n      catch error\r\n        @addError error  # Not an Aether.errors.UserCodeError; maybe we can't recover\r\n      unless @preloading or @debugging\r\n        for error in (@unhandledRuntimeErrors ? [])\r\n          return unless errorCallback error  # errorCallback tells us whether the error is recoverable\r\n        @unhandledRuntimeErrors = []\r\n    @finishLoadingFrames loadProgressCallback, loadedCallback, preloadedCallback\r\n\r\n  finishLoadingFrames: (loadProgressCallback, loadedCallback, preloadedCallback) ->\r\n    unless @debugging\r\n      @ended = true\r\n      system.finish @thangs for system in @systems\r\n    if @preloading\r\n      preloadedCallback()\r\n    else\r\n      loadProgressCallback? 1\r\n      loadedCallback()\r\n\r\n  finishCountdown: (continueLaterFn) -> =>\r\n    return if @destroyed\r\n    @countdownFinished = true\r\n    continueLaterFn()\r\n\r\n  shouldDelayRealTimeSimulation: (t) ->\r\n    return false unless @realTime\r\n    timeSinceStart = (t - @worldLoadStartTime) * @realTimeSpeedFactor\r\n    timeLoaded = @frames.length * @dt * 1000\r\n    timeBuffered = timeLoaded - timeSinceStart\r\n    if @indefiniteLength\r\n      return timeBuffered > 0\r\n    else\r\n      return timeBuffered > REAL_TIME_BUFFER_MAX * @realTimeSpeedFactor\r\n\r\n  shouldUpdateRealTimePlayback: (t) ->\r\n    return false unless @realTime\r\n    return false if @frames.length * @dt is @lastRealTimeUpdate\r\n    timeLoaded = @frames.length * @dt * 1000\r\n    timeSinceStart = (t - @worldLoadStartTime) * @realTimeSpeedFactor\r\n    remainingBuffer = @lastRealTimeUpdate * 1000 - timeSinceStart\r\n    if @indefiniteLength\r\n      return remainingBuffer <= 0\r\n    else\r\n      return remainingBuffer < REAL_TIME_BUFFER_MIN * @realTimeSpeedFactor\r\n\r\n  shouldContinueLoading: (t1, loadProgressCallback, skipDeferredLoading, continueLaterFn) ->\r\n    t2 = now()\r\n    chunkSize = @frames.length - @framesSerializedSoFar\r\n    simedTime = @frames.length / @frameRate\r\n\r\n    chunkTime = switch\r\n      when simedTime > 15 then 7\r\n      when simedTime > 10 then 5\r\n      when simedTime > 5 then 3\r\n      when simedTime > 2 then 1\r\n      else 0.5\r\n\r\n    bailoutTime = Math.max(2000*chunkTime, 10000)\r\n\r\n    dt = t2 - t1\r\n\r\n    if @realTime\r\n      shouldUpdateProgress = @shouldUpdateRealTimePlayback t2\r\n      shouldDelayRealTimeSimulation = not shouldUpdateProgress and @shouldDelayRealTimeSimulation t2\r\n    else\r\n      shouldUpdateProgress = (dt > PROGRESS_UPDATE_INTERVAL and (chunkSize / @frameRate >= chunkTime) or dt > bailoutTime)\r\n      shouldDelayRealTimeSimulation = false\r\n    return true unless shouldUpdateProgress or shouldDelayRealTimeSimulation\r\n    # Stop loading frames for now; continue in a moment.\r\n    if shouldUpdateProgress\r\n      @lastRealTimeUpdate = @frames.length * @dt if @realTime\r\n      #console.log 'we think it is now', (t2 - @worldLoadStartTime) / 1000, 'so delivering', @lastRealTimeUpdate\r\n      loadProgressCallback? @frames.length / @totalFrames unless @preloading\r\n    t1 = t2\r\n    if t2 - @t0 > 1000\r\n      console.log '  Loaded', @frames.length, 'of', @totalFrames, '(+' + (t2 - @t0).toFixed(0) + 'ms)' unless @realTime\r\n      @t0 = t2\r\n    if skipDeferredLoading\r\n      continueLaterFn()\r\n    else\r\n      delay = 0\r\n      if shouldDelayRealTimeSimulation\r\n        if @indefiniteLength\r\n          delay = 1000 / 30\r\n        else\r\n          delay = REAL_TIME_BUFFERED_WAIT_INTERVAL\r\n      setTimeout continueLaterFn, delay\r\n    false\r\n\r\n  adjustFlowSettings: (loadUntilFrame) ->\r\n    for thang in @thangs when thang.isProgrammable\r\n      userCode = @userCodeMap[thang.id] ? {}\r\n      for methodName, aether of userCode\r\n        framesToLoadFlowBefore = if methodName is 'plan' or methodName is 'makeBid' then 200 else 1  # Adjust if plan() is taking even longer\r\n        aether._shouldSkipFlow = @frames.length < loadUntilFrame - framesToLoadFlowBefore\r\n\r\n  finalizePreload: (loadedCallback) ->\r\n    @preloading = false\r\n    loadedCallback() if @ended\r\n\r\n  abort: ->\r\n    @aborted = true\r\n\r\n  addFlagEvent: (flagEvent) ->\r\n    @flagHistory.push flagEvent\r\n\r\n  addRealTimeInputEvent: (realTimeInputEvent) ->\r\n    @realTimeInputEvents.push realTimeInputEvent\r\n\r\n  loadFromLevel: (level, willSimulate=true) ->\r\n    @levelID = level.slug\r\n    @levelComponents = level.levelComponents\r\n    @thangTypes = level.thangTypes\r\n    @loadScriptsFromLevel level\r\n    @loadSystemsFromLevel level\r\n    @loadThangsFromLevel level, willSimulate\r\n    @showsCountdown = @levelID in COUNTDOWN_LEVELS or _.any(@thangs, (t) -> (t.programmableProperties and 'findFlags' in t.programmableProperties) or t.inventory?.flag)\r\n    @picoCTFProblem = level.picoCTFProblem if level.picoCTFProblem\r\n    if @picoCTFProblem?.instances and not @picoCTFProblem.flag_sha1\r\n      @picoCTFProblem = _.merge @picoCTFProblem, @picoCTFProblem.instances[0]\r\n    system.start @thangs for system in @systems\r\n\r\n  loadSystemsFromLevel: (level) ->\r\n    # Remove old Systems\r\n    @systems = []\r\n    @systemMap = {}\r\n\r\n    # Load new Systems\r\n    for levelSystem in level.systems\r\n      systemModel = levelSystem.model\r\n      config = levelSystem.config\r\n      systemClass = @loadClassFromCode systemModel.js, systemModel.name, 'system'\r\n      #console.log \"using db system class ---\\n\", systemClass, \"\\n--- from code ---n\", systemModel.js, \"\\n---\"\r\n      system = new systemClass @, config\r\n      @addSystems system\r\n    null\r\n\r\n  loadThangsFromLevel: (level, willSimulate) ->\r\n    # Remove old Thangs\r\n    @thangs = []\r\n    @thangMap = {}\r\n\r\n    # Load new Thangs\r\n    toAdd = (@loadThangFromLevel thangConfig, level.levelComponents, level.thangTypes for thangConfig in level.thangs ? [])\r\n    @extraneousThangs = consolidateThangs toAdd if willSimulate  # Combine walls, for example; serialize the leftovers later\r\n    @addThang thang for thang in toAdd\r\n    null\r\n\r\n  loadThangFromLevel: (thangConfig, levelComponents, thangTypes, equipBy=null) ->\r\n    components = []\r\n    for component, componentIndex in thangConfig.components\r\n      componentModel = _.find levelComponents, (c) ->\r\n        c.original is component.original and c.version.major is (component.majorVersion ? 0)\r\n      componentClass = @loadClassFromCode componentModel.js, componentModel.name, 'component'\r\n      components.push [componentClass, component.config]\r\n      if component.original is ITEM_ORIGINAL\r\n        isItem = true\r\n        component.config.ownerID = equipBy if equipBy\r\n      else if component.original is EXISTS_ORIGINAL\r\n        existsConfigIndex = componentIndex\r\n    if isItem and existsConfigIndex?\r\n      # For memory usage performance, make sure these don't get any tracked properties assigned.\r\n      components[existsConfigIndex][1] = {exists: false, stateless: true}\r\n    thangTypeOriginal = thangConfig.thangType\r\n    thangTypeModel = _.find thangTypes, (t) -> t.original is thangTypeOriginal\r\n    return console.error thangConfig.id ? equipBy, 'could not find ThangType for', thangTypeOriginal unless thangTypeModel\r\n    thangTypeName = thangTypeModel.name\r\n    thang = new Thang @, thangTypeName, thangConfig.id\r\n    try\r\n      thang.addComponents components...\r\n    catch e\r\n      console.error 'couldn\\'t load components for', thangTypeOriginal, thangConfig.id, 'because', e.toString(), e.stack\r\n    thang\r\n\r\n  addThang: (thang) ->\r\n    @thangs.unshift thang  # Interactions happen in reverse order of specification/drawing\r\n    @setThang thang\r\n    @updateThangState thang\r\n    thang.updateRegistration()\r\n    thang\r\n\r\n  loadScriptsFromLevel: (level) ->\r\n    @scriptNotes = []\r\n    @scripts = []\r\n    @addScripts level.scripts...\r\n\r\n  loadClassFromCode: (js, name, kind='component') ->\r\n    # Cache them based on source code so we don't have to worry about extra compilations\r\n    @componentCodeClassMap ?= {}\r\n    @systemCodeClassMap ?= {}\r\n    map = if kind is 'component' then @componentCodeClassMap else @systemCodeClassMap\r\n    c = map[js]\r\n    return c if c\r\n    try\r\n      c = map[js] = eval js\r\n    catch err\r\n      console.error \"Couldn't compile #{kind} code:\", err, \"\\n\", js\r\n      c = map[js] = {}\r\n    c.className = name\r\n    c\r\n\r\n  updateThangState: (thang) ->\r\n    @frames[@frames.length-1].thangStateMap[thang.id] = thang.getState()\r\n\r\n  size: ->\r\n    @calculateBounds() unless @width? and @height?\r\n    return [@width, @height] if @width? and @height?\r\n\r\n  getBounds: ->\r\n    @calculateBounds() unless @bounds?\r\n    return @bounds\r\n\r\n  calculateBounds: ->\r\n    bounds = {left: 0, top: 0, right: 0, bottom: 0}\r\n    hasLand = _.some @thangs, 'isLand'\r\n    for thang in @thangs when thang.isLand or (not hasLand and thang.rectangle)  # Look at Lands only\r\n      rect = thang.rectangle().axisAlignedBoundingBox()\r\n      bounds.left = Math.min(bounds.left, rect.x - rect.width / 2)\r\n      bounds.right = Math.max(bounds.right, rect.x + rect.width / 2)\r\n      bounds.bottom = Math.min(bounds.bottom, rect.y - rect.height / 2)\r\n      bounds.top = Math.max(bounds.top, rect.y + rect.height / 2)\r\n    @width = bounds.right - bounds.left\r\n    @height = bounds.top - bounds.bottom\r\n    @bounds = bounds\r\n    [@width, @height]\r\n\r\n  publishNote: (channel, event) ->\r\n    event ?= {}\r\n    channel = 'world:' + channel\r\n    for script in @scripts ? []\r\n      continue if script.channel isnt channel\r\n      scriptNote = new WorldScriptNote script, event\r\n      continue if scriptNote.invalid\r\n      @scriptNotes.push scriptNote\r\n    return unless @goalManager\r\n    @goalManager.submitWorldGenerationEvent(channel, event, @frames.length)\r\n\r\n  getGoalState: (goalID) ->\r\n    @goalManager.getGoalState(goalID)\r\n\r\n  setGoalState: (goalID, status) ->\r\n    @goalManager.setGoalState(goalID, status)\r\n\r\n  endWorld: (victory=false, delay=3, tentative=false) ->\r\n    @totalFrames = Math.min(@totalFrames, @frames.length + Math.floor(delay / @dt))  # end a few seconds later\r\n    @victory = victory  # TODO: should just make this signify the winning superteam\r\n    @victoryIsTentative = tentative\r\n    status = if @victory then 'won' else 'lost'\r\n    @publishNote status\r\n    console.log \"The world ended in #{status} on frame #{@totalFrames}\"\r\n\r\n  addSystems: (systems...) ->\r\n    @systems = @systems.concat systems\r\n    for system in systems\r\n      @systemMap[system.constructor.className] = system\r\n  getSystem: (systemClassName) ->\r\n    @systemMap?[systemClassName]\r\n\r\n  addScripts: (scripts...) ->\r\n    @scripts = (@scripts ? []).concat scripts\r\n\r\n  addTrackedProperties: (props...) ->\r\n    @trackedProperties = (@trackedProperties ? []).concat props\r\n\r\n  serialize: ->\r\n    # Code hotspot; optimize it\r\n    @freeMemoryBeforeFinalSerialization() if @ended\r\n    startFrame = @framesSerializedSoFar\r\n    endFrame = @frames.length\r\n    if @indefiniteLength\r\n      toClear = Math.max(@framesSerializedSoFar-10, 0)\r\n      for i in _.range(@framesClearedSoFar, toClear)\r\n        @frames[i] = null\r\n      @framesClearedSoFar = @framesSerializedSoFar\r\n    #console.log \"... world serializing frames from\", startFrame, \"to\", endFrame, \"of\", @totalFrames\r\n    [transferableObjects, nontransferableObjects] = [0, 0]\r\n    serializedFlagHistory = (_.omit(_.clone(flag), 'processed') for flag in @flagHistory)\r\n    o = {totalFrames: @totalFrames, maxTotalFrames: @maxTotalFrames, frameRate: @frameRate, dt: @dt, victory: @victory, userCodeMap: {}, trackedProperties: {}, flagHistory: serializedFlagHistory, difficulty: @difficulty, scores: @getScores(), randomSeed: @randomSeed, picoCTFFlag: @picoCTFFlag}\r\n    o.trackedProperties[prop] = @[prop] for prop in @trackedProperties or []\r\n\r\n    for thangID, methods of @userCodeMap\r\n      serializedMethods = o.userCodeMap[thangID] = {}\r\n      for methodName, method of methods\r\n        serializedMethods[methodName] = method.serialize?() ? method # serialize the method again if it has been deserialized\r\n\r\n    t0 = now()\r\n    o.trackedPropertiesThangIDs = []\r\n    o.trackedPropertiesPerThangIndices = []\r\n    o.trackedPropertiesPerThangKeys = []\r\n    o.trackedPropertiesPerThangTypes = []\r\n    trackedPropertiesPerThangValues = []  # We won't send these, just the offsets and the storage buffer\r\n    o.trackedPropertiesPerThangValuesOffsets = []  # Needed to reconstruct ArrayBufferViews on other end, since Firefox has bugs transfering those: https://bugzilla.mozilla.org/show_bug.cgi?id=841904 and https://bugzilla.mozilla.org/show_bug.cgi?id=861925  # Actually, as of January 2014, it should be fixed. So we could try to undo the workaround.\r\n    transferableStorageBytesNeeded = 0\r\n    nFrames = endFrame - startFrame\r\n    for thang in @thangs\r\n      # Don't serialize empty trackedProperties for stateless Thangs which haven't changed (like obstacles).\r\n      # Check both, since sometimes people mark stateless Thangs but then change them, and those should still be tracked, and the inverse doesn't work on the other end (we'll just think it doesn't exist then).\r\n      # If streaming the world, a thang marked stateless that actually change will get messed up. I think.\r\n      continue if thang.stateless and not _.some(thang.trackedPropertiesUsed, Boolean)\r\n      o.trackedPropertiesThangIDs.push thang.id\r\n      trackedPropertiesIndices = []\r\n      trackedPropertiesKeys = []\r\n      trackedPropertiesTypes = []\r\n      for used, propIndex in thang.trackedPropertiesUsed\r\n        continue unless used\r\n        trackedPropertiesIndices.push propIndex\r\n        trackedPropertiesKeys.push thang.trackedPropertiesKeys[propIndex]\r\n        trackedPropertiesTypes.push thang.trackedPropertiesTypes[propIndex]\r\n      o.trackedPropertiesPerThangIndices.push trackedPropertiesIndices\r\n      o.trackedPropertiesPerThangKeys.push trackedPropertiesKeys\r\n      o.trackedPropertiesPerThangTypes.push trackedPropertiesTypes\r\n      trackedPropertiesPerThangValues.push []\r\n      o.trackedPropertiesPerThangValuesOffsets.push []\r\n      for type in trackedPropertiesTypes\r\n        transferableStorageBytesNeeded += ThangState.transferableBytesNeededForType(type, nFrames)\r\n    if typedArraySupport\r\n      o.storageBuffer = new ArrayBuffer(transferableStorageBytesNeeded)\r\n    else\r\n      o.storageBuffer = []\r\n    storageBufferOffset = 0\r\n    for trackedPropertiesValues, thangIndex in trackedPropertiesPerThangValues\r\n      trackedPropertiesValuesOffsets = o.trackedPropertiesPerThangValuesOffsets[thangIndex]\r\n      for type, propIndex in o.trackedPropertiesPerThangTypes[thangIndex]\r\n        [storage, bytesStored] = ThangState.createArrayForType type, nFrames, o.storageBuffer, storageBufferOffset\r\n        trackedPropertiesValues.push storage\r\n        trackedPropertiesValuesOffsets.push storageBufferOffset\r\n        ++transferableObjects if bytesStored\r\n        ++nontransferableObjects unless bytesStored\r\n        if typedArraySupport\r\n          storageBufferOffset += bytesStored\r\n        else\r\n          # Instead of one big array with each storage as a view into it, they're all separate, so let's keep 'em around for flattening.\r\n          storageBufferOffset += storage.length\r\n          o.storageBuffer.push storage\r\n\r\n    o.specialKeysToValues = [null, Infinity, NaN]\r\n    # Whatever is in specialKeysToValues index 0 will be default for anything missing, so let's make sure it's null.\r\n    # Don't think we can include undefined or it'll be treated as a sparse array; haven't tested performance.\r\n    o.specialValuesToKeys = {}\r\n    for specialValue, i in o.specialKeysToValues\r\n      o.specialValuesToKeys[specialValue] = i\r\n\r\n    t1 = now()\r\n    o.frameHashes = []\r\n    for frameIndex in [startFrame ... endFrame]\r\n      o.frameHashes.push @frames[frameIndex].serialize(frameIndex - startFrame, o.trackedPropertiesThangIDs, o.trackedPropertiesPerThangIndices, o.trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, o.specialValuesToKeys, o.specialKeysToValues)\r\n    t2 = now()\r\n\r\n    unless typedArraySupport\r\n      flattened = []\r\n      for storage in o.storageBuffer\r\n        for value in storage\r\n          flattened.push value\r\n      o.storageBuffer = flattened\r\n\r\n    #console.log 'Allocating memory:', (t1 - t0).toFixed(0), 'ms; assigning values:', (t2 - t1).toFixed(0), 'ms, so', ((t2 - t1) / nFrames).toFixed(3), 'ms per frame for', nFrames, 'frames'\r\n    #console.log 'Got', transferableObjects, 'transferable objects and', nontransferableObjects, 'nontransferable; stored', transferableStorageBytesNeeded, 'bytes transferably'\r\n\r\n    o.thangs = (t.serialize() for t in @thangs.concat(@extraneousThangs ? []))\r\n    o.scriptNotes = (sn.serialize() for sn in @scriptNotes)\r\n    if o.scriptNotes.length > 200\r\n      console.log 'Whoa, serializing a lot of WorldScriptNotes here:', o.scriptNotes.length\r\n    @freeMemoryAfterEachSerialization() unless @ended\r\n    {serializedWorld: o, transferableObjects: [o.storageBuffer], startFrame: startFrame, endFrame: endFrame}\r\n\r\n  @deserialize: (o, classMap, oldSerializedWorldFrames, finishedWorldCallback, startFrame, endFrame, level, streamingWorld) ->\r\n    # Code hotspot; optimize it\r\n    #console.log 'Deserializing', o, 'length', JSON.stringify(o).length\r\n    #console.log JSON.stringify(o)\r\n    #console.log 'Got special keys and values:', o.specialValuesToKeys, o.specialKeysToValues\r\n    perf = {}\r\n    perf.t0 = now()\r\n    nFrames = endFrame - startFrame\r\n    if streamingWorld\r\n      w = streamingWorld\r\n      # Make sure we get any Aether updates from the new frames into the already-deserialized streaming world Aethers.\r\n      for thangID, methods of o.userCodeMap\r\n        for methodName, serializedAether of methods\r\n          for aetherStateKey in ['flow', 'metrics', 'style', 'problems']\r\n            w.userCodeMap[thangID] ?= {}\r\n            w.userCodeMap[thangID][methodName] ?= {}\r\n            w.userCodeMap[thangID][methodName][aetherStateKey] = serializedAether[aetherStateKey]\r\n    else\r\n      w = new World o.userCodeMap, classMap\r\n    [w.totalFrames, w.maxTotalFrames, w.frameRate, w.dt, w.scriptNotes, w.victory, w.flagHistory, w.difficulty, w.scores, w.randomSeed, w.picoCTFFlag] = [o.totalFrames, o.maxTotalFrames, o.frameRate, o.dt, o.scriptNotes ? [], o.victory, o.flagHistory, o.difficulty, o.scores, o.randomSeed, o.picoCTFFlag]\r\n    w[prop] = val for prop, val of o.trackedProperties\r\n\r\n    perf.t1 = now()\r\n    if w.thangs.length\r\n      for thangConfig in o.thangs\r\n        if thang = w.thangMap[thangConfig.id]\r\n          for prop, val of thangConfig.finalState\r\n            thang[prop] = val\r\n        else\r\n          w.thangs.push thang = Thang.deserialize(thangConfig, w, classMap, level.levelComponents)\r\n          w.setThang thang\r\n    else\r\n      w.thangs = (Thang.deserialize(thang, w, classMap, level.levelComponents) for thang in o.thangs)\r\n      w.setThang thang for thang in w.thangs\r\n    w.scriptNotes = (WorldScriptNote.deserialize(sn, w, classMap) for sn in o.scriptNotes)\r\n    perf.t2 = now()\r\n\r\n    o.trackedPropertiesThangs = (w.getThangByID thangID for thangID in o.trackedPropertiesThangIDs)\r\n    o.trackedPropertiesPerThangValues = []\r\n    for trackedPropertyTypes, thangIndex in o.trackedPropertiesPerThangTypes\r\n      o.trackedPropertiesPerThangValues.push (trackedPropertiesValues = [])\r\n      trackedPropertiesValuesOffsets = o.trackedPropertiesPerThangValuesOffsets[thangIndex]\r\n      for type, propIndex in trackedPropertyTypes\r\n        storage = ThangState.createArrayForType(type, nFrames, o.storageBuffer, trackedPropertiesValuesOffsets[propIndex])[0]\r\n        unless typedArraySupport\r\n          # This could be more efficient\r\n          i = trackedPropertiesValuesOffsets[propIndex]\r\n          storage = o.storageBuffer.slice i, i + storage.length\r\n        trackedPropertiesValues.push storage\r\n    perf.t3 = now()\r\n\r\n    perf.batches = 0\r\n    perf.framesCPUTime = 0\r\n    w.frames = [] unless streamingWorld\r\n    clearTimeout @deserializationTimeout if @deserializationTimeout\r\n\r\n    if w.indefiniteLength\r\n      clearTo = Math.max(w.frames.length - 100, 0)\r\n      if clearTo > w.framesClearedSoFar\r\n        for i in _.range(w.framesClearedSoFar, clearTo)\r\n          w.frames[i] = null\r\n      w.framesClearedSoFar = clearTo\r\n\r\n    @deserializationTimeout = _.delay @deserializeSomeFrames, 1, o, w, finishedWorldCallback, perf, startFrame, endFrame\r\n    w  # Return in-progress deserializing world\r\n\r\n  # Spread deserialization out across multiple calls so the interface stays responsive\r\n  @deserializeSomeFrames: (o, w, finishedWorldCallback, perf, startFrame, endFrame) =>\r\n    ++perf.batches\r\n    startTime = now()\r\n    for frameIndex in [w.frames.length ... endFrame]\r\n      w.frames.push WorldFrame.deserialize(w, frameIndex - startFrame, o.trackedPropertiesThangIDs, o.trackedPropertiesThangs, o.trackedPropertiesPerThangKeys, o.trackedPropertiesPerThangTypes, o.trackedPropertiesPerThangValues, o.specialKeysToValues, o.frameHashes[frameIndex - startFrame], w.dt * frameIndex)\r\n      elapsed = now() - startTime\r\n      if elapsed > DESERIALIZATION_INTERVAL and frameIndex < endFrame - 1\r\n        #console.log \"  Deserialization not finished, let's do it again soon. Have:\", w.frames.length, \", wanted from\", startFrame, \"to\", endFrame\r\n        perf.framesCPUTime += elapsed\r\n        @deserializationTimeout = _.delay @deserializeSomeFrames, 1, o, w, finishedWorldCallback, perf, startFrame, endFrame\r\n        return\r\n    @deserializationTimeout = null\r\n    perf.framesCPUTime += elapsed\r\n    @finishDeserializing w, finishedWorldCallback, perf, startFrame, endFrame\r\n\r\n  @finishDeserializing: (w, finishedWorldCallback, perf, startFrame, endFrame) ->\r\n    perf.t4 = now()\r\n    w.ended = true\r\n    nFrames = endFrame - startFrame\r\n    totalCPUTime = perf.t3 - perf.t0 + perf.framesCPUTime\r\n    #console.log 'Deserialization:', totalCPUTime.toFixed(0) + 'ms (' + (totalCPUTime / nFrames).toFixed(3) + 'ms per frame).', perf.batches, 'batches. Did', startFrame, 'to', endFrame, 'in', (perf.t4 - perf.t0).toFixed(0) + 'ms wall clock time.'\r\n    if false\r\n      console.log '  Deserializing--constructing new World:', (perf.t1 - perf.t0).toFixed(2) + 'ms'\r\n      console.log '  Deserializing--Thangs and ScriptNotes:', (perf.t2 - perf.t1).toFixed(2) + 'ms'\r\n      console.log '  Deserializing--reallocating memory:', (perf.t3 - perf.t2).toFixed(2) + 'ms'\r\n      console.log '  Deserializing--WorldFrames:', (perf.t4 - perf.t3).toFixed(2) + 'ms wall clock time,', (perf.framesCPUTime).toFixed(2) + 'ms CPU time'\r\n    finishedWorldCallback w\r\n\r\n  findFirstChangedFrame: (oldWorld) ->\r\n    return 0 unless oldWorld\r\n    for newFrame, i in @frames\r\n      oldFrame = oldWorld.frames[i]\r\n      break unless oldFrame and ((newFrame.hash is oldFrame.hash) or not newFrame.hash? or not oldFrame.hash?)  # undefined gets in there when streaming at the last frame of each batch for some reason\r\n    firstChangedFrame = i\r\n    if @frames.length is @totalFrames\r\n      if @frames[i]\r\n        console.log 'First changed frame is', firstChangedFrame, 'with hash', @frames[i].hash, 'compared to', oldWorld.frames[i]?.hash\r\n      else\r\n        console.log 'No frames were changed out of all', @frames.length\r\n    firstChangedFrame\r\n\r\n  freeMemoryBeforeFinalSerialization: ->\r\n    @levelComponents = null\r\n    @thangTypes = null\r\n\r\n  freeMemoryAfterEachSerialization: ->\r\n    @frames[i] = null for frame, i in @frames when i < @frames.length - 1\r\n\r\n  pointsForThang: (thangID, camera=null) ->\r\n    # Optimized\r\n    @pointsForThangCache ?= {}\r\n    cacheKey = thangID\r\n    allPoints = @pointsForThangCache[cacheKey]\r\n    unless allPoints\r\n      allPoints = []\r\n      lastFrameIndex = @frames.length - 1\r\n      lastPos = x: null, y: null\r\n      for frameIndex in [lastFrameIndex .. 0] by -1\r\n        frame = @frames[frameIndex]\r\n        continue unless frame # may have been evicted for game dev levels\r\n        if pos = frame.thangStateMap[thangID]?.getStateForProp 'pos'\r\n          pos = camera.worldToSurface {x: pos.x, y: pos.y} if camera  # without z\r\n          if not lastPos.x? or (Math.abs(lastPos.x - pos.x) + Math.abs(lastPos.y - pos.y)) > 1\r\n            lastPos = pos\r\n        allPoints.push lastPos.y, lastPos.x unless lastPos.y is 0 and lastPos.x is 0\r\n      allPoints.reverse()\r\n      @pointsForThangCache[cacheKey] = allPoints\r\n\r\n    return allPoints\r\n\r\n  actionsForThang: (thangID, keepIdle=false) ->\r\n    # Optimized\r\n    @actionsForThangCache ?= {}\r\n    cacheKey = thangID + '_' + Boolean(keepIdle)\r\n    cached = @actionsForThangCache[cacheKey]\r\n    return cached if cached\r\n    states = (frame.thangStateMap[thangID] for frame in @frames)\r\n    actions = []\r\n    lastAction = ''\r\n    for state, i in states\r\n      action = state?.getStateForProp 'action'\r\n      continue unless action and (action isnt lastAction or state.actionActivated)\r\n      continue unless state.action isnt 'idle' or keepIdle\r\n      actions.push {frame: i, pos: state.pos, name: action}\r\n      lastAction = action\r\n    @actionsForThangCache[cacheKey] = actions\r\n    return actions\r\n\r\n  getTeamColors: ->\r\n    teamConfigs = @teamConfigs or {}\r\n    colorConfigs = {}\r\n    colorConfigs[teamName] = config.color for teamName, config of teamConfigs\r\n    colorConfigs\r\n\r\n  teamForPlayer: (n) ->\r\n    playableTeams = @playableTeams ? ['humans']\r\n    playableTeams[n % playableTeams.length]\r\n\r\n  getScores: ->\r\n    time: @age\r\n    'damage-taken': @getSystem('Combat')?.damageTakenForTeam 'humans'\r\n    'damage-dealt': @getSystem('Combat')?.damageDealtForTeam 'humans'\r\n    'gold-collected': @getSystem('Inventory')?.teamGold.humans?.collected\r\n    'difficulty': @difficulty\r\n","ThangState = require './thang_state'\r\n\r\nmodule.exports = class WorldFrame\r\n  @className: 'WorldFrame'\r\n\r\n  constructor: (@world, @time=0) ->\r\n    @thangStateMap = {}\r\n    @setState() if @world\r\n\r\n  getNextFrame: ->\r\n    # Optimized. Must be called while thangs are current at this frame.\r\n    nextTime = @time + @world.dt\r\n    return null if nextTime > @world.lifespan and not @world.indefiniteLength\r\n    @hash = @world.rand.seed\r\n    @hash += system.update() for system in @world.systems\r\n    nextFrame = new WorldFrame(@world, nextTime)\r\n    return nextFrame\r\n\r\n  setState: ->\r\n    for thang in @world.thangs when not thang.stateless\r\n      @thangStateMap[thang.id] = thang.getState()\r\n\r\n  restoreState: ->\r\n    thangState.restore() for thangID, thangState of @thangStateMap\r\n    for thang in @world.thangs\r\n      if not @thangStateMap[thang.id] and not thang.stateless\r\n        #console.log 'Frame', @time, 'restoring state for', thang.id, 'and saying it don\\'t exist'\r\n        thang.exists = false\r\n\r\n  restorePartialState: (ratio) ->\r\n    thangState.restorePartial ratio for thangID, thangState of @thangStateMap\r\n\r\n  restoreStateForThang: (thang) ->\r\n    thangState = @thangStateMap[thang.id]\r\n    if not thangState\r\n      if not thang.stateless\r\n        thang.exists = false\r\n        #console.log 'Frame', @time, 'restoring state for', thang.id, 'in particular and saying it don\\'t exist'\r\n      return\r\n    thangState.restore()\r\n\r\n  clearEvents: -> thang.currentEvents = [] for thang in @world.thangs\r\n\r\n  toString: ->\r\n    map = ((' ' for x in [0 .. @world.width])  \\\r\n           for y in [0 .. @world.height])\r\n    symbols = '.ox@dfga[]/D'\r\n    for thang, i in @world.thangs when thang.rectangle\r\n      rect = thang.rectangle().axisAlignedBoundingBox()\r\n      for y in [Math.floor(rect.y - rect.height / 2) ... Math.ceil(rect.y + rect.height / 2)]\r\n        for x in [Math.floor(rect.x - rect.width / 2) ... Math.ceil(rect.x + rect.width / 2)]\r\n          map[y][x] = symbols[i % symbols.length] if 0 <= y < @world.height and 0 <= x < @world.width\r\n    @time + '\\n' + (xs.join(' ') for xs in map).join('\\n') + '\\n'\r\n\r\n  serialize: (frameIndex, trackedPropertiesThangIDs, trackedPropertiesPerThangIndices, trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, specialValuesToKeys, specialKeysToValues) ->\r\n    # Optimize\r\n    for thangID, thangIndex in trackedPropertiesThangIDs\r\n      thangState = @thangStateMap[thangID]\r\n      if thangState\r\n        thangState.serialize(frameIndex, trackedPropertiesPerThangIndices[thangIndex], trackedPropertiesPerThangTypes[thangIndex], trackedPropertiesPerThangValues[thangIndex], specialValuesToKeys, specialKeysToValues)\r\n    @hash\r\n\r\n  @deserialize: (world, frameIndex, trackedPropertiesThangIDs, trackedPropertiesThangs, trackedPropertiesPerThangKeys, trackedPropertiesPerThangTypes, trackedPropertiesPerThangValues, specialKeysToValues, hash, age) ->\r\n    # Optimize\r\n    wf = new WorldFrame null, age\r\n    wf.world = world\r\n    wf.hash = hash\r\n    for thangID, thangIndex in trackedPropertiesThangIDs\r\n      wf.thangStateMap[thangID] = ThangState.deserialize world, frameIndex, trackedPropertiesThangs[thangIndex], trackedPropertiesPerThangKeys[thangIndex], trackedPropertiesPerThangTypes[thangIndex], trackedPropertiesPerThangValues[thangIndex], specialKeysToValues\r\n    wf\r\n","{clone} = require './world_utils'\r\n{scriptMatchesEventPrereqs} = require './script_event_prereqs'\r\n\r\nmodule.exports = class WorldScriptNote\r\n  @className: 'WorldScriptNote'\r\n  constructor: (script, @event, world) ->\r\n    return unless script?\r\n    @invalid = true\r\n    return unless scriptMatchesEventPrereqs(script, @event)\r\n    # Could add the scriptPrereqsSatisfied or seen/repeats stuff if needed\r\n    @invalid = false\r\n    @channel = script.channel\r\n    @event ?= {}\r\n    @event.replacedNoteChain = script.noteChain\r\n\r\n  serialize: ->\r\n    o = {channel: @channel, event: {}}\r\n    for key, value of @event\r\n      if value?.isThang\r\n        value = {isThang: true, id: value.id}\r\n      else if _.isArray value\r\n        for subval, i in value\r\n          if subval?.isThang\r\n            value[i] = {isThang: true, id: subval.id}\r\n      o.event[key] = value\r\n    o\r\n\r\n  @deserialize: (o, world, classMap) ->\r\n    scriptNote = new WorldScriptNote\r\n    scriptNote.channel = o.channel\r\n    scriptNote.event = {}\r\n    for key, value of o.event\r\n      if value? and typeof value is 'object' and value.isThang\r\n        value = world.getThangByID value.id\r\n      else if _.isArray value\r\n        for subval, i in value\r\n          if subval? and typeof subval is 'object' and subval.isThang\r\n            value[i] = world.getThangByID subval.id\r\n      else if value? and typeof value is 'object' and value.CN\r\n        value = classMap[value.CN].deserialize value, world, classMap\r\n      scriptNote.event[key] = value\r\n    scriptNote\r\n","Vector = require './vector'\r\nRectangle = require './rectangle'\r\nEllipse = require './ellipse'\r\nLineSegment = require './line_segment'\r\nGrid = require './Grid'\r\n\r\nmodule.exports.typedArraySupport = typedArraySupport = Float32Array?  # Not in IE until IE 10; we'll fall back to normal arrays\r\n#module.exports.typedArraySupport = typedArraySupport = false  # imitate IE9 (and in God.coffee)\r\n\r\nunless ArrayBufferView?\r\n  # https://code.google.com/p/chromium/issues/detail?id=60449\r\n  if typedArraySupport\r\n    # We have it, it's just not exposed\r\n    someArray = new Uint8Array(0)\r\n    if someArray.__proto__\r\n      # Most browsers\r\n      ArrayBufferView = someArray.__proto__.__proto__.constructor\r\n    else\r\n      # IE before 11\r\n      ArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(someArray)).constructor\r\n  else\r\n    # If we don't have typed arrays, we don't need an ArrayBufferView\r\n    ArrayBufferView = null\r\n\r\nmodule.exports.clone = clone = (obj, skipThangs=false) ->\r\n  # http://coffeescriptcookbook.com/chapters/classes_and_objects/cloning\r\n  if not obj? or typeof obj isnt 'object'\r\n    return obj\r\n\r\n  if obj instanceof Date\r\n    return new Date(obj.getTime())\r\n\r\n  if obj instanceof RegExp\r\n    flags = ''\r\n    flags += 'g' if obj.global?\r\n    flags += 'i' if obj.ignoreCase?\r\n    flags += 'm' if obj.multiline?\r\n    flags += 'y' if obj.sticky?\r\n    return new RegExp(obj.source, flags)\r\n\r\n  if (obj instanceof Vector) or (obj instanceof Rectangle) or (obj instanceof Ellipse) or (obj instanceof LineSegment)\r\n    return obj.copy()\r\n\r\n  if skipThangs and obj.isThang\r\n    return obj\r\n\r\n  if _.isArray obj\r\n    return obj.slice()\r\n\r\n  if ArrayBufferView and obj instanceof ArrayBufferView\r\n    return new obj.constructor obj\r\n\r\n  newInstance = new obj.constructor()\r\n  for key of obj\r\n    newInstance[key] = clone obj[key], skipThangs\r\n\r\n  newInstance\r\n\r\n# Walk a key chain down to the value. Can optionally set newValue instead.\r\nmodule.exports.downTheChain = downTheChain = (obj, keyChain, newValue=undefined) ->\r\n  return null unless obj\r\n  return obj[keyChain] unless _.isArray keyChain\r\n  value = obj\r\n  while keyChain.length and value\r\n    if newValue isnt undefined and keyChain.length is 1\r\n      value[keyChain[0]] = newValue\r\n      return newValue\r\n    value = value[keyChain[0]]\r\n    keyChain = keyChain[1..]\r\n  return value\r\n\r\nmodule.exports.now = (if window?.performance?.now? then (-> window.performance.now()) else (-> new Date()))\r\n\r\nmodule.exports.consolidateThangs = consolidateThangs = (thangs) ->\r\n  # We can gain a performance increase by consolidating all regular walls into a minimal covering, non-intersecting set a la Gridmancer.\r\n  debug = false\r\n  isStructural = (t) ->\r\n    t.stateless and t.collides and t.collisionCategory is 'obstacles' and t.shape in ['box', 'sheet'] and  # Can only do wall-like obstacle Thangs.\r\n    t.spriteName isnt 'Ice Wall' and t.restitution is 1.0 and  # Fixed restitution value on 2016-03-15, but it causes discrepancies, so disabled for Kelvintaph levels.\r\n    /Wall/.test(t.spriteName) and  # Not useful to do Thangs that aren't actually walls because they're usually not on a grid\r\n    (t.pos.x - t.width / 2 >= 0) and (t.pos.y - t.height / 2 >= 0)  # Grid doesn't handle negative numbers, so don't coalesce walls below/left of 0, 0.\r\n  structural = _.remove thangs, isStructural\r\n  return unless structural.length\r\n  rightmost = _.max structural, (t) -> t.pos.x + t.width / 2\r\n  topmost = _.max structural, (t) -> t.pos.y + t.height / 2\r\n  leftmost = _.min structural, (t) -> t.pos.x - t.width / 2\r\n  bottommost = _.min structural, (t) -> t.pos.y - t.height / 2\r\n  console.log 'got rightmost', rightmost.id, 'topmost', topmost.id, 'lefmostmost', leftmost.id, 'bottommost', bottommost.id, 'out of', structural.length, 'structural thangs' if debug\r\n  left = Math.min 0, leftmost.pos.x - leftmost.width / 2\r\n  bottom = Math.min 0, bottommost.pos.y - bottommost.height / 2\r\n  if (left < 0) or (bottom < 0)\r\n    console.error 'Negative structural Thangs aren\\'t supported, sorry!'  # TODO: largestRectangle, AI System, and anything else that accesses grid directly need updating to finish this\r\n  left = 0\r\n  bottom = 0\r\n  width = rightmost.pos.x + rightmost.width / 2 - left\r\n  height = topmost.pos.y + topmost.height / 2 - bottom\r\n  padding = 0\r\n  console.log 'got max width', width, 'height', height, 'left', left, 'bottom', bottom, 'of thangs', thangs.length, 'structural', structural.length if debug\r\n  grid = new Grid structural, width, height, padding, left, bottom\r\n\r\n  dissection = []\r\n  addStructuralThang = (rect) ->\r\n    thang = structural[dissection.length]  # Grab one we already know is configured properly.\r\n    console.error 'Hmm, our dissection has more Thangs than the original structural Thangs?', dissection.length unless thang\r\n    thang.pos.x = rect.x\r\n    thang.pos.y = rect.y\r\n    thang.width = rect.width\r\n    thang.height = rect.height\r\n    thang.destroyBody()\r\n    thang.createBodyDef()\r\n    thang.createBody()\r\n    dissection.push thang\r\n\r\n  dissectRectangles grid, addStructuralThang, false, debug\r\n\r\n  # Now add the new structural thangs back to thangs and return the ones not in the dissection.\r\n  console.log 'Turned', structural.length, 'structural Thangs into', dissection.length, 'dissecting Thangs.'\r\n  thangs.push dissection...\r\n  structural[dissection.length ... structural.length]\r\n\r\n\r\nmodule.exports.dissectRectangles = dissectRectangles = (grid, rectangleCallback, wantEmpty, debug) ->\r\n  # Mark Maxham's fast sweeper approach: https://github.com/codecombat/codecombat/issues/1090\r\n  console.log grid.toString() if debug\r\n  for x in grid.rows grid.left, grid.left + grid.width\r\n    y = grid.clampColumn grid.bottom\r\n    while y < grid.clampColumn grid.bottom + grid.height\r\n      y2 = y  # Note our current y.\r\n      ++y2 until occ x, y2, grid, wantEmpty  # Sweep through y to expand 1xN rect.\r\n      if y2 > y  # If we get a hit, sweep X with that swath.\r\n        x2 = x + 1\r\n        ++x2 until occCol x2, y, y2, grid, wantEmpty\r\n        w = x2 - x\r\n        h = y2 - y\r\n        rect = addRect grid, x, y, w, h, wantEmpty\r\n        rectangleCallback rect\r\n        console.log grid.toString() if debug\r\n        y = y2\r\n      ++y\r\n\r\nocc = (x, y, grid, wantEmpty) ->\r\n  return true if y > grid.bottom + grid.height or x > grid.left + grid.width\r\n  console.error 'trying to check invalid coordinates', x, y, 'from grid', grid.bottom, grid.left, grid.width, grid.height unless grid.grid[y]?[x]\r\n  Boolean(grid.grid[y][x].length) is wantEmpty\r\n\r\noccCol = (x, y1, y2, grid, wantEmpty) ->\r\n  for j in [y1 ... y2]\r\n    if occ(x, j, grid, wantEmpty)\r\n      return true\r\n  false\r\n\r\naddRect = (grid, leftX, bottomY, width, height, wantEmpty) ->\r\n  for x in [leftX ... leftX + width]\r\n    for y in [bottomY ... bottomY + height]\r\n      grid.grid[y][x] = if wantEmpty then [true] else []\r\n  new Rectangle leftX + width / 2, bottomY + height / 2, width, height\r\n","# Template for classes with common functions, like hooking into the Mediator.\r\nutils = require './../core/utils'\r\nclassCount = 0\r\nmakeScopeName = -> \"class-scope-#{classCount++}\"\r\ndoNothing = ->\r\n\r\nmodule.exports = class CocoClass\r\n  @nicks: []\r\n  @nicksUsed: {}\r\n  @remainingNicks: []\r\n  @nextNick: ->\r\n    return (@name or 'CocoClass') + ' ' + classCount unless @nicks.length\r\n    @remainingNicks = if @remainingNicks.length then @remainingNicks else @nicks.slice()\r\n    baseNick = @remainingNicks.splice(Math.floor(Math.random() * @remainingNicks.length), 1)[0]\r\n    i = 0\r\n    while true\r\n      nick = if i then \"#{baseNick} #{i}\" else baseNick\r\n      break unless @nicksUsed[nick]\r\n      i++\r\n    @nicksUsed[nick] = true\r\n    nick\r\n\r\n  subscriptions: {}\r\n  shortcuts: {}\r\n\r\n  # setup/teardown\r\n\r\n  constructor: ->\r\n    @nick = @constructor.nextNick()\r\n    @subscriptions = utils.combineAncestralObject(@, 'subscriptions')\r\n    @shortcuts = utils.combineAncestralObject(@, 'shortcuts')\r\n    @listenToSubscriptions()\r\n    @scope = makeScopeName()\r\n    @listenToShortcuts()\r\n    _.extend(@, Backbone.Events) if Backbone?\r\n\r\n  destroy: ->\r\n    # teardown subscriptions, prevent new ones\r\n    @stopListening?()\r\n    @off?()\r\n    @unsubscribeAll()\r\n    @stopListeningToShortcuts()\r\n    @constructor.nicksUsed[@nick] = false\r\n    @[key] = undefined for key of @\r\n    @destroyed = true\r\n    @off = doNothing\r\n    @destroy = doNothing\r\n\r\n  # subscriptions\r\n\r\n  listenToSubscriptions: ->\r\n    # for initting subscriptions\r\n    return unless Backbone?.Mediator?\r\n    for channel, func of @subscriptions\r\n      func = utils.normalizeFunc(func, @)\r\n      Backbone.Mediator.subscribe(channel, func, @)\r\n\r\n  addNewSubscription: (channel, func) ->\r\n    # this is for adding subscriptions on the fly, rather than at init\r\n    return unless Backbone?.Mediator?\r\n    return if @destroyed\r\n    return unless @subscriptions[channel] is undefined\r\n    func = utils.normalizeFunc(func, @)\r\n    @subscriptions[channel] = func\r\n    Backbone.Mediator.subscribe(channel, func, @)\r\n\r\n  unsubscribeAll: ->\r\n    return unless Backbone?.Mediator?\r\n    for channel, func of @subscriptions\r\n      func = utils.normalizeFunc(func, @)\r\n      Backbone.Mediator.unsubscribe(channel, func, @)\r\n\r\n  # keymaster shortcuts\r\n\r\n  listenToShortcuts: ->\r\n    return unless key?\r\n    for shortcut, func of @shortcuts\r\n      func = utils.normalizeFunc(func, @)\r\n      key(shortcut, @scope, _.bind(func, @))\r\n\r\n  stopListeningToShortcuts: ->\r\n    return unless key?\r\n    key.deleteScope(@scope)\r\n\r\n  playSound: (trigger, volume=1) ->\r\n    Backbone.Mediator.publish 'audio-player:play-sound', trigger: trigger, volume: volume\r\n\r\n  wait: (event) -> new Promise((resolve) => @once(event, resolve))\r\n","clone = (obj) ->\r\n  return obj if obj is null or typeof (obj) isnt 'object'\r\n  temp = obj.constructor()\r\n  for key of obj\r\n    temp[key] = clone(obj[key])\r\n  temp\r\n\r\ncombineAncestralObject = (obj, propertyName) ->\r\n  combined = {}\r\n  while obj?[propertyName]\r\n    for key, value of obj[propertyName]\r\n      continue if combined[key]\r\n      combined[key] = value\r\n    if obj.__proto__\r\n      obj = obj.__proto__\r\n    else\r\n      # IE has no __proto__. TODO: does this even work? At most it doesn't crash.\r\n      obj = Object.getPrototypeOf(obj)\r\n  combined\r\n\r\ncountries = [\r\n  {country: 'united-states', countryCode: 'US'}\r\n  {country: 'china', countryCode: 'CN'}\r\n  {country: 'brazil', countryCode: 'BR'}\r\n\r\n  # Loosely ordered by decreasing traffic as measured 2016-09-01 - 2016-11-07\r\n  {country: 'united-kingdom', countryCode: 'GB'}\r\n  {country: 'russia', countryCode: 'RU'}\r\n  {country: 'australia', countryCode: 'AU'}\r\n  {country: 'canada', countryCode: 'CA'}\r\n  {country: 'france', countryCode: 'FR'}\r\n  {country: 'taiwan', countryCode: 'TW'}\r\n  {country: 'ukraine', countryCode: 'UA'}\r\n  {country: 'poland', countryCode: 'PL'}\r\n  {country: 'spain', countryCode: 'ES'}\r\n  {country: 'germany', countryCode: 'DE'}\r\n  {country: 'netherlands', countryCode: 'NL'}\r\n  {country: 'hungary', countryCode: 'HU'}\r\n  {country: 'japan', countryCode: 'JP'}\r\n  {country: 'turkey', countryCode: 'TR'}\r\n  {country: 'south-africa', countryCode: 'ZA'}\r\n  {country: 'indonesia', countryCode: 'ID'}\r\n  {country: 'new-zealand', countryCode: 'NZ'}\r\n  {country: 'finland', countryCode: 'FI'}\r\n  {country: 'south-korea', countryCode: 'KR'}\r\n  {country: 'mexico', countryCode: 'MX'}\r\n  {country: 'vietnam', countryCode: 'VN'}\r\n  {country: 'singapore', countryCode: 'SG'}\r\n  {country: 'colombia', countryCode: 'CO'}\r\n  {country: 'india', countryCode: 'IN'}\r\n  {country: 'thailand', countryCode: 'TH'}\r\n  {country: 'belgium', countryCode: 'BE'}\r\n  {country: 'sweden', countryCode: 'SE'}\r\n  {country: 'denmark', countryCode: 'DK'}\r\n  {country: 'czech-republic', countryCode: 'CZ'}\r\n  {country: 'hong-kong', countryCode: 'HK'}\r\n  {country: 'italy', countryCode: 'IT'}\r\n  {country: 'romania', countryCode: 'RO'}\r\n  {country: 'belarus', countryCode: 'BY'}\r\n  {country: 'norway', countryCode: 'NO'}\r\n  {country: 'philippines', countryCode: 'PH'}\r\n  {country: 'lithuania', countryCode: 'LT'}\r\n  {country: 'argentina', countryCode: 'AR'}\r\n  {country: 'malaysia', countryCode: 'MY'}\r\n  {country: 'pakistan', countryCode: 'PK'}\r\n  {country: 'serbia', countryCode: 'RS'}\r\n  {country: 'greece', countryCode: 'GR'}\r\n  {country: 'israel', countryCode: 'IL'}\r\n  {country: 'portugal', countryCode: 'PT'}\r\n  {country: 'slovakia', countryCode: 'SK'}\r\n  {country: 'ireland', countryCode: 'IE'}\r\n  {country: 'switzerland', countryCode: 'CH'}\r\n  {country: 'peru', countryCode: 'PE'}\r\n  {country: 'bulgaria', countryCode: 'BG'}\r\n  {country: 'venezuela', countryCode: 'VE'}\r\n  {country: 'austria', countryCode: 'AT'}\r\n  {country: 'croatia', countryCode: 'HR'}\r\n  {country: 'saudia-arabia', countryCode: 'SA'}\r\n  {country: 'chile', countryCode: 'CL'}\r\n  {country: 'united-arab-emirates', countryCode: 'AE'}\r\n  {country: 'kazakhstan', countryCode: 'KZ'}\r\n  {country: 'estonia', countryCode: 'EE'}\r\n  {country: 'iran', countryCode: 'IR'}\r\n  {country: 'egypt', countryCode: 'EG'}\r\n  {country: 'ecuador', countryCode: 'EC'}\r\n  {country: 'slovenia', countryCode: 'SI'}\r\n  {country: 'macedonia', countryCode: 'MK'}\r\n]\r\n\r\ncourseIDs =\r\n  INTRODUCTION_TO_COMPUTER_SCIENCE: '560f1a9f22961295f9427742'\r\n  COMPUTER_SCIENCE_2: '5632661322961295f9428638'\r\n  GAME_DEVELOPMENT_1: '5789587aad86a6efb573701e'\r\n  WEB_DEVELOPMENT_1: '5789587aad86a6efb573701f'\r\n  COMPUTER_SCIENCE_3: '56462f935afde0c6fd30fc8c'\r\n  GAME_DEVELOPMENT_2: '57b621e7ad86a6efb5737e64'\r\n  WEB_DEVELOPMENT_2: '5789587aad86a6efb5737020'\r\n  COMPUTER_SCIENCE_4: '56462f935afde0c6fd30fc8d'\r\n  COMPUTER_SCIENCE_5: '569ed916efa72b0ced971447'\r\n  COMPUTER_SCIENCE_6: '5817d673e85d1220db624ca4'\r\n\r\norderedCourseIDs = [\r\n  courseIDs.INTRODUCTION_TO_COMPUTER_SCIENCE\r\n  courseIDs.COMPUTER_SCIENCE_2\r\n  courseIDs.GAME_DEVELOPMENT_1\r\n  courseIDs.WEB_DEVELOPMENT_1\r\n  courseIDs.COMPUTER_SCIENCE_3\r\n  courseIDs.GAME_DEVELOPMENT_2\r\n  courseIDs.WEB_DEVELOPMENT_2\r\n  courseIDs.COMPUTER_SCIENCE_4\r\n  courseIDs.COMPUTER_SCIENCE_5\r\n  courseIDs.COMPUTER_SCIENCE_6\r\n]\r\n\r\ncourseAcronyms = {}\r\ncourseAcronyms[courseIDs.INTRODUCTION_TO_COMPUTER_SCIENCE] = 'CS1'\r\ncourseAcronyms[courseIDs.COMPUTER_SCIENCE_2] = 'CS2'\r\ncourseAcronyms[courseIDs.GAME_DEVELOPMENT_1] = 'GD1'\r\ncourseAcronyms[courseIDs.WEB_DEVELOPMENT_1] = 'WD1'\r\ncourseAcronyms[courseIDs.COMPUTER_SCIENCE_3] = 'CS3'\r\ncourseAcronyms[courseIDs.GAME_DEVELOPMENT_2] = 'GD2'\r\ncourseAcronyms[courseIDs.WEB_DEVELOPMENT_2] = 'WD2'\r\ncourseAcronyms[courseIDs.COMPUTER_SCIENCE_4] = 'CS4'\r\ncourseAcronyms[courseIDs.COMPUTER_SCIENCE_5] = 'CS5'\r\ncourseAcronyms[courseIDs.COMPUTER_SCIENCE_6] = 'CS6'\r\n\r\nnormalizeFunc = (func_thing, object) ->\r\n  # func could be a string to a function in this class\r\n  # or a function in its own right\r\n  object ?= {}\r\n  if _.isString(func_thing)\r\n    func = object[func_thing]\r\n    if not func\r\n      console.error \"Could not find method #{func_thing} in object\", object\r\n      return => null # always return a func, or Mediator will go boom\r\n    func_thing = func\r\n  return func_thing\r\n\r\nobjectIdToDate = (objectID) ->\r\n  new Date(parseInt(objectID.toString().slice(0,8), 16)*1000)\r\n\r\nhexToHSL = (hex) ->\r\n  rgbToHsl(hexToR(hex), hexToG(hex), hexToB(hex))\r\n\r\nhexToR = (h) -> parseInt (cutHex(h)).substring(0, 2), 16\r\nhexToG = (h) -> parseInt (cutHex(h)).substring(2, 4), 16\r\nhexToB = (h) -> parseInt (cutHex(h)).substring(4, 6), 16\r\ncutHex = (h) -> (if (h.charAt(0) is '#') then h.substring(1, 7) else h)\r\n\r\nhslToHex = (hsl) ->\r\n  '#' + (toHex(n) for n in hslToRgb(hsl...)).join('')\r\n\r\ntoHex = (n) ->\r\n  h = Math.floor(n).toString(16)\r\n  h = '0'+h if h.length is 1\r\n  h\r\n\r\npathToUrl = (path) ->\r\n  base = location.protocol + '//' + location.hostname + (location.port && \":\" + location.port)\r\n  base + path\r\n\r\nextractPlayerCodeTag = (code) ->\r\n  unwrappedDefaultCode = code.match(/<playercode>\\n([\\s\\S]*)\\n *<\\/playercode>/)?[1]\r\n  if unwrappedDefaultCode\r\n    return stripIndentation(unwrappedDefaultCode)\r\n  else\r\n    return undefined\r\n\r\nstripIndentation = (code) ->\r\n  codeLines = code.split('\\n')\r\n  indentation = _.min(_.filter(codeLines.map (line) -> line.match(/^\\s*/)?[0]?.length))\r\n  strippedCode = (line.substr(indentation) for line in codeLines).join('\\n')\r\n  return strippedCode\r\n\r\ni18n = (say, target, language=me.get('preferredLanguage', true), fallback='en') ->\r\n  generalResult = null\r\n  fallBackResult = null\r\n  fallForwardResult = null  # If a general language isn't available, the first specific one will do.\r\n  fallSidewaysResult = null  # If a specific language isn't available, its sibling specific language will do.\r\n  matches = (/\\w+/gi).exec(language)\r\n  generalName = matches[0] if matches\r\n\r\n  for localeName, locale of say.i18n\r\n    continue if localeName is '-'\r\n    if target of locale\r\n      result = locale[target]\r\n    else continue\r\n    return result if localeName is language\r\n    generalResult = result if localeName is generalName\r\n    fallBackResult = result if localeName is fallback\r\n    fallForwardResult = result if localeName.indexOf(language) is 0 and not fallForwardResult?\r\n    fallSidewaysResult = result if localeName.indexOf(generalName) is 0 and not fallSidewaysResult?\r\n\r\n  return generalResult if generalResult?\r\n  return fallForwardResult if fallForwardResult?\r\n  return fallSidewaysResult if fallSidewaysResult?\r\n  return fallBackResult if fallBackResult?\r\n  return say[target] if target of say\r\n  null\r\n\r\ngetByPath = (target, path) ->\r\n  throw new Error 'Expected an object to match a query against, instead got null' unless target\r\n  pieces = path.split('.')\r\n  obj = target\r\n  for piece in pieces\r\n    return undefined unless piece of obj\r\n    obj = obj[piece]\r\n  obj\r\n\r\nisID = (id) -> _.isString(id) and id.length is 24 and id.match(/[a-f0-9]/gi)?.length is 24\r\n\r\nround = _.curry (digits, n) ->\r\n  n = +n.toFixed(digits)\r\n\r\npositify = (func) -> (params) -> (x) -> if x > 0 then func(params)(x) else 0\r\n\r\n# f(x) = ax + b\r\ncreateLinearFunc = (params) ->\r\n  (x) -> (params.a or 1) * x + (params.b or 0)\r\n\r\n# f(x) = ax² + bx + c\r\ncreateQuadraticFunc = (params) ->\r\n  (x) -> (params.a or 1) * x * x + (params.b or 1) * x + (params.c or 0)\r\n\r\n# f(x) = a log(b (x + c)) + d\r\ncreateLogFunc = (params) ->\r\n  (x) -> if x > 0 then (params.a or 1) * Math.log((params.b or 1) * (x + (params.c or 0))) + (params.d or 0) else 0\r\n\r\n# f(x) = ax^b + c\r\ncreatePowFunc = (params) ->\r\n  (x) -> (params.a or 1) * Math.pow(x, params.b or 1) + (params.c or 0)\r\n\r\nfunctionCreators =\r\n  linear: positify(createLinearFunc)\r\n  quadratic: positify(createQuadraticFunc)\r\n  logarithmic: positify(createLogFunc)\r\n  pow: positify(createPowFunc)\r\n\r\n# Call done with true to satisfy the 'until' goal and stop repeating func\r\nkeepDoingUntil = (func, wait=100, totalWait=5000) ->\r\n  waitSoFar = 0\r\n  (done = (success) ->\r\n    if (waitSoFar += wait) <= totalWait and not success\r\n      _.delay (-> func done), wait) false\r\n\r\ngrayscale = (imageData) ->\r\n  d = imageData.data\r\n  for i in [0..d.length] by 4\r\n    r = d[i]\r\n    g = d[i+1]\r\n    b = d[i+2]\r\n    v = 0.2126*r + 0.7152*g + 0.0722*b\r\n    d[i] = d[i+1] = d[i+2] = v\r\n  imageData\r\n\r\n# Deep compares l with r, with the exception that undefined values are considered equal to missing values\r\n# Very practical for comparing Mongoose documents where undefined is not allowed, instead fields get deleted\r\nkindaEqual = compare = (l, r) ->\r\n  if _.isObject(l) and _.isObject(r)\r\n    for key in _.union Object.keys(l), Object.keys(r)\r\n      return false unless compare l[key], r[key]\r\n    return true\r\n  else if l is r\r\n    return true\r\n  else\r\n    return false\r\n\r\n# Return UTC string \"YYYYMMDD\" for today + offset\r\ngetUTCDay = (offset=0) ->\r\n  day = new Date()\r\n  day.setDate(day.getUTCDate() + offset)\r\n  partYear = day.getUTCFullYear()\r\n  partMonth = (day.getUTCMonth() + 1)\r\n  partMonth = \"0\" + partMonth if partMonth < 10\r\n  partDay = day.getUTCDate()\r\n  partDay = \"0\" + partDay if partDay < 10\r\n  \"#{partYear}#{partMonth}#{partDay}\"\r\n\r\ngetYearSubscriptionGroup = (testGroupNumber) ->\r\n  switch testGroupNumber % 4\r\n    when 0, 2 then 'year_subscription'\r\n    when 1, 3 then 'year_subscription_b'\r\n\r\n# Fast, basic way to replace text in an element when you don't need much.\r\n# http://stackoverflow.com/a/4962398/540620\r\nif document?.createElement\r\n  dummy = document.createElement 'div'\r\n  dummy.innerHTML = 'text'\r\n  TEXT = if dummy.textContent is 'text' then 'textContent' else 'innerText'\r\n  replaceText = (elems, text) ->\r\n    elem[TEXT] = text for elem in elems\r\n    null\r\n\r\n# Add a stylesheet rule\r\n# http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript/26230472#26230472\r\n# Don't use wantonly, or we'll have to implement a simple mechanism for clearing out old rules.\r\nif document?.createElement\r\n  injectCSS = ((doc) ->\r\n    # wrapper for all injected styles and temp el to create them\r\n    wrap = doc.createElement(\"div\")\r\n    temp = doc.createElement(\"div\")\r\n    # rules like \"a {color: red}\" etc.\r\n    return (cssRules) ->\r\n      # append wrapper to the body on the first call\r\n      unless wrap.id\r\n        wrap.id = \"injected-css\"\r\n        wrap.style.display = \"none\"\r\n        doc.body.appendChild wrap\r\n      # <br> for IE: http://goo.gl/vLY4x7\r\n      temp.innerHTML = \"<br><style>\" + cssRules + \"</style>\"\r\n      wrap.appendChild temp.children[1]\r\n      return\r\n  )(document)\r\n\r\n# So that we can stub out userAgent in tests\r\nuserAgent = ->\r\n  window.navigator.userAgent\r\n\r\ngetDocumentSearchString = ->\r\n  # moved to a separate function so it can be mocked for testing\r\n  return document.location.search\r\n\r\ngetQueryVariables = ->\r\n  query = module.exports.getDocumentSearchString().substring(1) # use module.exports so spy is used in testing\r\n  pairs = (pair.split('=') for pair in query.split '&')\r\n  variables = {}\r\n  for [key, value] in pairs\r\n    variables[key] = {'true': true, 'false': false}[value] ? decodeURIComponent(value)\r\n  return variables\r\n\r\ngetQueryVariable = (param, defaultValue) ->\r\n  variables = getQueryVariables()\r\n  return variables[param] ? defaultValue\r\n\r\ngetSponsoredSubsAmount = (price=999, subCount=0, personalSub=false) ->\r\n  # 1 100%\r\n  # 2-11 80%\r\n  # 12+ 60%\r\n  # TODO: make this less confusing\r\n  return 0 unless subCount > 0\r\n  offset = if personalSub then 1 else 0\r\n  if subCount <= 1 - offset\r\n    price\r\n  else if subCount <= 11 - offset\r\n    Math.round((1 - offset) * price + (subCount - 1 + offset) * price * 0.8)\r\n  else\r\n    Math.round((1 - offset) * price + 10 * price * 0.8 + (subCount - 11 + offset) * price * 0.6)\r\n\r\ngetCourseBundlePrice = (coursePrices, seats=20) ->\r\n  totalPricePerSeat = coursePrices.reduce ((a, b) -> a + b), 0\r\n  if coursePrices.length > 2\r\n    pricePerSeat = Math.round(totalPricePerSeat / 2.0)\r\n  else\r\n    pricePerSeat = parseInt(totalPricePerSeat)\r\n  seats * pricePerSeat\r\n\r\ngetCoursePraise = ->\r\n  praise = [\r\n    {\r\n      quote:  \"The kids love it.\"\r\n      source: \"Leo Joseph Tran, Athlos Leadership Academy\"\r\n    },\r\n    {\r\n      quote: \"My students have been using the site for a couple of weeks and they love it.\"\r\n      source: \"Scott Hatfield, Computer Applications Teacher, School Technology Coordinator, Eastside Middle School\"\r\n    },\r\n    {\r\n      quote: \"Thanks for the captivating site. My eighth graders love it.\"\r\n      source: \"Janet Cook, Ansbach Middle/High School\"\r\n    },\r\n    {\r\n      quote: \"My students have started working on CodeCombat and love it! I love that they are learning coding and problem solving skills without them even knowing it!!\"\r\n      source: \"Kristin Huff, Special Education Teacher, Webb City School District\"\r\n    },\r\n    {\r\n      quote: \"I recently introduced Code Combat to a few of my fifth graders and they are loving it!\"\r\n      source: \"Shauna Hamman, Fifth Grade Teacher, Four Peaks Elementary School\"\r\n    },\r\n    {\r\n      quote: \"Overall I think it's a fantastic service. Variables, arrays, loops, all covered in very fun and imaginative ways. Every kid who has tried it is a fan.\"\r\n      source: \"Aibinder Andrew, Technology Teacher\"\r\n    },\r\n    {\r\n      quote: \"I love what you have created. The kids are so engaged.\"\r\n      source: \"Desmond Smith, 4KS Academy\"\r\n    },\r\n    {\r\n      quote: \"My students love the website and I hope on having content structured around it in the near future.\"\r\n      source: \"Michael Leonard, Science Teacher, Clearwater Central Catholic High School\"\r\n    }\r\n  ]\r\n  praise[_.random(0, praise.length - 1)]\r\n\r\ngetPrepaidCodeAmount = (price=0, users=0, months=0) ->\r\n  return 0 unless users > 0 and months > 0\r\n  total = price * users * months\r\n  total\r\n\r\nformatDollarValue = (dollars) ->\r\n  '$' + (parseFloat(dollars).toFixed(2))\r\n\r\nstartsWithVowel = (s) -> s[0] in 'aeiouAEIOU'\r\n\r\nfilterMarkdownCodeLanguages = (text, language) ->\r\n  return '' unless text\r\n  currentLanguage = language or me.get('aceConfig')?.language or 'python'\r\n  excludedLanguages = _.without ['javascript', 'python', 'coffeescript', 'clojure', 'lua', 'java', 'io', 'html'], currentLanguage\r\n  # Exclude language-specific code blocks like ```python (... code ...)``` for each non-target language.\r\n  codeBlockExclusionRegex = new RegExp \"```(#{excludedLanguages.join('|')})\\n[^`]+```\\n?\", 'gm'\r\n  # Exclude language-specific images like ![python - image description](image url) for each non-target language.\r\n  imageExclusionRegex = new RegExp \"!\\\\[(#{excludedLanguages.join('|')}) - .+?\\\\]\\\\(.+?\\\\)\\n?\", 'gm'\r\n  text = text.replace(codeBlockExclusionRegex, '').replace(imageExclusionRegex, '')\r\n\r\n  commonLanguageReplacements =\r\n    python: [\r\n      ['true', 'True'], ['false', 'False'], ['null', 'None'],\r\n      ['object', 'dictionary'], ['Object', 'Dictionary'],\r\n      ['array', 'list'], ['Array', 'List'],\r\n    ]\r\n    lua: [\r\n      ['null', 'nil'],\r\n      ['object', 'table'], ['Object', 'Table'],\r\n      ['array', 'table'], ['Array', 'Table'],\r\n    ]\r\n  for [from, to] in commonLanguageReplacements[currentLanguage] ? []\r\n    # Convert JS-specific keywords and types to Python ones, if in simple `code` tags.\r\n    # This won't cover it when it's not in an inline code tag by itself or when it's not in English.\r\n    text = text.replace ///`#{from}`///g, \"`#{to}`\"\r\n    # Now change \"An `dictionary`\" to \"A `dictionary`\", etc.\r\n    if startsWithVowel(from) and not startsWithVowel(to)\r\n      text = text.replace ///(\\ a|A)n(\\ `#{to}`)///g, \"$1$2\"\r\n    if not startsWithVowel(from) and startsWithVowel(to)\r\n      text = text.replace ///(\\ a|A)(\\ `#{to}`)///g, \"$1n$2\"\r\n\r\n  return text\r\n\r\naceEditModes =\r\n  javascript: 'ace/mode/javascript'\r\n  coffeescript: 'ace/mode/coffee'\r\n  python: 'ace/mode/python'\r\n  lua: 'ace/mode/lua'\r\n  java: 'ace/mode/java'\r\n  html: 'ace/mode/html'\r\n\r\n# These ACEs are used for displaying code snippets statically, like in SpellPaletteEntryView popovers\r\n# and have short lifespans\r\ninitializeACE = (el, codeLanguage) ->\r\n  contents = $(el).text().trim()\r\n  editor = ace.edit el\r\n  editor.setOptions maxLines: Infinity\r\n  editor.setReadOnly true\r\n  editor.setTheme 'ace/theme/textmate'\r\n  editor.setShowPrintMargin false\r\n  editor.setShowFoldWidgets false\r\n  editor.setHighlightActiveLine false\r\n  editor.setHighlightActiveLine false\r\n  editor.setBehavioursEnabled false\r\n  editor.renderer.setShowGutter false\r\n  editor.setValue contents\r\n  editor.clearSelection()\r\n  session = editor.getSession()\r\n  session.setUseWorker false\r\n  session.setMode aceEditModes[codeLanguage]\r\n  session.setWrapLimitRange null\r\n  session.setUseWrapMode true\r\n  session.setNewLineMode 'unix'\r\n  return editor\r\n\r\ncapitalLanguages =\r\n  'javascript': 'JavaScript'\r\n  'coffeescript': 'CoffeeScript'\r\n  'python': 'Python'\r\n  'java': 'Java'\r\n  'lua': 'Lua'\r\n  'html': 'HTML'\r\n\r\ncreateLevelNumberMap = (levels) ->\r\n  levelNumberMap = {}\r\n  practiceLevelTotalCount = 0\r\n  practiceLevelCurrentCount = 0\r\n  for level, i in levels\r\n    levelNumber = i - practiceLevelTotalCount + 1\r\n    if level.practice\r\n      levelNumber = i - practiceLevelTotalCount + String.fromCharCode('a'.charCodeAt(0) + practiceLevelCurrentCount)\r\n      practiceLevelTotalCount++\r\n      practiceLevelCurrentCount++\r\n    else\r\n      practiceLevelCurrentCount = 0\r\n    levelNumberMap[level.key] = levelNumber\r\n  levelNumberMap\r\n\r\nfindNextLevel = (levels, currentIndex, needsPractice) ->\r\n  # levels = [{practice: true/false, complete: true/false}]\r\n  index = currentIndex\r\n  index++\r\n  if needsPractice\r\n    if levels[currentIndex].practice or index < levels.length and levels[index].practice\r\n      # Needs practice, on practice or next practice, choose next incomplete level\r\n      # May leave earlier practice levels incomplete and reach end of course\r\n      index++ while index < levels.length and levels[index].complete\r\n    else\r\n      # Needs practice, on required, next required, choose first incomplete level of previous practice chain\r\n      index--\r\n      index-- while index >= 0 and not levels[index].practice\r\n      if index >= 0\r\n        index-- while index >= 0 and levels[index].practice\r\n        if index >= 0\r\n          index++\r\n          index++ while index < levels.length and levels[index].practice and levels[index].complete\r\n          if levels[index].practice and not levels[index].complete\r\n            return index\r\n      index = currentIndex + 1\r\n      index++ while index < levels.length and levels[index].complete\r\n  else\r\n    # No practice needed, next required incomplete level\r\n    index++ while index < levels.length and (levels[index].practice or levels[index].complete)\r\n  index\r\n\r\nneedsPractice = (playtime=0, threshold=5) ->\r\n  playtime / 60 > threshold\r\n\r\nsortCourses = (courses) ->\r\n  _.sortBy courses, (course) ->\r\n    # ._id can be from classroom.courses, otherwise it's probably .id\r\n    index = orderedCourseIDs.indexOf(course.id ? course._id)\r\n    index = 9001 if index is -1\r\n    index\r\n\r\nusStateCodes =\r\n  # https://github.com/mdzhang/us-state-codes\r\n  # generated by js2coffee 2.2.0\r\n  (->\r\n    stateNamesByCode =\r\n      'AL': 'Alabama'\r\n      'AK': 'Alaska'\r\n      'AZ': 'Arizona'\r\n      'AR': 'Arkansas'\r\n      'CA': 'California'\r\n      'CO': 'Colorado'\r\n      'CT': 'Connecticut'\r\n      'DE': 'Delaware'\r\n      'DC': 'District of Columbia'\r\n      'FL': 'Florida'\r\n      'GA': 'Georgia'\r\n      'HI': 'Hawaii'\r\n      'ID': 'Idaho'\r\n      'IL': 'Illinois'\r\n      'IN': 'Indiana'\r\n      'IA': 'Iowa'\r\n      'KS': 'Kansas'\r\n      'KY': 'Kentucky'\r\n      'LA': 'Louisiana'\r\n      'ME': 'Maine'\r\n      'MD': 'Maryland'\r\n      'MA': 'Massachusetts'\r\n      'MI': 'Michigan'\r\n      'MN': 'Minnesota'\r\n      'MS': 'Mississippi'\r\n      'MO': 'Missouri'\r\n      'MT': 'Montana'\r\n      'NE': 'Nebraska'\r\n      'NV': 'Nevada'\r\n      'NH': 'New Hampshire'\r\n      'NJ': 'New Jersey'\r\n      'NM': 'New Mexico'\r\n      'NY': 'New York'\r\n      'NC': 'North Carolina'\r\n      'ND': 'North Dakota'\r\n      'OH': 'Ohio'\r\n      'OK': 'Oklahoma'\r\n      'OR': 'Oregon'\r\n      'PA': 'Pennsylvania'\r\n      'RI': 'Rhode Island'\r\n      'SC': 'South Carolina'\r\n      'SD': 'South Dakota'\r\n      'TN': 'Tennessee'\r\n      'TX': 'Texas'\r\n      'UT': 'Utah'\r\n      'VT': 'Vermont'\r\n      'VA': 'Virginia'\r\n      'WA': 'Washington'\r\n      'WV': 'West Virginia'\r\n      'WI': 'Wisconsin'\r\n      'WY': 'Wyoming'\r\n    stateCodesByName = _.invert(stateNamesByCode)\r\n    # normalizes case and removes invalid characters\r\n    # returns null if can't find sanitized code in the state map\r\n\r\n    sanitizeStateCode = (code) ->\r\n      code = if _.isString(code) then code.trim().toUpperCase().replace(/[^A-Z]/g, '') else null\r\n      if stateNamesByCode[code] then code else null\r\n\r\n    # returns a valid state name else null\r\n\r\n    getStateNameByStateCode = (code) ->\r\n      stateNamesByCode[sanitizeStateCode(code)] or null\r\n\r\n    # normalizes case and removes invalid characters\r\n    # returns null if can't find sanitized name in the state map\r\n\r\n    sanitizeStateName = (name) ->\r\n      if !_.isString(name)\r\n        return null\r\n      # bad whitespace remains bad whitespace e.g. \"O  hi o\" is not valid\r\n      name = name.trim().toLowerCase().replace(/[^a-z\\s]/g, '').replace(/\\s+/g, ' ')\r\n      tokens = name.split(/\\s+/)\r\n      tokens = _.map(tokens, (token) ->\r\n        token.charAt(0).toUpperCase() + token.slice(1)\r\n      )\r\n      # account for District of Columbia\r\n      if tokens.length > 2\r\n        tokens[1] = tokens[1].toLowerCase()\r\n      name = tokens.join(' ')\r\n      if stateCodesByName[name] then name else null\r\n\r\n    # returns a valid state code else null\r\n\r\n    getStateCodeByStateName = (name) ->\r\n      stateCodesByName[sanitizeStateName(name)] or null\r\n\r\n    return {\r\n      sanitizeStateCode: sanitizeStateCode\r\n      getStateNameByStateCode: getStateNameByStateCode\r\n      sanitizeStateName: sanitizeStateName\r\n      getStateCodeByStateName: getStateCodeByStateName\r\n    }\r\n  )()\r\n\r\n\r\nmodule.exports = {\r\n  aceEditModes\r\n  capitalLanguages\r\n  clone\r\n  combineAncestralObject\r\n  countries\r\n  courseAcronyms\r\n  courseIDs\r\n  createLevelNumberMap\r\n  extractPlayerCodeTag\r\n  filterMarkdownCodeLanguages\r\n  findNextLevel\r\n  formatDollarValue\r\n  functionCreators\r\n  getByPath\r\n  getCourseBundlePrice\r\n  getCoursePraise\r\n  getDocumentSearchString\r\n  getPrepaidCodeAmount\r\n  getQueryVariable\r\n  getQueryVariables\r\n  getSponsoredSubsAmount\r\n  getUTCDay\r\n  getYearSubscriptionGroup\r\n  grayscale\r\n  hexToHSL\r\n  hslToHex\r\n  i18n\r\n  initializeACE\r\n  injectCSS\r\n  isID\r\n  keepDoingUntil\r\n  kindaEqual\r\n  needsPractice\r\n  normalizeFunc\r\n  objectIdToDate\r\n  orderedCourseIDs\r\n  pathToUrl\r\n  replaceText\r\n  round\r\n  sortCourses\r\n  stripIndentation\r\n  usStateCodes\r\n  userAgent\r\n}\r\n","/*\n* Copyright (c) 2006-2007 Erin Catto http://www.gphysics.com\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\nvar Box2D = {};\n\n(function (a2j, undefined) {\n\n   if(!(Object.defineProperty instanceof Function)\n      && Object.prototype.__defineGetter__ instanceof Function\n      && Object.prototype.__defineSetter__ instanceof Function)\n   {\n      Object.defineProperty = function(obj, p, cfg) {\n         if(cfg.get instanceof Function)\n            obj.__defineGetter__(p, cfg.get);\n         if(cfg.set instanceof Function)\n            obj.__defineSetter__(p, cfg.set);\n      }\n   }\n   \n   function emptyFn() {};\n   a2j.inherit = function(cls, base) {\n      var tmpCtr = cls;\n      emptyFn.prototype = base.prototype;\n      cls.prototype = new emptyFn;\n      cls.prototype.constructor = tmpCtr;\n   };\n   \n   a2j.generateCallback = function generateCallback(context, cb) {\n      return function () {\n         cb.apply(context, arguments);\n      };\n   };\n   \n   a2j.NVector = function NVector(length) {\n      if (length === undefined) length = 0;\n      var tmp = new Array(length || 0);\n      for (var i = 0; i < length; ++i)\n      tmp[i] = 0;\n      return tmp;\n   };\n   \n   a2j.is = function is(o1, o2) {\n      if (o1 === null) return false;\n      if ((o2 instanceof Function) && (o1 instanceof o2)) return true;\n      if ((o1.constructor.__implements != undefined) && (o1.constructor.__implements[o2])) return true;\n      return false;\n   };\n   \n   a2j.parseUInt = function(v) {\n      return Math.abs(parseInt(v));\n   }\n   \n})(Box2D);\n\n//#TODO remove assignments from global namespace\nvar Box2DVector = Array;\nvar Vector_a2j_Number = Box2D.NVector;\n//package structure\nif (typeof(Box2D) === \"undefined\") Box2D = {};\nif (typeof(Box2D.Collision) === \"undefined\") Box2D.Collision = {};\nif (typeof(Box2D.Collision.Shapes) === \"undefined\") Box2D.Collision.Shapes = {};\nif (typeof(Box2D.Common) === \"undefined\") Box2D.Common = {};\nif (typeof(Box2D.Common.Math) === \"undefined\") Box2D.Common.Math = {};\nif (typeof(Box2D.Dynamics) === \"undefined\") Box2D.Dynamics = {};\nif (typeof(Box2D.Dynamics.Contacts) === \"undefined\") Box2D.Dynamics.Contacts = {};\nif (typeof(Box2D.Dynamics.Controllers) === \"undefined\") Box2D.Dynamics.Controllers = {};\nif (typeof(Box2D.Dynamics.Joints) === \"undefined\") Box2D.Dynamics.Joints = {};\n//pre-definitions\n(function () {\n   Box2D.Collision.IBroadPhase = 'Box2D.Collision.IBroadPhase';\n\n   function b2AABB() {\n      b2AABB.b2AABB.apply(this, arguments);\n   };\n   Box2D.Collision.b2AABB = b2AABB;\n\n   function b2Bound() {\n      b2Bound.b2Bound.apply(this, arguments);\n   };\n   Box2D.Collision.b2Bound = b2Bound;\n\n   function b2BoundValues() {\n      b2BoundValues.b2BoundValues.apply(this, arguments);\n      if (this.constructor === b2BoundValues) this.b2BoundValues.apply(this, arguments);\n   };\n   Box2D.Collision.b2BoundValues = b2BoundValues;\n\n   function b2Collision() {\n      b2Collision.b2Collision.apply(this, arguments);\n   };\n   Box2D.Collision.b2Collision = b2Collision;\n\n   function b2ContactID() {\n      b2ContactID.b2ContactID.apply(this, arguments);\n      if (this.constructor === b2ContactID) this.b2ContactID.apply(this, arguments);\n   };\n   Box2D.Collision.b2ContactID = b2ContactID;\n\n   function b2ContactPoint() {\n      b2ContactPoint.b2ContactPoint.apply(this, arguments);\n   };\n   Box2D.Collision.b2ContactPoint = b2ContactPoint;\n\n   function b2Distance() {\n      b2Distance.b2Distance.apply(this, arguments);\n   };\n   Box2D.Collision.b2Distance = b2Distance;\n\n   function b2DistanceInput() {\n      b2DistanceInput.b2DistanceInput.apply(this, arguments);\n   };\n   Box2D.Collision.b2DistanceInput = b2DistanceInput;\n\n   function b2DistanceOutput() {\n      b2DistanceOutput.b2DistanceOutput.apply(this, arguments);\n   };\n   Box2D.Collision.b2DistanceOutput = b2DistanceOutput;\n\n   function b2DistanceProxy() {\n      b2DistanceProxy.b2DistanceProxy.apply(this, arguments);\n   };\n   Box2D.Collision.b2DistanceProxy = b2DistanceProxy;\n\n   function b2DynamicTree() {\n      b2DynamicTree.b2DynamicTree.apply(this, arguments);\n      if (this.constructor === b2DynamicTree) this.b2DynamicTree.apply(this, arguments);\n   };\n   Box2D.Collision.b2DynamicTree = b2DynamicTree;\n\n   function b2DynamicTreeBroadPhase() {\n      b2DynamicTreeBroadPhase.b2DynamicTreeBroadPhase.apply(this, arguments);\n   };\n   Box2D.Collision.b2DynamicTreeBroadPhase = b2DynamicTreeBroadPhase;\n\n   function b2DynamicTreeNode() {\n      b2DynamicTreeNode.b2DynamicTreeNode.apply(this, arguments);\n   };\n   Box2D.Collision.b2DynamicTreeNode = b2DynamicTreeNode;\n\n   function b2DynamicTreePair() {\n      b2DynamicTreePair.b2DynamicTreePair.apply(this, arguments);\n   };\n   Box2D.Collision.b2DynamicTreePair = b2DynamicTreePair;\n\n   function b2Manifold() {\n      b2Manifold.b2Manifold.apply(this, arguments);\n      if (this.constructor === b2Manifold) this.b2Manifold.apply(this, arguments);\n   };\n   Box2D.Collision.b2Manifold = b2Manifold;\n\n   function b2ManifoldPoint() {\n      b2ManifoldPoint.b2ManifoldPoint.apply(this, arguments);\n      if (this.constructor === b2ManifoldPoint) this.b2ManifoldPoint.apply(this, arguments);\n   };\n   Box2D.Collision.b2ManifoldPoint = b2ManifoldPoint;\n\n   function b2Point() {\n      b2Point.b2Point.apply(this, arguments);\n   };\n   Box2D.Collision.b2Point = b2Point;\n\n   function b2RayCastInput() {\n      b2RayCastInput.b2RayCastInput.apply(this, arguments);\n      if (this.constructor === b2RayCastInput) this.b2RayCastInput.apply(this, arguments);\n   };\n   Box2D.Collision.b2RayCastInput = b2RayCastInput;\n\n   function b2RayCastOutput() {\n      b2RayCastOutput.b2RayCastOutput.apply(this, arguments);\n   };\n   Box2D.Collision.b2RayCastOutput = b2RayCastOutput;\n\n   function b2Segment() {\n      b2Segment.b2Segment.apply(this, arguments);\n   };\n   Box2D.Collision.b2Segment = b2Segment;\n\n   function b2SeparationFunction() {\n      b2SeparationFunction.b2SeparationFunction.apply(this, arguments);\n   };\n   Box2D.Collision.b2SeparationFunction = b2SeparationFunction;\n\n   function b2Simplex() {\n      b2Simplex.b2Simplex.apply(this, arguments);\n      if (this.constructor === b2Simplex) this.b2Simplex.apply(this, arguments);\n   };\n   Box2D.Collision.b2Simplex = b2Simplex;\n\n   function b2SimplexCache() {\n      b2SimplexCache.b2SimplexCache.apply(this, arguments);\n   };\n   Box2D.Collision.b2SimplexCache = b2SimplexCache;\n\n   function b2SimplexVertex() {\n      b2SimplexVertex.b2SimplexVertex.apply(this, arguments);\n   };\n   Box2D.Collision.b2SimplexVertex = b2SimplexVertex;\n\n   function b2TimeOfImpact() {\n      b2TimeOfImpact.b2TimeOfImpact.apply(this, arguments);\n   };\n   Box2D.Collision.b2TimeOfImpact = b2TimeOfImpact;\n\n   function b2TOIInput() {\n      b2TOIInput.b2TOIInput.apply(this, arguments);\n   };\n   Box2D.Collision.b2TOIInput = b2TOIInput;\n\n   function b2WorldManifold() {\n      b2WorldManifold.b2WorldManifold.apply(this, arguments);\n      if (this.constructor === b2WorldManifold) this.b2WorldManifold.apply(this, arguments);\n   };\n   Box2D.Collision.b2WorldManifold = b2WorldManifold;\n\n   function ClipVertex() {\n      ClipVertex.ClipVertex.apply(this, arguments);\n   };\n   Box2D.Collision.ClipVertex = ClipVertex;\n\n   function Features() {\n      Features.Features.apply(this, arguments);\n   };\n   Box2D.Collision.Features = Features;\n\n   function b2CircleShape() {\n      b2CircleShape.b2CircleShape.apply(this, arguments);\n      if (this.constructor === b2CircleShape) this.b2CircleShape.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2CircleShape = b2CircleShape;\n\n   function b2EdgeChainDef() {\n      b2EdgeChainDef.b2EdgeChainDef.apply(this, arguments);\n      if (this.constructor === b2EdgeChainDef) this.b2EdgeChainDef.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2EdgeChainDef = b2EdgeChainDef;\n\n   function b2EdgeShape() {\n      b2EdgeShape.b2EdgeShape.apply(this, arguments);\n      if (this.constructor === b2EdgeShape) this.b2EdgeShape.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2EdgeShape = b2EdgeShape;\n\n   function b2MassData() {\n      b2MassData.b2MassData.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2MassData = b2MassData;\n\n   function b2PolygonShape() {\n      b2PolygonShape.b2PolygonShape.apply(this, arguments);\n      if (this.constructor === b2PolygonShape) this.b2PolygonShape.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2PolygonShape = b2PolygonShape;\n\n   function b2Shape() {\n      b2Shape.b2Shape.apply(this, arguments);\n      if (this.constructor === b2Shape) this.b2Shape.apply(this, arguments);\n   };\n   Box2D.Collision.Shapes.b2Shape = b2Shape;\n   Box2D.Common.b2internal = 'Box2D.Common.b2internal';\n\n   function b2Color() {\n      b2Color.b2Color.apply(this, arguments);\n      if (this.constructor === b2Color) this.b2Color.apply(this, arguments);\n   };\n   Box2D.Common.b2Color = b2Color;\n\n   function b2Settings() {\n      b2Settings.b2Settings.apply(this, arguments);\n   };\n   Box2D.Common.b2Settings = b2Settings;\n\n   function b2Mat22() {\n      b2Mat22.b2Mat22.apply(this, arguments);\n      if (this.constructor === b2Mat22) this.b2Mat22.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Mat22 = b2Mat22;\n\n   function b2Mat33() {\n      b2Mat33.b2Mat33.apply(this, arguments);\n      if (this.constructor === b2Mat33) this.b2Mat33.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Mat33 = b2Mat33;\n\n   function b2Math() {\n      b2Math.b2Math.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Math = b2Math;\n\n   function b2Sweep() {\n      b2Sweep.b2Sweep.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Sweep = b2Sweep;\n\n   function b2Transform() {\n      b2Transform.b2Transform.apply(this, arguments);\n      if (this.constructor === b2Transform) this.b2Transform.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Transform = b2Transform;\n\n   function b2Vec2() {\n      b2Vec2.b2Vec2.apply(this, arguments);\n      if (this.constructor === b2Vec2) this.b2Vec2.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Vec2 = b2Vec2;\n\n   function b2Vec3() {\n      b2Vec3.b2Vec3.apply(this, arguments);\n      if (this.constructor === b2Vec3) this.b2Vec3.apply(this, arguments);\n   };\n   Box2D.Common.Math.b2Vec3 = b2Vec3;\n\n   function b2Body() {\n      b2Body.b2Body.apply(this, arguments);\n      if (this.constructor === b2Body) this.b2Body.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2Body = b2Body;\n\n   function b2BodyDef() {\n      b2BodyDef.b2BodyDef.apply(this, arguments);\n      if (this.constructor === b2BodyDef) this.b2BodyDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2BodyDef = b2BodyDef;\n\n   function b2ContactFilter() {\n      b2ContactFilter.b2ContactFilter.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2ContactFilter = b2ContactFilter;\n\n   function b2ContactImpulse() {\n      b2ContactImpulse.b2ContactImpulse.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2ContactImpulse = b2ContactImpulse;\n\n   function b2ContactListener() {\n      b2ContactListener.b2ContactListener.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2ContactListener = b2ContactListener;\n\n   function b2ContactManager() {\n      b2ContactManager.b2ContactManager.apply(this, arguments);\n      if (this.constructor === b2ContactManager) this.b2ContactManager.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2ContactManager = b2ContactManager;\n\n   function b2DebugDraw() {\n      b2DebugDraw.b2DebugDraw.apply(this, arguments);\n      if (this.constructor === b2DebugDraw) this.b2DebugDraw.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2DebugDraw = b2DebugDraw;\n\n   function b2DestructionListener() {\n      b2DestructionListener.b2DestructionListener.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2DestructionListener = b2DestructionListener;\n\n   function b2FilterData() {\n      b2FilterData.b2FilterData.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2FilterData = b2FilterData;\n\n   function b2Fixture() {\n      b2Fixture.b2Fixture.apply(this, arguments);\n      if (this.constructor === b2Fixture) this.b2Fixture.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2Fixture = b2Fixture;\n\n   function b2FixtureDef() {\n      b2FixtureDef.b2FixtureDef.apply(this, arguments);\n      if (this.constructor === b2FixtureDef) this.b2FixtureDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2FixtureDef = b2FixtureDef;\n\n   function b2Island() {\n      b2Island.b2Island.apply(this, arguments);\n      if (this.constructor === b2Island) this.b2Island.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2Island = b2Island;\n\n   function b2TimeStep() {\n      b2TimeStep.b2TimeStep.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2TimeStep = b2TimeStep;\n\n   function b2World() {\n      b2World.b2World.apply(this, arguments);\n      if (this.constructor === b2World) this.b2World.apply(this, arguments);\n   };\n   Box2D.Dynamics.b2World = b2World;\n\n   function b2CircleContact() {\n      b2CircleContact.b2CircleContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2CircleContact = b2CircleContact;\n\n   function b2Contact() {\n      b2Contact.b2Contact.apply(this, arguments);\n      if (this.constructor === b2Contact) this.b2Contact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2Contact = b2Contact;\n\n   function b2ContactConstraint() {\n      b2ContactConstraint.b2ContactConstraint.apply(this, arguments);\n      if (this.constructor === b2ContactConstraint) this.b2ContactConstraint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactConstraint = b2ContactConstraint;\n\n   function b2ContactConstraintPoint() {\n      b2ContactConstraintPoint.b2ContactConstraintPoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactConstraintPoint = b2ContactConstraintPoint;\n\n   function b2ContactEdge() {\n      b2ContactEdge.b2ContactEdge.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactEdge = b2ContactEdge;\n\n   function b2ContactFactory() {\n      b2ContactFactory.b2ContactFactory.apply(this, arguments);\n      if (this.constructor === b2ContactFactory) this.b2ContactFactory.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactFactory = b2ContactFactory;\n\n   function b2ContactRegister() {\n      b2ContactRegister.b2ContactRegister.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactRegister = b2ContactRegister;\n\n   function b2ContactResult() {\n      b2ContactResult.b2ContactResult.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactResult = b2ContactResult;\n\n   function b2ContactSolver() {\n      b2ContactSolver.b2ContactSolver.apply(this, arguments);\n      if (this.constructor === b2ContactSolver) this.b2ContactSolver.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2ContactSolver = b2ContactSolver;\n\n   function b2EdgeAndCircleContact() {\n      b2EdgeAndCircleContact.b2EdgeAndCircleContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2EdgeAndCircleContact = b2EdgeAndCircleContact;\n\n   function b2NullContact() {\n      b2NullContact.b2NullContact.apply(this, arguments);\n      if (this.constructor === b2NullContact) this.b2NullContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2NullContact = b2NullContact;\n\n   function b2PolyAndCircleContact() {\n      b2PolyAndCircleContact.b2PolyAndCircleContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2PolyAndCircleContact = b2PolyAndCircleContact;\n\n   function b2PolyAndEdgeContact() {\n      b2PolyAndEdgeContact.b2PolyAndEdgeContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2PolyAndEdgeContact = b2PolyAndEdgeContact;\n\n   function b2PolygonContact() {\n      b2PolygonContact.b2PolygonContact.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2PolygonContact = b2PolygonContact;\n\n   function b2PositionSolverManifold() {\n      b2PositionSolverManifold.b2PositionSolverManifold.apply(this, arguments);\n      if (this.constructor === b2PositionSolverManifold) this.b2PositionSolverManifold.apply(this, arguments);\n   };\n   Box2D.Dynamics.Contacts.b2PositionSolverManifold = b2PositionSolverManifold;\n\n   function b2BuoyancyController() {\n      b2BuoyancyController.b2BuoyancyController.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2BuoyancyController = b2BuoyancyController;\n\n   function b2ConstantAccelController() {\n      b2ConstantAccelController.b2ConstantAccelController.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2ConstantAccelController = b2ConstantAccelController;\n\n   function b2ConstantForceController() {\n      b2ConstantForceController.b2ConstantForceController.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2ConstantForceController = b2ConstantForceController;\n\n   function b2Controller() {\n      b2Controller.b2Controller.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2Controller = b2Controller;\n\n   function b2ControllerEdge() {\n      b2ControllerEdge.b2ControllerEdge.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2ControllerEdge = b2ControllerEdge;\n\n   function b2GravityController() {\n      b2GravityController.b2GravityController.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2GravityController = b2GravityController;\n\n   function b2TensorDampingController() {\n      b2TensorDampingController.b2TensorDampingController.apply(this, arguments);\n   };\n   Box2D.Dynamics.Controllers.b2TensorDampingController = b2TensorDampingController;\n\n   function b2DistanceJoint() {\n      b2DistanceJoint.b2DistanceJoint.apply(this, arguments);\n      if (this.constructor === b2DistanceJoint) this.b2DistanceJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2DistanceJoint = b2DistanceJoint;\n\n   function b2DistanceJointDef() {\n      b2DistanceJointDef.b2DistanceJointDef.apply(this, arguments);\n      if (this.constructor === b2DistanceJointDef) this.b2DistanceJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2DistanceJointDef = b2DistanceJointDef;\n\n   function b2FrictionJoint() {\n      b2FrictionJoint.b2FrictionJoint.apply(this, arguments);\n      if (this.constructor === b2FrictionJoint) this.b2FrictionJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2FrictionJoint = b2FrictionJoint;\n\n   function b2FrictionJointDef() {\n      b2FrictionJointDef.b2FrictionJointDef.apply(this, arguments);\n      if (this.constructor === b2FrictionJointDef) this.b2FrictionJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2FrictionJointDef = b2FrictionJointDef;\n\n   function b2GearJoint() {\n      b2GearJoint.b2GearJoint.apply(this, arguments);\n      if (this.constructor === b2GearJoint) this.b2GearJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2GearJoint = b2GearJoint;\n\n   function b2GearJointDef() {\n      b2GearJointDef.b2GearJointDef.apply(this, arguments);\n      if (this.constructor === b2GearJointDef) this.b2GearJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2GearJointDef = b2GearJointDef;\n\n   function b2Jacobian() {\n      b2Jacobian.b2Jacobian.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2Jacobian = b2Jacobian;\n\n   function b2Joint() {\n      b2Joint.b2Joint.apply(this, arguments);\n      if (this.constructor === b2Joint) this.b2Joint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2Joint = b2Joint;\n\n   function b2JointDef() {\n      b2JointDef.b2JointDef.apply(this, arguments);\n      if (this.constructor === b2JointDef) this.b2JointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2JointDef = b2JointDef;\n\n   function b2JointEdge() {\n      b2JointEdge.b2JointEdge.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2JointEdge = b2JointEdge;\n\n   function b2LineJoint() {\n      b2LineJoint.b2LineJoint.apply(this, arguments);\n      if (this.constructor === b2LineJoint) this.b2LineJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2LineJoint = b2LineJoint;\n\n   function b2LineJointDef() {\n      b2LineJointDef.b2LineJointDef.apply(this, arguments);\n      if (this.constructor === b2LineJointDef) this.b2LineJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2LineJointDef = b2LineJointDef;\n\n   function b2MouseJoint() {\n      b2MouseJoint.b2MouseJoint.apply(this, arguments);\n      if (this.constructor === b2MouseJoint) this.b2MouseJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2MouseJoint = b2MouseJoint;\n\n   function b2MouseJointDef() {\n      b2MouseJointDef.b2MouseJointDef.apply(this, arguments);\n      if (this.constructor === b2MouseJointDef) this.b2MouseJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2MouseJointDef = b2MouseJointDef;\n\n   function b2PrismaticJoint() {\n      b2PrismaticJoint.b2PrismaticJoint.apply(this, arguments);\n      if (this.constructor === b2PrismaticJoint) this.b2PrismaticJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2PrismaticJoint = b2PrismaticJoint;\n\n   function b2PrismaticJointDef() {\n      b2PrismaticJointDef.b2PrismaticJointDef.apply(this, arguments);\n      if (this.constructor === b2PrismaticJointDef) this.b2PrismaticJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2PrismaticJointDef = b2PrismaticJointDef;\n\n   function b2PulleyJoint() {\n      b2PulleyJoint.b2PulleyJoint.apply(this, arguments);\n      if (this.constructor === b2PulleyJoint) this.b2PulleyJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2PulleyJoint = b2PulleyJoint;\n\n   function b2PulleyJointDef() {\n      b2PulleyJointDef.b2PulleyJointDef.apply(this, arguments);\n      if (this.constructor === b2PulleyJointDef) this.b2PulleyJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2PulleyJointDef = b2PulleyJointDef;\n\n   function b2RevoluteJoint() {\n      b2RevoluteJoint.b2RevoluteJoint.apply(this, arguments);\n      if (this.constructor === b2RevoluteJoint) this.b2RevoluteJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2RevoluteJoint = b2RevoluteJoint;\n\n   function b2RevoluteJointDef() {\n      b2RevoluteJointDef.b2RevoluteJointDef.apply(this, arguments);\n      if (this.constructor === b2RevoluteJointDef) this.b2RevoluteJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2RevoluteJointDef = b2RevoluteJointDef;\n\n   function b2WeldJoint() {\n      b2WeldJoint.b2WeldJoint.apply(this, arguments);\n      if (this.constructor === b2WeldJoint) this.b2WeldJoint.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2WeldJoint = b2WeldJoint;\n\n   function b2WeldJointDef() {\n      b2WeldJointDef.b2WeldJointDef.apply(this, arguments);\n      if (this.constructor === b2WeldJointDef) this.b2WeldJointDef.apply(this, arguments);\n   };\n   Box2D.Dynamics.Joints.b2WeldJointDef = b2WeldJointDef;\n})(); //definitions\nBox2D.postDefs = [];\n(function () {\n   var b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\n      b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2AABB = Box2D.Collision.b2AABB,\n      b2Bound = Box2D.Collision.b2Bound,\n      b2BoundValues = Box2D.Collision.b2BoundValues,\n      b2Collision = Box2D.Collision.b2Collision,\n      b2ContactID = Box2D.Collision.b2ContactID,\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\n      b2Distance = Box2D.Collision.b2Distance,\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\n      b2Manifold = Box2D.Collision.b2Manifold,\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\n      b2Point = Box2D.Collision.b2Point,\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\n      b2Segment = Box2D.Collision.b2Segment,\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\n      b2Simplex = Box2D.Collision.b2Simplex,\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\n      b2TOIInput = Box2D.Collision.b2TOIInput,\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\n      ClipVertex = Box2D.Collision.ClipVertex,\n      Features = Box2D.Collision.Features,\n      IBroadPhase = Box2D.Collision.IBroadPhase;\n\n   b2AABB.b2AABB = function () {\n      this.lowerBound = new b2Vec2();\n      this.upperBound = new b2Vec2();\n   };\n   b2AABB.prototype.IsValid = function () {\n      var dX = this.upperBound.x - this.lowerBound.x;\n      var dY = this.upperBound.y - this.lowerBound.y;\n      var valid = dX >= 0.0 && dY >= 0.0;\n      valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\n      return valid;\n   }\n   b2AABB.prototype.GetCenter = function () {\n      return new b2Vec2((this.lowerBound.x + this.upperBound.x) / 2, (this.lowerBound.y + this.upperBound.y) / 2);\n   }\n   b2AABB.prototype.GetExtents = function () {\n      return new b2Vec2((this.upperBound.x - this.lowerBound.x) / 2, (this.upperBound.y - this.lowerBound.y) / 2);\n   }\n   b2AABB.prototype.Contains = function (aabb) {\n      var result = true;\n      result = result && this.lowerBound.x <= aabb.lowerBound.x;\n      result = result && this.lowerBound.y <= aabb.lowerBound.y;\n      result = result && aabb.upperBound.x <= this.upperBound.x;\n      result = result && aabb.upperBound.y <= this.upperBound.y;\n      return result;\n   }\n   b2AABB.prototype.RayCast = function (output, input) {\n      var tmin = (-Number.MAX_VALUE);\n      var tmax = Number.MAX_VALUE;\n      var pX = input.p1.x;\n      var pY = input.p1.y;\n      var dX = input.p2.x - input.p1.x;\n      var dY = input.p2.y - input.p1.y;\n      var absDX = Math.abs(dX);\n      var absDY = Math.abs(dY);\n      var normal = output.normal;\n      var inv_d = 0;\n      var t1 = 0;\n      var t2 = 0;\n      var t3 = 0;\n      var s = 0; {\n         if (absDX < Number.MIN_VALUE) {\n            if (pX < this.lowerBound.x || this.upperBound.x < pX) return false;\n         }\n         else {\n            inv_d = 1.0 / dX;\n            t1 = (this.lowerBound.x - pX) * inv_d;\n            t2 = (this.upperBound.x - pX) * inv_d;\n            s = (-1.0);\n            if (t1 > t2) {\n               t3 = t1;\n               t1 = t2;\n               t2 = t3;\n               s = 1.0;\n            }\n            if (t1 > tmin) {\n               normal.x = s;\n               normal.y = 0;\n               tmin = t1;\n            }\n            tmax = Math.min(tmax, t2);\n            if (tmin > tmax) return false;\n         }\n      } {\n         if (absDY < Number.MIN_VALUE) {\n            if (pY < this.lowerBound.y || this.upperBound.y < pY) return false;\n         }\n         else {\n            inv_d = 1.0 / dY;\n            t1 = (this.lowerBound.y - pY) * inv_d;\n            t2 = (this.upperBound.y - pY) * inv_d;\n            s = (-1.0);\n            if (t1 > t2) {\n               t3 = t1;\n               t1 = t2;\n               t2 = t3;\n               s = 1.0;\n            }\n            if (t1 > tmin) {\n               normal.y = s;\n               normal.x = 0;\n               tmin = t1;\n            }\n            tmax = Math.min(tmax, t2);\n            if (tmin > tmax) return false;\n         }\n      }\n      output.fraction = tmin;\n      return true;\n   }\n   b2AABB.prototype.TestOverlap = function (other) {\n      var d1X = other.lowerBound.x - this.upperBound.x;\n      var d1Y = other.lowerBound.y - this.upperBound.y;\n      var d2X = this.lowerBound.x - other.upperBound.x;\n      var d2Y = this.lowerBound.y - other.upperBound.y;\n      if (d1X > 0.0 || d1Y > 0.0) return false;\n      if (d2X > 0.0 || d2Y > 0.0) return false;\n      return true;\n   }\n   b2AABB.Combine = function (aabb1, aabb2) {\n      var aabb = new b2AABB();\n      aabb.Combine(aabb1, aabb2);\n      return aabb;\n   }\n   b2AABB.prototype.Combine = function (aabb1, aabb2) {\n      this.lowerBound.x = Math.min(aabb1.lowerBound.x, aabb2.lowerBound.x);\n      this.lowerBound.y = Math.min(aabb1.lowerBound.y, aabb2.lowerBound.y);\n      this.upperBound.x = Math.max(aabb1.upperBound.x, aabb2.upperBound.x);\n      this.upperBound.y = Math.max(aabb1.upperBound.y, aabb2.upperBound.y);\n   }\n   b2Bound.b2Bound = function () {};\n   b2Bound.prototype.IsLower = function () {\n      return (this.value & 1) == 0;\n   }\n   b2Bound.prototype.IsUpper = function () {\n      return (this.value & 1) == 1;\n   }\n   b2Bound.prototype.Swap = function (b) {\n      var tempValue = this.value;\n      var tempProxy = this.proxy;\n      var tempStabbingCount = this.stabbingCount;\n      this.value = b.value;\n      this.proxy = b.proxy;\n      this.stabbingCount = b.stabbingCount;\n      b.value = tempValue;\n      b.proxy = tempProxy;\n      b.stabbingCount = tempStabbingCount;\n   }\n   b2BoundValues.b2BoundValues = function () {};\n   b2BoundValues.prototype.b2BoundValues = function () {\n      this.lowerValues = new Vector_a2j_Number();\n      this.lowerValues[0] = 0.0;\n      this.lowerValues[1] = 0.0;\n      this.upperValues = new Vector_a2j_Number();\n      this.upperValues[0] = 0.0;\n      this.upperValues[1] = 0.0;\n   }\n   b2Collision.b2Collision = function () {};\n   b2Collision.ClipSegmentToLine = function (vOut, vIn, normal, offset) {\n      if (offset === undefined) offset = 0;\n      var cv;\n      var numOut = 0;\n      cv = vIn[0];\n      var vIn0 = cv.v;\n      cv = vIn[1];\n      var vIn1 = cv.v;\n      var distance0 = normal.x * vIn0.x + normal.y * vIn0.y - offset;\n      var distance1 = normal.x * vIn1.x + normal.y * vIn1.y - offset;\n      if (distance0 <= 0.0) vOut[numOut++].Set(vIn[0]);\n      if (distance1 <= 0.0) vOut[numOut++].Set(vIn[1]);\n      if (distance0 * distance1 < 0.0) {\n         var interp = distance0 / (distance0 - distance1);\n         cv = vOut[numOut];\n         var tVec = cv.v;\n         tVec.x = vIn0.x + interp * (vIn1.x - vIn0.x);\n         tVec.y = vIn0.y + interp * (vIn1.y - vIn0.y);\n         cv = vOut[numOut];\n         var cv2;\n         if (distance0 > 0.0) {\n            cv2 = vIn[0];\n            cv.id = cv2.id;\n         }\n         else {\n            cv2 = vIn[1];\n            cv.id = cv2.id;\n         }++numOut;\n      }\n      return numOut;\n   }\n   b2Collision.EdgeSeparation = function (poly1, xf1, edge1, poly2, xf2) {\n      if (edge1 === undefined) edge1 = 0;\n      var count1 = parseInt(poly1.m_vertexCount);\n      var vertices1 = poly1.m_vertices;\n      var normals1 = poly1.m_normals;\n      var count2 = parseInt(poly2.m_vertexCount);\n      var vertices2 = poly2.m_vertices;\n      var tMat;\n      var tVec;\n      tMat = xf1.R;\n      tVec = normals1[edge1];\n      var normal1WorldX = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var normal1WorldY = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tMat = xf2.R;\n      var normal1X = (tMat.col1.x * normal1WorldX + tMat.col1.y * normal1WorldY);\n      var normal1Y = (tMat.col2.x * normal1WorldX + tMat.col2.y * normal1WorldY);\n      var index = 0;\n      var minDot = Number.MAX_VALUE;\n      for (var i = 0; i < count2; ++i) {\n         tVec = vertices2[i];\n         var dot = tVec.x * normal1X + tVec.y * normal1Y;\n         if (dot < minDot) {\n            minDot = dot;\n            index = i;\n         }\n      }\n      tVec = vertices1[edge1];\n      tMat = xf1.R;\n      var v1X = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var v1Y = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tVec = vertices2[index];\n      tMat = xf2.R;\n      var v2X = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var v2Y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      v2X -= v1X;\n      v2Y -= v1Y;\n      var separation = v2X * normal1WorldX + v2Y * normal1WorldY;\n      return separation;\n   }\n   b2Collision.FindMaxSeparation = function (edgeIndex, poly1, xf1, poly2, xf2) {\n      var count1 = parseInt(poly1.m_vertexCount);\n      var normals1 = poly1.m_normals;\n      var tVec;\n      var tMat;\n      tMat = xf2.R;\n      tVec = poly2.m_centroid;\n      var dX = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var dY = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tMat = xf1.R;\n      tVec = poly1.m_centroid;\n      dX -= xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      dY -= xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      var dLocal1X = (dX * xf1.R.col1.x + dY * xf1.R.col1.y);\n      var dLocal1Y = (dX * xf1.R.col2.x + dY * xf1.R.col2.y);\n      var edge = 0;\n      var maxDot = (-Number.MAX_VALUE);\n      for (var i = 0; i < count1; ++i) {\n         tVec = normals1[i];\n         var dot = (tVec.x * dLocal1X + tVec.y * dLocal1Y);\n         if (dot > maxDot) {\n            maxDot = dot;\n            edge = i;\n         }\n      }\n      var s = b2Collision.EdgeSeparation(poly1, xf1, edge, poly2, xf2);\n      var prevEdge = parseInt(edge - 1 >= 0 ? edge - 1 : count1 - 1);\n      var sPrev = b2Collision.EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\n      var nextEdge = parseInt(edge + 1 < count1 ? edge + 1 : 0);\n      var sNext = b2Collision.EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\n      var bestEdge = 0;\n      var bestSeparation = 0;\n      var increment = 0;\n      if (sPrev > s && sPrev > sNext) {\n         increment = (-1);\n         bestEdge = prevEdge;\n         bestSeparation = sPrev;\n      }\n      else if (sNext > s) {\n         increment = 1;\n         bestEdge = nextEdge;\n         bestSeparation = sNext;\n      }\n      else {\n         edgeIndex[0] = edge;\n         return s;\n      }\n      while (true) {\n         if (increment == (-1)) edge = bestEdge - 1 >= 0 ? bestEdge - 1 : count1 - 1;\n         else edge = bestEdge + 1 < count1 ? bestEdge + 1 : 0;s = b2Collision.EdgeSeparation(poly1, xf1, edge, poly2, xf2);\n         if (s > bestSeparation) {\n            bestEdge = edge;\n            bestSeparation = s;\n         }\n         else {\n            break;\n         }\n      }\n      edgeIndex[0] = bestEdge;\n      return bestSeparation;\n   }\n   b2Collision.FindIncidentEdge = function (c, poly1, xf1, edge1, poly2, xf2) {\n      if (edge1 === undefined) edge1 = 0;\n      var count1 = parseInt(poly1.m_vertexCount);\n      var normals1 = poly1.m_normals;\n      var count2 = parseInt(poly2.m_vertexCount);\n      var vertices2 = poly2.m_vertices;\n      var normals2 = poly2.m_normals;\n      var tMat;\n      var tVec;\n      tMat = xf1.R;\n      tVec = normals1[edge1];\n      var normal1X = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var normal1Y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tMat = xf2.R;\n      var tX = (tMat.col1.x * normal1X + tMat.col1.y * normal1Y);\n      normal1Y = (tMat.col2.x * normal1X + tMat.col2.y * normal1Y);\n      normal1X = tX;\n      var index = 0;\n      var minDot = Number.MAX_VALUE;\n      for (var i = 0; i < count2; ++i) {\n         tVec = normals2[i];\n         var dot = (normal1X * tVec.x + normal1Y * tVec.y);\n         if (dot < minDot) {\n            minDot = dot;\n            index = i;\n         }\n      }\n      var tClip;\n      var i1 = parseInt(index);\n      var i2 = parseInt(i1 + 1 < count2 ? i1 + 1 : 0);\n      tClip = c[0];\n      tVec = vertices2[i1];\n      tMat = xf2.R;\n      tClip.v.x = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      tClip.v.y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tClip.id.features.referenceEdge = edge1;\n      tClip.id.features.incidentEdge = i1;\n      tClip.id.features.incidentVertex = 0;\n      tClip = c[1];\n      tVec = vertices2[i2];\n      tMat = xf2.R;\n      tClip.v.x = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      tClip.v.y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tClip.id.features.referenceEdge = edge1;\n      tClip.id.features.incidentEdge = i2;\n      tClip.id.features.incidentVertex = 1;\n   }\n   b2Collision.MakeClipPointVector = function () {\n      var r = new Box2DVector(2);\n      r[0] = new ClipVertex();\n      r[1] = new ClipVertex();\n      return r;\n   }\n   b2Collision.CollidePolygons = function (manifold, polyA, xfA, polyB, xfB) {\n      var cv;\n      manifold.m_pointCount = 0;\n      var totalRadius = polyA.m_radius + polyB.m_radius;\n      var edgeA = 0;\n      b2Collision.s_edgeAO[0] = edgeA;\n      var separationA = b2Collision.FindMaxSeparation(b2Collision.s_edgeAO, polyA, xfA, polyB, xfB);\n      edgeA = b2Collision.s_edgeAO[0];\n      if (separationA > totalRadius) return;\n      var edgeB = 0;\n      b2Collision.s_edgeBO[0] = edgeB;\n      var separationB = b2Collision.FindMaxSeparation(b2Collision.s_edgeBO, polyB, xfB, polyA, xfA);\n      edgeB = b2Collision.s_edgeBO[0];\n      if (separationB > totalRadius) return;\n      var poly1;\n      var poly2;\n      var xf1;\n      var xf2;\n      var edge1 = 0;\n      var flip = 0;\n      var k_relativeTol = 0.98;\n      var k_absoluteTol = 0.001;\n      var tMat;\n      if (separationB > k_relativeTol * separationA + k_absoluteTol) {\n         poly1 = polyB;\n         poly2 = polyA;\n         xf1 = xfB;\n         xf2 = xfA;\n         edge1 = edgeB;\n         manifold.m_type = b2Manifold.e_faceB;\n         flip = 1;\n      }\n      else {\n         poly1 = polyA;\n         poly2 = polyB;\n         xf1 = xfA;\n         xf2 = xfB;\n         edge1 = edgeA;\n         manifold.m_type = b2Manifold.e_faceA;\n         flip = 0;\n      }\n      var incidentEdge = b2Collision.s_incidentEdge;\n      b2Collision.FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n      var count1 = parseInt(poly1.m_vertexCount);\n      var vertices1 = poly1.m_vertices;\n      var local_v11 = vertices1[edge1];\n      var local_v12;\n      if (edge1 + 1 < count1) {\n         local_v12 = vertices1[parseInt(edge1 + 1)];\n      }\n      else {\n         local_v12 = vertices1[0];\n      }\n      var localTangent = b2Collision.s_localTangent;\n      localTangent.Set(local_v12.x - local_v11.x, local_v12.y - local_v11.y);\n      localTangent.Normalize();\n      var localNormal = b2Collision.s_localNormal;\n      localNormal.x = localTangent.y;\n      localNormal.y = (-localTangent.x);\n      var planePoint = b2Collision.s_planePoint;\n      planePoint.Set(0.5 * (local_v11.x + local_v12.x), 0.5 * (local_v11.y + local_v12.y));\n      var tangent = b2Collision.s_tangent;\n      tMat = xf1.R;\n      tangent.x = (tMat.col1.x * localTangent.x + tMat.col2.x * localTangent.y);\n      tangent.y = (tMat.col1.y * localTangent.x + tMat.col2.y * localTangent.y);\n      var tangent2 = b2Collision.s_tangent2;\n      tangent2.x = (-tangent.x);\n      tangent2.y = (-tangent.y);\n      var normal = b2Collision.s_normal;\n      normal.x = tangent.y;\n      normal.y = (-tangent.x);\n      var v11 = b2Collision.s_v11;\n      var v12 = b2Collision.s_v12;\n      v11.x = xf1.position.x + (tMat.col1.x * local_v11.x + tMat.col2.x * local_v11.y);\n      v11.y = xf1.position.y + (tMat.col1.y * local_v11.x + tMat.col2.y * local_v11.y);\n      v12.x = xf1.position.x + (tMat.col1.x * local_v12.x + tMat.col2.x * local_v12.y);\n      v12.y = xf1.position.y + (tMat.col1.y * local_v12.x + tMat.col2.y * local_v12.y);\n      var frontOffset = normal.x * v11.x + normal.y * v11.y;\n      var sideOffset1 = (-tangent.x * v11.x) - tangent.y * v11.y + totalRadius;\n      var sideOffset2 = tangent.x * v12.x + tangent.y * v12.y + totalRadius;\n      var clipPoints1 = b2Collision.s_clipPoints1;\n      var clipPoints2 = b2Collision.s_clipPoints2;\n      var np = 0;\n      np = b2Collision.ClipSegmentToLine(clipPoints1, incidentEdge, tangent2, sideOffset1);\n      if (np < 2) return;\n      np = b2Collision.ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2);\n      if (np < 2) return;\n      manifold.m_localPlaneNormal.SetV(localNormal);\n      manifold.m_localPoint.SetV(planePoint);\n      var pointCount = 0;\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; ++i) {\n         cv = clipPoints2[i];\n         var separation = normal.x * cv.v.x + normal.y * cv.v.y - frontOffset;\n         if (separation <= totalRadius) {\n            var cp = manifold.m_points[pointCount];\n            tMat = xf2.R;\n            var tX = cv.v.x - xf2.position.x;\n            var tY = cv.v.y - xf2.position.y;\n            cp.m_localPoint.x = (tX * tMat.col1.x + tY * tMat.col1.y);\n            cp.m_localPoint.y = (tX * tMat.col2.x + tY * tMat.col2.y);\n            cp.m_id.Set(cv.id);\n            cp.m_id.features.flip = flip;\n            ++pointCount;\n         }\n      }\n      manifold.m_pointCount = pointCount;\n   }\n   b2Collision.CollideCircles = function (manifold, circle1, xf1, circle2, xf2) {\n      manifold.m_pointCount = 0;\n      var tMat;\n      var tVec;\n      tMat = xf1.R;\n      tVec = circle1.m_p;\n      var p1X = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var p1Y = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      tMat = xf2.R;\n      tVec = circle2.m_p;\n      var p2X = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var p2Y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      var dX = p2X - p1X;\n      var dY = p2Y - p1Y;\n      var distSqr = dX * dX + dY * dY;\n      var radius = circle1.m_radius + circle2.m_radius;\n      if (distSqr > radius * radius) {\n         return;\n      }\n      manifold.m_type = b2Manifold.e_circles;\n      manifold.m_localPoint.SetV(circle1.m_p);\n      manifold.m_localPlaneNormal.SetZero();\n      manifold.m_pointCount = 1;\n      manifold.m_points[0].m_localPoint.SetV(circle2.m_p);\n      manifold.m_points[0].m_id.key = 0;\n   }\n   b2Collision.CollidePolygonAndCircle = function (manifold, polygon, xf1, circle, xf2) {\n      manifold.m_pointCount = 0;\n      var tPoint;\n      var dX = 0;\n      var dY = 0;\n      var positionX = 0;\n      var positionY = 0;\n      var tVec;\n      var tMat;\n      tMat = xf2.R;\n      tVec = circle.m_p;\n      var cX = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var cY = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      dX = cX - xf1.position.x;\n      dY = cY - xf1.position.y;\n      tMat = xf1.R;\n      var cLocalX = (dX * tMat.col1.x + dY * tMat.col1.y);\n      var cLocalY = (dX * tMat.col2.x + dY * tMat.col2.y);\n      var dist = 0;\n      var normalIndex = 0;\n      var separation = (-Number.MAX_VALUE);\n      var radius = polygon.m_radius + circle.m_radius;\n      var vertexCount = parseInt(polygon.m_vertexCount);\n      var vertices = polygon.m_vertices;\n      var normals = polygon.m_normals;\n      for (var i = 0; i < vertexCount; ++i) {\n         tVec = vertices[i];\n         dX = cLocalX - tVec.x;\n         dY = cLocalY - tVec.y;\n         tVec = normals[i];\n         var s = tVec.x * dX + tVec.y * dY;\n         if (s > radius) {\n            return;\n         }\n         if (s > separation) {\n            separation = s;\n            normalIndex = i;\n         }\n      }\n      var vertIndex1 = parseInt(normalIndex);\n      var vertIndex2 = parseInt(vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0);\n      var v1 = vertices[vertIndex1];\n      var v2 = vertices[vertIndex2];\n      if (separation < Number.MIN_VALUE) {\n         manifold.m_pointCount = 1;\n         manifold.m_type = b2Manifold.e_faceA;\n         manifold.m_localPlaneNormal.SetV(normals[normalIndex]);\n         manifold.m_localPoint.x = 0.5 * (v1.x + v2.x);\n         manifold.m_localPoint.y = 0.5 * (v1.y + v2.y);\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\n         manifold.m_points[0].m_id.key = 0;\n         return;\n      }\n      var u1 = (cLocalX - v1.x) * (v2.x - v1.x) + (cLocalY - v1.y) * (v2.y - v1.y);\n      var u2 = (cLocalX - v2.x) * (v1.x - v2.x) + (cLocalY - v2.y) * (v1.y - v2.y);\n      if (u1 <= 0.0) {\n         if ((cLocalX - v1.x) * (cLocalX - v1.x) + (cLocalY - v1.y) * (cLocalY - v1.y) > radius * radius) return;\n         manifold.m_pointCount = 1;\n         manifold.m_type = b2Manifold.e_faceA;\n         manifold.m_localPlaneNormal.x = cLocalX - v1.x;\n         manifold.m_localPlaneNormal.y = cLocalY - v1.y;\n         manifold.m_localPlaneNormal.Normalize();\n         manifold.m_localPoint.SetV(v1);\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\n         manifold.m_points[0].m_id.key = 0;\n      }\n      else if (u2 <= 0) {\n         if ((cLocalX - v2.x) * (cLocalX - v2.x) + (cLocalY - v2.y) * (cLocalY - v2.y) > radius * radius) return;\n         manifold.m_pointCount = 1;\n         manifold.m_type = b2Manifold.e_faceA;\n         manifold.m_localPlaneNormal.x = cLocalX - v2.x;\n         manifold.m_localPlaneNormal.y = cLocalY - v2.y;\n         manifold.m_localPlaneNormal.Normalize();\n         manifold.m_localPoint.SetV(v2);\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\n         manifold.m_points[0].m_id.key = 0;\n      }\n      else {\n         var faceCenterX = 0.5 * (v1.x + v2.x);\n         var faceCenterY = 0.5 * (v1.y + v2.y);\n         separation = (cLocalX - faceCenterX) * normals[vertIndex1].x + (cLocalY - faceCenterY) * normals[vertIndex1].y;\n         if (separation > radius) return;\n         manifold.m_pointCount = 1;\n         manifold.m_type = b2Manifold.e_faceA;\n         manifold.m_localPlaneNormal.x = normals[vertIndex1].x;\n         manifold.m_localPlaneNormal.y = normals[vertIndex1].y;\n         manifold.m_localPlaneNormal.Normalize();\n         manifold.m_localPoint.Set(faceCenterX, faceCenterY);\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\n         manifold.m_points[0].m_id.key = 0;\n      }\n   }\n   b2Collision.TestOverlap = function (a, b) {\n      var t1 = b.lowerBound;\n      var t2 = a.upperBound;\n      var d1X = t1.x - t2.x;\n      var d1Y = t1.y - t2.y;\n      t1 = a.lowerBound;\n      t2 = b.upperBound;\n      var d2X = t1.x - t2.x;\n      var d2Y = t1.y - t2.y;\n      if (d1X > 0.0 || d1Y > 0.0) return false;\n      if (d2X > 0.0 || d2Y > 0.0) return false;\n      return true;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.b2Collision.s_incidentEdge = b2Collision.MakeClipPointVector();\n      Box2D.Collision.b2Collision.s_clipPoints1 = b2Collision.MakeClipPointVector();\n      Box2D.Collision.b2Collision.s_clipPoints2 = b2Collision.MakeClipPointVector();\n      Box2D.Collision.b2Collision.s_edgeAO = new Vector_a2j_Number(1);\n      Box2D.Collision.b2Collision.s_edgeBO = new Vector_a2j_Number(1);\n      Box2D.Collision.b2Collision.s_localTangent = new b2Vec2();\n      Box2D.Collision.b2Collision.s_localNormal = new b2Vec2();\n      Box2D.Collision.b2Collision.s_planePoint = new b2Vec2();\n      Box2D.Collision.b2Collision.s_normal = new b2Vec2();\n      Box2D.Collision.b2Collision.s_tangent = new b2Vec2();\n      Box2D.Collision.b2Collision.s_tangent2 = new b2Vec2();\n      Box2D.Collision.b2Collision.s_v11 = new b2Vec2();\n      Box2D.Collision.b2Collision.s_v12 = new b2Vec2();\n      Box2D.Collision.b2Collision.b2CollidePolyTempVec = new b2Vec2();\n      Box2D.Collision.b2Collision.b2_nullFeature = 0x000000ff;\n   });\n   b2ContactID.b2ContactID = function () {\n      this.features = new Features();\n   };\n   b2ContactID.prototype.b2ContactID = function () {\n      this.features._m_id = this;\n   }\n   b2ContactID.prototype.Set = function (id) {\n      this.key = id._key;\n   }\n   b2ContactID.prototype.Copy = function () {\n      var id = new b2ContactID();\n      id.key = this.key;\n      return id;\n   }\n   Object.defineProperty(b2ContactID.prototype, 'key', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return this._key;\n      }\n   });\n   Object.defineProperty(b2ContactID.prototype, 'key', {\n      enumerable: false,\n      configurable: true,\n      set: function (value) {\n         if (value === undefined) value = 0;\n         this._key = value;\n         this.features._referenceEdge = this._key & 0x000000ff;\n         this.features._incidentEdge = ((this._key & 0x0000ff00) >> 8) & 0x000000ff;\n         this.features._incidentVertex = ((this._key & 0x00ff0000) >> 16) & 0x000000ff;\n         this.features._flip = ((this._key & 0xff000000) >> 24) & 0x000000ff;\n      }\n   });\n   b2ContactPoint.b2ContactPoint = function () {\n      this.position = new b2Vec2();\n      this.velocity = new b2Vec2();\n      this.normal = new b2Vec2();\n      this.id = new b2ContactID();\n   };\n   b2Distance.b2Distance = function () {};\n   b2Distance.Distance = function (output, cache, input) {\n      ++b2Distance.b2_gjkCalls;\n      var proxyA = input.proxyA;\n      var proxyB = input.proxyB;\n      var transformA = input.transformA;\n      var transformB = input.transformB;\n      var simplex = b2Distance.s_simplex;\n      simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\n      var vertices = simplex.m_vertices;\n      var k_maxIters = 20;\n      var saveA = b2Distance.s_saveA;\n      var saveB = b2Distance.s_saveB;\n      var saveCount = 0;\n      var closestPoint = simplex.GetClosestPoint();\n      var distanceSqr1 = closestPoint.LengthSquared();\n      var distanceSqr2 = distanceSqr1;\n      var i = 0;\n      var p;\n      var iter = 0;\n      while (iter < k_maxIters) {\n         saveCount = simplex.m_count;\n         for (i = 0;\n         i < saveCount; i++) {\n            saveA[i] = vertices[i].indexA;\n            saveB[i] = vertices[i].indexB;\n         }\n         switch (simplex.m_count) {\n         case 1:\n            break;\n         case 2:\n            simplex.Solve2();\n            break;\n         case 3:\n            simplex.Solve3();\n            break;\n         default:\n            b2Settings.b2Assert(false);\n         }\n         if (simplex.m_count == 3) {\n            break;\n         }\n         p = simplex.GetClosestPoint();\n         distanceSqr2 = p.LengthSquared();\n         if (distanceSqr2 > distanceSqr1) {}\n         distanceSqr1 = distanceSqr2;\n         var d = simplex.GetSearchDirection();\n         if (d.LengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE) {\n            break;\n         }\n         var vertex = vertices[simplex.m_count];\n         vertex.indexA = proxyA.GetSupport(b2Math.MulTMV(transformA.R, d.GetNegative()));\n         vertex.wA = b2Math.MulX(transformA, proxyA.GetVertex(vertex.indexA));\n         vertex.indexB = proxyB.GetSupport(b2Math.MulTMV(transformB.R, d));\n         vertex.wB = b2Math.MulX(transformB, proxyB.GetVertex(vertex.indexB));\n         vertex.w = b2Math.SubtractVV(vertex.wB, vertex.wA);\n         ++iter;\n         ++b2Distance.b2_gjkIters;\n         var duplicate = false;\n         for (i = 0;\n         i < saveCount; i++) {\n            if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n               duplicate = true;\n               break;\n            }\n         }\n         if (duplicate) {\n            break;\n         }++simplex.m_count;\n      }\n      b2Distance.b2_gjkMaxIters = b2Math.Max(b2Distance.b2_gjkMaxIters, iter);\n      simplex.GetWitnessPoints(output.pointA, output.pointB);\n      output.distance = b2Math.SubtractVV(output.pointA, output.pointB).Length();\n      output.iterations = iter;\n      simplex.WriteCache(cache);\n      if (input.useRadii) {\n         var rA = proxyA.m_radius;\n         var rB = proxyB.m_radius;\n         if (output.distance > rA + rB && output.distance > Number.MIN_VALUE) {\n            output.distance -= rA + rB;\n            var normal = b2Math.SubtractVV(output.pointB, output.pointA);\n            normal.Normalize();\n            output.pointA.x += rA * normal.x;\n            output.pointA.y += rA * normal.y;\n            output.pointB.x -= rB * normal.x;\n            output.pointB.y -= rB * normal.y;\n         }\n         else {\n            p = new b2Vec2();\n            p.x = .5 * (output.pointA.x + output.pointB.x);\n            p.y = .5 * (output.pointA.y + output.pointB.y);\n            output.pointA.x = output.pointB.x = p.x;\n            output.pointA.y = output.pointB.y = p.y;\n            output.distance = 0.0;\n         }\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.b2Distance.s_simplex = new b2Simplex();\n      Box2D.Collision.b2Distance.s_saveA = new Vector_a2j_Number(3);\n      Box2D.Collision.b2Distance.s_saveB = new Vector_a2j_Number(3);\n   });\n   b2DistanceInput.b2DistanceInput = function () {};\n   b2DistanceOutput.b2DistanceOutput = function () {\n      this.pointA = new b2Vec2();\n      this.pointB = new b2Vec2();\n   };\n   b2DistanceProxy.b2DistanceProxy = function () {};\n   b2DistanceProxy.prototype.Set = function (shape) {\n      switch (shape.GetType()) {\n      case b2Shape.e_circleShape:\n         {\n            var circle = (shape instanceof b2CircleShape ? shape : null);\n            this.m_vertices = new Box2DVector(1, true);\n            this.m_vertices[0] = circle.m_p;\n            this.m_count = 1;\n            this.m_radius = circle.m_radius;\n         }\n         break;\n      case b2Shape.e_polygonShape:\n         {\n            var polygon = (shape instanceof b2PolygonShape ? shape : null);\n            this.m_vertices = polygon.m_vertices;\n            this.m_count = polygon.m_vertexCount;\n            this.m_radius = polygon.m_radius;\n         }\n         break;\n      default:\n         b2Settings.b2Assert(false);\n      }\n   }\n   b2DistanceProxy.prototype.GetSupport = function (d) {\n      var bestIndex = 0;\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\n      for (var i = 1; i < this.m_count; ++i) {\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\n         if (value > bestValue) {\n            bestIndex = i;\n            bestValue = value;\n         }\n      }\n      return bestIndex;\n   }\n   b2DistanceProxy.prototype.GetSupportVertex = function (d) {\n      var bestIndex = 0;\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\n      for (var i = 1; i < this.m_count; ++i) {\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\n         if (value > bestValue) {\n            bestIndex = i;\n            bestValue = value;\n         }\n      }\n      return this.m_vertices[bestIndex];\n   }\n   b2DistanceProxy.prototype.GetVertexCount = function () {\n      return this.m_count;\n   }\n   b2DistanceProxy.prototype.GetVertex = function (index) {\n      if (index === undefined) index = 0;\n      b2Settings.b2Assert(0 <= index && index < this.m_count);\n      return this.m_vertices[index];\n   }\n   b2DynamicTree.b2DynamicTree = function () {};\n   b2DynamicTree.prototype.b2DynamicTree = function () {\n      this.m_root = null;\n      this.m_freeList = null;\n      this.m_path = 0;\n      this.m_insertionCount = 0;\n   }\n   b2DynamicTree.prototype.CreateProxy = function (aabb, userData) {\n      var node = this.AllocateNode();\n      var extendX = b2Settings.b2_aabbExtension;\n      var extendY = b2Settings.b2_aabbExtension;\n      node.aabb.lowerBound.x = aabb.lowerBound.x - extendX;\n      node.aabb.lowerBound.y = aabb.lowerBound.y - extendY;\n      node.aabb.upperBound.x = aabb.upperBound.x + extendX;\n      node.aabb.upperBound.y = aabb.upperBound.y + extendY;\n      node.userData = userData;\n      this.InsertLeaf(node);\n      return node;\n   }\n   b2DynamicTree.prototype.DestroyProxy = function (proxy) {\n      this.RemoveLeaf(proxy);\n      this.FreeNode(proxy);\n   }\n   b2DynamicTree.prototype.MoveProxy = function (proxy, aabb, displacement) {\n      b2Settings.b2Assert(proxy.IsLeaf());\n      if (proxy.aabb.Contains(aabb)) {\n         return false;\n      }\n      this.RemoveLeaf(proxy);\n      var extendX = b2Settings.b2_aabbExtension + b2Settings.b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\n      var extendY = b2Settings.b2_aabbExtension + b2Settings.b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\n      proxy.aabb.lowerBound.x = aabb.lowerBound.x - extendX;\n      proxy.aabb.lowerBound.y = aabb.lowerBound.y - extendY;\n      proxy.aabb.upperBound.x = aabb.upperBound.x + extendX;\n      proxy.aabb.upperBound.y = aabb.upperBound.y + extendY;\n      this.InsertLeaf(proxy);\n      return true;\n   }\n   b2DynamicTree.prototype.Rebalance = function (iterations) {\n      if (iterations === undefined) iterations = 0;\n      if (this.m_root == null) return;\n      for (var i = 0; i < iterations; i++) {\n         var node = this.m_root;\n         var bit = 0;\n         while (node.IsLeaf() == false) {\n            node = (this.m_path >> bit) & 1 ? node.child2 : node.child1;\n            bit = (bit + 1) & 31;\n         }++this.m_path;\n         this.RemoveLeaf(node);\n         this.InsertLeaf(node);\n      }\n   }\n   b2DynamicTree.prototype.GetFatAABB = function (proxy) {\n      return proxy.aabb;\n   }\n   b2DynamicTree.prototype.GetUserData = function (proxy) {\n      return proxy.userData;\n   }\n   b2DynamicTree.prototype.Query = function (callback, aabb) {\n      if (this.m_root == null) return;\n      var stack = new Box2DVector();\n      var count = 0;\n      stack[count++] = this.m_root;\n      while (count > 0) {\n         var node = stack[--count];\n         if (node.aabb.TestOverlap(aabb)) {\n            if (node.IsLeaf()) {\n               var proceed = callback(node);\n               if (!proceed) return;\n            }\n            else {\n               stack[count++] = node.child1;\n               stack[count++] = node.child2;\n            }\n         }\n      }\n   }\n   b2DynamicTree.prototype.RayCast = function (callback, input) {\n      if (this.m_root == null) return;\n      var p1 = input.p1;\n      var p2 = input.p2;\n      var r = b2Math.SubtractVV(p1, p2);\n      r.Normalize();\n      var v = b2Math.CrossFV(1.0, r);\n      var abs_v = b2Math.AbsV(v);\n      var maxFraction = input.maxFraction;\n      var segmentAABB = new b2AABB();\n      var tX = 0;\n      var tY = 0; {\n         tX = p1.x + maxFraction * (p2.x - p1.x);\n         tY = p1.y + maxFraction * (p2.y - p1.y);\n         segmentAABB.lowerBound.x = Math.min(p1.x, tX);\n         segmentAABB.lowerBound.y = Math.min(p1.y, tY);\n         segmentAABB.upperBound.x = Math.max(p1.x, tX);\n         segmentAABB.upperBound.y = Math.max(p1.y, tY);\n      }\n      var stack = new Box2DVector();\n      var count = 0;\n      stack[count++] = this.m_root;\n      while (count > 0) {\n         var node = stack[--count];\n         if (node.aabb.TestOverlap(segmentAABB) == false) {\n            continue;\n         }\n         var c = node.aabb.GetCenter();\n         var h = node.aabb.GetExtents();\n         var separation = Math.abs(v.x * (p1.x - c.x) + v.y * (p1.y - c.y)) - abs_v.x * h.x - abs_v.y * h.y;\n         if (separation > 0.0) continue;\n         if (node.IsLeaf()) {\n            var subInput = new b2RayCastInput();\n            subInput.p1 = input.p1;\n            subInput.p2 = input.p2;\n            subInput.maxFraction = input.maxFraction;\n            maxFraction = callback(subInput, node);\n            if (maxFraction == 0.0) return;\n            if (maxFraction > 0.0) {\n               tX = p1.x + maxFraction * (p2.x - p1.x);\n               tY = p1.y + maxFraction * (p2.y - p1.y);\n               segmentAABB.lowerBound.x = Math.min(p1.x, tX);\n               segmentAABB.lowerBound.y = Math.min(p1.y, tY);\n               segmentAABB.upperBound.x = Math.max(p1.x, tX);\n               segmentAABB.upperBound.y = Math.max(p1.y, tY);\n            }\n         }\n         else {\n            stack[count++] = node.child1;\n            stack[count++] = node.child2;\n         }\n      }\n   }\n   b2DynamicTree.prototype.AllocateNode = function () {\n      if (this.m_freeList) {\n         var node = this.m_freeList;\n         this.m_freeList = node.parent;\n         node.parent = null;\n         node.child1 = null;\n         node.child2 = null;\n         return node;\n      }\n      return new b2DynamicTreeNode();\n   }\n   b2DynamicTree.prototype.FreeNode = function (node) {\n      node.parent = this.m_freeList;\n      this.m_freeList = node;\n   }\n   b2DynamicTree.prototype.InsertLeaf = function (leaf) {\n      ++this.m_insertionCount;\n      if (this.m_root == null) {\n         this.m_root = leaf;\n         this.m_root.parent = null;\n         return;\n      }\n      var center = leaf.aabb.GetCenter();\n      var sibling = this.m_root;\n      if (sibling.IsLeaf() == false) {\n         do {\n            var child1 = sibling.child1;\n            var child2 = sibling.child2;\n            var norm1 = Math.abs((child1.aabb.lowerBound.x + child1.aabb.upperBound.x) / 2 - center.x) + Math.abs((child1.aabb.lowerBound.y + child1.aabb.upperBound.y) / 2 - center.y);\n            var norm2 = Math.abs((child2.aabb.lowerBound.x + child2.aabb.upperBound.x) / 2 - center.x) + Math.abs((child2.aabb.lowerBound.y + child2.aabb.upperBound.y) / 2 - center.y);\n            if (norm1 < norm2) {\n               sibling = child1;\n            }\n            else {\n               sibling = child2;\n            }\n         }\n         while (sibling.IsLeaf() == false)\n      }\n      var node1 = sibling.parent;\n      var node2 = this.AllocateNode();\n      node2.parent = node1;\n      node2.userData = null;\n      node2.aabb.Combine(leaf.aabb, sibling.aabb);\n      if (node1) {\n         if (sibling.parent.child1 == sibling) {\n            node1.child1 = node2;\n         }\n         else {\n            node1.child2 = node2;\n         }\n         node2.child1 = sibling;\n         node2.child2 = leaf;\n         sibling.parent = node2;\n         leaf.parent = node2;\n         do {\n            if (node1.aabb.Contains(node2.aabb)) break;\n            node1.aabb.Combine(node1.child1.aabb, node1.child2.aabb);\n            node2 = node1;\n            node1 = node1.parent;\n         }\n         while (node1)\n      }\n      else {\n         node2.child1 = sibling;\n         node2.child2 = leaf;\n         sibling.parent = node2;\n         leaf.parent = node2;\n         this.m_root = node2;\n      }\n   }\n   b2DynamicTree.prototype.RemoveLeaf = function (leaf) {\n      if (leaf == this.m_root) {\n         this.m_root = null;\n         return;\n      }\n      var node2 = leaf.parent;\n      var node1 = node2.parent;\n      var sibling;\n      if (node2.child1 == leaf) {\n         sibling = node2.child2;\n      }\n      else {\n         sibling = node2.child1;\n      }\n      if (node1) {\n         if (node1.child1 == node2) {\n            node1.child1 = sibling;\n         }\n         else {\n            node1.child2 = sibling;\n         }\n         sibling.parent = node1;\n         this.FreeNode(node2);\n         while (node1) {\n            var oldAABB = node1.aabb;\n            node1.aabb = b2AABB.Combine(node1.child1.aabb, node1.child2.aabb);\n            if (oldAABB.Contains(node1.aabb)) break;\n            node1 = node1.parent;\n         }\n      }\n      else {\n         this.m_root = sibling;\n         sibling.parent = null;\n         this.FreeNode(node2);\n      }\n   }\n   b2DynamicTreeBroadPhase.b2DynamicTreeBroadPhase = function () {\n      this.m_tree = new b2DynamicTree();\n      this.m_moveBuffer = new Box2DVector();\n      this.m_pairBuffer = new Box2DVector();\n      this.m_pairCount = 0;\n   };\n   b2DynamicTreeBroadPhase.prototype.CreateProxy = function (aabb, userData) {\n      var proxy = this.m_tree.CreateProxy(aabb, userData);\n      ++this.m_proxyCount;\n      this.BufferMove(proxy);\n      return proxy;\n   }\n   b2DynamicTreeBroadPhase.prototype.DestroyProxy = function (proxy) {\n      this.UnBufferMove(proxy);\n      --this.m_proxyCount;\n      this.m_tree.DestroyProxy(proxy);\n   }\n   b2DynamicTreeBroadPhase.prototype.MoveProxy = function (proxy, aabb, displacement) {\n      var buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\n      if (buffer) {\n         this.BufferMove(proxy);\n      }\n   }\n   b2DynamicTreeBroadPhase.prototype.TestOverlap = function (proxyA, proxyB) {\n      var aabbA = this.m_tree.GetFatAABB(proxyA);\n      var aabbB = this.m_tree.GetFatAABB(proxyB);\n      return aabbA.TestOverlap(aabbB);\n   }\n   b2DynamicTreeBroadPhase.prototype.GetUserData = function (proxy) {\n      return this.m_tree.GetUserData(proxy);\n   }\n   b2DynamicTreeBroadPhase.prototype.GetFatAABB = function (proxy) {\n      return this.m_tree.GetFatAABB(proxy);\n   }\n   b2DynamicTreeBroadPhase.prototype.GetProxyCount = function () {\n      return this.m_proxyCount;\n   }\n   b2DynamicTreeBroadPhase.prototype.UpdatePairs = function (callback) {\n      var __this = this;\n      __this.m_pairCount = 0;\n      var i = 0,\n         queryProxy;\n      for (i = 0;\n      i < __this.m_moveBuffer.length; ++i) {\n         queryProxy = __this.m_moveBuffer[i];\n\n         function QueryCallback(proxy) {\n            if (proxy == queryProxy) return true;\n            if (__this.m_pairCount == __this.m_pairBuffer.length) {\n               __this.m_pairBuffer[__this.m_pairCount] = new b2DynamicTreePair();\n            }\n            var pair = __this.m_pairBuffer[__this.m_pairCount];\n            pair.proxyA = proxy < queryProxy ? proxy : queryProxy;\n            pair.proxyB = proxy >= queryProxy ? proxy : queryProxy;++__this.m_pairCount;\n            return true;\n         };\n         var fatAABB = __this.m_tree.GetFatAABB(queryProxy);\n         __this.m_tree.Query(QueryCallback, fatAABB);\n      }\n      __this.m_moveBuffer.length = 0;\n      for (var i = 0; i < __this.m_pairCount;) {\n         var primaryPair = __this.m_pairBuffer[i];\n         var userDataA = __this.m_tree.GetUserData(primaryPair.proxyA);\n         var userDataB = __this.m_tree.GetUserData(primaryPair.proxyB);\n         callback(userDataA, userDataB);\n         ++i;\n         while (i < __this.m_pairCount) {\n            var pair = __this.m_pairBuffer[i];\n            if (pair.proxyA != primaryPair.proxyA || pair.proxyB != primaryPair.proxyB) {\n               break;\n            }++i;\n         }\n      }\n   }\n   b2DynamicTreeBroadPhase.prototype.Query = function (callback, aabb) {\n      this.m_tree.Query(callback, aabb);\n   }\n   b2DynamicTreeBroadPhase.prototype.RayCast = function (callback, input) {\n      this.m_tree.RayCast(callback, input);\n   }\n   b2DynamicTreeBroadPhase.prototype.Validate = function () {}\n   b2DynamicTreeBroadPhase.prototype.Rebalance = function (iterations) {\n      if (iterations === undefined) iterations = 0;\n      this.m_tree.Rebalance(iterations);\n   }\n   b2DynamicTreeBroadPhase.prototype.BufferMove = function (proxy) {\n      this.m_moveBuffer[this.m_moveBuffer.length] = proxy;\n   }\n   b2DynamicTreeBroadPhase.prototype.UnBufferMove = function (proxy) {\n      var i = parseInt(this.m_moveBuffer.indexOf(proxy));\n      this.m_moveBuffer.splice(i, 1);\n   }\n   b2DynamicTreeBroadPhase.prototype.ComparePairs = function (pair1, pair2) {\n      return 0;\n   }\n   b2DynamicTreeBroadPhase.__implements = {};\n   b2DynamicTreeBroadPhase.__implements[IBroadPhase] = true;\n   b2DynamicTreeNode.b2DynamicTreeNode = function () {\n      this.aabb = new b2AABB();\n   };\n   b2DynamicTreeNode.prototype.IsLeaf = function () {\n      return this.child1 == null;\n   }\n   b2DynamicTreePair.b2DynamicTreePair = function () {};\n   b2Manifold.b2Manifold = function () {\n      this.m_pointCount = 0;\n   };\n   b2Manifold.prototype.b2Manifold = function () {\n      this.m_points = new Box2DVector(b2Settings.b2_maxManifoldPoints);\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         this.m_points[i] = new b2ManifoldPoint();\n      }\n      this.m_localPlaneNormal = new b2Vec2();\n      this.m_localPoint = new b2Vec2();\n   }\n   b2Manifold.prototype.Reset = function () {\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         ((this.m_points[i] instanceof b2ManifoldPoint ? this.m_points[i] : null)).Reset();\n      }\n      this.m_localPlaneNormal.SetZero();\n      this.m_localPoint.SetZero();\n      this.m_type = 0;\n      this.m_pointCount = 0;\n   }\n   b2Manifold.prototype.Set = function (m) {\n      this.m_pointCount = m.m_pointCount;\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         ((this.m_points[i] instanceof b2ManifoldPoint ? this.m_points[i] : null)).Set(m.m_points[i]);\n      }\n      this.m_localPlaneNormal.SetV(m.m_localPlaneNormal);\n      this.m_localPoint.SetV(m.m_localPoint);\n      this.m_type = m.m_type;\n   }\n   b2Manifold.prototype.Copy = function () {\n      var copy = new b2Manifold();\n      copy.Set(this);\n      return copy;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.b2Manifold.e_circles = 0x0001;\n      Box2D.Collision.b2Manifold.e_faceA = 0x0002;\n      Box2D.Collision.b2Manifold.e_faceB = 0x0004;\n   });\n   b2ManifoldPoint.b2ManifoldPoint = function () {\n      this.m_localPoint = new b2Vec2();\n      this.m_id = new b2ContactID();\n   };\n   b2ManifoldPoint.prototype.b2ManifoldPoint = function () {\n      this.Reset();\n   }\n   b2ManifoldPoint.prototype.Reset = function () {\n      this.m_localPoint.SetZero();\n      this.m_normalImpulse = 0.0;\n      this.m_tangentImpulse = 0.0;\n      this.m_id.key = 0;\n   }\n   b2ManifoldPoint.prototype.Set = function (m) {\n      this.m_localPoint.SetV(m.m_localPoint);\n      this.m_normalImpulse = m.m_normalImpulse;\n      this.m_tangentImpulse = m.m_tangentImpulse;\n      this.m_id.Set(m.m_id);\n   }\n   b2Point.b2Point = function () {\n      this.p = new b2Vec2();\n   };\n   b2Point.prototype.Support = function (xf, vX, vY) {\n      if (vX === undefined) vX = 0;\n      if (vY === undefined) vY = 0;\n      return this.p;\n   }\n   b2Point.prototype.GetFirstVertex = function (xf) {\n      return this.p;\n   }\n   b2RayCastInput.b2RayCastInput = function () {\n      this.p1 = new b2Vec2();\n      this.p2 = new b2Vec2();\n   };\n   b2RayCastInput.prototype.b2RayCastInput = function (p1, p2, maxFraction) {\n      if (p1 === undefined) p1 = null;\n      if (p2 === undefined) p2 = null;\n      if (maxFraction === undefined) maxFraction = 1;\n      if (p1) this.p1.SetV(p1);\n      if (p2) this.p2.SetV(p2);\n      this.maxFraction = maxFraction;\n   }\n   b2RayCastOutput.b2RayCastOutput = function () {\n      this.normal = new b2Vec2();\n   };\n   b2Segment.b2Segment = function () {\n      this.p1 = new b2Vec2();\n      this.p2 = new b2Vec2();\n   };\n   b2Segment.prototype.TestSegment = function (lambda, normal, segment, maxLambda) {\n      if (maxLambda === undefined) maxLambda = 0;\n      var s = segment.p1;\n      var rX = segment.p2.x - s.x;\n      var rY = segment.p2.y - s.y;\n      var dX = this.p2.x - this.p1.x;\n      var dY = this.p2.y - this.p1.y;\n      var nX = dY;\n      var nY = (-dX);\n      var k_slop = 100.0 * Number.MIN_VALUE;\n      var denom = (-(rX * nX + rY * nY));\n      if (denom > k_slop) {\n         var bX = s.x - this.p1.x;\n         var bY = s.y - this.p1.y;\n         var a = (bX * nX + bY * nY);\n         if (0.0 <= a && a <= maxLambda * denom) {\n            var mu2 = (-rX * bY) + rY * bX;\n            if ((-k_slop * denom) <= mu2 && mu2 <= denom * (1.0 + k_slop)) {\n               a /= denom;\n               var nLen = Math.sqrt(nX * nX + nY * nY);\n               nX /= nLen;\n               nY /= nLen;\n               lambda[0] = a;\n               normal.Set(nX, nY);\n               return true;\n            }\n         }\n      }\n      return false;\n   }\n   b2Segment.prototype.Extend = function (aabb) {\n      this.ExtendForward(aabb);\n      this.ExtendBackward(aabb);\n   }\n   b2Segment.prototype.ExtendForward = function (aabb) {\n      var dX = this.p2.x - this.p1.x;\n      var dY = this.p2.y - this.p1.y;\n      var lambda = Math.min(dX > 0 ? (aabb.upperBound.x - this.p1.x) / dX : dX < 0 ? (aabb.lowerBound.x - this.p1.x) / dX : Number.POSITIVE_INFINITY,\n      dY > 0 ? (aabb.upperBound.y - this.p1.y) / dY : dY < 0 ? (aabb.lowerBound.y - this.p1.y) / dY : Number.POSITIVE_INFINITY);\n      this.p2.x = this.p1.x + dX * lambda;\n      this.p2.y = this.p1.y + dY * lambda;\n   }\n   b2Segment.prototype.ExtendBackward = function (aabb) {\n      var dX = (-this.p2.x) + this.p1.x;\n      var dY = (-this.p2.y) + this.p1.y;\n      var lambda = Math.min(dX > 0 ? (aabb.upperBound.x - this.p2.x) / dX : dX < 0 ? (aabb.lowerBound.x - this.p2.x) / dX : Number.POSITIVE_INFINITY,\n      dY > 0 ? (aabb.upperBound.y - this.p2.y) / dY : dY < 0 ? (aabb.lowerBound.y - this.p2.y) / dY : Number.POSITIVE_INFINITY);\n      this.p1.x = this.p2.x + dX * lambda;\n      this.p1.y = this.p2.y + dY * lambda;\n   }\n   b2SeparationFunction.b2SeparationFunction = function () {\n      this.m_localPoint = new b2Vec2();\n      this.m_axis = new b2Vec2();\n   };\n   b2SeparationFunction.prototype.Initialize = function (cache, proxyA, transformA, proxyB, transformB) {\n      this.m_proxyA = proxyA;\n      this.m_proxyB = proxyB;\n      var count = parseInt(cache.count);\n      b2Settings.b2Assert(0 < count && count < 3);\n      var localPointA;\n      var localPointA1;\n      var localPointA2;\n      var localPointB;\n      var localPointB1;\n      var localPointB2;\n      var pointAX = 0;\n      var pointAY = 0;\n      var pointBX = 0;\n      var pointBY = 0;\n      var normalX = 0;\n      var normalY = 0;\n      var tMat;\n      var tVec;\n      var s = 0;\n      var sgn = 0;\n      if (count == 1) {\n         this.m_type = b2SeparationFunction.e_points;\n         localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\n         localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\n         tVec = localPointA;\n         tMat = transformA.R;\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         tVec = localPointB;\n         tMat = transformB.R;\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         this.m_axis.x = pointBX - pointAX;\n         this.m_axis.y = pointBY - pointAY;\n         this.m_axis.Normalize();\n      }\n      else if (cache.indexB[0] == cache.indexB[1]) {\n         this.m_type = b2SeparationFunction.e_faceA;\n         localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\n         localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\n         localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\n         this.m_localPoint.x = 0.5 * (localPointA1.x + localPointA2.x);\n         this.m_localPoint.y = 0.5 * (localPointA1.y + localPointA2.y);\n         this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointA2, localPointA1), 1.0);\n         this.m_axis.Normalize();\n         tVec = this.m_axis;\n         tMat = transformA.R;\n         normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n         normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n         tVec = this.m_localPoint;\n         tMat = transformA.R;\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         tVec = localPointB;\n         tMat = transformB.R;\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         s = (pointBX - pointAX) * normalX + (pointBY - pointAY) * normalY;\n         if (s < 0.0) {\n            this.m_axis.NegativeSelf();\n         }\n      }\n      else if (cache.indexA[0] == cache.indexA[0]) {\n         this.m_type = b2SeparationFunction.e_faceB;\n         localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\n         localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\n         localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\n         this.m_localPoint.x = 0.5 * (localPointB1.x + localPointB2.x);\n         this.m_localPoint.y = 0.5 * (localPointB1.y + localPointB2.y);\n         this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointB2, localPointB1), 1.0);\n         this.m_axis.Normalize();\n         tVec = this.m_axis;\n         tMat = transformB.R;\n         normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n         normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n         tVec = this.m_localPoint;\n         tMat = transformB.R;\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         tVec = localPointA;\n         tMat = transformA.R;\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         s = (pointAX - pointBX) * normalX + (pointAY - pointBY) * normalY;\n         if (s < 0.0) {\n            this.m_axis.NegativeSelf();\n         }\n      }\n      else {\n         localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\n         localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\n         localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\n         localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\n         var pA = b2Math.MulX(transformA, localPointA);\n         var dA = b2Math.MulMV(transformA.R, b2Math.SubtractVV(localPointA2, localPointA1));\n         var pB = b2Math.MulX(transformB, localPointB);\n         var dB = b2Math.MulMV(transformB.R, b2Math.SubtractVV(localPointB2, localPointB1));\n         var a = dA.x * dA.x + dA.y * dA.y;\n         var e = dB.x * dB.x + dB.y * dB.y;\n         var r = b2Math.SubtractVV(dB, dA);\n         var c = dA.x * r.x + dA.y * r.y;\n         var f = dB.x * r.x + dB.y * r.y;\n         var b = dA.x * dB.x + dA.y * dB.y;\n         var denom = a * e - b * b;\n         s = 0.0;\n         if (denom != 0.0) {\n            s = b2Math.Clamp((b * f - c * e) / denom, 0.0, 1.0);\n         }\n         var t = (b * s + f) / e;\n         if (t < 0.0) {\n            t = 0.0;\n            s = b2Math.Clamp((b - c) / a, 0.0, 1.0);\n         }\n         localPointA = new b2Vec2();\n         localPointA.x = localPointA1.x + s * (localPointA2.x - localPointA1.x);\n         localPointA.y = localPointA1.y + s * (localPointA2.y - localPointA1.y);\n         localPointB = new b2Vec2();\n         localPointB.x = localPointB1.x + s * (localPointB2.x - localPointB1.x);\n         localPointB.y = localPointB1.y + s * (localPointB2.y - localPointB1.y);\n         if (s == 0.0 || s == 1.0) {\n            this.m_type = b2SeparationFunction.e_faceB;\n            this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointB2, localPointB1), 1.0);\n            this.m_axis.Normalize();\n            this.m_localPoint = localPointB;\n            tVec = this.m_axis;\n            tMat = transformB.R;\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tVec = this.m_localPoint;\n            tMat = transformB.R;\n            pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            tVec = localPointA;\n            tMat = transformA.R;\n            pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            sgn = (pointAX - pointBX) * normalX + (pointAY - pointBY) * normalY;\n            if (s < 0.0) {\n               this.m_axis.NegativeSelf();\n            }\n         }\n         else {\n            this.m_type = b2SeparationFunction.e_faceA;\n            this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointA2, localPointA1), 1.0);\n            this.m_localPoint = localPointA;\n            tVec = this.m_axis;\n            tMat = transformA.R;\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tVec = this.m_localPoint;\n            tMat = transformA.R;\n            pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            tVec = localPointB;\n            tMat = transformB.R;\n            pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            sgn = (pointBX - pointAX) * normalX + (pointBY - pointAY) * normalY;\n            if (s < 0.0) {\n               this.m_axis.NegativeSelf();\n            }\n         }\n      }\n   }\n   b2SeparationFunction.prototype.Evaluate = function (transformA, transformB) {\n      var axisA;\n      var axisB;\n      var localPointA;\n      var localPointB;\n      var pointA;\n      var pointB;\n      var seperation = 0;\n      var normal;\n      switch (this.m_type) {\n      case b2SeparationFunction.e_points:\n         {\n            axisA = b2Math.MulTMV(transformA.R, this.m_axis);\n            axisB = b2Math.MulTMV(transformB.R, this.m_axis.GetNegative());\n            localPointA = this.m_proxyA.GetSupportVertex(axisA);\n            localPointB = this.m_proxyB.GetSupportVertex(axisB);\n            pointA = b2Math.MulX(transformA, localPointA);\n            pointB = b2Math.MulX(transformB, localPointB);\n            seperation = (pointB.x - pointA.x) * this.m_axis.x + (pointB.y - pointA.y) * this.m_axis.y;\n            return seperation;\n         }\n      case b2SeparationFunction.e_faceA:\n         {\n            normal = b2Math.MulMV(transformA.R, this.m_axis);\n            pointA = b2Math.MulX(transformA, this.m_localPoint);\n            axisB = b2Math.MulTMV(transformB.R, normal.GetNegative());\n            localPointB = this.m_proxyB.GetSupportVertex(axisB);\n            pointB = b2Math.MulX(transformB, localPointB);\n            seperation = (pointB.x - pointA.x) * normal.x + (pointB.y - pointA.y) * normal.y;\n            return seperation;\n         }\n      case b2SeparationFunction.e_faceB:\n         {\n            normal = b2Math.MulMV(transformB.R, this.m_axis);\n            pointB = b2Math.MulX(transformB, this.m_localPoint);\n            axisA = b2Math.MulTMV(transformA.R, normal.GetNegative());\n            localPointA = this.m_proxyA.GetSupportVertex(axisA);\n            pointA = b2Math.MulX(transformA, localPointA);\n            seperation = (pointA.x - pointB.x) * normal.x + (pointA.y - pointB.y) * normal.y;\n            return seperation;\n         }\n      default:\n         b2Settings.b2Assert(false);\n         return 0.0;\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.b2SeparationFunction.e_points = 0x01;\n      Box2D.Collision.b2SeparationFunction.e_faceA = 0x02;\n      Box2D.Collision.b2SeparationFunction.e_faceB = 0x04;\n   });\n   b2Simplex.b2Simplex = function () {\n      this.m_v1 = new b2SimplexVertex();\n      this.m_v2 = new b2SimplexVertex();\n      this.m_v3 = new b2SimplexVertex();\n      this.m_vertices = new Box2DVector(3);\n   };\n   b2Simplex.prototype.b2Simplex = function () {\n      this.m_vertices[0] = this.m_v1;\n      this.m_vertices[1] = this.m_v2;\n      this.m_vertices[2] = this.m_v3;\n   }\n   b2Simplex.prototype.ReadCache = function (cache, proxyA, transformA, proxyB, transformB) {\n      b2Settings.b2Assert(0 <= cache.count && cache.count <= 3);\n      var wALocal;\n      var wBLocal;\n      this.m_count = cache.count;\n      var vertices = this.m_vertices;\n      for (var i = 0; i < this.m_count; i++) {\n         var v = vertices[i];\n         v.indexA = cache.indexA[i];\n         v.indexB = cache.indexB[i];\n         wALocal = proxyA.GetVertex(v.indexA);\n         wBLocal = proxyB.GetVertex(v.indexB);\n         v.wA = b2Math.MulX(transformA, wALocal);\n         v.wB = b2Math.MulX(transformB, wBLocal);\n         v.w = b2Math.SubtractVV(v.wB, v.wA);\n         v.a = 0;\n      }\n      if (this.m_count > 1) {\n         var metric1 = cache.metric;\n         var metric2 = this.GetMetric();\n         if (metric2 < .5 * metric1 || 2.0 * metric1 < metric2 || metric2 < Number.MIN_VALUE) {\n            this.m_count = 0;\n         }\n      }\n      if (this.m_count == 0) {\n         v = vertices[0];\n         v.indexA = 0;\n         v.indexB = 0;\n         wALocal = proxyA.GetVertex(0);\n         wBLocal = proxyB.GetVertex(0);\n         v.wA = b2Math.MulX(transformA, wALocal);\n         v.wB = b2Math.MulX(transformB, wBLocal);\n         v.w = b2Math.SubtractVV(v.wB, v.wA);\n         this.m_count = 1;\n      }\n   }\n   b2Simplex.prototype.WriteCache = function (cache) {\n      cache.metric = this.GetMetric();\n      cache.count = Box2D.parseUInt(this.m_count);\n      var vertices = this.m_vertices;\n      for (var i = 0; i < this.m_count; i++) {\n         cache.indexA[i] = Box2D.parseUInt(vertices[i].indexA);\n         cache.indexB[i] = Box2D.parseUInt(vertices[i].indexB);\n      }\n   }\n   b2Simplex.prototype.GetSearchDirection = function () {\n      switch (this.m_count) {\n      case 1:\n         return this.m_v1.w.GetNegative();\n      case 2:\n         {\n            var e12 = b2Math.SubtractVV(this.m_v2.w, this.m_v1.w);\n            var sgn = b2Math.CrossVV(e12, this.m_v1.w.GetNegative());\n            if (sgn > 0.0) {\n               return b2Math.CrossFV(1.0, e12);\n            }\n            else {\n               return b2Math.CrossVF(e12, 1.0);\n            }\n         }\n      default:\n         b2Settings.b2Assert(false);\n         return new b2Vec2();\n      }\n   }\n   b2Simplex.prototype.GetClosestPoint = function () {\n      switch (this.m_count) {\n      case 0:\n         b2Settings.b2Assert(false);\n         return new b2Vec2();\n      case 1:\n         return this.m_v1.w;\n      case 2:\n         return new b2Vec2(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\n      default:\n         b2Settings.b2Assert(false);\n         return new b2Vec2();\n      }\n   }\n   b2Simplex.prototype.GetWitnessPoints = function (pA, pB) {\n      switch (this.m_count) {\n      case 0:\n         b2Settings.b2Assert(false);\n         break;\n      case 1:\n         pA.SetV(this.m_v1.wA);\n         pB.SetV(this.m_v1.wB);\n         break;\n      case 2:\n         pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\n         pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\n         pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\n         pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\n         break;\n      case 3:\n         pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\n         pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\n         break;\n      default:\n         b2Settings.b2Assert(false);\n         break;\n      }\n   }\n   b2Simplex.prototype.GetMetric = function () {\n      switch (this.m_count) {\n      case 0:\n         b2Settings.b2Assert(false);\n         return 0.0;\n      case 1:\n         return 0.0;\n      case 2:\n         return b2Math.SubtractVV(this.m_v1.w, this.m_v2.w).Length();\n      case 3:\n         return b2Math.CrossVV(b2Math.SubtractVV(this.m_v2.w, this.m_v1.w), b2Math.SubtractVV(this.m_v3.w, this.m_v1.w));\n      default:\n         b2Settings.b2Assert(false);\n         return 0.0;\n      }\n   }\n   b2Simplex.prototype.Solve2 = function () {\n      var w1 = this.m_v1.w;\n      var w2 = this.m_v2.w;\n      var e12 = b2Math.SubtractVV(w2, w1);\n      var d12_2 = (-(w1.x * e12.x + w1.y * e12.y));\n      if (d12_2 <= 0.0) {\n         this.m_v1.a = 1.0;\n         this.m_count = 1;\n         return;\n      }\n      var d12_1 = (w2.x * e12.x + w2.y * e12.y);\n      if (d12_1 <= 0.0) {\n         this.m_v2.a = 1.0;\n         this.m_count = 1;\n         this.m_v1.Set(this.m_v2);\n         return;\n      }\n      var inv_d12 = 1.0 / (d12_1 + d12_2);\n      this.m_v1.a = d12_1 * inv_d12;\n      this.m_v2.a = d12_2 * inv_d12;\n      this.m_count = 2;\n   }\n   b2Simplex.prototype.Solve3 = function () {\n      var w1 = this.m_v1.w;\n      var w2 = this.m_v2.w;\n      var w3 = this.m_v3.w;\n      var e12 = b2Math.SubtractVV(w2, w1);\n      var w1e12 = b2Math.Dot(w1, e12);\n      var w2e12 = b2Math.Dot(w2, e12);\n      var d12_1 = w2e12;\n      var d12_2 = (-w1e12);\n      var e13 = b2Math.SubtractVV(w3, w1);\n      var w1e13 = b2Math.Dot(w1, e13);\n      var w3e13 = b2Math.Dot(w3, e13);\n      var d13_1 = w3e13;\n      var d13_2 = (-w1e13);\n      var e23 = b2Math.SubtractVV(w3, w2);\n      var w2e23 = b2Math.Dot(w2, e23);\n      var w3e23 = b2Math.Dot(w3, e23);\n      var d23_1 = w3e23;\n      var d23_2 = (-w2e23);\n      var n123 = b2Math.CrossVV(e12, e13);\n      var d123_1 = n123 * b2Math.CrossVV(w2, w3);\n      var d123_2 = n123 * b2Math.CrossVV(w3, w1);\n      var d123_3 = n123 * b2Math.CrossVV(w1, w2);\n      if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n         this.m_v1.a = 1.0;\n         this.m_count = 1;\n         return;\n      }\n      if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n         var inv_d12 = 1.0 / (d12_1 + d12_2);\n         this.m_v1.a = d12_1 * inv_d12;\n         this.m_v2.a = d12_2 * inv_d12;\n         this.m_count = 2;\n         return;\n      }\n      if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n         var inv_d13 = 1.0 / (d13_1 + d13_2);\n         this.m_v1.a = d13_1 * inv_d13;\n         this.m_v3.a = d13_2 * inv_d13;\n         this.m_count = 2;\n         this.m_v2.Set(this.m_v3);\n         return;\n      }\n      if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n         this.m_v2.a = 1.0;\n         this.m_count = 1;\n         this.m_v1.Set(this.m_v2);\n         return;\n      }\n      if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n         this.m_v3.a = 1.0;\n         this.m_count = 1;\n         this.m_v1.Set(this.m_v3);\n         return;\n      }\n      if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n         var inv_d23 = 1.0 / (d23_1 + d23_2);\n         this.m_v2.a = d23_1 * inv_d23;\n         this.m_v3.a = d23_2 * inv_d23;\n         this.m_count = 2;\n         this.m_v1.Set(this.m_v3);\n         return;\n      }\n      var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n      this.m_v1.a = d123_1 * inv_d123;\n      this.m_v2.a = d123_2 * inv_d123;\n      this.m_v3.a = d123_3 * inv_d123;\n      this.m_count = 3;\n   }\n   b2SimplexCache.b2SimplexCache = function () {\n      this.indexA = new Vector_a2j_Number(3);\n      this.indexB = new Vector_a2j_Number(3);\n   };\n   b2SimplexVertex.b2SimplexVertex = function () {};\n   b2SimplexVertex.prototype.Set = function (other) {\n      this.wA.SetV(other.wA);\n      this.wB.SetV(other.wB);\n      this.w.SetV(other.w);\n      this.a = other.a;\n      this.indexA = other.indexA;\n      this.indexB = other.indexB;\n   }\n   b2TimeOfImpact.b2TimeOfImpact = function () {};\n   b2TimeOfImpact.TimeOfImpact = function (input) {\n      ++b2TimeOfImpact.b2_toiCalls;\n      var proxyA = input.proxyA;\n      var proxyB = input.proxyB;\n      var sweepA = input.sweepA;\n      var sweepB = input.sweepB;\n      b2Settings.b2Assert(sweepA.t0 == sweepB.t0);\n      b2Settings.b2Assert(1.0 - sweepA.t0 > Number.MIN_VALUE);\n      var radius = proxyA.m_radius + proxyB.m_radius;\n      var tolerance = input.tolerance;\n      var alpha = 0.0;\n      var k_maxIterations = 1000;\n      var iter = 0;\n      var target = 0.0;\n      b2TimeOfImpact.s_cache.count = 0;\n      b2TimeOfImpact.s_distanceInput.useRadii = false;\n      for (;;) {\n         sweepA.GetTransform(b2TimeOfImpact.s_xfA, alpha);\n         sweepB.GetTransform(b2TimeOfImpact.s_xfB, alpha);\n         b2TimeOfImpact.s_distanceInput.proxyA = proxyA;\n         b2TimeOfImpact.s_distanceInput.proxyB = proxyB;\n         b2TimeOfImpact.s_distanceInput.transformA = b2TimeOfImpact.s_xfA;\n         b2TimeOfImpact.s_distanceInput.transformB = b2TimeOfImpact.s_xfB;\n         b2Distance.Distance(b2TimeOfImpact.s_distanceOutput, b2TimeOfImpact.s_cache, b2TimeOfImpact.s_distanceInput);\n         if (b2TimeOfImpact.s_distanceOutput.distance <= 0.0) {\n            alpha = 1.0;\n            break;\n         }\n         b2TimeOfImpact.s_fcn.Initialize(b2TimeOfImpact.s_cache, proxyA, b2TimeOfImpact.s_xfA, proxyB, b2TimeOfImpact.s_xfB);\n         var separation = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\n         if (separation <= 0.0) {\n            alpha = 1.0;\n            break;\n         }\n         if (iter == 0) {\n            if (separation > radius) {\n               target = b2Math.Max(radius - tolerance, 0.75 * radius);\n            }\n            else {\n               target = b2Math.Max(separation - tolerance, 0.02 * radius);\n            }\n         }\n         if (separation - target < 0.5 * tolerance) {\n            if (iter == 0) {\n               alpha = 1.0;\n               break;\n            }\n            break;\n         }\n         var newAlpha = alpha; {\n            var x1 = alpha;\n            var x2 = 1.0;\n            var f1 = separation;\n            sweepA.GetTransform(b2TimeOfImpact.s_xfA, x2);\n            sweepB.GetTransform(b2TimeOfImpact.s_xfB, x2);\n            var f2 = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\n            if (f2 >= target) {\n               alpha = 1.0;\n               break;\n            }\n            var rootIterCount = 0;\n            for (;;) {\n               var x = 0;\n               if (rootIterCount & 1) {\n                  x = x1 + (target - f1) * (x2 - x1) / (f2 - f1);\n               }\n               else {\n                  x = 0.5 * (x1 + x2);\n               }\n               sweepA.GetTransform(b2TimeOfImpact.s_xfA, x);\n               sweepB.GetTransform(b2TimeOfImpact.s_xfB, x);\n               var f = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\n               if (b2Math.Abs(f - target) < 0.025 * tolerance) {\n                  newAlpha = x;\n                  break;\n               }\n               if (f > target) {\n                  x1 = x;\n                  f1 = f;\n               }\n               else {\n                  x2 = x;\n                  f2 = f;\n               }++rootIterCount;\n               ++b2TimeOfImpact.b2_toiRootIters;\n               if (rootIterCount == 50) {\n                  break;\n               }\n            }\n            b2TimeOfImpact.b2_toiMaxRootIters = b2Math.Max(b2TimeOfImpact.b2_toiMaxRootIters, rootIterCount);\n         }\n         if (newAlpha < (1.0 + 100.0 * Number.MIN_VALUE) * alpha) {\n            break;\n         }\n         alpha = newAlpha;\n         iter++;\n         ++b2TimeOfImpact.b2_toiIters;\n         if (iter == k_maxIterations) {\n            break;\n         }\n      }\n      b2TimeOfImpact.b2_toiMaxIters = b2Math.Max(b2TimeOfImpact.b2_toiMaxIters, iter);\n      return alpha;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.b2TimeOfImpact.b2_toiCalls = 0;\n      Box2D.Collision.b2TimeOfImpact.b2_toiIters = 0;\n      Box2D.Collision.b2TimeOfImpact.b2_toiMaxIters = 0;\n      Box2D.Collision.b2TimeOfImpact.b2_toiRootIters = 0;\n      Box2D.Collision.b2TimeOfImpact.b2_toiMaxRootIters = 0;\n      Box2D.Collision.b2TimeOfImpact.s_cache = new b2SimplexCache();\n      Box2D.Collision.b2TimeOfImpact.s_distanceInput = new b2DistanceInput();\n      Box2D.Collision.b2TimeOfImpact.s_xfA = new b2Transform();\n      Box2D.Collision.b2TimeOfImpact.s_xfB = new b2Transform();\n      Box2D.Collision.b2TimeOfImpact.s_fcn = new b2SeparationFunction();\n      Box2D.Collision.b2TimeOfImpact.s_distanceOutput = new b2DistanceOutput();\n   });\n   b2TOIInput.b2TOIInput = function () {\n      this.proxyA = new b2DistanceProxy();\n      this.proxyB = new b2DistanceProxy();\n      this.sweepA = new b2Sweep();\n      this.sweepB = new b2Sweep();\n   };\n   b2WorldManifold.b2WorldManifold = function () {\n      this.m_normal = new b2Vec2();\n   };\n   b2WorldManifold.prototype.b2WorldManifold = function () {\n      this.m_points = new Box2DVector(b2Settings.b2_maxManifoldPoints);\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         this.m_points[i] = new b2Vec2();\n      }\n   }\n   b2WorldManifold.prototype.Initialize = function (manifold, xfA, radiusA, xfB, radiusB) {\n      if (radiusA === undefined) radiusA = 0;\n      if (radiusB === undefined) radiusB = 0;\n      if (manifold.m_pointCount == 0) {\n         return;\n      }\n      var i = 0;\n      var tVec;\n      var tMat;\n      var normalX = 0;\n      var normalY = 0;\n      var planePointX = 0;\n      var planePointY = 0;\n      var clipPointX = 0;\n      var clipPointY = 0;\n      switch (manifold.m_type) {\n      case b2Manifold.e_circles:\n         {\n            tMat = xfA.R;\n            tVec = manifold.m_localPoint;\n            var pointAX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            var pointAY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tMat = xfB.R;\n            tVec = manifold.m_points[0].m_localPoint;\n            var pointBX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            var pointBY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            var dX = pointBX - pointAX;\n            var dY = pointBY - pointAY;\n            var d2 = dX * dX + dY * dY;\n            if (d2 > Number.MIN_VALUE * Number.MIN_VALUE) {\n               var d = Math.sqrt(d2);\n               this.m_normal.x = dX / d;\n               this.m_normal.y = dY / d;\n            }\n            else {\n               this.m_normal.x = 1;\n               this.m_normal.y = 0;\n            }\n            var cAX = pointAX + radiusA * this.m_normal.x;\n            var cAY = pointAY + radiusA * this.m_normal.y;\n            var cBX = pointBX - radiusB * this.m_normal.x;\n            var cBY = pointBY - radiusB * this.m_normal.y;\n            this.m_points[0].x = 0.5 * (cAX + cBX);\n            this.m_points[0].y = 0.5 * (cAY + cBY);\n         }\n         break;\n      case b2Manifold.e_faceA:\n         {\n            tMat = xfA.R;\n            tVec = manifold.m_localPlaneNormal;\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tMat = xfA.R;\n            tVec = manifold.m_localPoint;\n            planePointX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            planePointY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            this.m_normal.x = normalX;\n            this.m_normal.y = normalY;\n            for (i = 0;\n            i < manifold.m_pointCount; i++) {\n               tMat = xfB.R;\n               tVec = manifold.m_points[i].m_localPoint;\n               clipPointX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n               clipPointY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n               this.m_points[i].x = clipPointX + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalX;\n               this.m_points[i].y = clipPointY + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalY;\n            }\n         }\n         break;\n      case b2Manifold.e_faceB:\n         {\n            tMat = xfB.R;\n            tVec = manifold.m_localPlaneNormal;\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tMat = xfB.R;\n            tVec = manifold.m_localPoint;\n            planePointX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            planePointY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            this.m_normal.x = (-normalX);\n            this.m_normal.y = (-normalY);\n            for (i = 0;\n            i < manifold.m_pointCount; i++) {\n               tMat = xfA.R;\n               tVec = manifold.m_points[i].m_localPoint;\n               clipPointX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n               clipPointY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n               this.m_points[i].x = clipPointX + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalX;\n               this.m_points[i].y = clipPointY + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalY;\n            }\n         }\n         break;\n      }\n   }\n   ClipVertex.ClipVertex = function () {\n      this.v = new b2Vec2();\n      this.id = new b2ContactID();\n   };\n   ClipVertex.prototype.Set = function (other) {\n      this.v.SetV(other.v);\n      this.id.Set(other.id);\n   }\n   Features.Features = function () {};\n   Object.defineProperty(Features.prototype, 'referenceEdge', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return this._referenceEdge;\n      }\n   });\n   Object.defineProperty(Features.prototype, 'referenceEdge', {\n      enumerable: false,\n      configurable: true,\n      set: function (value) {\n         if (value === undefined) value = 0;\n         this._referenceEdge = value;\n         this._m_id._key = (this._m_id._key & 0xffffff00) | (this._referenceEdge & 0x000000ff);\n      }\n   });\n   Object.defineProperty(Features.prototype, 'incidentEdge', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return this._incidentEdge;\n      }\n   });\n   Object.defineProperty(Features.prototype, 'incidentEdge', {\n      enumerable: false,\n      configurable: true,\n      set: function (value) {\n         if (value === undefined) value = 0;\n         this._incidentEdge = value;\n         this._m_id._key = (this._m_id._key & 0xffff00ff) | ((this._incidentEdge << 8) & 0x0000ff00);\n      }\n   });\n   Object.defineProperty(Features.prototype, 'incidentVertex', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return this._incidentVertex;\n      }\n   });\n   Object.defineProperty(Features.prototype, 'incidentVertex', {\n      enumerable: false,\n      configurable: true,\n      set: function (value) {\n         if (value === undefined) value = 0;\n         this._incidentVertex = value;\n         this._m_id._key = (this._m_id._key & 0xff00ffff) | ((this._incidentVertex << 16) & 0x00ff0000);\n      }\n   });\n   Object.defineProperty(Features.prototype, 'flip', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return this._flip;\n      }\n   });\n   Object.defineProperty(Features.prototype, 'flip', {\n      enumerable: false,\n      configurable: true,\n      set: function (value) {\n         if (value === undefined) value = 0;\n         this._flip = value;\n         this._m_id._key = (this._m_id._key & 0x00ffffff) | ((this._flip << 24) & 0xff000000);\n      }\n   });\n})();\n(function () {\n   var b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2Body = Box2D.Dynamics.b2Body,\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\n      b2FilterData = Box2D.Dynamics.b2FilterData,\n      b2Fixture = Box2D.Dynamics.b2Fixture,\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      b2Island = Box2D.Dynamics.b2Island,\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\n      b2World = Box2D.Dynamics.b2World,\n      b2AABB = Box2D.Collision.b2AABB,\n      b2Bound = Box2D.Collision.b2Bound,\n      b2BoundValues = Box2D.Collision.b2BoundValues,\n      b2Collision = Box2D.Collision.b2Collision,\n      b2ContactID = Box2D.Collision.b2ContactID,\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\n      b2Distance = Box2D.Collision.b2Distance,\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\n      b2Manifold = Box2D.Collision.b2Manifold,\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\n      b2Point = Box2D.Collision.b2Point,\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\n      b2Segment = Box2D.Collision.b2Segment,\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\n      b2Simplex = Box2D.Collision.b2Simplex,\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\n      b2TOIInput = Box2D.Collision.b2TOIInput,\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\n      ClipVertex = Box2D.Collision.ClipVertex,\n      Features = Box2D.Collision.Features,\n      IBroadPhase = Box2D.Collision.IBroadPhase;\n\n   Box2D.inherit(b2CircleShape, Box2D.Collision.Shapes.b2Shape);\n   b2CircleShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\n   b2CircleShape.b2CircleShape = function () {\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\n      this.m_p = new b2Vec2();\n   };\n   b2CircleShape.prototype.Copy = function () {\n      var s = new b2CircleShape();\n      s.Set(this);\n      return s;\n   }\n   b2CircleShape.prototype.Set = function (other) {\n      this.__super.Set.call(this, other);\n      if (Box2D.is(other, b2CircleShape)) {\n         var other2 = (other instanceof b2CircleShape ? other : null);\n         this.m_p.SetV(other2.m_p);\n      }\n   }\n   b2CircleShape.prototype.TestPoint = function (transform, p) {\n      var tMat = transform.R;\n      var dX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\n      var dY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\n      dX = p.x - dX;\n      dY = p.y - dY;\n      return (dX * dX + dY * dY) <= this.m_radius * this.m_radius;\n   }\n   b2CircleShape.prototype.RayCast = function (output, input, transform) {\n      var tMat = transform.R;\n      var positionX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\n      var positionY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\n      var sX = input.p1.x - positionX;\n      var sY = input.p1.y - positionY;\n      var b = (sX * sX + sY * sY) - this.m_radius * this.m_radius;\n      var rX = input.p2.x - input.p1.x;\n      var rY = input.p2.y - input.p1.y;\n      var c = (sX * rX + sY * rY);\n      var rr = (rX * rX + rY * rY);\n      var sigma = c * c - rr * b;\n      if (sigma < 0.0 || rr < Number.MIN_VALUE) {\n         return false;\n      }\n      var a = (-(c + Math.sqrt(sigma)));\n      if (0.0 <= a && a <= input.maxFraction * rr) {\n         a /= rr;\n         output.fraction = a;\n         output.normal.x = sX + a * rX;\n         output.normal.y = sY + a * rY;\n         output.normal.Normalize();\n         return true;\n      }\n      return false;\n   }\n   b2CircleShape.prototype.ComputeAABB = function (aabb, transform) {\n      var tMat = transform.R;\n      var pX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\n      var pY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\n      aabb.lowerBound.Set(pX - this.m_radius, pY - this.m_radius);\n      aabb.upperBound.Set(pX + this.m_radius, pY + this.m_radius);\n   }\n   b2CircleShape.prototype.ComputeMass = function (massData, density) {\n      if (density === undefined) density = 0;\n      massData.mass = density * b2Settings.b2_pi * this.m_radius * this.m_radius;\n      massData.center.SetV(this.m_p);\n      massData.I = massData.mass * (0.5 * this.m_radius * this.m_radius + (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y));\n   }\n   b2CircleShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\n      if (offset === undefined) offset = 0;\n      var p = b2Math.MulX(xf, this.m_p);\n      var l = (-(b2Math.Dot(normal, p) - offset));\n      if (l < (-this.m_radius) + Number.MIN_VALUE) {\n         return 0;\n      }\n      if (l > this.m_radius) {\n         c.SetV(p);\n         return Math.PI * this.m_radius * this.m_radius;\n      }\n      var r2 = this.m_radius * this.m_radius;\n      var l2 = l * l;\n      var area = r2 * (Math.asin(l / this.m_radius) + Math.PI / 2) + l * Math.sqrt(r2 - l2);\n      var com = (-2 / 3 * Math.pow(r2 - l2, 1.5) / area);\n      c.x = p.x + normal.x * com;\n      c.y = p.y + normal.y * com;\n      return area;\n   }\n   b2CircleShape.prototype.GetLocalPosition = function () {\n      return this.m_p;\n   }\n   b2CircleShape.prototype.SetLocalPosition = function (position) {\n      this.m_p.SetV(position);\n   }\n   b2CircleShape.prototype.GetRadius = function () {\n      return this.m_radius;\n   }\n   b2CircleShape.prototype.SetRadius = function (radius) {\n      if (radius === undefined) radius = 0;\n      this.m_radius = radius;\n   }\n   b2CircleShape.prototype.b2CircleShape = function (radius) {\n      if (radius === undefined) radius = 0;\n      this.__super.b2Shape.call(this);\n      this.m_type = b2Shape.e_circleShape;\n      this.m_radius = radius;\n   }\n   b2EdgeChainDef.b2EdgeChainDef = function () {};\n   b2EdgeChainDef.prototype.b2EdgeChainDef = function () {\n      this.vertexCount = 0;\n      this.isALoop = true;\n      this.vertices = [];\n   }\n   Box2D.inherit(b2EdgeShape, Box2D.Collision.Shapes.b2Shape);\n   b2EdgeShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\n   b2EdgeShape.b2EdgeShape = function () {\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\n      this.s_supportVec = new b2Vec2();\n      this.m_v1 = new b2Vec2();\n      this.m_v2 = new b2Vec2();\n      this.m_coreV1 = new b2Vec2();\n      this.m_coreV2 = new b2Vec2();\n      this.m_normal = new b2Vec2();\n      this.m_direction = new b2Vec2();\n      this.m_cornerDir1 = new b2Vec2();\n      this.m_cornerDir2 = new b2Vec2();\n   };\n   b2EdgeShape.prototype.TestPoint = function (transform, p) {\n      return false;\n   }\n   b2EdgeShape.prototype.RayCast = function (output, input, transform) {\n      var tMat;\n      var rX = input.p2.x - input.p1.x;\n      var rY = input.p2.y - input.p1.y;\n      tMat = transform.R;\n      var v1X = transform.position.x + (tMat.col1.x * this.m_v1.x + tMat.col2.x * this.m_v1.y);\n      var v1Y = transform.position.y + (tMat.col1.y * this.m_v1.x + tMat.col2.y * this.m_v1.y);\n      var nX = transform.position.y + (tMat.col1.y * this.m_v2.x + tMat.col2.y * this.m_v2.y) - v1Y;\n      var nY = (-(transform.position.x + (tMat.col1.x * this.m_v2.x + tMat.col2.x * this.m_v2.y) - v1X));\n      var k_slop = 100.0 * Number.MIN_VALUE;\n      var denom = (-(rX * nX + rY * nY));\n      if (denom > k_slop) {\n         var bX = input.p1.x - v1X;\n         var bY = input.p1.y - v1Y;\n         var a = (bX * nX + bY * nY);\n         if (0.0 <= a && a <= input.maxFraction * denom) {\n            var mu2 = (-rX * bY) + rY * bX;\n            if ((-k_slop * denom) <= mu2 && mu2 <= denom * (1.0 + k_slop)) {\n               a /= denom;\n               output.fraction = a;\n               var nLen = Math.sqrt(nX * nX + nY * nY);\n               output.normal.x = nX / nLen;\n               output.normal.y = nY / nLen;\n               return true;\n            }\n         }\n      }\n      return false;\n   }\n   b2EdgeShape.prototype.ComputeAABB = function (aabb, transform) {\n      var tMat = transform.R;\n      var v1X = transform.position.x + (tMat.col1.x * this.m_v1.x + tMat.col2.x * this.m_v1.y);\n      var v1Y = transform.position.y + (tMat.col1.y * this.m_v1.x + tMat.col2.y * this.m_v1.y);\n      var v2X = transform.position.x + (tMat.col1.x * this.m_v2.x + tMat.col2.x * this.m_v2.y);\n      var v2Y = transform.position.y + (tMat.col1.y * this.m_v2.x + tMat.col2.y * this.m_v2.y);\n      if (v1X < v2X) {\n         aabb.lowerBound.x = v1X;\n         aabb.upperBound.x = v2X;\n      }\n      else {\n         aabb.lowerBound.x = v2X;\n         aabb.upperBound.x = v1X;\n      }\n      if (v1Y < v2Y) {\n         aabb.lowerBound.y = v1Y;\n         aabb.upperBound.y = v2Y;\n      }\n      else {\n         aabb.lowerBound.y = v2Y;\n         aabb.upperBound.y = v1Y;\n      }\n   }\n   b2EdgeShape.prototype.ComputeMass = function (massData, density) {\n      if (density === undefined) density = 0;\n      massData.mass = 0;\n      massData.center.SetV(this.m_v1);\n      massData.I = 0;\n   }\n   b2EdgeShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\n      if (offset === undefined) offset = 0;\n      var v0 = new b2Vec2(normal.x * offset, normal.y * offset);\n      var v1 = b2Math.MulX(xf, this.m_v1);\n      var v2 = b2Math.MulX(xf, this.m_v2);\n      var d1 = b2Math.Dot(normal, v1) - offset;\n      var d2 = b2Math.Dot(normal, v2) - offset;\n      if (d1 > 0) {\n         if (d2 > 0) {\n            return 0;\n         }\n         else {\n            v1.x = (-d2 / (d1 - d2) * v1.x) + d1 / (d1 - d2) * v2.x;\n            v1.y = (-d2 / (d1 - d2) * v1.y) + d1 / (d1 - d2) * v2.y;\n         }\n      }\n      else {\n         if (d2 > 0) {\n            v2.x = (-d2 / (d1 - d2) * v1.x) + d1 / (d1 - d2) * v2.x;\n            v2.y = (-d2 / (d1 - d2) * v1.y) + d1 / (d1 - d2) * v2.y;\n         }\n         else {}\n      }\n      c.x = (v0.x + v1.x + v2.x) / 3;\n      c.y = (v0.y + v1.y + v2.y) / 3;\n      return 0.5 * ((v1.x - v0.x) * (v2.y - v0.y) - (v1.y - v0.y) * (v2.x - v0.x));\n   }\n   b2EdgeShape.prototype.GetLength = function () {\n      return this.m_length;\n   }\n   b2EdgeShape.prototype.GetVertex1 = function () {\n      return this.m_v1;\n   }\n   b2EdgeShape.prototype.GetVertex2 = function () {\n      return this.m_v2;\n   }\n   b2EdgeShape.prototype.GetCoreVertex1 = function () {\n      return this.m_coreV1;\n   }\n   b2EdgeShape.prototype.GetCoreVertex2 = function () {\n      return this.m_coreV2;\n   }\n   b2EdgeShape.prototype.GetNormalVector = function () {\n      return this.m_normal;\n   }\n   b2EdgeShape.prototype.GetDirectionVector = function () {\n      return this.m_direction;\n   }\n   b2EdgeShape.prototype.GetCorner1Vector = function () {\n      return this.m_cornerDir1;\n   }\n   b2EdgeShape.prototype.GetCorner2Vector = function () {\n      return this.m_cornerDir2;\n   }\n   b2EdgeShape.prototype.Corner1IsConvex = function () {\n      return this.m_cornerConvex1;\n   }\n   b2EdgeShape.prototype.Corner2IsConvex = function () {\n      return this.m_cornerConvex2;\n   }\n   b2EdgeShape.prototype.GetFirstVertex = function (xf) {\n      var tMat = xf.R;\n      return new b2Vec2(xf.position.x + (tMat.col1.x * this.m_coreV1.x + tMat.col2.x * this.m_coreV1.y), xf.position.y + (tMat.col1.y * this.m_coreV1.x + tMat.col2.y * this.m_coreV1.y));\n   }\n   b2EdgeShape.prototype.GetNextEdge = function () {\n      return this.m_nextEdge;\n   }\n   b2EdgeShape.prototype.GetPrevEdge = function () {\n      return this.m_prevEdge;\n   }\n   b2EdgeShape.prototype.Support = function (xf, dX, dY) {\n      if (dX === undefined) dX = 0;\n      if (dY === undefined) dY = 0;\n      var tMat = xf.R;\n      var v1X = xf.position.x + (tMat.col1.x * this.m_coreV1.x + tMat.col2.x * this.m_coreV1.y);\n      var v1Y = xf.position.y + (tMat.col1.y * this.m_coreV1.x + tMat.col2.y * this.m_coreV1.y);\n      var v2X = xf.position.x + (tMat.col1.x * this.m_coreV2.x + tMat.col2.x * this.m_coreV2.y);\n      var v2Y = xf.position.y + (tMat.col1.y * this.m_coreV2.x + tMat.col2.y * this.m_coreV2.y);\n      if ((v1X * dX + v1Y * dY) > (v2X * dX + v2Y * dY)) {\n         this.s_supportVec.x = v1X;\n         this.s_supportVec.y = v1Y;\n      }\n      else {\n         this.s_supportVec.x = v2X;\n         this.s_supportVec.y = v2Y;\n      }\n      return this.s_supportVec;\n   }\n   b2EdgeShape.prototype.b2EdgeShape = function (v1, v2) {\n      this.__super.b2Shape.call(this);\n      this.m_type = b2Shape.e_edgeShape;\n      this.m_prevEdge = null;\n      this.m_nextEdge = null;\n      this.m_v1 = v1;\n      this.m_v2 = v2;\n      this.m_direction.Set(this.m_v2.x - this.m_v1.x, this.m_v2.y - this.m_v1.y);\n      this.m_length = this.m_direction.Normalize();\n      this.m_normal.Set(this.m_direction.y, (-this.m_direction.x));\n      this.m_coreV1.Set((-b2Settings.b2_toiSlop * (this.m_normal.x - this.m_direction.x)) + this.m_v1.x, (-b2Settings.b2_toiSlop * (this.m_normal.y - this.m_direction.y)) + this.m_v1.y);\n      this.m_coreV2.Set((-b2Settings.b2_toiSlop * (this.m_normal.x + this.m_direction.x)) + this.m_v2.x, (-b2Settings.b2_toiSlop * (this.m_normal.y + this.m_direction.y)) + this.m_v2.y);\n      this.m_cornerDir1 = this.m_normal;\n      this.m_cornerDir2.Set((-this.m_normal.x), (-this.m_normal.y));\n   }\n   b2EdgeShape.prototype.SetPrevEdge = function (edge, core, cornerDir, convex) {\n      this.m_prevEdge = edge;\n      this.m_coreV1 = core;\n      this.m_cornerDir1 = cornerDir;\n      this.m_cornerConvex1 = convex;\n   }\n   b2EdgeShape.prototype.SetNextEdge = function (edge, core, cornerDir, convex) {\n      this.m_nextEdge = edge;\n      this.m_coreV2 = core;\n      this.m_cornerDir2 = cornerDir;\n      this.m_cornerConvex2 = convex;\n   }\n   b2MassData.b2MassData = function () {\n      this.mass = 0.0;\n      this.center = new b2Vec2(0, 0);\n      this.I = 0.0;\n   };\n   Box2D.inherit(b2PolygonShape, Box2D.Collision.Shapes.b2Shape);\n   b2PolygonShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\n   b2PolygonShape.b2PolygonShape = function () {\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\n   };\n   b2PolygonShape.prototype.Copy = function () {\n      var s = new b2PolygonShape();\n      s.Set(this);\n      return s;\n   }\n   b2PolygonShape.prototype.Set = function (other) {\n      this.__super.Set.call(this, other);\n      if (Box2D.is(other, b2PolygonShape)) {\n         var other2 = (other instanceof b2PolygonShape ? other : null);\n         this.m_centroid.SetV(other2.m_centroid);\n         this.m_vertexCount = other2.m_vertexCount;\n         this.Reserve(this.m_vertexCount);\n         for (var i = 0; i < this.m_vertexCount; i++) {\n            this.m_vertices[i].SetV(other2.m_vertices[i]);\n            this.m_normals[i].SetV(other2.m_normals[i]);\n         }\n      }\n   }\n   b2PolygonShape.prototype.SetAsArray = function (vertices, vertexCount) {\n      if (vertexCount === undefined) vertexCount = 0;\n      var v = new Box2DVector();\n      var i = 0,\n         tVec;\n      for (i = 0;\n      i < vertices.length; ++i) {\n         tVec = vertices[i];\n         v.push(tVec);\n      }\n      this.SetAsVector(v, vertexCount);\n   }\n   b2PolygonShape.AsArray = function (vertices, vertexCount) {\n      if (vertexCount === undefined) vertexCount = 0;\n      var polygonShape = new b2PolygonShape();\n      polygonShape.SetAsArray(vertices, vertexCount);\n      return polygonShape;\n   }\n   b2PolygonShape.prototype.SetAsVector = function (vertices, vertexCount) {\n      if (vertexCount === undefined) vertexCount = 0;\n      if (vertexCount == 0) vertexCount = vertices.length;\n      b2Settings.b2Assert(2 <= vertexCount);\n      this.m_vertexCount = vertexCount;\n      this.Reserve(vertexCount);\n      var i = 0;\n      for (i = 0;\n      i < this.m_vertexCount; i++) {\n         this.m_vertices[i].SetV(vertices[i]);\n      }\n      for (i = 0;\n      i < this.m_vertexCount; ++i) {\n         var i1 = parseInt(i);\n         var i2 = parseInt(i + 1 < this.m_vertexCount ? i + 1 : 0);\n         var edge = b2Math.SubtractVV(this.m_vertices[i2], this.m_vertices[i1]);\n         b2Settings.b2Assert(edge.LengthSquared() > Number.MIN_VALUE);\n         this.m_normals[i].SetV(b2Math.CrossVF(edge, 1.0));\n         this.m_normals[i].Normalize();\n      }\n      this.m_centroid = b2PolygonShape.ComputeCentroid(this.m_vertices, this.m_vertexCount);\n   }\n   b2PolygonShape.AsVector = function (vertices, vertexCount) {\n      if (vertexCount === undefined) vertexCount = 0;\n      var polygonShape = new b2PolygonShape();\n      polygonShape.SetAsVector(vertices, vertexCount);\n      return polygonShape;\n   }\n   b2PolygonShape.prototype.SetAsBox = function (hx, hy) {\n      if (hx === undefined) hx = 0;\n      if (hy === undefined) hy = 0;\n      this.m_vertexCount = 4;\n      this.Reserve(4);\n      this.m_vertices[0].Set((-hx), (-hy));\n      this.m_vertices[1].Set(hx, (-hy));\n      this.m_vertices[2].Set(hx, hy);\n      this.m_vertices[3].Set((-hx), hy);\n      this.m_normals[0].Set(0.0, (-1.0));\n      this.m_normals[1].Set(1.0, 0.0);\n      this.m_normals[2].Set(0.0, 1.0);\n      this.m_normals[3].Set((-1.0), 0.0);\n      this.m_centroid.SetZero();\n   }\n   b2PolygonShape.AsBox = function (hx, hy) {\n      if (hx === undefined) hx = 0;\n      if (hy === undefined) hy = 0;\n      var polygonShape = new b2PolygonShape();\n      polygonShape.SetAsBox(hx, hy);\n      return polygonShape;\n   }\n   b2PolygonShape.prototype.SetAsOrientedBox = function (hx, hy, center, angle) {\n      if (hx === undefined) hx = 0;\n      if (hy === undefined) hy = 0;\n      if (center === undefined) center = null;\n      if (angle === undefined) angle = 0.0;\n      this.m_vertexCount = 4;\n      this.Reserve(4);\n      this.m_vertices[0].Set((-hx), (-hy));\n      this.m_vertices[1].Set(hx, (-hy));\n      this.m_vertices[2].Set(hx, hy);\n      this.m_vertices[3].Set((-hx), hy);\n      this.m_normals[0].Set(0.0, (-1.0));\n      this.m_normals[1].Set(1.0, 0.0);\n      this.m_normals[2].Set(0.0, 1.0);\n      this.m_normals[3].Set((-1.0), 0.0);\n      this.m_centroid = center;\n      var xf = new b2Transform();\n      xf.position = center;\n      xf.R.Set(angle);\n      for (var i = 0; i < this.m_vertexCount; ++i) {\n         this.m_vertices[i] = b2Math.MulX(xf, this.m_vertices[i]);\n         this.m_normals[i] = b2Math.MulMV(xf.R, this.m_normals[i]);\n      }\n   }\n   b2PolygonShape.AsOrientedBox = function (hx, hy, center, angle) {\n      if (hx === undefined) hx = 0;\n      if (hy === undefined) hy = 0;\n      if (center === undefined) center = null;\n      if (angle === undefined) angle = 0.0;\n      var polygonShape = new b2PolygonShape();\n      polygonShape.SetAsOrientedBox(hx, hy, center, angle);\n      return polygonShape;\n   }\n   b2PolygonShape.prototype.SetAsEdge = function (v1, v2) {\n      this.m_vertexCount = 2;\n      this.Reserve(2);\n      this.m_vertices[0].SetV(v1);\n      this.m_vertices[1].SetV(v2);\n      this.m_centroid.x = 0.5 * (v1.x + v2.x);\n      this.m_centroid.y = 0.5 * (v1.y + v2.y);\n      this.m_normals[0] = b2Math.CrossVF(b2Math.SubtractVV(v2, v1), 1.0);\n      this.m_normals[0].Normalize();\n      this.m_normals[1].x = (-this.m_normals[0].x);\n      this.m_normals[1].y = (-this.m_normals[0].y);\n   }\n   b2PolygonShape.AsEdge = function (v1, v2) {\n      var polygonShape = new b2PolygonShape();\n      polygonShape.SetAsEdge(v1, v2);\n      return polygonShape;\n   }\n   b2PolygonShape.prototype.TestPoint = function (xf, p) {\n      var tVec;\n      var tMat = xf.R;\n      var tX = p.x - xf.position.x;\n      var tY = p.y - xf.position.y;\n      var pLocalX = (tX * tMat.col1.x + tY * tMat.col1.y);\n      var pLocalY = (tX * tMat.col2.x + tY * tMat.col2.y);\n      for (var i = 0; i < this.m_vertexCount; ++i) {\n         tVec = this.m_vertices[i];\n         tX = pLocalX - tVec.x;\n         tY = pLocalY - tVec.y;\n         tVec = this.m_normals[i];\n         var dot = (tVec.x * tX + tVec.y * tY);\n         if (dot > 0.0) {\n            return false;\n         }\n      }\n      return true;\n   }\n   b2PolygonShape.prototype.RayCast = function (output, input, transform) {\n      var lower = 0.0;\n      var upper = input.maxFraction;\n      var tX = 0;\n      var tY = 0;\n      var tMat;\n      var tVec;\n      tX = input.p1.x - transform.position.x;\n      tY = input.p1.y - transform.position.y;\n      tMat = transform.R;\n      var p1X = (tX * tMat.col1.x + tY * tMat.col1.y);\n      var p1Y = (tX * tMat.col2.x + tY * tMat.col2.y);\n      tX = input.p2.x - transform.position.x;\n      tY = input.p2.y - transform.position.y;\n      tMat = transform.R;\n      var p2X = (tX * tMat.col1.x + tY * tMat.col1.y);\n      var p2Y = (tX * tMat.col2.x + tY * tMat.col2.y);\n      var dX = p2X - p1X;\n      var dY = p2Y - p1Y;\n      var index = parseInt((-1));\n      for (var i = 0; i < this.m_vertexCount; ++i) {\n         tVec = this.m_vertices[i];\n         tX = tVec.x - p1X;\n         tY = tVec.y - p1Y;\n         tVec = this.m_normals[i];\n         var numerator = (tVec.x * tX + tVec.y * tY);\n         var denominator = (tVec.x * dX + tVec.y * dY);\n         if (denominator == 0.0) {\n            if (numerator < 0.0) {\n               return false;\n            }\n         }\n         else {\n            if (denominator < 0.0 && numerator < lower * denominator) {\n               lower = numerator / denominator;\n               index = i;\n            }\n            else if (denominator > 0.0 && numerator < upper * denominator) {\n               upper = numerator / denominator;\n            }\n         }\n         if (upper < lower - Number.MIN_VALUE) {\n            return false;\n         }\n      }\n      if (index >= 0) {\n         output.fraction = lower;\n         tMat = transform.R;\n         tVec = this.m_normals[index];\n         output.normal.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         output.normal.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         return true;\n      }\n      return false;\n   }\n   b2PolygonShape.prototype.ComputeAABB = function (aabb, xf) {\n      var tMat = xf.R;\n      var tVec = this.m_vertices[0];\n      var lowerX = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      var lowerY = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      var upperX = lowerX;\n      var upperY = lowerY;\n      for (var i = 1; i < this.m_vertexCount; ++i) {\n         tVec = this.m_vertices[i];\n         var vX = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n         var vY = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n         lowerX = lowerX < vX ? lowerX : vX;\n         lowerY = lowerY < vY ? lowerY : vY;\n         upperX = upperX > vX ? upperX : vX;\n         upperY = upperY > vY ? upperY : vY;\n      }\n      aabb.lowerBound.x = lowerX - this.m_radius;\n      aabb.lowerBound.y = lowerY - this.m_radius;\n      aabb.upperBound.x = upperX + this.m_radius;\n      aabb.upperBound.y = upperY + this.m_radius;\n   }\n   b2PolygonShape.prototype.ComputeMass = function (massData, density) {\n      if (density === undefined) density = 0;\n      if (this.m_vertexCount == 2) {\n         massData.center.x = 0.5 * (this.m_vertices[0].x + this.m_vertices[1].x);\n         massData.center.y = 0.5 * (this.m_vertices[0].y + this.m_vertices[1].y);\n         massData.mass = 0.0;\n         massData.I = 0.0;\n         return;\n      }\n      var centerX = 0.0;\n      var centerY = 0.0;\n      var area = 0.0;\n      var I = 0.0;\n      var p1X = 0.0;\n      var p1Y = 0.0;\n      var k_inv3 = 1.0 / 3.0;\n      for (var i = 0; i < this.m_vertexCount; ++i) {\n         var p2 = this.m_vertices[i];\n         var p3 = i + 1 < this.m_vertexCount ? this.m_vertices[parseInt(i + 1)] : this.m_vertices[0];\n         var e1X = p2.x - p1X;\n         var e1Y = p2.y - p1Y;\n         var e2X = p3.x - p1X;\n         var e2Y = p3.y - p1Y;\n         var D = e1X * e2Y - e1Y * e2X;\n         var triangleArea = 0.5 * D;area += triangleArea;\n         centerX += triangleArea * k_inv3 * (p1X + p2.x + p3.x);\n         centerY += triangleArea * k_inv3 * (p1Y + p2.y + p3.y);\n         var px = p1X;\n         var py = p1Y;\n         var ex1 = e1X;\n         var ey1 = e1Y;\n         var ex2 = e2X;\n         var ey2 = e2Y;\n         var intx2 = k_inv3 * (0.25 * (ex1 * ex1 + ex2 * ex1 + ex2 * ex2) + (px * ex1 + px * ex2)) + 0.5 * px * px;\n         var inty2 = k_inv3 * (0.25 * (ey1 * ey1 + ey2 * ey1 + ey2 * ey2) + (py * ey1 + py * ey2)) + 0.5 * py * py;I += D * (intx2 + inty2);\n      }\n      massData.mass = density * area;\n      centerX *= 1.0 / area;\n      centerY *= 1.0 / area;\n      massData.center.Set(centerX, centerY);\n      massData.I = density * I;\n   }\n   b2PolygonShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\n      if (offset === undefined) offset = 0;\n      var normalL = b2Math.MulTMV(xf.R, normal);\n      var offsetL = offset - b2Math.Dot(normal, xf.position);\n      var depths = new Vector_a2j_Number();\n      var diveCount = 0;\n      var intoIndex = parseInt((-1));\n      var outoIndex = parseInt((-1));\n      var lastSubmerged = false;\n      var i = 0;\n      for (i = 0;\n      i < this.m_vertexCount; ++i) {\n         depths[i] = b2Math.Dot(normalL, this.m_vertices[i]) - offsetL;\n         var isSubmerged = depths[i] < (-Number.MIN_VALUE);\n         if (i > 0) {\n            if (isSubmerged) {\n               if (!lastSubmerged) {\n                  intoIndex = i - 1;\n                  diveCount++;\n               }\n            }\n            else {\n               if (lastSubmerged) {\n                  outoIndex = i - 1;\n                  diveCount++;\n               }\n            }\n         }\n         lastSubmerged = isSubmerged;\n      }\n      switch (diveCount) {\n      case 0:\n         if (lastSubmerged) {\n            var md = new b2MassData();\n            this.ComputeMass(md, 1);\n            c.SetV(b2Math.MulX(xf, md.center));\n            return md.mass;\n         }\n         else {\n            return 0;\n         }\n         break;\n      case 1:\n         if (intoIndex == (-1)) {\n            intoIndex = this.m_vertexCount - 1;\n         }\n         else {\n            outoIndex = this.m_vertexCount - 1;\n         }\n         break;\n      }\n      var intoIndex2 = parseInt((intoIndex + 1) % this.m_vertexCount);\n      var outoIndex2 = parseInt((outoIndex + 1) % this.m_vertexCount);\n      var intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\n      var outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\n      var intoVec = new b2Vec2(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\n      var outoVec = new b2Vec2(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\n      var area = 0;\n      var center = new b2Vec2();\n      var p2 = this.m_vertices[intoIndex2];\n      var p3;\n      i = intoIndex2;\n      while (i != outoIndex2) {\n         i = (i + 1) % this.m_vertexCount;\n         if (i == outoIndex2) p3 = outoVec;\n         else p3 = this.m_vertices[i];\n         var triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\n         area += triangleArea;\n         center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\n         center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\n         p2 = p3;\n      }\n      center.Multiply(1 / area);\n      c.SetV(b2Math.MulX(xf, center));\n      return area;\n   }\n   b2PolygonShape.prototype.GetVertexCount = function () {\n      return this.m_vertexCount;\n   }\n   b2PolygonShape.prototype.GetVertices = function () {\n      return this.m_vertices;\n   }\n   b2PolygonShape.prototype.GetNormals = function () {\n      return this.m_normals;\n   }\n   b2PolygonShape.prototype.GetSupport = function (d) {\n      var bestIndex = 0;\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\n      for (var i = 1; i < this.m_vertexCount; ++i) {\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\n         if (value > bestValue) {\n            bestIndex = i;\n            bestValue = value;\n         }\n      }\n      return bestIndex;\n   }\n   b2PolygonShape.prototype.GetSupportVertex = function (d) {\n      var bestIndex = 0;\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\n      for (var i = 1; i < this.m_vertexCount; ++i) {\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\n         if (value > bestValue) {\n            bestIndex = i;\n            bestValue = value;\n         }\n      }\n      return this.m_vertices[bestIndex];\n   }\n   b2PolygonShape.prototype.Validate = function () {\n      return false;\n   }\n   b2PolygonShape.prototype.b2PolygonShape = function () {\n      this.__super.b2Shape.call(this);\n      this.m_type = b2Shape.e_polygonShape;\n      this.m_centroid = new b2Vec2();\n      this.m_vertices = new Box2DVector();\n      this.m_normals = new Box2DVector();\n   }\n   b2PolygonShape.prototype.Reserve = function (count) {\n      if (count === undefined) count = 0;\n      for (var i = parseInt(this.m_vertices.length); i < count; i++) {\n         this.m_vertices[i] = new b2Vec2();\n         this.m_normals[i] = new b2Vec2();\n      }\n   }\n   b2PolygonShape.ComputeCentroid = function (vs, count) {\n      if (count === undefined) count = 0;\n      var c = new b2Vec2();\n      var area = 0.0;\n      var p1X = 0.0;\n      var p1Y = 0.0;\n      var inv3 = 1.0 / 3.0;\n      for (var i = 0; i < count; ++i) {\n         var p2 = vs[i];\n         var p3 = i + 1 < count ? vs[parseInt(i + 1)] : vs[0];\n         var e1X = p2.x - p1X;\n         var e1Y = p2.y - p1Y;\n         var e2X = p3.x - p1X;\n         var e2Y = p3.y - p1Y;\n         var D = (e1X * e2Y - e1Y * e2X);\n         var triangleArea = 0.5 * D;area += triangleArea;\n         c.x += triangleArea * inv3 * (p1X + p2.x + p3.x);\n         c.y += triangleArea * inv3 * (p1Y + p2.y + p3.y);\n      }\n      c.x *= 1.0 / area;\n      c.y *= 1.0 / area;\n      return c;\n   }\n   b2PolygonShape.ComputeOBB = function (obb, vs, count) {\n      if (count === undefined) count = 0;\n      var i = 0;\n      var p = new Box2DVector(count + 1);\n      for (i = 0;\n      i < count; ++i) {\n         p[i] = vs[i];\n      }\n      p[count] = p[0];\n      var minArea = Number.MAX_VALUE;\n      for (i = 1;\n      i <= count; ++i) {\n         var root = p[parseInt(i - 1)];\n         var uxX = p[i].x - root.x;\n         var uxY = p[i].y - root.y;\n         var length = Math.sqrt(uxX * uxX + uxY * uxY);\n         uxX /= length;\n         uxY /= length;\n         var uyX = (-uxY);\n         var uyY = uxX;\n         var lowerX = Number.MAX_VALUE;\n         var lowerY = Number.MAX_VALUE;\n         var upperX = (-Number.MAX_VALUE);\n         var upperY = (-Number.MAX_VALUE);\n         for (var j = 0; j < count; ++j) {\n            var dX = p[j].x - root.x;\n            var dY = p[j].y - root.y;\n            var rX = (uxX * dX + uxY * dY);\n            var rY = (uyX * dX + uyY * dY);\n            if (rX < lowerX) lowerX = rX;\n            if (rY < lowerY) lowerY = rY;\n            if (rX > upperX) upperX = rX;\n            if (rY > upperY) upperY = rY;\n         }\n         var area = (upperX - lowerX) * (upperY - lowerY);\n         if (area < 0.95 * minArea) {\n            minArea = area;\n            obb.R.col1.x = uxX;\n            obb.R.col1.y = uxY;\n            obb.R.col2.x = uyX;\n            obb.R.col2.y = uyY;\n            var centerX = 0.5 * (lowerX + upperX);\n            var centerY = 0.5 * (lowerY + upperY);\n            var tMat = obb.R;\n            obb.center.x = root.x + (tMat.col1.x * centerX + tMat.col2.x * centerY);\n            obb.center.y = root.y + (tMat.col1.y * centerX + tMat.col2.y * centerY);\n            obb.extents.x = 0.5 * (upperX - lowerX);\n            obb.extents.y = 0.5 * (upperY - lowerY);\n         }\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.Shapes.b2PolygonShape.s_mat = new b2Mat22();\n   });\n   b2Shape.b2Shape = function () {};\n   b2Shape.prototype.Copy = function () {\n      return null;\n   }\n   b2Shape.prototype.Set = function (other) {\n      this.m_radius = other.m_radius;\n   }\n   b2Shape.prototype.GetType = function () {\n      return this.m_type;\n   }\n   b2Shape.prototype.TestPoint = function (xf, p) {\n      return false;\n   }\n   b2Shape.prototype.RayCast = function (output, input, transform) {\n      return false;\n   }\n   b2Shape.prototype.ComputeAABB = function (aabb, xf) {}\n   b2Shape.prototype.ComputeMass = function (massData, density) {\n      if (density === undefined) density = 0;\n   }\n   b2Shape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\n      if (offset === undefined) offset = 0;\n      return 0;\n   }\n   b2Shape.TestOverlap = function (shape1, transform1, shape2, transform2) {\n      var input = new b2DistanceInput();\n      input.proxyA = new b2DistanceProxy();\n      input.proxyA.Set(shape1);\n      input.proxyB = new b2DistanceProxy();\n      input.proxyB.Set(shape2);\n      input.transformA = transform1;\n      input.transformB = transform2;\n      input.useRadii = true;\n      var simplexCache = new b2SimplexCache();\n      simplexCache.count = 0;\n      var output = new b2DistanceOutput();\n      b2Distance.Distance(output, simplexCache, input);\n      return output.distance < 10.0 * Number.MIN_VALUE;\n   }\n   b2Shape.prototype.b2Shape = function () {\n      this.m_type = b2Shape.e_unknownShape;\n      this.m_radius = b2Settings.b2_linearSlop;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Collision.Shapes.b2Shape.e_unknownShape = parseInt((-1));\n      Box2D.Collision.Shapes.b2Shape.e_circleShape = 0;\n      Box2D.Collision.Shapes.b2Shape.e_polygonShape = 1;\n      Box2D.Collision.Shapes.b2Shape.e_edgeShape = 2;\n      Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount = 3;\n      Box2D.Collision.Shapes.b2Shape.e_hitCollide = 1;\n      Box2D.Collision.Shapes.b2Shape.e_missCollide = 0;\n      Box2D.Collision.Shapes.b2Shape.e_startsInsideCollide = parseInt((-1));\n   });\n})();\n(function () {\n   var b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3;\n\n   b2Color.b2Color = function () {\n      this._r = 0;\n      this._g = 0;\n      this._b = 0;\n   };\n   b2Color.prototype.b2Color = function (rr, gg, bb) {\n      if (rr === undefined) rr = 0;\n      if (gg === undefined) gg = 0;\n      if (bb === undefined) bb = 0;\n      this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\n      this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\n      this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\n   }\n   b2Color.prototype.Set = function (rr, gg, bb) {\n      if (rr === undefined) rr = 0;\n      if (gg === undefined) gg = 0;\n      if (bb === undefined) bb = 0;\n      this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\n      this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\n      this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\n   }\n   Object.defineProperty(b2Color.prototype, 'r', {\n      enumerable: false,\n      configurable: true,\n      set: function (rr) {\n         if (rr === undefined) rr = 0;\n         this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\n      }\n   });\n   Object.defineProperty(b2Color.prototype, 'g', {\n      enumerable: false,\n      configurable: true,\n      set: function (gg) {\n         if (gg === undefined) gg = 0;\n         this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\n      }\n   });\n   Object.defineProperty(b2Color.prototype, 'b', {\n      enumerable: false,\n      configurable: true,\n      set: function (bb) {\n         if (bb === undefined) bb = 0;\n         this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\n      }\n   });\n   Object.defineProperty(b2Color.prototype, 'color', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n         return (this._r << 16) | (this._g << 8) | (this._b);\n      }\n   });\n   b2Settings.b2Settings = function () {};\n   b2Settings.b2MixFriction = function (friction1, friction2) {\n      if (friction1 === undefined) friction1 = 0;\n      if (friction2 === undefined) friction2 = 0;\n      return Math.sqrt(friction1 * friction2);\n   }\n   b2Settings.b2MixRestitution = function (restitution1, restitution2) {\n      if (restitution1 === undefined) restitution1 = 0;\n      if (restitution2 === undefined) restitution2 = 0;\n      return restitution1 > restitution2 ? restitution1 : restitution2;\n   }\n   b2Settings.b2Assert = function (a) {\n      if (!a) {\n         throw \"Assertion Failed\";\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Common.b2Settings.VERSION = \"2.1alpha\";\n      Box2D.Common.b2Settings.USHRT_MAX = 0x0000ffff;\n      Box2D.Common.b2Settings.b2_pi = Math.PI;\n      Box2D.Common.b2Settings.b2_maxManifoldPoints = 2;\n      Box2D.Common.b2Settings.b2_aabbExtension = 0.1;\n      Box2D.Common.b2Settings.b2_aabbMultiplier = 2.0;\n      Box2D.Common.b2Settings.b2_polygonRadius = 2.0 * b2Settings.b2_linearSlop;\n      Box2D.Common.b2Settings.b2_linearSlop = 0.005;\n      Box2D.Common.b2Settings.b2_angularSlop = 2.0 / 180.0 * b2Settings.b2_pi;\n      Box2D.Common.b2Settings.b2_toiSlop = 8.0 * b2Settings.b2_linearSlop;\n      Box2D.Common.b2Settings.b2_maxTOIContactsPerIsland = 32;\n      Box2D.Common.b2Settings.b2_maxTOIJointsPerIsland = 32;\n      Box2D.Common.b2Settings.b2_velocityThreshold = 1.0;\n      Box2D.Common.b2Settings.b2_maxLinearCorrection = 0.2;\n      Box2D.Common.b2Settings.b2_maxAngularCorrection = 8.0 / 180.0 * b2Settings.b2_pi;\n      Box2D.Common.b2Settings.b2_maxTranslation = 20.0;\n      Box2D.Common.b2Settings.b2_maxTranslationSquared = b2Settings.b2_maxTranslation * b2Settings.b2_maxTranslation;\n      Box2D.Common.b2Settings.b2_maxRotation = 0.5 * b2Settings.b2_pi;\n      Box2D.Common.b2Settings.b2_maxRotationSquared = b2Settings.b2_maxRotation * b2Settings.b2_maxRotation;\n      Box2D.Common.b2Settings.b2_contactBaumgarte = 0.2;\n      Box2D.Common.b2Settings.b2_timeToSleep = 0.5;\n      Box2D.Common.b2Settings.b2_linearSleepTolerance = 0.01;\n      Box2D.Common.b2Settings.b2_angularSleepTolerance = 2.0 / 180.0 * b2Settings.b2_pi;\n   });\n})();\n(function () {\n   var b2AABB = Box2D.Collision.b2AABB,\n      b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3;\n\n   b2Mat22.b2Mat22 = function () {\n      this.col1 = new b2Vec2();\n      this.col2 = new b2Vec2();\n   };\n   b2Mat22.prototype.b2Mat22 = function () {\n      this.SetIdentity();\n   }\n   b2Mat22.FromAngle = function (angle) {\n      if (angle === undefined) angle = 0;\n      var mat = new b2Mat22();\n      mat.Set(angle);\n      return mat;\n   }\n   b2Mat22.FromVV = function (c1, c2) {\n      var mat = new b2Mat22();\n      mat.SetVV(c1, c2);\n      return mat;\n   }\n   b2Mat22.prototype.Set = function (angle) {\n      if (angle === undefined) angle = 0;\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      this.col1.x = c;\n      this.col2.x = (-s);\n      this.col1.y = s;\n      this.col2.y = c;\n   }\n   b2Mat22.prototype.SetVV = function (c1, c2) {\n      this.col1.SetV(c1);\n      this.col2.SetV(c2);\n   }\n   b2Mat22.prototype.Copy = function () {\n      var mat = new b2Mat22();\n      mat.SetM(this);\n      return mat;\n   }\n   b2Mat22.prototype.SetM = function (m) {\n      this.col1.SetV(m.col1);\n      this.col2.SetV(m.col2);\n   }\n   b2Mat22.prototype.AddM = function (m) {\n      this.col1.x += m.col1.x;\n      this.col1.y += m.col1.y;\n      this.col2.x += m.col2.x;\n      this.col2.y += m.col2.y;\n   }\n   b2Mat22.prototype.SetIdentity = function () {\n      this.col1.x = 1.0;\n      this.col2.x = 0.0;\n      this.col1.y = 0.0;\n      this.col2.y = 1.0;\n   }\n   b2Mat22.prototype.SetZero = function () {\n      this.col1.x = 0.0;\n      this.col2.x = 0.0;\n      this.col1.y = 0.0;\n      this.col2.y = 0.0;\n   }\n   b2Mat22.prototype.GetAngle = function () {\n      return Math.atan2(this.col1.y, this.col1.x);\n   }\n   b2Mat22.prototype.GetInverse = function (out) {\n      var a = this.col1.x;\n      var b = this.col2.x;\n      var c = this.col1.y;\n      var d = this.col2.y;\n      var det = a * d - b * c;\n      if (det != 0.0) {\n         det = 1.0 / det;\n      }\n      out.col1.x = det * d;\n      out.col2.x = (-det * b);\n      out.col1.y = (-det * c);\n      out.col2.y = det * a;\n      return out;\n   }\n   b2Mat22.prototype.Solve = function (out, bX, bY) {\n      if (bX === undefined) bX = 0;\n      if (bY === undefined) bY = 0;\n      var a11 = this.col1.x;\n      var a12 = this.col2.x;\n      var a21 = this.col1.y;\n      var a22 = this.col2.y;\n      var det = a11 * a22 - a12 * a21;\n      if (det != 0.0) {\n         det = 1.0 / det;\n      }\n      out.x = det * (a22 * bX - a12 * bY);\n      out.y = det * (a11 * bY - a21 * bX);\n      return out;\n   }\n   b2Mat22.prototype.Abs = function () {\n      this.col1.Abs();\n      this.col2.Abs();\n   }\n   b2Mat33.b2Mat33 = function () {\n      this.col1 = new b2Vec3();\n      this.col2 = new b2Vec3();\n      this.col3 = new b2Vec3();\n   };\n   b2Mat33.prototype.b2Mat33 = function (c1, c2, c3) {\n      if (c1 === undefined) c1 = null;\n      if (c2 === undefined) c2 = null;\n      if (c3 === undefined) c3 = null;\n      if (!c1 && !c2 && !c3) {\n         this.col1.SetZero();\n         this.col2.SetZero();\n         this.col3.SetZero();\n      }\n      else {\n         this.col1.SetV(c1);\n         this.col2.SetV(c2);\n         this.col3.SetV(c3);\n      }\n   }\n   b2Mat33.prototype.SetVVV = function (c1, c2, c3) {\n      this.col1.SetV(c1);\n      this.col2.SetV(c2);\n      this.col3.SetV(c3);\n   }\n   b2Mat33.prototype.Copy = function () {\n      return new b2Mat33(this.col1, this.col2, this.col3);\n   }\n   b2Mat33.prototype.SetM = function (m) {\n      this.col1.SetV(m.col1);\n      this.col2.SetV(m.col2);\n      this.col3.SetV(m.col3);\n   }\n   b2Mat33.prototype.AddM = function (m) {\n      this.col1.x += m.col1.x;\n      this.col1.y += m.col1.y;\n      this.col1.z += m.col1.z;\n      this.col2.x += m.col2.x;\n      this.col2.y += m.col2.y;\n      this.col2.z += m.col2.z;\n      this.col3.x += m.col3.x;\n      this.col3.y += m.col3.y;\n      this.col3.z += m.col3.z;\n   }\n   b2Mat33.prototype.SetIdentity = function () {\n      this.col1.x = 1.0;\n      this.col2.x = 0.0;\n      this.col3.x = 0.0;\n      this.col1.y = 0.0;\n      this.col2.y = 1.0;\n      this.col3.y = 0.0;\n      this.col1.z = 0.0;\n      this.col2.z = 0.0;\n      this.col3.z = 1.0;\n   }\n   b2Mat33.prototype.SetZero = function () {\n      this.col1.x = 0.0;\n      this.col2.x = 0.0;\n      this.col3.x = 0.0;\n      this.col1.y = 0.0;\n      this.col2.y = 0.0;\n      this.col3.y = 0.0;\n      this.col1.z = 0.0;\n      this.col2.z = 0.0;\n      this.col3.z = 0.0;\n   }\n   b2Mat33.prototype.Solve22 = function (out, bX, bY) {\n      if (bX === undefined) bX = 0;\n      if (bY === undefined) bY = 0;\n      var a11 = this.col1.x;\n      var a12 = this.col2.x;\n      var a21 = this.col1.y;\n      var a22 = this.col2.y;\n      var det = a11 * a22 - a12 * a21;\n      if (det != 0.0) {\n         det = 1.0 / det;\n      }\n      out.x = det * (a22 * bX - a12 * bY);\n      out.y = det * (a11 * bY - a21 * bX);\n      return out;\n   }\n   b2Mat33.prototype.Solve33 = function (out, bX, bY, bZ) {\n      if (bX === undefined) bX = 0;\n      if (bY === undefined) bY = 0;\n      if (bZ === undefined) bZ = 0;\n      var a11 = this.col1.x;\n      var a21 = this.col1.y;\n      var a31 = this.col1.z;\n      var a12 = this.col2.x;\n      var a22 = this.col2.y;\n      var a32 = this.col2.z;\n      var a13 = this.col3.x;\n      var a23 = this.col3.y;\n      var a33 = this.col3.z;\n      var det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\n      if (det != 0.0) {\n         det = 1.0 / det;\n      }\n      out.x = det * (bX * (a22 * a33 - a32 * a23) + bY * (a32 * a13 - a12 * a33) + bZ * (a12 * a23 - a22 * a13));\n      out.y = det * (a11 * (bY * a33 - bZ * a23) + a21 * (bZ * a13 - bX * a33) + a31 * (bX * a23 - bY * a13));\n      out.z = det * (a11 * (a22 * bZ - a32 * bY) + a21 * (a32 * bX - a12 * bZ) + a31 * (a12 * bY - a22 * bX));\n      return out;\n   }\n   b2Math.b2Math = function () {};\n   b2Math.IsValid = function (x) {\n      if (x === undefined) x = 0;\n      return isFinite(x);\n   }\n   b2Math.Dot = function (a, b) {\n      return a.x * b.x + a.y * b.y;\n   }\n   b2Math.CrossVV = function (a, b) {\n      return a.x * b.y - a.y * b.x;\n   }\n   b2Math.CrossVF = function (a, s) {\n      if (s === undefined) s = 0;\n      var v = new b2Vec2(s * a.y, (-s * a.x));\n      return v;\n   }\n   b2Math.CrossFV = function (s, a) {\n      if (s === undefined) s = 0;\n      var v = new b2Vec2((-s * a.y), s * a.x);\n      return v;\n   }\n   b2Math.MulMV = function (A, v) {\n      var u = new b2Vec2(A.col1.x * v.x + A.col2.x * v.y, A.col1.y * v.x + A.col2.y * v.y);\n      return u;\n   }\n   b2Math.MulTMV = function (A, v) {\n      var u = new b2Vec2(b2Math.Dot(v, A.col1), b2Math.Dot(v, A.col2));\n      return u;\n   }\n   b2Math.MulX = function (T, v) {\n      var a = b2Math.MulMV(T.R, v);\n      a.x += T.position.x;\n      a.y += T.position.y;\n      return a;\n   }\n   b2Math.MulXT = function (T, v) {\n      var a = b2Math.SubtractVV(v, T.position);\n      var tX = (a.x * T.R.col1.x + a.y * T.R.col1.y);\n      a.y = (a.x * T.R.col2.x + a.y * T.R.col2.y);\n      a.x = tX;\n      return a;\n   }\n   b2Math.AddVV = function (a, b) {\n      var v = new b2Vec2(a.x + b.x, a.y + b.y);\n      return v;\n   }\n   b2Math.SubtractVV = function (a, b) {\n      var v = new b2Vec2(a.x - b.x, a.y - b.y);\n      return v;\n   }\n   b2Math.Distance = function (a, b) {\n      var cX = a.x - b.x;\n      var cY = a.y - b.y;\n      return Math.sqrt(cX * cX + cY * cY);\n   }\n   b2Math.DistanceSquared = function (a, b) {\n      var cX = a.x - b.x;\n      var cY = a.y - b.y;\n      return (cX * cX + cY * cY);\n   }\n   b2Math.MulFV = function (s, a) {\n      if (s === undefined) s = 0;\n      var v = new b2Vec2(s * a.x, s * a.y);\n      return v;\n   }\n   b2Math.AddMM = function (A, B) {\n      var C = b2Mat22.FromVV(b2Math.AddVV(A.col1, B.col1), b2Math.AddVV(A.col2, B.col2));\n      return C;\n   }\n   b2Math.MulMM = function (A, B) {\n      var C = b2Mat22.FromVV(b2Math.MulMV(A, B.col1), b2Math.MulMV(A, B.col2));\n      return C;\n   }\n   b2Math.MulTMM = function (A, B) {\n      var c1 = new b2Vec2(b2Math.Dot(A.col1, B.col1), b2Math.Dot(A.col2, B.col1));\n      var c2 = new b2Vec2(b2Math.Dot(A.col1, B.col2), b2Math.Dot(A.col2, B.col2));\n      var C = b2Mat22.FromVV(c1, c2);\n      return C;\n   }\n   b2Math.Abs = function (a) {\n      if (a === undefined) a = 0;\n      return a > 0.0 ? a : (-a);\n   }\n   b2Math.AbsV = function (a) {\n      var b = new b2Vec2(b2Math.Abs(a.x), b2Math.Abs(a.y));\n      return b;\n   }\n   b2Math.AbsM = function (A) {\n      var B = b2Mat22.FromVV(b2Math.AbsV(A.col1), b2Math.AbsV(A.col2));\n      return B;\n   }\n   b2Math.Min = function (a, b) {\n      if (a === undefined) a = 0;\n      if (b === undefined) b = 0;\n      return a < b ? a : b;\n   }\n   b2Math.MinV = function (a, b) {\n      var c = new b2Vec2(b2Math.Min(a.x, b.x), b2Math.Min(a.y, b.y));\n      return c;\n   }\n   b2Math.Max = function (a, b) {\n      if (a === undefined) a = 0;\n      if (b === undefined) b = 0;\n      return a > b ? a : b;\n   }\n   b2Math.MaxV = function (a, b) {\n      var c = new b2Vec2(b2Math.Max(a.x, b.x), b2Math.Max(a.y, b.y));\n      return c;\n   }\n   b2Math.Clamp = function (a, low, high) {\n      if (a === undefined) a = 0;\n      if (low === undefined) low = 0;\n      if (high === undefined) high = 0;\n      return a < low ? low : a > high ? high : a;\n   }\n   b2Math.ClampV = function (a, low, high) {\n      return b2Math.MaxV(low, b2Math.MinV(a, high));\n   }\n   b2Math.Swap = function (a, b) {\n      var tmp = a[0];\n      a[0] = b[0];\n      b[0] = tmp;\n   }\n   b2Math.Random = function () {\n      return Math.random() * 2 - 1;\n   }\n   b2Math.RandomRange = function (lo, hi) {\n      if (lo === undefined) lo = 0;\n      if (hi === undefined) hi = 0;\n      var r = Math.random();\n      r = (hi - lo) * r + lo;\n      return r;\n   }\n   b2Math.NextPowerOfTwo = function (x) {\n      if (x === undefined) x = 0;\n      x |= (x >> 1) & 0x7FFFFFFF;\n      x |= (x >> 2) & 0x3FFFFFFF;\n      x |= (x >> 4) & 0x0FFFFFFF;\n      x |= (x >> 8) & 0x00FFFFFF;\n      x |= (x >> 16) & 0x0000FFFF;\n      return x + 1;\n   }\n   b2Math.IsPowerOfTwo = function (x) {\n      if (x === undefined) x = 0;\n      var result = x > 0 && (x & (x - 1)) == 0;\n      return result;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Common.Math.b2Math.b2Vec2_zero = new b2Vec2(0.0, 0.0);\n      Box2D.Common.Math.b2Math.b2Mat22_identity = b2Mat22.FromVV(new b2Vec2(1.0, 0.0), new b2Vec2(0.0, 1.0));\n      Box2D.Common.Math.b2Math.b2Transform_identity = new b2Transform(b2Math.b2Vec2_zero, b2Math.b2Mat22_identity);\n   });\n   b2Sweep.b2Sweep = function () {\n      this.localCenter = new b2Vec2();\n      this.c0 = new b2Vec2;\n      this.c = new b2Vec2();\n   };\n   b2Sweep.prototype.Set = function (other) {\n      this.localCenter.SetV(other.localCenter);\n      this.c0.SetV(other.c0);\n      this.c.SetV(other.c);\n      this.a0 = other.a0;\n      this.a = other.a;\n      this.t0 = other.t0;\n   }\n   b2Sweep.prototype.Copy = function () {\n      var copy = new b2Sweep();\n      copy.localCenter.SetV(this.localCenter);\n      copy.c0.SetV(this.c0);\n      copy.c.SetV(this.c);\n      copy.a0 = this.a0;\n      copy.a = this.a;\n      copy.t0 = this.t0;\n      return copy;\n   }\n   b2Sweep.prototype.GetTransform = function (xf, alpha) {\n      if (alpha === undefined) alpha = 0;\n      xf.position.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;\n      xf.position.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;\n      var angle = (1.0 - alpha) * this.a0 + alpha * this.a;\n      xf.R.Set(angle);\n      var tMat = xf.R;\n      xf.position.x -= (tMat.col1.x * this.localCenter.x + tMat.col2.x * this.localCenter.y);\n      xf.position.y -= (tMat.col1.y * this.localCenter.x + tMat.col2.y * this.localCenter.y);\n   }\n   b2Sweep.prototype.Advance = function (t) {\n      if (t === undefined) t = 0;\n      if (this.t0 < t && 1.0 - this.t0 > Number.MIN_VALUE) {\n         var alpha = (t - this.t0) / (1.0 - this.t0);\n         this.c0.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;\n         this.c0.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;\n         this.a0 = (1.0 - alpha) * this.a0 + alpha * this.a;\n         this.t0 = t;\n      }\n   }\n   b2Transform.b2Transform = function () {\n      this.position = new b2Vec2;\n      this.R = new b2Mat22();\n   };\n   b2Transform.prototype.b2Transform = function (pos, r) {\n      if (pos === undefined) pos = null;\n      if (r === undefined) r = null;\n      if (pos) {\n         this.position.SetV(pos);\n         this.R.SetM(r);\n      }\n   }\n   b2Transform.prototype.Initialize = function (pos, r) {\n      this.position.SetV(pos);\n      this.R.SetM(r);\n   }\n   b2Transform.prototype.SetIdentity = function () {\n      this.position.SetZero();\n      this.R.SetIdentity();\n   }\n   b2Transform.prototype.Set = function (x) {\n      this.position.SetV(x.position);\n      this.R.SetM(x.R);\n   }\n   b2Transform.prototype.GetAngle = function () {\n      return Math.atan2(this.R.col1.y, this.R.col1.x);\n   }\n   b2Vec2.b2Vec2 = function () {};\n   b2Vec2.prototype.b2Vec2 = function (x_, y_) {\n      if (x_ === undefined) x_ = 0;\n      if (y_ === undefined) y_ = 0;\n      this.x = x_;\n      this.y = y_;\n   }\n   b2Vec2.prototype.SetZero = function () {\n      this.x = 0.0;\n      this.y = 0.0;\n   }\n   b2Vec2.prototype.Set = function (x_, y_) {\n      if (x_ === undefined) x_ = 0;\n      if (y_ === undefined) y_ = 0;\n      this.x = x_;\n      this.y = y_;\n   }\n   b2Vec2.prototype.SetV = function (v) {\n      this.x = v.x;\n      this.y = v.y;\n   }\n   b2Vec2.prototype.GetNegative = function () {\n      return new b2Vec2((-this.x), (-this.y));\n   }\n   b2Vec2.prototype.NegativeSelf = function () {\n      this.x = (-this.x);\n      this.y = (-this.y);\n   }\n   b2Vec2.Make = function (x_, y_) {\n      if (x_ === undefined) x_ = 0;\n      if (y_ === undefined) y_ = 0;\n      return new b2Vec2(x_, y_);\n   }\n   b2Vec2.prototype.Copy = function () {\n      return new b2Vec2(this.x, this.y);\n   }\n   b2Vec2.prototype.Add = function (v) {\n      this.x += v.x;\n      this.y += v.y;\n   }\n   b2Vec2.prototype.Subtract = function (v) {\n      this.x -= v.x;\n      this.y -= v.y;\n   }\n   b2Vec2.prototype.Multiply = function (a) {\n      if (a === undefined) a = 0;\n      this.x *= a;\n      this.y *= a;\n   }\n   b2Vec2.prototype.MulM = function (A) {\n      var tX = this.x;\n      this.x = A.col1.x * tX + A.col2.x * this.y;\n      this.y = A.col1.y * tX + A.col2.y * this.y;\n   }\n   b2Vec2.prototype.MulTM = function (A) {\n      var tX = b2Math.Dot(this, A.col1);\n      this.y = b2Math.Dot(this, A.col2);\n      this.x = tX;\n   }\n   b2Vec2.prototype.CrossVF = function (s) {\n      if (s === undefined) s = 0;\n      var tX = this.x;\n      this.x = s * this.y;\n      this.y = (-s * tX);\n   }\n   b2Vec2.prototype.CrossFV = function (s) {\n      if (s === undefined) s = 0;\n      var tX = this.x;\n      this.x = (-s * this.y);\n      this.y = s * tX;\n   }\n   b2Vec2.prototype.MinV = function (b) {\n      this.x = this.x < b.x ? this.x : b.x;\n      this.y = this.y < b.y ? this.y : b.y;\n   }\n   b2Vec2.prototype.MaxV = function (b) {\n      this.x = this.x > b.x ? this.x : b.x;\n      this.y = this.y > b.y ? this.y : b.y;\n   }\n   b2Vec2.prototype.Abs = function () {\n      if (this.x < 0) this.x = (-this.x);\n      if (this.y < 0) this.y = (-this.y);\n   }\n   b2Vec2.prototype.Length = function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n   }\n   b2Vec2.prototype.LengthSquared = function () {\n      return (this.x * this.x + this.y * this.y);\n   }\n   b2Vec2.prototype.Normalize = function () {\n      var length = Math.sqrt(this.x * this.x + this.y * this.y);\n      if (length < Number.MIN_VALUE) {\n         return 0.0;\n      }\n      var invLength = 1.0 / length;\n      this.x *= invLength;\n      this.y *= invLength;\n      return length;\n   }\n   b2Vec2.prototype.IsValid = function () {\n      return b2Math.IsValid(this.x) && b2Math.IsValid(this.y);\n   }\n   b2Vec3.b2Vec3 = function () {};\n   b2Vec3.prototype.b2Vec3 = function (x, y, z) {\n      if (x === undefined) x = 0;\n      if (y === undefined) y = 0;\n      if (z === undefined) z = 0;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n   }\n   b2Vec3.prototype.SetZero = function () {\n      this.x = this.y = this.z = 0.0;\n   }\n   b2Vec3.prototype.Set = function (x, y, z) {\n      if (x === undefined) x = 0;\n      if (y === undefined) y = 0;\n      if (z === undefined) z = 0;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n   }\n   b2Vec3.prototype.SetV = function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n   }\n   b2Vec3.prototype.GetNegative = function () {\n      return new b2Vec3((-this.x), (-this.y), (-this.z));\n   }\n   b2Vec3.prototype.NegativeSelf = function () {\n      this.x = (-this.x);\n      this.y = (-this.y);\n      this.z = (-this.z);\n   }\n   b2Vec3.prototype.Copy = function () {\n      return new b2Vec3(this.x, this.y, this.z);\n   }\n   b2Vec3.prototype.Add = function (v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n   }\n   b2Vec3.prototype.Subtract = function (v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n   }\n   b2Vec3.prototype.Multiply = function (a) {\n      if (a === undefined) a = 0;\n      this.x *= a;\n      this.y *= a;\n      this.z *= a;\n   }\n})();\n(function () {\n   var b2ControllerEdge = Box2D.Dynamics.Controllers.b2ControllerEdge,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2AABB = Box2D.Collision.b2AABB,\n      b2Bound = Box2D.Collision.b2Bound,\n      b2BoundValues = Box2D.Collision.b2BoundValues,\n      b2Collision = Box2D.Collision.b2Collision,\n      b2ContactID = Box2D.Collision.b2ContactID,\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\n      b2Distance = Box2D.Collision.b2Distance,\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\n      b2Manifold = Box2D.Collision.b2Manifold,\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\n      b2Point = Box2D.Collision.b2Point,\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\n      b2Segment = Box2D.Collision.b2Segment,\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\n      b2Simplex = Box2D.Collision.b2Simplex,\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\n      b2TOIInput = Box2D.Collision.b2TOIInput,\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\n      ClipVertex = Box2D.Collision.ClipVertex,\n      Features = Box2D.Collision.Features,\n      IBroadPhase = Box2D.Collision.IBroadPhase,\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\n      b2Body = Box2D.Dynamics.b2Body,\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\n      b2FilterData = Box2D.Dynamics.b2FilterData,\n      b2Fixture = Box2D.Dynamics.b2Fixture,\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      b2Island = Box2D.Dynamics.b2Island,\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\n      b2World = Box2D.Dynamics.b2World,\n      b2CircleContact = Box2D.Dynamics.Contacts.b2CircleContact,\n      b2Contact = Box2D.Dynamics.Contacts.b2Contact,\n      b2ContactConstraint = Box2D.Dynamics.Contacts.b2ContactConstraint,\n      b2ContactConstraintPoint = Box2D.Dynamics.Contacts.b2ContactConstraintPoint,\n      b2ContactEdge = Box2D.Dynamics.Contacts.b2ContactEdge,\n      b2ContactFactory = Box2D.Dynamics.Contacts.b2ContactFactory,\n      b2ContactRegister = Box2D.Dynamics.Contacts.b2ContactRegister,\n      b2ContactResult = Box2D.Dynamics.Contacts.b2ContactResult,\n      b2ContactSolver = Box2D.Dynamics.Contacts.b2ContactSolver,\n      b2EdgeAndCircleContact = Box2D.Dynamics.Contacts.b2EdgeAndCircleContact,\n      b2NullContact = Box2D.Dynamics.Contacts.b2NullContact,\n      b2PolyAndCircleContact = Box2D.Dynamics.Contacts.b2PolyAndCircleContact,\n      b2PolyAndEdgeContact = Box2D.Dynamics.Contacts.b2PolyAndEdgeContact,\n      b2PolygonContact = Box2D.Dynamics.Contacts.b2PolygonContact,\n      b2PositionSolverManifold = Box2D.Dynamics.Contacts.b2PositionSolverManifold,\n      b2Controller = Box2D.Dynamics.Controllers.b2Controller,\n      b2DistanceJoint = Box2D.Dynamics.Joints.b2DistanceJoint,\n      b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef,\n      b2FrictionJoint = Box2D.Dynamics.Joints.b2FrictionJoint,\n      b2FrictionJointDef = Box2D.Dynamics.Joints.b2FrictionJointDef,\n      b2GearJoint = Box2D.Dynamics.Joints.b2GearJoint,\n      b2GearJointDef = Box2D.Dynamics.Joints.b2GearJointDef,\n      b2Jacobian = Box2D.Dynamics.Joints.b2Jacobian,\n      b2Joint = Box2D.Dynamics.Joints.b2Joint,\n      b2JointDef = Box2D.Dynamics.Joints.b2JointDef,\n      b2JointEdge = Box2D.Dynamics.Joints.b2JointEdge,\n      b2LineJoint = Box2D.Dynamics.Joints.b2LineJoint,\n      b2LineJointDef = Box2D.Dynamics.Joints.b2LineJointDef,\n      b2MouseJoint = Box2D.Dynamics.Joints.b2MouseJoint,\n      b2MouseJointDef = Box2D.Dynamics.Joints.b2MouseJointDef,\n      b2PrismaticJoint = Box2D.Dynamics.Joints.b2PrismaticJoint,\n      b2PrismaticJointDef = Box2D.Dynamics.Joints.b2PrismaticJointDef,\n      b2PulleyJoint = Box2D.Dynamics.Joints.b2PulleyJoint,\n      b2PulleyJointDef = Box2D.Dynamics.Joints.b2PulleyJointDef,\n      b2RevoluteJoint = Box2D.Dynamics.Joints.b2RevoluteJoint,\n      b2RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef,\n      b2WeldJoint = Box2D.Dynamics.Joints.b2WeldJoint,\n      b2WeldJointDef = Box2D.Dynamics.Joints.b2WeldJointDef;\n\n   b2Body.b2Body = function () {\n      this.m_xf = new b2Transform();\n      this.m_sweep = new b2Sweep();\n      this.m_linearVelocity = new b2Vec2();\n      this.m_force = new b2Vec2();\n   };\n   b2Body.prototype.connectEdges = function (s1, s2, angle1) {\n      if (angle1 === undefined) angle1 = 0;\n      var angle2 = Math.atan2(s2.GetDirectionVector().y, s2.GetDirectionVector().x);\n      var coreOffset = Math.tan((angle2 - angle1) * 0.5);\n      var core = b2Math.MulFV(coreOffset, s2.GetDirectionVector());\n      core = b2Math.SubtractVV(core, s2.GetNormalVector());\n      core = b2Math.MulFV(b2Settings.b2_toiSlop, core);\n      core = b2Math.AddVV(core, s2.GetVertex1());\n      var cornerDir = b2Math.AddVV(s1.GetDirectionVector(), s2.GetDirectionVector());\n      cornerDir.Normalize();\n      var convex = b2Math.Dot(s1.GetDirectionVector(), s2.GetNormalVector()) > 0.0;\n      s1.SetNextEdge(s2, core, cornerDir, convex);\n      s2.SetPrevEdge(s1, core, cornerDir, convex);\n      return angle2;\n   }\n   b2Body.prototype.CreateFixture = function (def) {\n      if (this.m_world.IsLocked() == true) {\n         return null;\n      }\n      var fixture = new b2Fixture();\n      fixture.Create(this, this.m_xf, def);\n      if (this.m_flags & b2Body.e_activeFlag) {\n         var broadPhase = this.m_world.m_contactManager.m_broadPhase;\n         fixture.CreateProxy(broadPhase, this.m_xf);\n      }\n      fixture.m_next = this.m_fixtureList;\n      this.m_fixtureList = fixture;\n      ++this.m_fixtureCount;\n      fixture.m_body = this;\n      if (fixture.m_density > 0.0) {\n         this.ResetMassData();\n      }\n      this.m_world.m_flags |= b2World.e_newFixture;\n      return fixture;\n   }\n   b2Body.prototype.CreateFixture2 = function (shape, density) {\n      if (density === undefined) density = 0.0;\n      var def = new b2FixtureDef();\n      def.shape = shape;\n      def.density = density;\n      return this.CreateFixture(def);\n   }\n   b2Body.prototype.DestroyFixture = function (fixture) {\n      if (this.m_world.IsLocked() == true) {\n         return;\n      }\n      var node = this.m_fixtureList;\n      var ppF = null;\n      var found = false;\n      while (node != null) {\n         if (node == fixture) {\n            if (ppF) ppF.m_next = fixture.m_next;\n            else this.m_fixtureList = fixture.m_next;\n            found = true;\n            break;\n         }\n         ppF = node;\n         node = node.m_next;\n      }\n      var edge = this.m_contactList;\n      while (edge) {\n         var c = edge.contact;\n         edge = edge.next;\n         var fixtureA = c.GetFixtureA();\n         var fixtureB = c.GetFixtureB();\n         if (fixture == fixtureA || fixture == fixtureB) {\n            this.m_world.m_contactManager.Destroy(c);\n         }\n      }\n      if (this.m_flags & b2Body.e_activeFlag) {\n         var broadPhase = this.m_world.m_contactManager.m_broadPhase;\n         fixture.DestroyProxy(broadPhase);\n      }\n      else {}\n      fixture.Destroy();\n      fixture.m_body = null;\n      fixture.m_next = null;\n      --this.m_fixtureCount;\n      this.ResetMassData();\n   }\n   b2Body.prototype.SetPositionAndAngle = function (position, angle) {\n      if (angle === undefined) angle = 0;\n      var f;\n      if (this.m_world.IsLocked() == true) {\n         return;\n      }\n      this.m_xf.R.Set(angle);\n      this.m_xf.position.SetV(position);\n      var tMat = this.m_xf.R;\n      var tVec = this.m_sweep.localCenter;\n      this.m_sweep.c.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      this.m_sweep.c.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      this.m_sweep.c.x += this.m_xf.position.x;\n      this.m_sweep.c.y += this.m_xf.position.y;\n      this.m_sweep.c0.SetV(this.m_sweep.c);\n      this.m_sweep.a0 = this.m_sweep.a = angle;\n      var broadPhase = this.m_world.m_contactManager.m_broadPhase;\n      for (f = this.m_fixtureList;\n      f; f = f.m_next) {\n         f.Synchronize(broadPhase, this.m_xf, this.m_xf);\n      }\n      this.m_world.m_contactManager.FindNewContacts();\n   }\n   b2Body.prototype.SetTransform = function (xf) {\n      this.SetPositionAndAngle(xf.position, xf.GetAngle());\n   }\n   b2Body.prototype.GetTransform = function () {\n      return this.m_xf;\n   }\n   b2Body.prototype.GetPosition = function () {\n      return this.m_xf.position;\n   }\n   b2Body.prototype.SetPosition = function (position) {\n      this.SetPositionAndAngle(position, this.GetAngle());\n   }\n   b2Body.prototype.GetAngle = function () {\n      return this.m_sweep.a;\n   }\n   b2Body.prototype.SetAngle = function (angle) {\n      if (angle === undefined) angle = 0;\n      this.SetPositionAndAngle(this.GetPosition(), angle);\n   }\n   b2Body.prototype.GetWorldCenter = function () {\n      return this.m_sweep.c;\n   }\n   b2Body.prototype.GetLocalCenter = function () {\n      return this.m_sweep.localCenter;\n   }\n   b2Body.prototype.SetLinearVelocity = function (v) {\n      if (this.m_type == b2Body.b2_staticBody) {\n         return;\n      }\n      this.m_linearVelocity.SetV(v);\n   }\n   b2Body.prototype.GetLinearVelocity = function () {\n      return this.m_linearVelocity;\n   }\n   b2Body.prototype.SetAngularVelocity = function (omega) {\n      if (omega === undefined) omega = 0;\n      if (this.m_type == b2Body.b2_staticBody) {\n         return;\n      }\n      this.m_angularVelocity = omega;\n   }\n   b2Body.prototype.GetAngularVelocity = function () {\n      return this.m_angularVelocity;\n   }\n   b2Body.prototype.GetDefinition = function () {\n      var bd = new b2BodyDef();\n      bd.type = this.GetType();\n      bd.allowSleep = (this.m_flags & b2Body.e_allowSleepFlag) == b2Body.e_allowSleepFlag;\n      bd.angle = this.GetAngle();\n      bd.angularDamping = this.m_angularDamping;\n      bd.angularVelocity = this.m_angularVelocity;\n      bd.fixedRotation = (this.m_flags & b2Body.e_fixedRotationFlag) == b2Body.e_fixedRotationFlag;\n      bd.bullet = (this.m_flags & b2Body.e_bulletFlag) == b2Body.e_bulletFlag;\n      bd.awake = (this.m_flags & b2Body.e_awakeFlag) == b2Body.e_awakeFlag;\n      bd.linearDamping = this.m_linearDamping;\n      bd.linearVelocity.SetV(this.GetLinearVelocity());\n      bd.position = this.GetPosition();\n      bd.userData = this.GetUserData();\n      return bd;\n   }\n   b2Body.prototype.ApplyForce = function (force, point) {\n      if (this.m_type != b2Body.b2_dynamicBody) {\n         return;\n      }\n      if (this.IsAwake() == false) {\n         this.SetAwake(true);\n      }\n      this.m_force.x += force.x;\n      this.m_force.y += force.y;\n      this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\n   }\n   b2Body.prototype.ApplyTorque = function (torque) {\n      if (torque === undefined) torque = 0;\n      if (this.m_type != b2Body.b2_dynamicBody) {\n         return;\n      }\n      if (this.IsAwake() == false) {\n         this.SetAwake(true);\n      }\n      this.m_torque += torque;\n   }\n   b2Body.prototype.ApplyImpulse = function (impulse, point) {\n      if (this.m_type != b2Body.b2_dynamicBody) {\n         return;\n      }\n      if (this.IsAwake() == false) {\n         this.SetAwake(true);\n      }\n      this.m_linearVelocity.x += this.m_invMass * impulse.x;\n      this.m_linearVelocity.y += this.m_invMass * impulse.y;\n      this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\n   }\n   b2Body.prototype.Split = function (callback) {\n      var linearVelocity = this.GetLinearVelocity().Copy();\n      var angularVelocity = this.GetAngularVelocity();\n      var center = this.GetWorldCenter();\n      var body1 = this;\n      var body2 = this.m_world.CreateBody(this.GetDefinition());\n      var prev;\n      for (var f = body1.m_fixtureList; f;) {\n         if (callback(f)) {\n            var next = f.m_next;\n            if (prev) {\n               prev.m_next = next;\n            }\n            else {\n               body1.m_fixtureList = next;\n            }\n            body1.m_fixtureCount--;\n            f.m_next = body2.m_fixtureList;\n            body2.m_fixtureList = f;\n            body2.m_fixtureCount++;\n            f.m_body = body2;\n            f = next;\n         }\n         else {\n            prev = f;\n            f = f.m_next;\n         }\n      }\n      body1.ResetMassData();\n      body2.ResetMassData();\n      var center1 = body1.GetWorldCenter();\n      var center2 = body2.GetWorldCenter();\n      var velocity1 = b2Math.AddVV(linearVelocity, b2Math.CrossFV(angularVelocity, b2Math.SubtractVV(center1, center)));\n      var velocity2 = b2Math.AddVV(linearVelocity, b2Math.CrossFV(angularVelocity, b2Math.SubtractVV(center2, center)));\n      body1.SetLinearVelocity(velocity1);\n      body2.SetLinearVelocity(velocity2);\n      body1.SetAngularVelocity(angularVelocity);\n      body2.SetAngularVelocity(angularVelocity);\n      body1.SynchronizeFixtures();\n      body2.SynchronizeFixtures();\n      return body2;\n   }\n   b2Body.prototype.Merge = function (other) {\n      var f;\n      for (f = other.m_fixtureList;\n      f;) {\n         var next = f.m_next;\n         other.m_fixtureCount--;\n         f.m_next = this.m_fixtureList;\n         this.m_fixtureList = f;\n         this.m_fixtureCount++;\n         f.m_body = body2;\n         f = next;\n      }\n      body1.m_fixtureCount = 0;\n      var body1 = this;\n      var body2 = other;\n      var center1 = body1.GetWorldCenter();\n      var center2 = body2.GetWorldCenter();\n      var velocity1 = body1.GetLinearVelocity().Copy();\n      var velocity2 = body2.GetLinearVelocity().Copy();\n      var angular1 = body1.GetAngularVelocity();\n      var angular = body2.GetAngularVelocity();\n      body1.ResetMassData();\n      this.SynchronizeFixtures();\n   }\n   b2Body.prototype.GetMass = function () {\n      return this.m_mass;\n   }\n   b2Body.prototype.GetInertia = function () {\n      return this.m_I;\n   }\n   b2Body.prototype.GetMassData = function (data) {\n      data.mass = this.m_mass;\n      data.I = this.m_I;\n      data.center.SetV(this.m_sweep.localCenter);\n   }\n   b2Body.prototype.SetMassData = function (massData) {\n      b2Settings.b2Assert(this.m_world.IsLocked() == false);\n      if (this.m_world.IsLocked() == true) {\n         return;\n      }\n      if (this.m_type != b2Body.b2_dynamicBody) {\n         return;\n      }\n      this.m_invMass = 0.0;\n      this.m_I = 0.0;\n      this.m_invI = 0.0;\n      this.m_mass = massData.mass;\n      if (this.m_mass <= 0.0) {\n         this.m_mass = 1.0;\n      }\n      this.m_invMass = 1.0 / this.m_mass;\n      if (massData.I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag) == 0) {\n         this.m_I = massData.I - this.m_mass * (massData.center.x * massData.center.x + massData.center.y * massData.center.y);\n         this.m_invI = 1.0 / this.m_I;\n      }\n      var oldCenter = this.m_sweep.c.Copy();\n      this.m_sweep.localCenter.SetV(massData.center);\n      this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf, this.m_sweep.localCenter));\n      this.m_sweep.c.SetV(this.m_sweep.c0);\n      this.m_linearVelocity.x += this.m_angularVelocity * (-(this.m_sweep.c.y - oldCenter.y));\n      this.m_linearVelocity.y += this.m_angularVelocity * (+(this.m_sweep.c.x - oldCenter.x));\n   }\n   b2Body.prototype.ResetMassData = function () {\n      this.m_mass = 0.0;\n      this.m_invMass = 0.0;\n      this.m_I = 0.0;\n      this.m_invI = 0.0;\n      this.m_sweep.localCenter.SetZero();\n      if (this.m_type == b2Body.b2_staticBody || this.m_type == b2Body.b2_kinematicBody) {\n         return;\n      }\n      var center = b2Vec2.Make(0, 0);\n      for (var f = this.m_fixtureList; f; f = f.m_next) {\n         if (f.m_density == 0.0) {\n            continue;\n         }\n         var massData = f.GetMassData();\n         this.m_mass += massData.mass;\n         center.x += massData.center.x * massData.mass;\n         center.y += massData.center.y * massData.mass;\n         this.m_I += massData.I;\n      }\n      if (this.m_mass > 0.0) {\n         this.m_invMass = 1.0 / this.m_mass;\n         center.x *= this.m_invMass;\n         center.y *= this.m_invMass;\n      }\n      else {\n         this.m_mass = 1.0;\n         this.m_invMass = 1.0;\n      }\n      if (this.m_I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag) == 0) {\n         this.m_I -= this.m_mass * (center.x * center.x + center.y * center.y);\n         this.m_I *= this.m_inertiaScale;\n         b2Settings.b2Assert(this.m_I > 0);\n         this.m_invI = 1.0 / this.m_I;\n      }\n      else {\n         this.m_I = 0.0;\n         this.m_invI = 0.0;\n      }\n      var oldCenter = this.m_sweep.c.Copy();\n      this.m_sweep.localCenter.SetV(center);\n      this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf, this.m_sweep.localCenter));\n      this.m_sweep.c.SetV(this.m_sweep.c0);\n      this.m_linearVelocity.x += this.m_angularVelocity * (-(this.m_sweep.c.y - oldCenter.y));\n      this.m_linearVelocity.y += this.m_angularVelocity * (+(this.m_sweep.c.x - oldCenter.x));\n   }\n   b2Body.prototype.GetWorldPoint = function (localPoint) {\n      var A = this.m_xf.R;\n      var u = new b2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, A.col1.y * localPoint.x + A.col2.y * localPoint.y);\n      u.x += this.m_xf.position.x;\n      u.y += this.m_xf.position.y;\n      return u;\n   }\n   b2Body.prototype.GetWorldVector = function (localVector) {\n      return b2Math.MulMV(this.m_xf.R, localVector);\n   }\n   b2Body.prototype.GetLocalPoint = function (worldPoint) {\n      return b2Math.MulXT(this.m_xf, worldPoint);\n   }\n   b2Body.prototype.GetLocalVector = function (worldVector) {\n      return b2Math.MulTMV(this.m_xf.R, worldVector);\n   }\n   b2Body.prototype.GetLinearVelocityFromWorldPoint = function (worldPoint) {\n      return new b2Vec2(this.m_linearVelocity.x - this.m_angularVelocity * (worldPoint.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (worldPoint.x - this.m_sweep.c.x));\n   }\n   b2Body.prototype.GetLinearVelocityFromLocalPoint = function (localPoint) {\n      var A = this.m_xf.R;\n      var worldPoint = new b2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, A.col1.y * localPoint.x + A.col2.y * localPoint.y);\n      worldPoint.x += this.m_xf.position.x;\n      worldPoint.y += this.m_xf.position.y;\n      return new b2Vec2(this.m_linearVelocity.x - this.m_angularVelocity * (worldPoint.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (worldPoint.x - this.m_sweep.c.x));\n   }\n   b2Body.prototype.GetLinearDamping = function () {\n      return this.m_linearDamping;\n   }\n   b2Body.prototype.SetLinearDamping = function (linearDamping) {\n      if (linearDamping === undefined) linearDamping = 0;\n      this.m_linearDamping = linearDamping;\n   }\n   b2Body.prototype.GetAngularDamping = function () {\n      return this.m_angularDamping;\n   }\n   b2Body.prototype.SetAngularDamping = function (angularDamping) {\n      if (angularDamping === undefined) angularDamping = 0;\n      this.m_angularDamping = angularDamping;\n   }\n   b2Body.prototype.SetType = function (type) {\n      if (type === undefined) type = 0;\n      if (this.m_type == type) {\n         return;\n      }\n      this.m_type = type;\n      this.ResetMassData();\n      if (this.m_type == b2Body.b2_staticBody) {\n         this.m_linearVelocity.SetZero();\n         this.m_angularVelocity = 0.0;\n      }\n      this.SetAwake(true);\n      this.m_force.SetZero();\n      this.m_torque = 0.0;\n      for (var ce = this.m_contactList; ce; ce = ce.next) {\n         ce.contact.FlagForFiltering();\n      }\n   }\n   b2Body.prototype.GetType = function () {\n      return this.m_type;\n   }\n   b2Body.prototype.SetBullet = function (flag) {\n      if (flag) {\n         this.m_flags |= b2Body.e_bulletFlag;\n      }\n      else {\n         this.m_flags &= ~b2Body.e_bulletFlag;\n      }\n   }\n   b2Body.prototype.IsBullet = function () {\n      return (this.m_flags & b2Body.e_bulletFlag) == b2Body.e_bulletFlag;\n   }\n   b2Body.prototype.SetSleepingAllowed = function (flag) {\n      if (flag) {\n         this.m_flags |= b2Body.e_allowSleepFlag;\n      }\n      else {\n         this.m_flags &= ~b2Body.e_allowSleepFlag;\n         this.SetAwake(true);\n      }\n   }\n   b2Body.prototype.SetAwake = function (flag) {\n      if (flag) {\n         this.m_flags |= b2Body.e_awakeFlag;\n         this.m_sleepTime = 0.0;\n      }\n      else {\n         this.m_flags &= ~b2Body.e_awakeFlag;\n         this.m_sleepTime = 0.0;\n         this.m_linearVelocity.SetZero();\n         this.m_angularVelocity = 0.0;\n         this.m_force.SetZero();\n         this.m_torque = 0.0;\n      }\n   }\n   b2Body.prototype.IsAwake = function () {\n      return (this.m_flags & b2Body.e_awakeFlag) == b2Body.e_awakeFlag;\n   }\n   b2Body.prototype.SetFixedRotation = function (fixed) {\n      if (fixed) {\n         this.m_flags |= b2Body.e_fixedRotationFlag;\n      }\n      else {\n         this.m_flags &= ~b2Body.e_fixedRotationFlag;\n      }\n      this.ResetMassData();\n   }\n   b2Body.prototype.IsFixedRotation = function () {\n      return (this.m_flags & b2Body.e_fixedRotationFlag) == b2Body.e_fixedRotationFlag;\n   }\n   b2Body.prototype.SetActive = function (flag) {\n      if (flag == this.IsActive()) {\n         return;\n      }\n      var broadPhase;\n      var f;\n      if (flag) {\n         this.m_flags |= b2Body.e_activeFlag;\n         broadPhase = this.m_world.m_contactManager.m_broadPhase;\n         for (f = this.m_fixtureList;\n         f; f = f.m_next) {\n            f.CreateProxy(broadPhase, this.m_xf);\n         }\n      }\n      else {\n         this.m_flags &= ~b2Body.e_activeFlag;\n         broadPhase = this.m_world.m_contactManager.m_broadPhase;\n         for (f = this.m_fixtureList;\n         f; f = f.m_next) {\n            f.DestroyProxy(broadPhase);\n         }\n         var ce = this.m_contactList;\n         while (ce) {\n            var ce0 = ce;\n            ce = ce.next;\n            this.m_world.m_contactManager.Destroy(ce0.contact);\n         }\n         this.m_contactList = null;\n      }\n   }\n   b2Body.prototype.IsActive = function () {\n      return (this.m_flags & b2Body.e_activeFlag) == b2Body.e_activeFlag;\n   }\n   b2Body.prototype.IsSleepingAllowed = function () {\n      return (this.m_flags & b2Body.e_allowSleepFlag) == b2Body.e_allowSleepFlag;\n   }\n   b2Body.prototype.GetFixtureList = function () {\n      return this.m_fixtureList;\n   }\n   b2Body.prototype.GetJointList = function () {\n      return this.m_jointList;\n   }\n   b2Body.prototype.GetControllerList = function () {\n      return this.m_controllerList;\n   }\n   b2Body.prototype.GetContactList = function () {\n      return this.m_contactList;\n   }\n   b2Body.prototype.GetNext = function () {\n      return this.m_next;\n   }\n   b2Body.prototype.GetUserData = function () {\n      return this.m_userData;\n   }\n   b2Body.prototype.SetUserData = function (data) {\n      this.m_userData = data;\n   }\n   b2Body.prototype.GetWorld = function () {\n      return this.m_world;\n   }\n   b2Body.prototype.b2Body = function (bd, world) {\n      this.m_flags = 0;\n      if (bd.bullet) {\n         this.m_flags |= b2Body.e_bulletFlag;\n      }\n      if (bd.fixedRotation) {\n         this.m_flags |= b2Body.e_fixedRotationFlag;\n      }\n      if (bd.allowSleep) {\n         this.m_flags |= b2Body.e_allowSleepFlag;\n      }\n      if (bd.awake) {\n         this.m_flags |= b2Body.e_awakeFlag;\n      }\n      if (bd.active) {\n         this.m_flags |= b2Body.e_activeFlag;\n      }\n      this.m_world = world;\n      this.m_xf.position.SetV(bd.position);\n      this.m_xf.R.Set(bd.angle);\n      this.m_sweep.localCenter.SetZero();\n      this.m_sweep.t0 = 1.0;\n      this.m_sweep.a0 = this.m_sweep.a = bd.angle;\n      var tMat = this.m_xf.R;\n      var tVec = this.m_sweep.localCenter;\n      this.m_sweep.c.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      this.m_sweep.c.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      this.m_sweep.c.x += this.m_xf.position.x;\n      this.m_sweep.c.y += this.m_xf.position.y;\n      this.m_sweep.c0.SetV(this.m_sweep.c);\n      this.m_jointList = null;\n      this.m_controllerList = null;\n      this.m_contactList = null;\n      this.m_controllerCount = 0;\n      this.m_prev = null;\n      this.m_next = null;\n      this.m_linearVelocity.SetV(bd.linearVelocity);\n      this.m_angularVelocity = bd.angularVelocity;\n      this.m_linearDamping = bd.linearDamping;\n      this.m_angularDamping = bd.angularDamping;\n      this.m_force.Set(0.0, 0.0);\n      this.m_torque = 0.0;\n      this.m_sleepTime = 0.0;\n      this.m_type = bd.type;\n      if (this.m_type == b2Body.b2_dynamicBody) {\n         this.m_mass = 1.0;\n         this.m_invMass = 1.0;\n      }\n      else {\n         this.m_mass = 0.0;\n         this.m_invMass = 0.0;\n      }\n      this.m_I = 0.0;\n      this.m_invI = 0.0;\n      this.m_inertiaScale = bd.inertiaScale;\n      this.m_userData = bd.userData;\n      this.m_fixtureList = null;\n      this.m_fixtureCount = 0;\n   }\n   b2Body.prototype.SynchronizeFixtures = function () {\n      var xf1 = b2Body.s_xf1;\n      xf1.R.Set(this.m_sweep.a0);\n      var tMat = xf1.R;\n      var tVec = this.m_sweep.localCenter;\n      xf1.position.x = this.m_sweep.c0.x - (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      xf1.position.y = this.m_sweep.c0.y - (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n      var f;\n      var broadPhase = this.m_world.m_contactManager.m_broadPhase;\n      for (f = this.m_fixtureList;\n      f; f = f.m_next) {\n         f.Synchronize(broadPhase, xf1, this.m_xf);\n      }\n   }\n   b2Body.prototype.SynchronizeTransform = function () {\n      this.m_xf.R.Set(this.m_sweep.a);\n      var tMat = this.m_xf.R;\n      var tVec = this.m_sweep.localCenter;\n      this.m_xf.position.x = this.m_sweep.c.x - (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n      this.m_xf.position.y = this.m_sweep.c.y - (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n   }\n   b2Body.prototype.ShouldCollide = function (other) {\n      if (this.m_type != b2Body.b2_dynamicBody && other.m_type != b2Body.b2_dynamicBody) {\n         return false;\n      }\n      for (var jn = this.m_jointList; jn; jn = jn.next) {\n         if (jn.other == other) if (jn.joint.m_collideConnected == false) {\n            return false;\n         }\n      }\n      return true;\n   }\n   b2Body.prototype.Advance = function (t) {\n      if (t === undefined) t = 0;\n      this.m_sweep.Advance(t);\n      this.m_sweep.c.SetV(this.m_sweep.c0);\n      this.m_sweep.a = this.m_sweep.a0;\n      this.SynchronizeTransform();\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2Body.s_xf1 = new b2Transform();\n      Box2D.Dynamics.b2Body.e_islandFlag = 0x0001;\n      Box2D.Dynamics.b2Body.e_awakeFlag = 0x0002;\n      Box2D.Dynamics.b2Body.e_allowSleepFlag = 0x0004;\n      Box2D.Dynamics.b2Body.e_bulletFlag = 0x0008;\n      Box2D.Dynamics.b2Body.e_fixedRotationFlag = 0x0010;\n      Box2D.Dynamics.b2Body.e_activeFlag = 0x0020;\n      Box2D.Dynamics.b2Body.b2_staticBody = 0;\n      Box2D.Dynamics.b2Body.b2_kinematicBody = 1;\n      Box2D.Dynamics.b2Body.b2_dynamicBody = 2;\n   });\n   b2BodyDef.b2BodyDef = function () {\n      this.position = new b2Vec2();\n      this.linearVelocity = new b2Vec2();\n   };\n   b2BodyDef.prototype.b2BodyDef = function () {\n      this.userData = null;\n      this.position.Set(0.0, 0.0);\n      this.angle = 0.0;\n      this.linearVelocity.Set(0, 0);\n      this.angularVelocity = 0.0;\n      this.linearDamping = 0.0;\n      this.angularDamping = 0.0;\n      this.allowSleep = true;\n      this.awake = true;\n      this.fixedRotation = false;\n      this.bullet = false;\n      this.type = b2Body.b2_staticBody;\n      this.active = true;\n      this.inertiaScale = 1.0;\n   }\n   b2ContactFilter.b2ContactFilter = function () {};\n   b2ContactFilter.prototype.ShouldCollide = function (fixtureA, fixtureB) {\n      var filter1 = fixtureA.GetFilterData();\n      var filter2 = fixtureB.GetFilterData();\n      if (filter1.groupIndex == filter2.groupIndex && filter1.groupIndex != 0) {\n         return filter1.groupIndex > 0;\n      }\n      var collide = (filter1.maskBits & filter2.categoryBits) != 0 && (filter1.categoryBits & filter2.maskBits) != 0;\n      return collide;\n   }\n   b2ContactFilter.prototype.RayCollide = function (userData, fixture) {\n      if (!userData) return true;\n      return this.ShouldCollide((userData instanceof b2Fixture ? userData : null), fixture);\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2ContactFilter.b2_defaultFilter = new b2ContactFilter();\n   });\n   b2ContactImpulse.b2ContactImpulse = function () {\n      this.normalImpulses = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\n      this.tangentImpulses = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\n   };\n   b2ContactListener.b2ContactListener = function () {};\n   b2ContactListener.prototype.BeginContact = function (contact) {}\n   b2ContactListener.prototype.EndContact = function (contact) {}\n   b2ContactListener.prototype.PreSolve = function (contact, oldManifold) {}\n   b2ContactListener.prototype.PostSolve = function (contact, impulse) {}\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2ContactListener.b2_defaultListener = new b2ContactListener();\n   });\n   b2ContactManager.b2ContactManager = function () {};\n   b2ContactManager.prototype.b2ContactManager = function () {\n      this.m_world = null;\n      this.m_contactCount = 0;\n      this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\n      this.m_contactListener = b2ContactListener.b2_defaultListener;\n      this.m_contactFactory = new b2ContactFactory(this.m_allocator);\n      this.m_broadPhase = new b2DynamicTreeBroadPhase();\n   }\n   b2ContactManager.prototype.AddPair = function (proxyUserDataA, proxyUserDataB) {\n      var fixtureA = (proxyUserDataA instanceof b2Fixture ? proxyUserDataA : null);\n      var fixtureB = (proxyUserDataB instanceof b2Fixture ? proxyUserDataB : null);\n      var bodyA = fixtureA.GetBody();\n      var bodyB = fixtureB.GetBody();\n      if (bodyA == bodyB) return;\n      var edge = bodyB.GetContactList();\n      while (edge) {\n         if (edge.other == bodyA) {\n            var fA = edge.contact.GetFixtureA();\n            var fB = edge.contact.GetFixtureB();\n            if (fA == fixtureA && fB == fixtureB) return;\n            if (fA == fixtureB && fB == fixtureA) return;\n         }\n         edge = edge.next;\n      }\n      if (bodyB.ShouldCollide(bodyA) == false) {\n         return;\n      }\n      if (this.m_contactFilter.ShouldCollide(fixtureA, fixtureB) == false) {\n         return;\n      }\n      var c = this.m_contactFactory.Create(fixtureA, fixtureB);\n      fixtureA = c.GetFixtureA();\n      fixtureB = c.GetFixtureB();\n      bodyA = fixtureA.m_body;\n      bodyB = fixtureB.m_body;\n      c.m_prev = null;\n      c.m_next = this.m_world.m_contactList;\n      if (this.m_world.m_contactList != null) {\n         this.m_world.m_contactList.m_prev = c;\n      }\n      this.m_world.m_contactList = c;\n      c.m_nodeA.contact = c;\n      c.m_nodeA.other = bodyB;\n      c.m_nodeA.prev = null;\n      c.m_nodeA.next = bodyA.m_contactList;\n      if (bodyA.m_contactList != null) {\n         bodyA.m_contactList.prev = c.m_nodeA;\n      }\n      bodyA.m_contactList = c.m_nodeA;\n      c.m_nodeB.contact = c;\n      c.m_nodeB.other = bodyA;\n      c.m_nodeB.prev = null;\n      c.m_nodeB.next = bodyB.m_contactList;\n      if (bodyB.m_contactList != null) {\n         bodyB.m_contactList.prev = c.m_nodeB;\n      }\n      bodyB.m_contactList = c.m_nodeB;\n      ++this.m_world.m_contactCount;\n      return;\n   }\n   b2ContactManager.prototype.FindNewContacts = function () {\n      this.m_broadPhase.UpdatePairs(Box2D.generateCallback(this, this.AddPair));\n   }\n   b2ContactManager.prototype.Destroy = function (c) {\n      var fixtureA = c.GetFixtureA();\n      var fixtureB = c.GetFixtureB();\n      var bodyA = fixtureA.GetBody();\n      var bodyB = fixtureB.GetBody();\n      if (c.IsTouching()) {\n         this.m_contactListener.EndContact(c);\n      }\n      if (c.m_prev) {\n         c.m_prev.m_next = c.m_next;\n      }\n      if (c.m_next) {\n         c.m_next.m_prev = c.m_prev;\n      }\n      if (c == this.m_world.m_contactList) {\n         this.m_world.m_contactList = c.m_next;\n      }\n      if (c.m_nodeA.prev) {\n         c.m_nodeA.prev.next = c.m_nodeA.next;\n      }\n      if (c.m_nodeA.next) {\n         c.m_nodeA.next.prev = c.m_nodeA.prev;\n      }\n      if (c.m_nodeA == bodyA.m_contactList) {\n         bodyA.m_contactList = c.m_nodeA.next;\n      }\n      if (c.m_nodeB.prev) {\n         c.m_nodeB.prev.next = c.m_nodeB.next;\n      }\n      if (c.m_nodeB.next) {\n         c.m_nodeB.next.prev = c.m_nodeB.prev;\n      }\n      if (c.m_nodeB == bodyB.m_contactList) {\n         bodyB.m_contactList = c.m_nodeB.next;\n      }\n      this.m_contactFactory.Destroy(c);\n      --this.m_contactCount;\n   }\n   b2ContactManager.prototype.Collide = function () {\n      var c = this.m_world.m_contactList;\n      while (c) {\n         var fixtureA = c.GetFixtureA();\n         var fixtureB = c.GetFixtureB();\n         var bodyA = fixtureA.GetBody();\n         var bodyB = fixtureB.GetBody();\n         if (bodyA.IsAwake() == false && bodyB.IsAwake() == false) {\n            c = c.GetNext();\n            continue;\n         }\n         if (c.m_flags & b2Contact.e_filterFlag) {\n            if (bodyB.ShouldCollide(bodyA) == false) {\n               var cNuke = c;\n               c = cNuke.GetNext();\n               this.Destroy(cNuke);\n               continue;\n            }\n            if (this.m_contactFilter.ShouldCollide(fixtureA, fixtureB) == false) {\n               cNuke = c;\n               c = cNuke.GetNext();\n               this.Destroy(cNuke);\n               continue;\n            }\n            c.m_flags &= ~b2Contact.e_filterFlag;\n         }\n         var proxyA = fixtureA.m_proxy;\n         var proxyB = fixtureB.m_proxy;\n         var overlap = this.m_broadPhase.TestOverlap(proxyA, proxyB);\n         if (overlap == false) {\n            cNuke = c;\n            c = cNuke.GetNext();\n            this.Destroy(cNuke);\n            continue;\n         }\n         c.Update(this.m_contactListener);\n         c = c.GetNext();\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2ContactManager.s_evalCP = new b2ContactPoint();\n   });\n   b2DebugDraw.b2DebugDraw = function () {};\n   b2DebugDraw.prototype.b2DebugDraw = function () {}\n   b2DebugDraw.prototype.SetFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n   }\n   b2DebugDraw.prototype.GetFlags = function () {}\n   b2DebugDraw.prototype.AppendFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n   }\n   b2DebugDraw.prototype.ClearFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n   }\n   b2DebugDraw.prototype.SetSprite = function (sprite) {}\n   b2DebugDraw.prototype.GetSprite = function () {}\n   b2DebugDraw.prototype.SetDrawScale = function (drawScale) {\n      if (drawScale === undefined) drawScale = 0;\n   }\n   b2DebugDraw.prototype.GetDrawScale = function () {}\n   b2DebugDraw.prototype.SetLineThickness = function (lineThickness) {\n      if (lineThickness === undefined) lineThickness = 0;\n   }\n   b2DebugDraw.prototype.GetLineThickness = function () {}\n   b2DebugDraw.prototype.SetAlpha = function (alpha) {\n      if (alpha === undefined) alpha = 0;\n   }\n   b2DebugDraw.prototype.GetAlpha = function () {}\n   b2DebugDraw.prototype.SetFillAlpha = function (alpha) {\n      if (alpha === undefined) alpha = 0;\n   }\n   b2DebugDraw.prototype.GetFillAlpha = function () {}\n   b2DebugDraw.prototype.SetXFormScale = function (xformScale) {\n      if (xformScale === undefined) xformScale = 0;\n   }\n   b2DebugDraw.prototype.GetXFormScale = function () {}\n   b2DebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color) {\n      if (vertexCount === undefined) vertexCount = 0;\n   }\n   b2DebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color) {\n      if (vertexCount === undefined) vertexCount = 0;\n   }\n   b2DebugDraw.prototype.DrawCircle = function (center, radius, color) {\n      if (radius === undefined) radius = 0;\n   }\n   b2DebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color) {\n      if (radius === undefined) radius = 0;\n   }\n   b2DebugDraw.prototype.DrawSegment = function (p1, p2, color) {}\n   b2DebugDraw.prototype.DrawTransform = function (xf) {}\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2DebugDraw.e_shapeBit = 0x0001;\n      Box2D.Dynamics.b2DebugDraw.e_jointBit = 0x0002;\n      Box2D.Dynamics.b2DebugDraw.e_aabbBit = 0x0004;\n      Box2D.Dynamics.b2DebugDraw.e_pairBit = 0x0008;\n      Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit = 0x0010;\n      Box2D.Dynamics.b2DebugDraw.e_controllerBit = 0x0020;\n   });\n   b2DestructionListener.b2DestructionListener = function () {};\n   b2DestructionListener.prototype.SayGoodbyeJoint = function (joint) {}\n   b2DestructionListener.prototype.SayGoodbyeFixture = function (fixture) {}\n   b2FilterData.b2FilterData = function () {\n      this.categoryBits = 0x0001;\n      this.maskBits = 0xFFFF;\n      this.groupIndex = 0;\n   };\n   b2FilterData.prototype.Copy = function () {\n      var copy = new b2FilterData();\n      copy.categoryBits = this.categoryBits;\n      copy.maskBits = this.maskBits;\n      copy.groupIndex = this.groupIndex;\n      return copy;\n   }\n   b2Fixture.b2Fixture = function () {\n      this.m_filter = new b2FilterData();\n   };\n   b2Fixture.prototype.GetType = function () {\n      return this.m_shape.GetType();\n   }\n   b2Fixture.prototype.GetShape = function () {\n      return this.m_shape;\n   }\n   b2Fixture.prototype.SetSensor = function (sensor) {\n      if (this.m_isSensor == sensor) return;\n      this.m_isSensor = sensor;\n      if (this.m_body == null) return;\n      var edge = this.m_body.GetContactList();\n      while (edge) {\n         var contact = edge.contact;\n         var fixtureA = contact.GetFixtureA();\n         var fixtureB = contact.GetFixtureB();\n         if (fixtureA == this || fixtureB == this) contact.SetSensor(fixtureA.IsSensor() || fixtureB.IsSensor());\n         edge = edge.next;\n      }\n   }\n   b2Fixture.prototype.IsSensor = function () {\n      return this.m_isSensor;\n   }\n   b2Fixture.prototype.SetFilterData = function (filter) {\n      this.m_filter = filter.Copy();\n      if (this.m_body) return;\n      var edge = this.m_body.GetContactList();\n      while (edge) {\n         var contact = edge.contact;\n         var fixtureA = contact.GetFixtureA();\n         var fixtureB = contact.GetFixtureB();\n         if (fixtureA == this || fixtureB == this) contact.FlagForFiltering();\n         edge = edge.next;\n      }\n   }\n   b2Fixture.prototype.GetFilterData = function () {\n      return this.m_filter.Copy();\n   }\n   b2Fixture.prototype.GetBody = function () {\n      return this.m_body;\n   }\n   b2Fixture.prototype.GetNext = function () {\n      return this.m_next;\n   }\n   b2Fixture.prototype.GetUserData = function () {\n      return this.m_userData;\n   }\n   b2Fixture.prototype.SetUserData = function (data) {\n      this.m_userData = data;\n   }\n   b2Fixture.prototype.TestPoint = function (p) {\n      return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\n   }\n   b2Fixture.prototype.RayCast = function (output, input) {\n      return this.m_shape.RayCast(output, input, this.m_body.GetTransform());\n   }\n   b2Fixture.prototype.GetMassData = function (massData) {\n      if (massData === undefined) massData = null;\n      if (massData == null) {\n         massData = new b2MassData();\n      }\n      this.m_shape.ComputeMass(massData, this.m_density);\n      return massData;\n   }\n   b2Fixture.prototype.SetDensity = function (density) {\n      if (density === undefined) density = 0;\n      this.m_density = density;\n   }\n   b2Fixture.prototype.GetDensity = function () {\n      return this.m_density;\n   }\n   b2Fixture.prototype.GetFriction = function () {\n      return this.m_friction;\n   }\n   b2Fixture.prototype.SetFriction = function (friction) {\n      if (friction === undefined) friction = 0;\n      this.m_friction = friction;\n   }\n   b2Fixture.prototype.GetRestitution = function () {\n      return this.m_restitution;\n   }\n   b2Fixture.prototype.SetRestitution = function (restitution) {\n      if (restitution === undefined) restitution = 0;\n      this.m_restitution = restitution;\n   }\n   b2Fixture.prototype.GetAABB = function () {\n      return this.m_aabb;\n   }\n   b2Fixture.prototype.b2Fixture = function () {\n      this.m_aabb = new b2AABB();\n      this.m_userData = null;\n      this.m_body = null;\n      this.m_next = null;\n      this.m_shape = null;\n      this.m_density = 0.0;\n      this.m_friction = 0.0;\n      this.m_restitution = 0.0;\n   }\n   b2Fixture.prototype.Create = function (body, xf, def) {\n      this.m_userData = def.userData;\n      this.m_friction = def.friction;\n      this.m_restitution = def.restitution;\n      this.m_body = body;\n      this.m_next = null;\n      this.m_filter = def.filter.Copy();\n      this.m_isSensor = def.isSensor;\n      this.m_shape = def.shape.Copy();\n      this.m_density = def.density;\n   }\n   b2Fixture.prototype.Destroy = function () {\n      this.m_shape = null;\n   }\n   b2Fixture.prototype.CreateProxy = function (broadPhase, xf) {\n      this.m_shape.ComputeAABB(this.m_aabb, xf);\n      this.m_proxy = broadPhase.CreateProxy(this.m_aabb, this);\n   }\n   b2Fixture.prototype.DestroyProxy = function (broadPhase) {\n      if (this.m_proxy == null) {\n         return;\n      }\n      broadPhase.DestroyProxy(this.m_proxy);\n      this.m_proxy = null;\n   }\n   b2Fixture.prototype.Synchronize = function (broadPhase, transform1, transform2) {\n      if (!this.m_proxy) return;\n      var aabb1 = new b2AABB();\n      var aabb2 = new b2AABB();\n      this.m_shape.ComputeAABB(aabb1, transform1);\n      this.m_shape.ComputeAABB(aabb2, transform2);\n      this.m_aabb.Combine(aabb1, aabb2);\n      var displacement = b2Math.SubtractVV(transform2.position, transform1.position);\n      broadPhase.MoveProxy(this.m_proxy, this.m_aabb, displacement);\n   }\n   b2FixtureDef.b2FixtureDef = function () {\n      this.filter = new b2FilterData();\n   };\n   b2FixtureDef.prototype.b2FixtureDef = function () {\n      this.shape = null;\n      this.userData = null;\n      this.friction = 0.2;\n      this.restitution = 0.0;\n      this.density = 0.0;\n      this.filter.categoryBits = 0x0001;\n      this.filter.maskBits = 0xFFFF;\n      this.filter.groupIndex = 0;\n      this.isSensor = false;\n   }\n   b2Island.b2Island = function () {};\n   b2Island.prototype.b2Island = function () {\n      this.m_bodies = new Box2DVector();\n      this.m_contacts = new Box2DVector();\n      this.m_joints = new Box2DVector();\n   }\n   b2Island.prototype.Initialize = function (bodyCapacity, contactCapacity, jointCapacity, allocator, listener, contactSolver) {\n      if (bodyCapacity === undefined) bodyCapacity = 0;\n      if (contactCapacity === undefined) contactCapacity = 0;\n      if (jointCapacity === undefined) jointCapacity = 0;\n      var i = 0;\n      this.m_bodyCapacity = bodyCapacity;\n      this.m_contactCapacity = contactCapacity;\n      this.m_jointCapacity = jointCapacity;\n      this.m_bodyCount = 0;\n      this.m_contactCount = 0;\n      this.m_jointCount = 0;\n      this.m_allocator = allocator;\n      this.m_listener = listener;\n      this.m_contactSolver = contactSolver;\n      for (i = this.m_bodies.length;\n      i < bodyCapacity; i++)\n      this.m_bodies[i] = null;\n      for (i = this.m_contacts.length;\n      i < contactCapacity; i++)\n      this.m_contacts[i] = null;\n      for (i = this.m_joints.length;\n      i < jointCapacity; i++)\n      this.m_joints[i] = null;\n   }\n   b2Island.prototype.Clear = function () {\n      this.m_bodyCount = 0;\n      this.m_contactCount = 0;\n      this.m_jointCount = 0;\n   }\n   b2Island.prototype.Solve = function (step, gravity, allowSleep) {\n      var i = 0;\n      var j = 0;\n      var b;\n      var joint;\n      for (i = 0;\n      i < this.m_bodyCount; ++i) {\n         b = this.m_bodies[i];\n         if (b.GetType() != b2Body.b2_dynamicBody) continue;\n         b.m_linearVelocity.x += step.dt * (gravity.x + b.m_invMass * b.m_force.x);\n         b.m_linearVelocity.y += step.dt * (gravity.y + b.m_invMass * b.m_force.y);\n         b.m_angularVelocity += step.dt * b.m_invI * b.m_torque;\n         b.m_linearVelocity.Multiply(b2Math.Clamp(1.0 - step.dt * b.m_linearDamping, 0.0, 1.0));\n         b.m_angularVelocity *= b2Math.Clamp(1.0 - step.dt * b.m_angularDamping, 0.0, 1.0);\n      }\n      this.m_contactSolver.Initialize(step, this.m_contacts, this.m_contactCount, this.m_allocator);\n      var contactSolver = this.m_contactSolver;\n      contactSolver.InitVelocityConstraints(step);\n      for (i = 0;\n      i < this.m_jointCount; ++i) {\n         joint = this.m_joints[i];\n         joint.InitVelocityConstraints(step);\n      }\n      for (i = 0;\n      i < step.velocityIterations; ++i) {\n         for (j = 0;\n         j < this.m_jointCount; ++j) {\n            joint = this.m_joints[j];\n            joint.SolveVelocityConstraints(step);\n         }\n         contactSolver.SolveVelocityConstraints();\n      }\n      for (i = 0;\n      i < this.m_jointCount; ++i) {\n         joint = this.m_joints[i];\n         joint.FinalizeVelocityConstraints();\n      }\n      contactSolver.FinalizeVelocityConstraints();\n      for (i = 0;\n      i < this.m_bodyCount; ++i) {\n         b = this.m_bodies[i];\n         if (b.GetType() == b2Body.b2_staticBody) continue;\n         var translationX = step.dt * b.m_linearVelocity.x;\n         var translationY = step.dt * b.m_linearVelocity.y;\n         if ((translationX * translationX + translationY * translationY) > b2Settings.b2_maxTranslationSquared) {\n            b.m_linearVelocity.Normalize();\n            b.m_linearVelocity.x *= b2Settings.b2_maxTranslation * step.inv_dt;\n            b.m_linearVelocity.y *= b2Settings.b2_maxTranslation * step.inv_dt;\n         }\n         var rotation = step.dt * b.m_angularVelocity;\n         if (rotation * rotation > b2Settings.b2_maxRotationSquared) {\n            if (b.m_angularVelocity < 0.0) {\n               b.m_angularVelocity = (-b2Settings.b2_maxRotation * step.inv_dt);\n            }\n            else {\n               b.m_angularVelocity = b2Settings.b2_maxRotation * step.inv_dt;\n            }\n         }\n         b.m_sweep.c0.SetV(b.m_sweep.c);\n         b.m_sweep.a0 = b.m_sweep.a;\n         b.m_sweep.c.x += step.dt * b.m_linearVelocity.x;\n         b.m_sweep.c.y += step.dt * b.m_linearVelocity.y;\n         b.m_sweep.a += step.dt * b.m_angularVelocity;\n         b.SynchronizeTransform();\n      }\n      for (i = 0;\n      i < step.positionIterations; ++i) {\n         var contactsOkay = contactSolver.SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\n         var jointsOkay = true;\n         for (j = 0;\n         j < this.m_jointCount; ++j) {\n            joint = this.m_joints[j];\n            var jointOkay = joint.SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\n            jointsOkay = jointsOkay && jointOkay;\n         }\n         if (contactsOkay && jointsOkay) {\n            break;\n         }\n      }\n      this.Report(contactSolver.m_constraints);\n      if (allowSleep) {\n         var minSleepTime = Number.MAX_VALUE;\n         var linTolSqr = b2Settings.b2_linearSleepTolerance * b2Settings.b2_linearSleepTolerance;\n         var angTolSqr = b2Settings.b2_angularSleepTolerance * b2Settings.b2_angularSleepTolerance;\n         for (i = 0;\n         i < this.m_bodyCount; ++i) {\n            b = this.m_bodies[i];\n            if (b.GetType() == b2Body.b2_staticBody) {\n               continue;\n            }\n            if ((b.m_flags & b2Body.e_allowSleepFlag) == 0) {\n               b.m_sleepTime = 0.0;\n               minSleepTime = 0.0;\n            }\n            if ((b.m_flags & b2Body.e_allowSleepFlag) == 0 || b.m_angularVelocity * b.m_angularVelocity > angTolSqr || b2Math.Dot(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\n               b.m_sleepTime = 0.0;\n               minSleepTime = 0.0;\n            }\n            else {\n               b.m_sleepTime += step.dt;\n               minSleepTime = b2Math.Min(minSleepTime, b.m_sleepTime);\n            }\n         }\n         if (minSleepTime >= b2Settings.b2_timeToSleep) {\n            for (i = 0;\n            i < this.m_bodyCount; ++i) {\n               b = this.m_bodies[i];\n               b.SetAwake(false);\n            }\n         }\n      }\n   }\n   b2Island.prototype.SolveTOI = function (subStep) {\n      var i = 0;\n      var j = 0;\n      this.m_contactSolver.Initialize(subStep, this.m_contacts, this.m_contactCount, this.m_allocator);\n      var contactSolver = this.m_contactSolver;\n      for (i = 0;\n      i < this.m_jointCount; ++i) {\n         this.m_joints[i].InitVelocityConstraints(subStep);\n      }\n      for (i = 0;\n      i < subStep.velocityIterations; ++i) {\n         contactSolver.SolveVelocityConstraints();\n         for (j = 0;\n         j < this.m_jointCount; ++j) {\n            this.m_joints[j].SolveVelocityConstraints(subStep);\n         }\n      }\n      for (i = 0;\n      i < this.m_bodyCount; ++i) {\n         var b = this.m_bodies[i];\n         if (b.GetType() == b2Body.b2_staticBody) continue;\n         var translationX = subStep.dt * b.m_linearVelocity.x;\n         var translationY = subStep.dt * b.m_linearVelocity.y;\n         if ((translationX * translationX + translationY * translationY) > b2Settings.b2_maxTranslationSquared) {\n            b.m_linearVelocity.Normalize();\n            b.m_linearVelocity.x *= b2Settings.b2_maxTranslation * subStep.inv_dt;\n            b.m_linearVelocity.y *= b2Settings.b2_maxTranslation * subStep.inv_dt;\n         }\n         var rotation = subStep.dt * b.m_angularVelocity;\n         if (rotation * rotation > b2Settings.b2_maxRotationSquared) {\n            if (b.m_angularVelocity < 0.0) {\n               b.m_angularVelocity = (-b2Settings.b2_maxRotation * subStep.inv_dt);\n            }\n            else {\n               b.m_angularVelocity = b2Settings.b2_maxRotation * subStep.inv_dt;\n            }\n         }\n         b.m_sweep.c0.SetV(b.m_sweep.c);\n         b.m_sweep.a0 = b.m_sweep.a;\n         b.m_sweep.c.x += subStep.dt * b.m_linearVelocity.x;\n         b.m_sweep.c.y += subStep.dt * b.m_linearVelocity.y;\n         b.m_sweep.a += subStep.dt * b.m_angularVelocity;\n         b.SynchronizeTransform();\n      }\n      var k_toiBaumgarte = 0.75;\n      for (i = 0;\n      i < subStep.positionIterations; ++i) {\n         var contactsOkay = contactSolver.SolvePositionConstraints(k_toiBaumgarte);\n         var jointsOkay = true;\n         for (j = 0;\n         j < this.m_jointCount; ++j) {\n            var jointOkay = this.m_joints[j].SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\n            jointsOkay = jointsOkay && jointOkay;\n         }\n         if (contactsOkay && jointsOkay) {\n            break;\n         }\n      }\n      this.Report(contactSolver.m_constraints);\n   }\n   b2Island.prototype.Report = function (constraints) {\n      if (this.m_listener == null) {\n         return;\n      }\n      for (var i = 0; i < this.m_contactCount; ++i) {\n         var c = this.m_contacts[i];\n         var cc = constraints[i];\n         for (var j = 0; j < cc.pointCount; ++j) {\n            b2Island.s_impulse.normalImpulses[j] = cc.points[j].normalImpulse;\n            b2Island.s_impulse.tangentImpulses[j] = cc.points[j].tangentImpulse;\n         }\n         this.m_listener.PostSolve(c, b2Island.s_impulse);\n      }\n   }\n   b2Island.prototype.AddBody = function (body) {\n      body.m_islandIndex = this.m_bodyCount;\n      this.m_bodies[this.m_bodyCount++] = body;\n   }\n   b2Island.prototype.AddContact = function (contact) {\n      this.m_contacts[this.m_contactCount++] = contact;\n   }\n   b2Island.prototype.AddJoint = function (joint) {\n      this.m_joints[this.m_jointCount++] = joint;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2Island.s_impulse = new b2ContactImpulse();\n   });\n   b2TimeStep.b2TimeStep = function () {};\n   b2TimeStep.prototype.Set = function (step) {\n      this.dt = step.dt;\n      this.inv_dt = step.inv_dt;\n      this.positionIterations = step.positionIterations;\n      this.velocityIterations = step.velocityIterations;\n      this.warmStarting = step.warmStarting;\n   }\n   b2World.b2World = function () {\n      this.s_stack = new Box2DVector();\n      this.m_contactManager = new b2ContactManager();\n      this.m_contactSolver = new b2ContactSolver();\n      this.m_island = new b2Island();\n   };\n   b2World.prototype.b2World = function (gravity, doSleep) {\n      this.m_destructionListener = null;\n      this.m_debugDraw = null;\n      this.m_bodyList = null;\n      this.m_contactList = null;\n      this.m_jointList = null;\n      this.m_controllerList = null;\n      this.m_bodyCount = 0;\n      this.m_contactCount = 0;\n      this.m_jointCount = 0;\n      this.m_controllerCount = 0;\n      b2World.m_warmStarting = true;\n      b2World.m_continuousPhysics = true;\n      this.m_allowSleep = doSleep;\n      this.m_gravity = gravity;\n      this.m_inv_dt0 = 0.0;\n      this.m_contactManager.m_world = this;\n      var bd = new b2BodyDef();\n      this.m_groundBody = this.CreateBody(bd);\n   }\n   b2World.prototype.SetDestructionListener = function (listener) {\n      this.m_destructionListener = listener;\n   }\n   b2World.prototype.SetContactFilter = function (filter) {\n      this.m_contactManager.m_contactFilter = filter;\n   }\n   b2World.prototype.SetContactListener = function (listener) {\n      this.m_contactManager.m_contactListener = listener;\n   }\n   b2World.prototype.SetDebugDraw = function (debugDraw) {\n      this.m_debugDraw = debugDraw;\n   }\n   b2World.prototype.SetBroadPhase = function (broadPhase) {\n      var oldBroadPhase = this.m_contactManager.m_broadPhase;\n      this.m_contactManager.m_broadPhase = broadPhase;\n      for (var b = this.m_bodyList; b; b = b.m_next) {\n         for (var f = b.m_fixtureList; f; f = f.m_next) {\n            f.m_proxy = broadPhase.CreateProxy(oldBroadPhase.GetFatAABB(f.m_proxy), f);\n         }\n      }\n   }\n   b2World.prototype.Validate = function () {\n      this.m_contactManager.m_broadPhase.Validate();\n   }\n   b2World.prototype.GetProxyCount = function () {\n      return this.m_contactManager.m_broadPhase.GetProxyCount();\n   }\n   b2World.prototype.CreateBody = function (def) {\n      if (this.IsLocked() == true) {\n         return null;\n      }\n      var b = new b2Body(def, this);\n      b.m_prev = null;\n      b.m_next = this.m_bodyList;\n      if (this.m_bodyList) {\n         this.m_bodyList.m_prev = b;\n      }\n      this.m_bodyList = b;\n      ++this.m_bodyCount;\n      return b;\n   }\n   b2World.prototype.DestroyBody = function (b) {\n      if (this.IsLocked() == true) {\n         return;\n      }\n      var jn = b.m_jointList;\n      while (jn) {\n         var jn0 = jn;\n         jn = jn.next;\n         if (this.m_destructionListener) {\n            this.m_destructionListener.SayGoodbyeJoint(jn0.joint);\n         }\n         this.DestroyJoint(jn0.joint);\n      }\n      var coe = b.m_controllerList;\n      while (coe) {\n         var coe0 = coe;\n         coe = coe.nextController;\n         coe0.controller.RemoveBody(b);\n      }\n      var ce = b.m_contactList;\n      while (ce) {\n         var ce0 = ce;\n         ce = ce.next;\n         this.m_contactManager.Destroy(ce0.contact);\n      }\n      b.m_contactList = null;\n      var f = b.m_fixtureList;\n      while (f) {\n         var f0 = f;\n         f = f.m_next;\n         if (this.m_destructionListener) {\n            this.m_destructionListener.SayGoodbyeFixture(f0);\n         }\n         f0.DestroyProxy(this.m_contactManager.m_broadPhase);\n         f0.Destroy();\n      }\n      b.m_fixtureList = null;\n      b.m_fixtureCount = 0;\n      if (b.m_prev) {\n         b.m_prev.m_next = b.m_next;\n      }\n      if (b.m_next) {\n         b.m_next.m_prev = b.m_prev;\n      }\n      if (b == this.m_bodyList) {\n         this.m_bodyList = b.m_next;\n      }--this.m_bodyCount;\n   }\n   b2World.prototype.CreateJoint = function (def) {\n      var j = b2Joint.Create(def, null);\n      j.m_prev = null;\n      j.m_next = this.m_jointList;\n      if (this.m_jointList) {\n         this.m_jointList.m_prev = j;\n      }\n      this.m_jointList = j;\n      ++this.m_jointCount;\n      j.m_edgeA.joint = j;\n      j.m_edgeA.other = j.m_bodyB;\n      j.m_edgeA.prev = null;\n      j.m_edgeA.next = j.m_bodyA.m_jointList;\n      if (j.m_bodyA.m_jointList) j.m_bodyA.m_jointList.prev = j.m_edgeA;\n      j.m_bodyA.m_jointList = j.m_edgeA;\n      j.m_edgeB.joint = j;\n      j.m_edgeB.other = j.m_bodyA;\n      j.m_edgeB.prev = null;\n      j.m_edgeB.next = j.m_bodyB.m_jointList;\n      if (j.m_bodyB.m_jointList) j.m_bodyB.m_jointList.prev = j.m_edgeB;\n      j.m_bodyB.m_jointList = j.m_edgeB;\n      var bodyA = def.bodyA;\n      var bodyB = def.bodyB;\n      if (def.collideConnected == false) {\n         var edge = bodyB.GetContactList();\n         while (edge) {\n            if (edge.other == bodyA) {\n               edge.contact.FlagForFiltering();\n            }\n            edge = edge.next;\n         }\n      }\n      return j;\n   }\n   b2World.prototype.DestroyJoint = function (j) {\n      var collideConnected = j.m_collideConnected;\n      if (j.m_prev) {\n         j.m_prev.m_next = j.m_next;\n      }\n      if (j.m_next) {\n         j.m_next.m_prev = j.m_prev;\n      }\n      if (j == this.m_jointList) {\n         this.m_jointList = j.m_next;\n      }\n      var bodyA = j.m_bodyA;\n      var bodyB = j.m_bodyB;\n      bodyA.SetAwake(true);\n      bodyB.SetAwake(true);\n      if (j.m_edgeA.prev) {\n         j.m_edgeA.prev.next = j.m_edgeA.next;\n      }\n      if (j.m_edgeA.next) {\n         j.m_edgeA.next.prev = j.m_edgeA.prev;\n      }\n      if (j.m_edgeA == bodyA.m_jointList) {\n         bodyA.m_jointList = j.m_edgeA.next;\n      }\n      j.m_edgeA.prev = null;\n      j.m_edgeA.next = null;\n      if (j.m_edgeB.prev) {\n         j.m_edgeB.prev.next = j.m_edgeB.next;\n      }\n      if (j.m_edgeB.next) {\n         j.m_edgeB.next.prev = j.m_edgeB.prev;\n      }\n      if (j.m_edgeB == bodyB.m_jointList) {\n         bodyB.m_jointList = j.m_edgeB.next;\n      }\n      j.m_edgeB.prev = null;\n      j.m_edgeB.next = null;\n      b2Joint.Destroy(j, null);\n      --this.m_jointCount;\n      if (collideConnected == false) {\n         var edge = bodyB.GetContactList();\n         while (edge) {\n            if (edge.other == bodyA) {\n               edge.contact.FlagForFiltering();\n            }\n            edge = edge.next;\n         }\n      }\n   }\n   b2World.prototype.AddController = function (c) {\n      c.m_next = this.m_controllerList;\n      c.m_prev = null;\n      this.m_controllerList = c;\n      c.m_world = this;\n      this.m_controllerCount++;\n      return c;\n   }\n   b2World.prototype.RemoveController = function (c) {\n      if (c.m_prev) c.m_prev.m_next = c.m_next;\n      if (c.m_next) c.m_next.m_prev = c.m_prev;\n      if (this.m_controllerList == c) this.m_controllerList = c.m_next;\n      this.m_controllerCount--;\n   }\n   b2World.prototype.CreateController = function (controller) {\n      if (controller.m_world != this) throw new Error(\"Controller can only be a member of one world\");\n      controller.m_next = this.m_controllerList;\n      controller.m_prev = null;\n      if (this.m_controllerList) this.m_controllerList.m_prev = controller;\n      this.m_controllerList = controller;\n      ++this.m_controllerCount;\n      controller.m_world = this;\n      return controller;\n   }\n   b2World.prototype.DestroyController = function (controller) {\n      controller.Clear();\n      if (controller.m_next) controller.m_next.m_prev = controller.m_prev;\n      if (controller.m_prev) controller.m_prev.m_next = controller.m_next;\n      if (controller == this.m_controllerList) this.m_controllerList = controller.m_next;\n      --this.m_controllerCount;\n   }\n   b2World.prototype.SetWarmStarting = function (flag) {\n      b2World.m_warmStarting = flag;\n   }\n   b2World.prototype.SetContinuousPhysics = function (flag) {\n      b2World.m_continuousPhysics = flag;\n   }\n   b2World.prototype.GetBodyCount = function () {\n      return this.m_bodyCount;\n   }\n   b2World.prototype.GetJointCount = function () {\n      return this.m_jointCount;\n   }\n   b2World.prototype.GetContactCount = function () {\n      return this.m_contactCount;\n   }\n   b2World.prototype.SetGravity = function (gravity) {\n      this.m_gravity = gravity;\n   }\n   b2World.prototype.GetGravity = function () {\n      return this.m_gravity;\n   }\n   b2World.prototype.GetGroundBody = function () {\n      return this.m_groundBody;\n   }\n   b2World.prototype.Step = function (dt, velocityIterations, positionIterations) {\n      if (dt === undefined) dt = 0;\n      if (velocityIterations === undefined) velocityIterations = 0;\n      if (positionIterations === undefined) positionIterations = 0;\n      if (this.m_flags & b2World.e_newFixture) {\n         this.m_contactManager.FindNewContacts();\n         this.m_flags &= ~b2World.e_newFixture;\n      }\n      this.m_flags |= b2World.e_locked;\n      var step = b2World.s_timestep2;\n      step.dt = dt;\n      step.velocityIterations = velocityIterations;\n      step.positionIterations = positionIterations;\n      if (dt > 0.0) {\n         step.inv_dt = 1.0 / dt;\n      }\n      else {\n         step.inv_dt = 0.0;\n      }\n      step.dtRatio = this.m_inv_dt0 * dt;\n      step.warmStarting = b2World.m_warmStarting;\n      this.m_contactManager.Collide();\n      if (step.dt > 0.0) {\n         this.Solve(step);\n      }\n      if (b2World.m_continuousPhysics && step.dt > 0.0) {\n         this.SolveTOI(step);\n      }\n      if (step.dt > 0.0) {\n         this.m_inv_dt0 = step.inv_dt;\n      }\n      this.m_flags &= ~b2World.e_locked;\n   }\n   b2World.prototype.ClearForces = function () {\n      for (var body = this.m_bodyList; body; body = body.m_next) {\n         body.m_force.SetZero();\n         body.m_torque = 0.0;\n      }\n   }\n   b2World.prototype.DrawDebugData = function () {\n      if (this.m_debugDraw == null) {\n         return;\n      }\n      this.m_debugDraw.m_sprite.graphics.clear();\n      var flags = this.m_debugDraw.GetFlags();\n      var i = 0;\n      var b;\n      var f;\n      var s;\n      var j;\n      var bp;\n      var invQ = new b2Vec2;\n      var x1 = new b2Vec2;\n      var x2 = new b2Vec2;\n      var xf;\n      var b1 = new b2AABB();\n      var b2 = new b2AABB();\n      var vs = [new b2Vec2(), new b2Vec2(), new b2Vec2(), new b2Vec2()];\n      var color = new b2Color(0, 0, 0);\n      if (flags & b2DebugDraw.e_shapeBit) {\n         for (b = this.m_bodyList;\n         b; b = b.m_next) {\n            xf = b.m_xf;\n            for (f = b.GetFixtureList();\n            f; f = f.m_next) {\n               s = f.GetShape();\n               if (b.IsActive() == false) {\n                  color.Set(0.5, 0.5, 0.3);\n                  this.DrawShape(s, xf, color);\n               }\n               else if (b.GetType() == b2Body.b2_staticBody) {\n                  color.Set(0.5, 0.9, 0.5);\n                  this.DrawShape(s, xf, color);\n               }\n               else if (b.GetType() == b2Body.b2_kinematicBody) {\n                  color.Set(0.5, 0.5, 0.9);\n                  this.DrawShape(s, xf, color);\n               }\n               else if (b.IsAwake() == false) {\n                  color.Set(0.6, 0.6, 0.6);\n                  this.DrawShape(s, xf, color);\n               }\n               else {\n                  color.Set(0.9, 0.7, 0.7);\n                  this.DrawShape(s, xf, color);\n               }\n            }\n         }\n      }\n      if (flags & b2DebugDraw.e_jointBit) {\n         for (j = this.m_jointList;\n         j; j = j.m_next) {\n            this.DrawJoint(j);\n         }\n      }\n      if (flags & b2DebugDraw.e_controllerBit) {\n         for (var c = this.m_controllerList; c; c = c.m_next) {\n            c.Draw(this.m_debugDraw);\n         }\n      }\n      if (flags & b2DebugDraw.e_pairBit) {\n         color.Set(0.3, 0.9, 0.9);\n         for (var contact = this.m_contactManager.m_contactList; contact; contact = contact.GetNext()) {\n            var fixtureA = contact.GetFixtureA();\n            var fixtureB = contact.GetFixtureB();\n            var cA = fixtureA.GetAABB().GetCenter();\n            var cB = fixtureB.GetAABB().GetCenter();\n            this.m_debugDraw.DrawSegment(cA, cB, color);\n         }\n      }\n      if (flags & b2DebugDraw.e_aabbBit) {\n         bp = this.m_contactManager.m_broadPhase;\n         vs = [new b2Vec2(), new b2Vec2(), new b2Vec2(), new b2Vec2()];\n         for (b = this.m_bodyList;\n         b; b = b.GetNext()) {\n            if (b.IsActive() == false) {\n               continue;\n            }\n            for (f = b.GetFixtureList();\n            f; f = f.GetNext()) {\n               var aabb = bp.GetFatAABB(f.m_proxy);\n               vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\n               vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\n               vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\n               vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\n               this.m_debugDraw.DrawPolygon(vs, 4, color);\n            }\n         }\n      }\n      if (flags & b2DebugDraw.e_centerOfMassBit) {\n         for (b = this.m_bodyList;\n         b; b = b.m_next) {\n            xf = b2World.s_xf;\n            xf.R = b.m_xf.R;\n            xf.position = b.GetWorldCenter();\n            this.m_debugDraw.DrawTransform(xf);\n         }\n      }\n   }\n   b2World.prototype.QueryAABB = function (callback, aabb) {\n      var __this = this;\n      var broadPhase = __this.m_contactManager.m_broadPhase;\n\n      function WorldQueryWrapper(proxy) {\n         return callback(broadPhase.GetUserData(proxy));\n      };\n      broadPhase.Query(WorldQueryWrapper, aabb);\n   }\n   b2World.prototype.QueryShape = function (callback, shape, transform) {\n      var __this = this;\n      if (transform === undefined) transform = null;\n      if (transform == null) {\n         transform = new b2Transform();\n         transform.SetIdentity();\n      }\n      var broadPhase = __this.m_contactManager.m_broadPhase;\n\n      function WorldQueryWrapper(proxy) {\n         var fixture = (broadPhase.GetUserData(proxy) instanceof b2Fixture ? broadPhase.GetUserData(proxy) : null);\n         if (b2Shape.TestOverlap(shape, transform, fixture.GetShape(), fixture.GetBody().GetTransform())) return callback(fixture);\n         return true;\n      };\n      var aabb = new b2AABB();\n      shape.ComputeAABB(aabb, transform);\n      broadPhase.Query(WorldQueryWrapper, aabb);\n   }\n   b2World.prototype.QueryPoint = function (callback, p) {\n      var __this = this;\n      var broadPhase = __this.m_contactManager.m_broadPhase;\n\n      function WorldQueryWrapper(proxy) {\n         var fixture = (broadPhase.GetUserData(proxy) instanceof b2Fixture ? broadPhase.GetUserData(proxy) : null);\n         if (fixture.TestPoint(p)) return callback(fixture);\n         return true;\n      };\n      var aabb = new b2AABB();\n      aabb.lowerBound.Set(p.x - b2Settings.b2_linearSlop, p.y - b2Settings.b2_linearSlop);\n      aabb.upperBound.Set(p.x + b2Settings.b2_linearSlop, p.y + b2Settings.b2_linearSlop);\n      broadPhase.Query(WorldQueryWrapper, aabb);\n   }\n   b2World.prototype.RayCast = function (callback, point1, point2) {\n      var __this = this;\n      var broadPhase = __this.m_contactManager.m_broadPhase;\n      var output = new b2RayCastOutput;\n\n      function RayCastWrapper(input, proxy) {\n         var userData = broadPhase.GetUserData(proxy);\n         var fixture = (userData instanceof b2Fixture ? userData : null);\n         var hit = fixture.RayCast(output, input);\n         if (hit) {\n            var fraction = output.fraction;\n            var point = new b2Vec2((1.0 - fraction) * point1.x + fraction * point2.x, (1.0 - fraction) * point1.y + fraction * point2.y);\n            return callback(fixture, point, output.normal, fraction);\n         }\n         return input.maxFraction;\n      };\n      var input = new b2RayCastInput(point1, point2);\n      broadPhase.RayCast(RayCastWrapper, input);\n   }\n   b2World.prototype.RayCastOne = function (point1, point2) {\n      var __this = this;\n      var result;\n\n      function RayCastOneWrapper(fixture, point, normal, fraction) {\n         if (fraction === undefined) fraction = 0;\n         result = fixture;\n         return fraction;\n      };\n      __this.RayCast(RayCastOneWrapper, point1, point2);\n      return result;\n   }\n   b2World.prototype.RayCastAll = function (point1, point2) {\n      var __this = this;\n      var result = new Box2DVector();\n\n      function RayCastAllWrapper(fixture, point, normal, fraction) {\n         if (fraction === undefined) fraction = 0;\n         result[result.length] = fixture;\n         return 1;\n      };\n      __this.RayCast(RayCastAllWrapper, point1, point2);\n      return result;\n   }\n   b2World.prototype.GetBodyList = function () {\n      return this.m_bodyList;\n   }\n   b2World.prototype.GetJointList = function () {\n      return this.m_jointList;\n   }\n   b2World.prototype.GetContactList = function () {\n      return this.m_contactList;\n   }\n   b2World.prototype.IsLocked = function () {\n      return (this.m_flags & b2World.e_locked) > 0;\n   }\n   b2World.prototype.Solve = function (step) {\n      var b;\n      for (var controller = this.m_controllerList; controller; controller = controller.m_next) {\n         controller.Step(step);\n      }\n      var island = this.m_island;\n      island.Initialize(this.m_bodyCount, this.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener, this.m_contactSolver);\n      for (b = this.m_bodyList;\n      b; b = b.m_next) {\n         b.m_flags &= ~b2Body.e_islandFlag;\n      }\n      for (var c = this.m_contactList; c; c = c.m_next) {\n         c.m_flags &= ~b2Contact.e_islandFlag;\n      }\n      for (var j = this.m_jointList; j; j = j.m_next) {\n         j.m_islandFlag = false;\n      }\n      var stackSize = parseInt(this.m_bodyCount);\n      var stack = this.s_stack;\n      for (var seed = this.m_bodyList; seed; seed = seed.m_next) {\n         if (seed.m_flags & b2Body.e_islandFlag) {\n            continue;\n         }\n         if (seed.IsAwake() == false || seed.IsActive() == false) {\n            continue;\n         }\n         if (seed.GetType() == b2Body.b2_staticBody) {\n            continue;\n         }\n         island.Clear();\n         var stackCount = 0;\n         stack[stackCount++] = seed;\n         seed.m_flags |= b2Body.e_islandFlag;\n         while (stackCount > 0) {\n            b = stack[--stackCount];\n            island.AddBody(b);\n            if (b.IsAwake() == false) {\n               b.SetAwake(true);\n            }\n            if (b.GetType() == b2Body.b2_staticBody) {\n               continue;\n            }\n            var other;\n            for (var ce = b.m_contactList; ce; ce = ce.next) {\n               if (ce.contact.m_flags & b2Contact.e_islandFlag) {\n                  continue;\n               }\n               if (ce.contact.IsSensor() == true || ce.contact.IsEnabled() == false || ce.contact.IsTouching() == false) {\n                  continue;\n               }\n               island.AddContact(ce.contact);\n               ce.contact.m_flags |= b2Contact.e_islandFlag;\n               other = ce.other;\n               if (other.m_flags & b2Body.e_islandFlag) {\n                  continue;\n               }\n               stack[stackCount++] = other;\n               other.m_flags |= b2Body.e_islandFlag;\n            }\n            for (var jn = b.m_jointList; jn; jn = jn.next) {\n               if (jn.joint.m_islandFlag == true) {\n                  continue;\n               }\n               other = jn.other;\n               if (other.IsActive() == false) {\n                  continue;\n               }\n               island.AddJoint(jn.joint);\n               jn.joint.m_islandFlag = true;\n               if (other.m_flags & b2Body.e_islandFlag) {\n                  continue;\n               }\n               stack[stackCount++] = other;\n               other.m_flags |= b2Body.e_islandFlag;\n            }\n         }\n         island.Solve(step, this.m_gravity, this.m_allowSleep);\n         for (var i = 0; i < island.m_bodyCount; ++i) {\n            b = island.m_bodies[i];\n            if (b.GetType() == b2Body.b2_staticBody) {\n               b.m_flags &= ~b2Body.e_islandFlag;\n            }\n         }\n      }\n      for (i = 0;\n      i < stack.length; ++i) {\n         if (!stack[i]) break;\n         stack[i] = null;\n      }\n      for (b = this.m_bodyList;\n      b; b = b.m_next) {\n         if (b.IsAwake() == false || b.IsActive() == false) {\n            continue;\n         }\n         if (b.GetType() == b2Body.b2_staticBody) {\n            continue;\n         }\n         b.SynchronizeFixtures();\n      }\n      this.m_contactManager.FindNewContacts();\n   }\n   b2World.prototype.SolveTOI = function (step) {\n      var b;\n      var fA;\n      var fB;\n      var bA;\n      var bB;\n      var cEdge;\n      var j;\n      var island = this.m_island;\n      island.Initialize(this.m_bodyCount, b2Settings.b2_maxTOIContactsPerIsland, b2Settings.b2_maxTOIJointsPerIsland, null, this.m_contactManager.m_contactListener, this.m_contactSolver);\n      var queue = b2World.s_queue;\n      for (b = this.m_bodyList;\n      b; b = b.m_next) {\n         b.m_flags &= ~b2Body.e_islandFlag;\n         b.m_sweep.t0 = 0.0;\n      }\n      var c;\n      for (c = this.m_contactList;\n      c; c = c.m_next) {\n         c.m_flags &= ~ (b2Contact.e_toiFlag | b2Contact.e_islandFlag);\n      }\n      for (j = this.m_jointList;\n      j; j = j.m_next) {\n         j.m_islandFlag = false;\n      }\n      for (;;) {\n         var minContact = null;\n         var minTOI = 1.0;\n         for (c = this.m_contactList;\n         c; c = c.m_next) {\n            if (c.IsSensor() == true || c.IsEnabled() == false || c.IsContinuous() == false) {\n               continue;\n            }\n            var toi = 1.0;\n            if (c.m_flags & b2Contact.e_toiFlag) {\n               toi = c.m_toi;\n            }\n            else {\n               fA = c.m_fixtureA;\n               fB = c.m_fixtureB;\n               bA = fA.m_body;\n               bB = fB.m_body;\n               if ((bA.GetType() != b2Body.b2_dynamicBody || bA.IsAwake() == false) && (bB.GetType() != b2Body.b2_dynamicBody || bB.IsAwake() == false)) {\n                  continue;\n               }\n               var t0 = bA.m_sweep.t0;\n               if (bA.m_sweep.t0 < bB.m_sweep.t0) {\n                  t0 = bB.m_sweep.t0;\n                  bA.m_sweep.Advance(t0);\n               }\n               else if (bB.m_sweep.t0 < bA.m_sweep.t0) {\n                  t0 = bA.m_sweep.t0;\n                  bB.m_sweep.Advance(t0);\n               }\n               toi = c.ComputeTOI(bA.m_sweep, bB.m_sweep);\n               b2Settings.b2Assert(0.0 <= toi && toi <= 1.0);\n               if (toi > 0.0 && toi < 1.0) {\n                  toi = (1.0 - toi) * t0 + toi;\n                  if (toi > 1) toi = 1;\n               }\n               c.m_toi = toi;\n               c.m_flags |= b2Contact.e_toiFlag;\n            }\n            if (Number.MIN_VALUE < toi && toi < minTOI) {\n               minContact = c;\n               minTOI = toi;\n            }\n         }\n         if (minContact == null || 1.0 - 100.0 * Number.MIN_VALUE < minTOI) {\n            break;\n         }\n         fA = minContact.m_fixtureA;\n         fB = minContact.m_fixtureB;\n         bA = fA.m_body;\n         bB = fB.m_body;\n         b2World.s_backupA.Set(bA.m_sweep);\n         b2World.s_backupB.Set(bB.m_sweep);\n         bA.Advance(minTOI);\n         bB.Advance(minTOI);\n         minContact.Update(this.m_contactManager.m_contactListener);\n         minContact.m_flags &= ~b2Contact.e_toiFlag;\n         if (minContact.IsSensor() == true || minContact.IsEnabled() == false) {\n            bA.m_sweep.Set(b2World.s_backupA);\n            bB.m_sweep.Set(b2World.s_backupB);\n            bA.SynchronizeTransform();\n            bB.SynchronizeTransform();\n            continue;\n         }\n         if (minContact.IsTouching() == false) {\n            continue;\n         }\n         var seed = bA;\n         if (seed.GetType() != b2Body.b2_dynamicBody) {\n            seed = bB;\n         }\n         island.Clear();\n         var queueStart = 0;\n         var queueSize = 0;\n         queue[queueStart + queueSize++] = seed;\n         seed.m_flags |= b2Body.e_islandFlag;\n         while (queueSize > 0) {\n            b = queue[queueStart++];\n            --queueSize;\n            island.AddBody(b);\n            if (b.IsAwake() == false) {\n               b.SetAwake(true);\n            }\n            if (b.GetType() != b2Body.b2_dynamicBody) {\n               continue;\n            }\n            for (cEdge = b.m_contactList;\n            cEdge; cEdge = cEdge.next) {\n               if (island.m_contactCount == island.m_contactCapacity) {\n                  break;\n               }\n               if (cEdge.contact.m_flags & b2Contact.e_islandFlag) {\n                  continue;\n               }\n               if (cEdge.contact.IsSensor() == true || cEdge.contact.IsEnabled() == false || cEdge.contact.IsTouching() == false) {\n                  continue;\n               }\n               island.AddContact(cEdge.contact);\n               cEdge.contact.m_flags |= b2Contact.e_islandFlag;\n               var other = cEdge.other;\n               if (other.m_flags & b2Body.e_islandFlag) {\n                  continue;\n               }\n               if (other.GetType() != b2Body.b2_staticBody) {\n                  other.Advance(minTOI);\n                  other.SetAwake(true);\n               }\n               queue[queueStart + queueSize] = other;\n               ++queueSize;\n               other.m_flags |= b2Body.e_islandFlag;\n            }\n            for (var jEdge = b.m_jointList; jEdge; jEdge = jEdge.next) {\n               if (island.m_jointCount == island.m_jointCapacity) continue;\n               if (jEdge.joint.m_islandFlag == true) continue;\n               other = jEdge.other;\n               if (other.IsActive() == false) {\n                  continue;\n               }\n               island.AddJoint(jEdge.joint);\n               jEdge.joint.m_islandFlag = true;\n               if (other.m_flags & b2Body.e_islandFlag) continue;\n               if (other.GetType() != b2Body.b2_staticBody) {\n                  other.Advance(minTOI);\n                  other.SetAwake(true);\n               }\n               queue[queueStart + queueSize] = other;\n               ++queueSize;\n               other.m_flags |= b2Body.e_islandFlag;\n            }\n         }\n         var subStep = b2World.s_timestep;\n         subStep.warmStarting = false;\n         subStep.dt = (1.0 - minTOI) * step.dt;\n         subStep.inv_dt = 1.0 / subStep.dt;\n         subStep.dtRatio = 0.0;\n         subStep.velocityIterations = step.velocityIterations;\n         subStep.positionIterations = step.positionIterations;\n         island.SolveTOI(subStep);\n         var i = 0;\n         for (i = 0;\n         i < island.m_bodyCount; ++i) {\n            b = island.m_bodies[i];\n            b.m_flags &= ~b2Body.e_islandFlag;\n            if (b.IsAwake() == false) {\n               continue;\n            }\n            if (b.GetType() != b2Body.b2_dynamicBody) {\n               continue;\n            }\n            b.SynchronizeFixtures();\n            for (cEdge = b.m_contactList;\n            cEdge; cEdge = cEdge.next) {\n               cEdge.contact.m_flags &= ~b2Contact.e_toiFlag;\n            }\n         }\n         for (i = 0;\n         i < island.m_contactCount; ++i) {\n            c = island.m_contacts[i];\n            c.m_flags &= ~ (b2Contact.e_toiFlag | b2Contact.e_islandFlag);\n         }\n         for (i = 0;\n         i < island.m_jointCount; ++i) {\n            j = island.m_joints[i];\n            j.m_islandFlag = false;\n         }\n         this.m_contactManager.FindNewContacts();\n      }\n   }\n   b2World.prototype.DrawJoint = function (joint) {\n      var b1 = joint.GetBodyA();\n      var b2 = joint.GetBodyB();\n      var xf1 = b1.m_xf;\n      var xf2 = b2.m_xf;\n      var x1 = xf1.position;\n      var x2 = xf2.position;\n      var p1 = joint.GetAnchorA();\n      var p2 = joint.GetAnchorB();\n      var color = b2World.s_jointColor;\n      switch (joint.m_type) {\n      case b2Joint.e_distanceJoint:\n         this.m_debugDraw.DrawSegment(p1, p2, color);\n         break;\n      case b2Joint.e_pulleyJoint:\n         {\n            var pulley = ((joint instanceof b2PulleyJoint ? joint : null));\n            var s1 = pulley.GetGroundAnchorA();\n            var s2 = pulley.GetGroundAnchorB();\n            this.m_debugDraw.DrawSegment(s1, p1, color);\n            this.m_debugDraw.DrawSegment(s2, p2, color);\n            this.m_debugDraw.DrawSegment(s1, s2, color);\n         }\n         break;\n      case b2Joint.e_mouseJoint:\n         this.m_debugDraw.DrawSegment(p1, p2, color);\n         break;\n      default:\n         if (b1 != this.m_groundBody) this.m_debugDraw.DrawSegment(x1, p1, color);\n         this.m_debugDraw.DrawSegment(p1, p2, color);\n         if (b2 != this.m_groundBody) this.m_debugDraw.DrawSegment(x2, p2, color);\n      }\n   }\n   b2World.prototype.DrawShape = function (shape, xf, color) {\n      switch (shape.m_type) {\n      case b2Shape.e_circleShape:\n         {\n            var circle = ((shape instanceof b2CircleShape ? shape : null));\n            var center = b2Math.MulX(xf, circle.m_p);\n            var radius = circle.m_radius;\n            var axis = xf.R.col1;\n            this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\n         }\n         break;\n      case b2Shape.e_polygonShape:\n         {\n            var i = 0;\n            var poly = ((shape instanceof b2PolygonShape ? shape : null));\n            var vertexCount = parseInt(poly.GetVertexCount());\n            var localVertices = poly.GetVertices();\n            var vertices = new Box2DVector(vertexCount);\n            for (i = 0;\n            i < vertexCount; ++i) {\n               vertices[i] = b2Math.MulX(xf, localVertices[i]);\n            }\n            this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\n         }\n         break;\n      case b2Shape.e_edgeShape:\n         {\n            var edge = (shape instanceof b2EdgeShape ? shape : null);\n            this.m_debugDraw.DrawSegment(b2Math.MulX(xf, edge.GetVertex1()), b2Math.MulX(xf, edge.GetVertex2()), color);\n         }\n         break;\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.b2World.s_timestep2 = new b2TimeStep();\n      Box2D.Dynamics.b2World.s_xf = new b2Transform();\n      Box2D.Dynamics.b2World.s_backupA = new b2Sweep();\n      Box2D.Dynamics.b2World.s_backupB = new b2Sweep();\n      Box2D.Dynamics.b2World.s_timestep = new b2TimeStep();\n      Box2D.Dynamics.b2World.s_queue = new Box2DVector();\n      Box2D.Dynamics.b2World.s_jointColor = new b2Color(0.5, 0.8, 0.8);\n      Box2D.Dynamics.b2World.e_newFixture = 0x0001;\n      Box2D.Dynamics.b2World.e_locked = 0x0002;\n   });\n})();\n(function () {\n   var b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\n      b2CircleContact = Box2D.Dynamics.Contacts.b2CircleContact,\n      b2Contact = Box2D.Dynamics.Contacts.b2Contact,\n      b2ContactConstraint = Box2D.Dynamics.Contacts.b2ContactConstraint,\n      b2ContactConstraintPoint = Box2D.Dynamics.Contacts.b2ContactConstraintPoint,\n      b2ContactEdge = Box2D.Dynamics.Contacts.b2ContactEdge,\n      b2ContactFactory = Box2D.Dynamics.Contacts.b2ContactFactory,\n      b2ContactRegister = Box2D.Dynamics.Contacts.b2ContactRegister,\n      b2ContactResult = Box2D.Dynamics.Contacts.b2ContactResult,\n      b2ContactSolver = Box2D.Dynamics.Contacts.b2ContactSolver,\n      b2EdgeAndCircleContact = Box2D.Dynamics.Contacts.b2EdgeAndCircleContact,\n      b2NullContact = Box2D.Dynamics.Contacts.b2NullContact,\n      b2PolyAndCircleContact = Box2D.Dynamics.Contacts.b2PolyAndCircleContact,\n      b2PolyAndEdgeContact = Box2D.Dynamics.Contacts.b2PolyAndEdgeContact,\n      b2PolygonContact = Box2D.Dynamics.Contacts.b2PolygonContact,\n      b2PositionSolverManifold = Box2D.Dynamics.Contacts.b2PositionSolverManifold,\n      b2Body = Box2D.Dynamics.b2Body,\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\n      b2FilterData = Box2D.Dynamics.b2FilterData,\n      b2Fixture = Box2D.Dynamics.b2Fixture,\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      b2Island = Box2D.Dynamics.b2Island,\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\n      b2World = Box2D.Dynamics.b2World,\n      b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2AABB = Box2D.Collision.b2AABB,\n      b2Bound = Box2D.Collision.b2Bound,\n      b2BoundValues = Box2D.Collision.b2BoundValues,\n      b2Collision = Box2D.Collision.b2Collision,\n      b2ContactID = Box2D.Collision.b2ContactID,\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\n      b2Distance = Box2D.Collision.b2Distance,\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\n      b2Manifold = Box2D.Collision.b2Manifold,\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\n      b2Point = Box2D.Collision.b2Point,\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\n      b2Segment = Box2D.Collision.b2Segment,\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\n      b2Simplex = Box2D.Collision.b2Simplex,\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\n      b2TOIInput = Box2D.Collision.b2TOIInput,\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\n      ClipVertex = Box2D.Collision.ClipVertex,\n      Features = Box2D.Collision.Features,\n      IBroadPhase = Box2D.Collision.IBroadPhase;\n\n   Box2D.inherit(b2CircleContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2CircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2CircleContact.b2CircleContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2CircleContact.Create = function (allocator) {\n      return new b2CircleContact();\n   }\n   b2CircleContact.Destroy = function (contact, allocator) {}\n   b2CircleContact.prototype.Reset = function (fixtureA, fixtureB) {\n      this.__super.Reset.call(this, fixtureA, fixtureB);\n   }\n   b2CircleContact.prototype.Evaluate = function () {\n      var bA = this.m_fixtureA.GetBody();\n      var bB = this.m_fixtureB.GetBody();\n      b2Collision.CollideCircles(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2CircleShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\n   }\n   b2Contact.b2Contact = function () {\n      this.m_nodeA = new b2ContactEdge();\n      this.m_nodeB = new b2ContactEdge();\n      this.m_manifold = new b2Manifold();\n      this.m_oldManifold = new b2Manifold();\n   };\n   b2Contact.prototype.GetManifold = function () {\n      return this.m_manifold;\n   }\n   b2Contact.prototype.GetWorldManifold = function (worldManifold) {\n      var bodyA = this.m_fixtureA.GetBody();\n      var bodyB = this.m_fixtureB.GetBody();\n      var shapeA = this.m_fixtureA.GetShape();\n      var shapeB = this.m_fixtureB.GetShape();\n      worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\n   }\n   b2Contact.prototype.IsTouching = function () {\n      return (this.m_flags & b2Contact.e_touchingFlag) == b2Contact.e_touchingFlag;\n   }\n   b2Contact.prototype.IsContinuous = function () {\n      return (this.m_flags & b2Contact.e_continuousFlag) == b2Contact.e_continuousFlag;\n   }\n   b2Contact.prototype.SetSensor = function (sensor) {\n      if (sensor) {\n         this.m_flags |= b2Contact.e_sensorFlag;\n      }\n      else {\n         this.m_flags &= ~b2Contact.e_sensorFlag;\n      }\n   }\n   b2Contact.prototype.IsSensor = function () {\n      return (this.m_flags & b2Contact.e_sensorFlag) == b2Contact.e_sensorFlag;\n   }\n   b2Contact.prototype.SetEnabled = function (flag) {\n      if (flag) {\n         this.m_flags |= b2Contact.e_enabledFlag;\n      }\n      else {\n         this.m_flags &= ~b2Contact.e_enabledFlag;\n      }\n   }\n   b2Contact.prototype.IsEnabled = function () {\n      return (this.m_flags & b2Contact.e_enabledFlag) == b2Contact.e_enabledFlag;\n   }\n   b2Contact.prototype.GetNext = function () {\n      return this.m_next;\n   }\n   b2Contact.prototype.GetFixtureA = function () {\n      return this.m_fixtureA;\n   }\n   b2Contact.prototype.GetFixtureB = function () {\n      return this.m_fixtureB;\n   }\n   b2Contact.prototype.FlagForFiltering = function () {\n      this.m_flags |= b2Contact.e_filterFlag;\n   }\n   b2Contact.prototype.b2Contact = function () {}\n   b2Contact.prototype.Reset = function (fixtureA, fixtureB) {\n      if (fixtureA === undefined) fixtureA = null;\n      if (fixtureB === undefined) fixtureB = null;\n      this.m_flags = b2Contact.e_enabledFlag;\n      if (!fixtureA || !fixtureB) {\n         this.m_fixtureA = null;\n         this.m_fixtureB = null;\n         return;\n      }\n      if (fixtureA.IsSensor() || fixtureB.IsSensor()) {\n         this.m_flags |= b2Contact.e_sensorFlag;\n      }\n      var bodyA = fixtureA.GetBody();\n      var bodyB = fixtureB.GetBody();\n      if (bodyA.GetType() != b2Body.b2_dynamicBody || bodyA.IsBullet() || bodyB.GetType() != b2Body.b2_dynamicBody || bodyB.IsBullet()) {\n         this.m_flags |= b2Contact.e_continuousFlag;\n      }\n      this.m_fixtureA = fixtureA;\n      this.m_fixtureB = fixtureB;\n      this.m_manifold.m_pointCount = 0;\n      this.m_prev = null;\n      this.m_next = null;\n      this.m_nodeA.contact = null;\n      this.m_nodeA.prev = null;\n      this.m_nodeA.next = null;\n      this.m_nodeA.other = null;\n      this.m_nodeB.contact = null;\n      this.m_nodeB.prev = null;\n      this.m_nodeB.next = null;\n      this.m_nodeB.other = null;\n   }\n   b2Contact.prototype.Update = function (listener) {\n      var tManifold = this.m_oldManifold;\n      this.m_oldManifold = this.m_manifold;\n      this.m_manifold = tManifold;\n      this.m_flags |= b2Contact.e_enabledFlag;\n      var touching = false;\n      var wasTouching = (this.m_flags & b2Contact.e_touchingFlag) == b2Contact.e_touchingFlag;\n      var bodyA = this.m_fixtureA.m_body;\n      var bodyB = this.m_fixtureB.m_body;\n      var aabbOverlap = this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);\n      if (this.m_flags & b2Contact.e_sensorFlag) {\n         if (aabbOverlap) {\n            var shapeA = this.m_fixtureA.GetShape();\n            var shapeB = this.m_fixtureB.GetShape();\n            var xfA = bodyA.GetTransform();\n            var xfB = bodyB.GetTransform();\n            touching = b2Shape.TestOverlap(shapeA, xfA, shapeB, xfB);\n         }\n         this.m_manifold.m_pointCount = 0;\n      }\n      else {\n         if (bodyA.GetType() != b2Body.b2_dynamicBody || bodyA.IsBullet() || bodyB.GetType() != b2Body.b2_dynamicBody || bodyB.IsBullet()) {\n            this.m_flags |= b2Contact.e_continuousFlag;\n         }\n         else {\n            this.m_flags &= ~b2Contact.e_continuousFlag;\n         }\n         if (aabbOverlap) {\n            this.Evaluate();\n            touching = this.m_manifold.m_pointCount > 0;\n            for (var i = 0; i < this.m_manifold.m_pointCount; ++i) {\n               var mp2 = this.m_manifold.m_points[i];\n               mp2.m_normalImpulse = 0.0;\n               mp2.m_tangentImpulse = 0.0;\n               var id2 = mp2.m_id;\n               for (var j = 0; j < this.m_oldManifold.m_pointCount; ++j) {\n                  var mp1 = this.m_oldManifold.m_points[j];\n                  if (mp1.m_id.key == id2.key) {\n                     mp2.m_normalImpulse = mp1.m_normalImpulse;\n                     mp2.m_tangentImpulse = mp1.m_tangentImpulse;\n                     break;\n                  }\n               }\n            }\n         }\n         else {\n            this.m_manifold.m_pointCount = 0;\n         }\n         if (touching != wasTouching) {\n            bodyA.SetAwake(true);\n            bodyB.SetAwake(true);\n         }\n      }\n      if (touching) {\n         this.m_flags |= b2Contact.e_touchingFlag;\n      }\n      else {\n         this.m_flags &= ~b2Contact.e_touchingFlag;\n      }\n      if (wasTouching == false && touching == true) {\n         listener.BeginContact(this);\n      }\n      if (wasTouching == true && touching == false) {\n         listener.EndContact(this);\n      }\n      if ((this.m_flags & b2Contact.e_sensorFlag) == 0) {\n         listener.PreSolve(this, this.m_oldManifold);\n      }\n   }\n   b2Contact.prototype.Evaluate = function () {}\n   b2Contact.prototype.ComputeTOI = function (sweepA, sweepB) {\n      b2Contact.s_input.proxyA.Set(this.m_fixtureA.GetShape());\n      b2Contact.s_input.proxyB.Set(this.m_fixtureB.GetShape());\n      b2Contact.s_input.sweepA = sweepA;\n      b2Contact.s_input.sweepB = sweepB;\n      b2Contact.s_input.tolerance = b2Settings.b2_linearSlop;\n      return b2TimeOfImpact.TimeOfImpact(b2Contact.s_input);\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Contacts.b2Contact.e_sensorFlag = 0x0001;\n      Box2D.Dynamics.Contacts.b2Contact.e_continuousFlag = 0x0002;\n      Box2D.Dynamics.Contacts.b2Contact.e_islandFlag = 0x0004;\n      Box2D.Dynamics.Contacts.b2Contact.e_toiFlag = 0x0008;\n      Box2D.Dynamics.Contacts.b2Contact.e_touchingFlag = 0x0010;\n      Box2D.Dynamics.Contacts.b2Contact.e_enabledFlag = 0x0020;\n      Box2D.Dynamics.Contacts.b2Contact.e_filterFlag = 0x0040;\n      Box2D.Dynamics.Contacts.b2Contact.s_input = new b2TOIInput();\n   });\n   b2ContactConstraint.b2ContactConstraint = function () {\n      this.localPlaneNormal = new b2Vec2();\n      this.localPoint = new b2Vec2();\n      this.normal = new b2Vec2();\n      this.normalMass = new b2Mat22();\n      this.K = new b2Mat22();\n   };\n   b2ContactConstraint.prototype.b2ContactConstraint = function () {\n      this.points = new Box2DVector(b2Settings.b2_maxManifoldPoints);\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         this.points[i] = new b2ContactConstraintPoint();\n      }\n   }\n   b2ContactConstraintPoint.b2ContactConstraintPoint = function () {\n      this.localPoint = new b2Vec2();\n      this.rA = new b2Vec2();\n      this.rB = new b2Vec2();\n   };\n   b2ContactEdge.b2ContactEdge = function () {};\n   b2ContactFactory.b2ContactFactory = function () {};\n   b2ContactFactory.prototype.b2ContactFactory = function (allocator) {\n      this.m_allocator = allocator;\n      this.InitializeRegisters();\n   }\n   b2ContactFactory.prototype.AddType = function (createFcn, destroyFcn, type1, type2) {\n      if (type1 === undefined) type1 = 0;\n      if (type2 === undefined) type2 = 0;\n      this.m_registers[type1][type2].createFcn = createFcn;\n      this.m_registers[type1][type2].destroyFcn = destroyFcn;\n      this.m_registers[type1][type2].primary = true;\n      if (type1 != type2) {\n         this.m_registers[type2][type1].createFcn = createFcn;\n         this.m_registers[type2][type1].destroyFcn = destroyFcn;\n         this.m_registers[type2][type1].primary = false;\n      }\n   }\n   b2ContactFactory.prototype.InitializeRegisters = function () {\n      this.m_registers = new Box2DVector(b2Shape.e_shapeTypeCount);\n      for (var i = 0; i < b2Shape.e_shapeTypeCount; i++) {\n         this.m_registers[i] = new Box2DVector(b2Shape.e_shapeTypeCount);\n         for (var j = 0; j < b2Shape.e_shapeTypeCount; j++) {\n            this.m_registers[i][j] = new b2ContactRegister();\n         }\n      }\n      this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2Shape.e_circleShape, b2Shape.e_circleShape);\n      this.AddType(b2PolyAndCircleContact.Create, b2PolyAndCircleContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_circleShape);\n      this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_polygonShape);\n      this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2Shape.e_edgeShape, b2Shape.e_circleShape);\n      this.AddType(b2PolyAndEdgeContact.Create, b2PolyAndEdgeContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_edgeShape);\n   }\n   b2ContactFactory.prototype.Create = function (fixtureA, fixtureB) {\n      var type1 = parseInt(fixtureA.GetType());\n      var type2 = parseInt(fixtureB.GetType());\n      var reg = this.m_registers[type1][type2];\n      var c;\n      if (reg.pool) {\n         c = reg.pool;\n         reg.pool = c.m_next;\n         reg.poolCount--;\n         c.Reset(fixtureA, fixtureB);\n         return c;\n      }\n      var createFcn = reg.createFcn;\n      if (createFcn != null) {\n         if (reg.primary) {\n            c = createFcn(this.m_allocator);\n            c.Reset(fixtureA, fixtureB);\n            return c;\n         }\n         else {\n            c = createFcn(this.m_allocator);\n            c.Reset(fixtureB, fixtureA);\n            return c;\n         }\n      }\n      else {\n         return null;\n      }\n   }\n   b2ContactFactory.prototype.Destroy = function (contact) {\n      if (contact.m_manifold.m_pointCount > 0) {\n         contact.m_fixtureA.m_body.SetAwake(true);\n         contact.m_fixtureB.m_body.SetAwake(true);\n      }\n      var type1 = parseInt(contact.m_fixtureA.GetType());\n      var type2 = parseInt(contact.m_fixtureB.GetType());\n      var reg = this.m_registers[type1][type2];\n      if (true) {\n         reg.poolCount++;\n         contact.m_next = reg.pool;\n         reg.pool = contact;\n      }\n      var destroyFcn = reg.destroyFcn;\n      destroyFcn(contact, this.m_allocator);\n   }\n   b2ContactRegister.b2ContactRegister = function () {};\n   b2ContactResult.b2ContactResult = function () {\n      this.position = new b2Vec2();\n      this.normal = new b2Vec2();\n      this.id = new b2ContactID();\n   };\n   b2ContactSolver.b2ContactSolver = function () {\n      this.m_step = new b2TimeStep();\n      this.m_constraints = new Box2DVector();\n   };\n   b2ContactSolver.prototype.b2ContactSolver = function () {}\n   b2ContactSolver.prototype.Initialize = function (step, contacts, contactCount, allocator) {\n      if (contactCount === undefined) contactCount = 0;\n      var contact;\n      this.m_step.Set(step);\n      this.m_allocator = allocator;\n      var i = 0;\n      var tVec;\n      var tMat;\n      this.m_constraintCount = contactCount;\n      while (this.m_constraints.length < this.m_constraintCount) {\n         this.m_constraints[this.m_constraints.length] = new b2ContactConstraint();\n      }\n      for (i = 0;\n      i < contactCount; ++i) {\n         contact = contacts[i];\n         var fixtureA = contact.m_fixtureA;\n         var fixtureB = contact.m_fixtureB;\n         var shapeA = fixtureA.m_shape;\n         var shapeB = fixtureB.m_shape;\n         var radiusA = shapeA.m_radius;\n         var radiusB = shapeB.m_radius;\n         var bodyA = fixtureA.m_body;\n         var bodyB = fixtureB.m_body;\n         var manifold = contact.GetManifold();\n         var friction = b2Settings.b2MixFriction(fixtureA.GetFriction(), fixtureB.GetFriction());\n         var restitution = b2Settings.b2MixRestitution(fixtureA.GetRestitution(), fixtureB.GetRestitution());\n         var vAX = bodyA.m_linearVelocity.x;\n         var vAY = bodyA.m_linearVelocity.y;\n         var vBX = bodyB.m_linearVelocity.x;\n         var vBY = bodyB.m_linearVelocity.y;\n         var wA = bodyA.m_angularVelocity;\n         var wB = bodyB.m_angularVelocity;\n         b2Settings.b2Assert(manifold.m_pointCount > 0);\n         b2ContactSolver.s_worldManifold.Initialize(manifold, bodyA.m_xf, radiusA, bodyB.m_xf, radiusB);\n         var normalX = b2ContactSolver.s_worldManifold.m_normal.x;\n         var normalY = b2ContactSolver.s_worldManifold.m_normal.y;\n         var cc = this.m_constraints[i];\n         cc.bodyA = bodyA;\n         cc.bodyB = bodyB;\n         cc.manifold = manifold;\n         cc.normal.x = normalX;\n         cc.normal.y = normalY;\n         cc.pointCount = manifold.m_pointCount;\n         cc.friction = friction;\n         cc.restitution = restitution;\n         cc.localPlaneNormal.x = manifold.m_localPlaneNormal.x;\n         cc.localPlaneNormal.y = manifold.m_localPlaneNormal.y;\n         cc.localPoint.x = manifold.m_localPoint.x;\n         cc.localPoint.y = manifold.m_localPoint.y;\n         cc.radius = radiusA + radiusB;\n         cc.type = manifold.m_type;\n         for (var k = 0; k < cc.pointCount; ++k) {\n            var cp = manifold.m_points[k];\n            var ccp = cc.points[k];\n            ccp.normalImpulse = cp.m_normalImpulse;\n            ccp.tangentImpulse = cp.m_tangentImpulse;\n            ccp.localPoint.SetV(cp.m_localPoint);\n            var rAX = ccp.rA.x = b2ContactSolver.s_worldManifold.m_points[k].x - bodyA.m_sweep.c.x;\n            var rAY = ccp.rA.y = b2ContactSolver.s_worldManifold.m_points[k].y - bodyA.m_sweep.c.y;\n            var rBX = ccp.rB.x = b2ContactSolver.s_worldManifold.m_points[k].x - bodyB.m_sweep.c.x;\n            var rBY = ccp.rB.y = b2ContactSolver.s_worldManifold.m_points[k].y - bodyB.m_sweep.c.y;\n            var rnA = rAX * normalY - rAY * normalX;\n            var rnB = rBX * normalY - rBY * normalX;\n            rnA *= rnA;\n            rnB *= rnB;\n            var kNormal = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rnA + bodyB.m_invI * rnB;\n            ccp.normalMass = 1.0 / kNormal;\n            var kEqualized = bodyA.m_mass * bodyA.m_invMass + bodyB.m_mass * bodyB.m_invMass;\n            kEqualized += bodyA.m_mass * bodyA.m_invI * rnA + bodyB.m_mass * bodyB.m_invI * rnB;\n            ccp.equalizedMass = 1.0 / kEqualized;\n            var tangentX = normalY;\n            var tangentY = (-normalX);\n            var rtA = rAX * tangentY - rAY * tangentX;\n            var rtB = rBX * tangentY - rBY * tangentX;\n            rtA *= rtA;\n            rtB *= rtB;\n            var kTangent = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rtA + bodyB.m_invI * rtB;\n            ccp.tangentMass = 1.0 / kTangent;\n            ccp.velocityBias = 0.0;\n            var tX = vBX + ((-wB * rBY)) - vAX - ((-wA * rAY));\n            var tY = vBY + (wB * rBX) - vAY - (wA * rAX);\n            var vRel = cc.normal.x * tX + cc.normal.y * tY;\n            if (vRel < (-b2Settings.b2_velocityThreshold)) {\n               ccp.velocityBias += (-cc.restitution * vRel);\n            }\n         }\n         if (cc.pointCount == 2) {\n            var ccp1 = cc.points[0];\n            var ccp2 = cc.points[1];\n            var invMassA = bodyA.m_invMass;\n            var invIA = bodyA.m_invI;\n            var invMassB = bodyB.m_invMass;\n            var invIB = bodyB.m_invI;\n            var rn1A = ccp1.rA.x * normalY - ccp1.rA.y * normalX;\n            var rn1B = ccp1.rB.x * normalY - ccp1.rB.y * normalX;\n            var rn2A = ccp2.rA.x * normalY - ccp2.rA.y * normalX;\n            var rn2B = ccp2.rB.x * normalY - ccp2.rB.y * normalX;\n            var k11 = invMassA + invMassB + invIA * rn1A * rn1A + invIB * rn1B * rn1B;\n            var k22 = invMassA + invMassB + invIA * rn2A * rn2A + invIB * rn2B * rn2B;\n            var k12 = invMassA + invMassB + invIA * rn1A * rn2A + invIB * rn1B * rn2B;\n            var k_maxConditionNumber = 100.0;\n            if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n               cc.K.col1.Set(k11, k12);\n               cc.K.col2.Set(k12, k22);\n               cc.K.GetInverse(cc.normalMass);\n            }\n            else {\n               cc.pointCount = 1;\n            }\n         }\n      }\n   }\n   b2ContactSolver.prototype.InitVelocityConstraints = function (step) {\n      var tVec;\n      var tVec2;\n      var tMat;\n      for (var i = 0; i < this.m_constraintCount; ++i) {\n         var c = this.m_constraints[i];\n         var bodyA = c.bodyA;\n         var bodyB = c.bodyB;\n         var invMassA = bodyA.m_invMass;\n         var invIA = bodyA.m_invI;\n         var invMassB = bodyB.m_invMass;\n         var invIB = bodyB.m_invI;\n         var normalX = c.normal.x;\n         var normalY = c.normal.y;\n         var tangentX = normalY;\n         var tangentY = (-normalX);\n         var tX = 0;\n         var j = 0;\n         var tCount = 0;\n         if (step.warmStarting) {\n            tCount = c.pointCount;\n            for (j = 0;\n            j < tCount; ++j) {\n               var ccp = c.points[j];\n               ccp.normalImpulse *= step.dtRatio;\n               ccp.tangentImpulse *= step.dtRatio;\n               var PX = ccp.normalImpulse * normalX + ccp.tangentImpulse * tangentX;\n               var PY = ccp.normalImpulse * normalY + ccp.tangentImpulse * tangentY;\n               bodyA.m_angularVelocity -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\n               bodyA.m_linearVelocity.x -= invMassA * PX;\n               bodyA.m_linearVelocity.y -= invMassA * PY;\n               bodyB.m_angularVelocity += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\n               bodyB.m_linearVelocity.x += invMassB * PX;\n               bodyB.m_linearVelocity.y += invMassB * PY;\n            }\n         }\n         else {\n            tCount = c.pointCount;\n            for (j = 0;\n            j < tCount; ++j) {\n               var ccp2 = c.points[j];\n               ccp2.normalImpulse = 0.0;\n               ccp2.tangentImpulse = 0.0;\n            }\n         }\n      }\n   }\n   b2ContactSolver.prototype.SolveVelocityConstraints = function () {\n      var j = 0;\n      var ccp;\n      var rAX = 0;\n      var rAY = 0;\n      var rBX = 0;\n      var rBY = 0;\n      var dvX = 0;\n      var dvY = 0;\n      var vn = 0;\n      var vt = 0;\n      var lambda = 0;\n      var maxFriction = 0;\n      var newImpulse = 0;\n      var PX = 0;\n      var PY = 0;\n      var dX = 0;\n      var dY = 0;\n      var P1X = 0;\n      var P1Y = 0;\n      var P2X = 0;\n      var P2Y = 0;\n      var tMat;\n      var tVec;\n      for (var i = 0; i < this.m_constraintCount; ++i) {\n         var c = this.m_constraints[i];\n         var bodyA = c.bodyA;\n         var bodyB = c.bodyB;\n         var wA = bodyA.m_angularVelocity;\n         var wB = bodyB.m_angularVelocity;\n         var vA = bodyA.m_linearVelocity;\n         var vB = bodyB.m_linearVelocity;\n         var invMassA = bodyA.m_invMass;\n         var invIA = bodyA.m_invI;\n         var invMassB = bodyB.m_invMass;\n         var invIB = bodyB.m_invI;\n         var normalX = c.normal.x;\n         var normalY = c.normal.y;\n         var tangentX = normalY;\n         var tangentY = (-normalX);\n         var friction = c.friction;\n         var tX = 0;\n         for (j = 0;\n         j < c.pointCount; j++) {\n            ccp = c.points[j];\n            dvX = vB.x - wB * ccp.rB.y - vA.x + wA * ccp.rA.y;\n            dvY = vB.y + wB * ccp.rB.x - vA.y - wA * ccp.rA.x;\n            vt = dvX * tangentX + dvY * tangentY;\n            lambda = ccp.tangentMass * (-vt);\n            maxFriction = friction * ccp.normalImpulse;\n            newImpulse = b2Math.Clamp(ccp.tangentImpulse + lambda, (-maxFriction), maxFriction);\n            lambda = newImpulse - ccp.tangentImpulse;\n            PX = lambda * tangentX;\n            PY = lambda * tangentY;\n            vA.x -= invMassA * PX;\n            vA.y -= invMassA * PY;\n            wA -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\n            vB.x += invMassB * PX;\n            vB.y += invMassB * PY;\n            wB += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\n            ccp.tangentImpulse = newImpulse;\n         }\n         var tCount = parseInt(c.pointCount);\n         if (c.pointCount == 1) {\n            ccp = c.points[0];\n            dvX = vB.x + ((-wB * ccp.rB.y)) - vA.x - ((-wA * ccp.rA.y));\n            dvY = vB.y + (wB * ccp.rB.x) - vA.y - (wA * ccp.rA.x);\n            vn = dvX * normalX + dvY * normalY;\n            lambda = (-ccp.normalMass * (vn - ccp.velocityBias));\n            newImpulse = ccp.normalImpulse + lambda;\n            newImpulse = newImpulse > 0 ? newImpulse : 0.0;\n            lambda = newImpulse - ccp.normalImpulse;\n            PX = lambda * normalX;\n            PY = lambda * normalY;\n            vA.x -= invMassA * PX;\n            vA.y -= invMassA * PY;\n            wA -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\n            vB.x += invMassB * PX;\n            vB.y += invMassB * PY;\n            wB += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\n            ccp.normalImpulse = newImpulse;\n         }\n         else {\n            var cp1 = c.points[0];\n            var cp2 = c.points[1];\n            var aX = cp1.normalImpulse;\n            var aY = cp2.normalImpulse;\n            var dv1X = vB.x - wB * cp1.rB.y - vA.x + wA * cp1.rA.y;\n            var dv1Y = vB.y + wB * cp1.rB.x - vA.y - wA * cp1.rA.x;\n            var dv2X = vB.x - wB * cp2.rB.y - vA.x + wA * cp2.rA.y;\n            var dv2Y = vB.y + wB * cp2.rB.x - vA.y - wA * cp2.rA.x;\n            var vn1 = dv1X * normalX + dv1Y * normalY;\n            var vn2 = dv2X * normalX + dv2Y * normalY;\n            var bX = vn1 - cp1.velocityBias;\n            var bY = vn2 - cp2.velocityBias;\n            tMat = c.K;\n            bX -= tMat.col1.x * aX + tMat.col2.x * aY;\n            bY -= tMat.col1.y * aX + tMat.col2.y * aY;\n            var k_errorTol = 0.001;\n            for (;;) {\n               tMat = c.normalMass;\n               var xX = (-(tMat.col1.x * bX + tMat.col2.x * bY));\n               var xY = (-(tMat.col1.y * bX + tMat.col2.y * bY));\n               if (xX >= 0.0 && xY >= 0.0) {\n                  dX = xX - aX;\n                  dY = xY - aY;\n                  P1X = dX * normalX;\n                  P1Y = dX * normalY;\n                  P2X = dY * normalX;\n                  P2Y = dY * normalY;\n                  vA.x -= invMassA * (P1X + P2X);\n                  vA.y -= invMassA * (P1Y + P2Y);\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\n                  vB.x += invMassB * (P1X + P2X);\n                  vB.y += invMassB * (P1Y + P2Y);\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\n                  cp1.normalImpulse = xX;\n                  cp2.normalImpulse = xY;\n                  break;\n               }\n               xX = (-cp1.normalMass * bX);\n               xY = 0.0;\n               vn1 = 0.0;\n               vn2 = c.K.col1.y * xX + bY;\n               if (xX >= 0.0 && vn2 >= 0.0) {\n                  dX = xX - aX;\n                  dY = xY - aY;\n                  P1X = dX * normalX;\n                  P1Y = dX * normalY;\n                  P2X = dY * normalX;\n                  P2Y = dY * normalY;\n                  vA.x -= invMassA * (P1X + P2X);\n                  vA.y -= invMassA * (P1Y + P2Y);\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\n                  vB.x += invMassB * (P1X + P2X);\n                  vB.y += invMassB * (P1Y + P2Y);\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\n                  cp1.normalImpulse = xX;\n                  cp2.normalImpulse = xY;\n                  break;\n               }\n               xX = 0.0;\n               xY = (-cp2.normalMass * bY);\n               vn1 = c.K.col2.x * xY + bX;\n               vn2 = 0.0;\n               if (xY >= 0.0 && vn1 >= 0.0) {\n                  dX = xX - aX;\n                  dY = xY - aY;\n                  P1X = dX * normalX;\n                  P1Y = dX * normalY;\n                  P2X = dY * normalX;\n                  P2Y = dY * normalY;\n                  vA.x -= invMassA * (P1X + P2X);\n                  vA.y -= invMassA * (P1Y + P2Y);\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\n                  vB.x += invMassB * (P1X + P2X);\n                  vB.y += invMassB * (P1Y + P2Y);\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\n                  cp1.normalImpulse = xX;\n                  cp2.normalImpulse = xY;\n                  break;\n               }\n               xX = 0.0;\n               xY = 0.0;\n               vn1 = bX;\n               vn2 = bY;\n               if (vn1 >= 0.0 && vn2 >= 0.0) {\n                  dX = xX - aX;\n                  dY = xY - aY;\n                  P1X = dX * normalX;\n                  P1Y = dX * normalY;\n                  P2X = dY * normalX;\n                  P2Y = dY * normalY;\n                  vA.x -= invMassA * (P1X + P2X);\n                  vA.y -= invMassA * (P1Y + P2Y);\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\n                  vB.x += invMassB * (P1X + P2X);\n                  vB.y += invMassB * (P1Y + P2Y);\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\n                  cp1.normalImpulse = xX;\n                  cp2.normalImpulse = xY;\n                  break;\n               }\n               break;\n            }\n         }\n         bodyA.m_angularVelocity = wA;\n         bodyB.m_angularVelocity = wB;\n      }\n   }\n   b2ContactSolver.prototype.FinalizeVelocityConstraints = function () {\n      for (var i = 0; i < this.m_constraintCount; ++i) {\n         var c = this.m_constraints[i];\n         var m = c.manifold;\n         for (var j = 0; j < c.pointCount; ++j) {\n            var point1 = m.m_points[j];\n            var point2 = c.points[j];\n            point1.m_normalImpulse = point2.normalImpulse;\n            point1.m_tangentImpulse = point2.tangentImpulse;\n         }\n      }\n   }\n   b2ContactSolver.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var minSeparation = 0.0;\n      for (var i = 0; i < this.m_constraintCount; i++) {\n         var c = this.m_constraints[i];\n         var bodyA = c.bodyA;\n         var bodyB = c.bodyB;\n         var invMassA = bodyA.m_mass * bodyA.m_invMass;\n         var invIA = bodyA.m_mass * bodyA.m_invI;\n         var invMassB = bodyB.m_mass * bodyB.m_invMass;\n         var invIB = bodyB.m_mass * bodyB.m_invI;\n         b2ContactSolver.s_psm.Initialize(c);\n         var normal = b2ContactSolver.s_psm.m_normal;\n         for (var j = 0; j < c.pointCount; j++) {\n            var ccp = c.points[j];\n            var point = b2ContactSolver.s_psm.m_points[j];\n            var separation = b2ContactSolver.s_psm.m_separations[j];\n            var rAX = point.x - bodyA.m_sweep.c.x;\n            var rAY = point.y - bodyA.m_sweep.c.y;\n            var rBX = point.x - bodyB.m_sweep.c.x;\n            var rBY = point.y - bodyB.m_sweep.c.y;\n            minSeparation = minSeparation < separation ? minSeparation : separation;\n            var C = b2Math.Clamp(baumgarte * (separation + b2Settings.b2_linearSlop), (-b2Settings.b2_maxLinearCorrection), 0.0);\n            var impulse = (-ccp.equalizedMass * C);\n            var PX = impulse * normal.x;\n            var PY = impulse * normal.y;bodyA.m_sweep.c.x -= invMassA * PX;\n            bodyA.m_sweep.c.y -= invMassA * PY;\n            bodyA.m_sweep.a -= invIA * (rAX * PY - rAY * PX);\n            bodyA.SynchronizeTransform();\n            bodyB.m_sweep.c.x += invMassB * PX;\n            bodyB.m_sweep.c.y += invMassB * PY;\n            bodyB.m_sweep.a += invIB * (rBX * PY - rBY * PX);\n            bodyB.SynchronizeTransform();\n         }\n      }\n      return minSeparation > (-1.5 * b2Settings.b2_linearSlop);\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Contacts.b2ContactSolver.s_worldManifold = new b2WorldManifold();\n      Box2D.Dynamics.Contacts.b2ContactSolver.s_psm = new b2PositionSolverManifold();\n   });\n   Box2D.inherit(b2EdgeAndCircleContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2EdgeAndCircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2EdgeAndCircleContact.b2EdgeAndCircleContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2EdgeAndCircleContact.Create = function (allocator) {\n      return new b2EdgeAndCircleContact();\n   }\n   b2EdgeAndCircleContact.Destroy = function (contact, allocator) {}\n   b2EdgeAndCircleContact.prototype.Reset = function (fixtureA, fixtureB) {\n      this.__super.Reset.call(this, fixtureA, fixtureB);\n   }\n   b2EdgeAndCircleContact.prototype.Evaluate = function () {\n      var bA = this.m_fixtureA.GetBody();\n      var bB = this.m_fixtureB.GetBody();\n      this.b2CollideEdgeAndCircle(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2EdgeShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\n   }\n   b2EdgeAndCircleContact.prototype.b2CollideEdgeAndCircle = function (manifold, edge, xf1, circle, xf2) {}\n   Box2D.inherit(b2NullContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2NullContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2NullContact.b2NullContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2NullContact.prototype.b2NullContact = function () {\n      this.__super.b2Contact.call(this);\n   }\n   b2NullContact.prototype.Evaluate = function () {}\n   Box2D.inherit(b2PolyAndCircleContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2PolyAndCircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2PolyAndCircleContact.b2PolyAndCircleContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2PolyAndCircleContact.Create = function (allocator) {\n      return new b2PolyAndCircleContact();\n   }\n   b2PolyAndCircleContact.Destroy = function (contact, allocator) {}\n   b2PolyAndCircleContact.prototype.Reset = function (fixtureA, fixtureB) {\n      this.__super.Reset.call(this, fixtureA, fixtureB);\n      b2Settings.b2Assert(fixtureA.GetType() == b2Shape.e_polygonShape);\n      b2Settings.b2Assert(fixtureB.GetType() == b2Shape.e_circleShape);\n   }\n   b2PolyAndCircleContact.prototype.Evaluate = function () {\n      var bA = this.m_fixtureA.m_body;\n      var bB = this.m_fixtureB.m_body;\n      b2Collision.CollidePolygonAndCircle(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\n   }\n   Box2D.inherit(b2PolyAndEdgeContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2PolyAndEdgeContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2PolyAndEdgeContact.b2PolyAndEdgeContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2PolyAndEdgeContact.Create = function (allocator) {\n      return new b2PolyAndEdgeContact();\n   }\n   b2PolyAndEdgeContact.Destroy = function (contact, allocator) {}\n   b2PolyAndEdgeContact.prototype.Reset = function (fixtureA, fixtureB) {\n      this.__super.Reset.call(this, fixtureA, fixtureB);\n      b2Settings.b2Assert(fixtureA.GetType() == b2Shape.e_polygonShape);\n      b2Settings.b2Assert(fixtureB.GetType() == b2Shape.e_edgeShape);\n   }\n   b2PolyAndEdgeContact.prototype.Evaluate = function () {\n      var bA = this.m_fixtureA.GetBody();\n      var bB = this.m_fixtureB.GetBody();\n      this.b2CollidePolyAndEdge(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2EdgeShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\n   }\n   b2PolyAndEdgeContact.prototype.b2CollidePolyAndEdge = function (manifold, polygon, xf1, edge, xf2) {}\n   Box2D.inherit(b2PolygonContact, Box2D.Dynamics.Contacts.b2Contact);\n   b2PolygonContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\n   b2PolygonContact.b2PolygonContact = function () {\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\n   };\n   b2PolygonContact.Create = function (allocator) {\n      return new b2PolygonContact();\n   }\n   b2PolygonContact.Destroy = function (contact, allocator) {}\n   b2PolygonContact.prototype.Reset = function (fixtureA, fixtureB) {\n      this.__super.Reset.call(this, fixtureA, fixtureB);\n   }\n   b2PolygonContact.prototype.Evaluate = function () {\n      var bA = this.m_fixtureA.GetBody();\n      var bB = this.m_fixtureB.GetBody();\n      b2Collision.CollidePolygons(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2PolygonShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\n   }\n   b2PositionSolverManifold.b2PositionSolverManifold = function () {};\n   b2PositionSolverManifold.prototype.b2PositionSolverManifold = function () {\n      this.m_normal = new b2Vec2();\n      this.m_separations = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\n      this.m_points = new Box2DVector(b2Settings.b2_maxManifoldPoints);\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\n         this.m_points[i] = new b2Vec2();\n      }\n   }\n   b2PositionSolverManifold.prototype.Initialize = function (cc) {\n      b2Settings.b2Assert(cc.pointCount > 0);\n      var i = 0;\n      var clipPointX = 0;\n      var clipPointY = 0;\n      var tMat;\n      var tVec;\n      var planePointX = 0;\n      var planePointY = 0;\n      switch (cc.type) {\n      case b2Manifold.e_circles:\n         {\n            tMat = cc.bodyA.m_xf.R;\n            tVec = cc.localPoint;\n            var pointAX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            var pointAY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            tMat = cc.bodyB.m_xf.R;\n            tVec = cc.points[0].localPoint;\n            var pointBX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            var pointBY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            var dX = pointBX - pointAX;\n            var dY = pointBY - pointAY;\n            var d2 = dX * dX + dY * dY;\n            if (d2 > Number.MIN_VALUE * Number.MIN_VALUE) {\n               var d = Math.sqrt(d2);\n               this.m_normal.x = dX / d;\n               this.m_normal.y = dY / d;\n            }\n            else {\n               this.m_normal.x = 1.0;\n               this.m_normal.y = 0.0;\n            }\n            this.m_points[0].x = 0.5 * (pointAX + pointBX);\n            this.m_points[0].y = 0.5 * (pointAY + pointBY);\n            this.m_separations[0] = dX * this.m_normal.x + dY * this.m_normal.y - cc.radius;\n         }\n         break;\n      case b2Manifold.e_faceA:\n         {\n            tMat = cc.bodyA.m_xf.R;\n            tVec = cc.localPlaneNormal;\n            this.m_normal.x = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            this.m_normal.y = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tMat = cc.bodyA.m_xf.R;\n            tVec = cc.localPoint;\n            planePointX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            planePointY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            tMat = cc.bodyB.m_xf.R;\n            for (i = 0;\n            i < cc.pointCount; ++i) {\n               tVec = cc.points[i].localPoint;\n               clipPointX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n               clipPointY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n               this.m_separations[i] = (clipPointX - planePointX) * this.m_normal.x + (clipPointY - planePointY) * this.m_normal.y - cc.radius;\n               this.m_points[i].x = clipPointX;\n               this.m_points[i].y = clipPointY;\n            }\n         }\n         break;\n      case b2Manifold.e_faceB:\n         {\n            tMat = cc.bodyB.m_xf.R;\n            tVec = cc.localPlaneNormal;\n            this.m_normal.x = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n            this.m_normal.y = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n            tMat = cc.bodyB.m_xf.R;\n            tVec = cc.localPoint;\n            planePointX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n            planePointY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n            tMat = cc.bodyA.m_xf.R;\n            for (i = 0;\n            i < cc.pointCount; ++i) {\n               tVec = cc.points[i].localPoint;\n               clipPointX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\n               clipPointY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\n               this.m_separations[i] = (clipPointX - planePointX) * this.m_normal.x + (clipPointY - planePointY) * this.m_normal.y - cc.radius;\n               this.m_points[i].Set(clipPointX, clipPointY);\n            }\n            this.m_normal.x *= (-1);\n            this.m_normal.y *= (-1);\n         }\n         break;\n      }\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointA = new b2Vec2();\n      Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointB = new b2Vec2();\n   });\n})();\n(function () {\n   var b2Body = Box2D.Dynamics.b2Body,\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\n      b2FilterData = Box2D.Dynamics.b2FilterData,\n      b2Fixture = Box2D.Dynamics.b2Fixture,\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      b2Island = Box2D.Dynamics.b2Island,\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\n      b2World = Box2D.Dynamics.b2World,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\n      b2BuoyancyController = Box2D.Dynamics.Controllers.b2BuoyancyController,\n      b2ConstantAccelController = Box2D.Dynamics.Controllers.b2ConstantAccelController,\n      b2ConstantForceController = Box2D.Dynamics.Controllers.b2ConstantForceController,\n      b2Controller = Box2D.Dynamics.Controllers.b2Controller,\n      b2ControllerEdge = Box2D.Dynamics.Controllers.b2ControllerEdge,\n      b2GravityController = Box2D.Dynamics.Controllers.b2GravityController,\n      b2TensorDampingController = Box2D.Dynamics.Controllers.b2TensorDampingController;\n\n   Box2D.inherit(b2BuoyancyController, Box2D.Dynamics.Controllers.b2Controller);\n   b2BuoyancyController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\n   b2BuoyancyController.b2BuoyancyController = function () {\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\n      this.normal = new b2Vec2(0, (-1));\n      this.offset = 0;\n      this.density = 0;\n      this.velocity = new b2Vec2(0, 0);\n      this.linearDrag = 2;\n      this.angularDrag = 1;\n      this.useDensity = false;\n      this.useWorldGravity = true;\n      this.gravity = null;\n   };\n   b2BuoyancyController.prototype.Step = function (step) {\n      if (!this.m_bodyList) return;\n      if (this.useWorldGravity) {\n         this.gravity = this.GetWorld().GetGravity().Copy();\n      }\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\n         var body = i.body;\n         if (body.IsAwake() == false) {\n            continue;\n         }\n         var areac = new b2Vec2();\n         var massc = new b2Vec2();\n         var area = 0.0;\n         var mass = 0.0;\n         for (var fixture = body.GetFixtureList(); fixture; fixture = fixture.GetNext()) {\n            var sc = new b2Vec2();\n            var sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\n            area += sarea;\n            areac.x += sarea * sc.x;\n            areac.y += sarea * sc.y;\n            var shapeDensity = 0;\n            if (this.useDensity) {\n               shapeDensity = 1;\n            }\n            else {\n               shapeDensity = 1;\n            }\n            mass += sarea * shapeDensity;\n            massc.x += sarea * sc.x * shapeDensity;\n            massc.y += sarea * sc.y * shapeDensity;\n         }\n         areac.x /= area;\n         areac.y /= area;\n         massc.x /= mass;\n         massc.y /= mass;\n         if (area < Number.MIN_VALUE) continue;\n         var buoyancyForce = this.gravity.GetNegative();\n         buoyancyForce.Multiply(this.density * area);\n         body.ApplyForce(buoyancyForce, massc);\n         var dragForce = body.GetLinearVelocityFromWorldPoint(areac);\n         dragForce.Subtract(this.velocity);\n         dragForce.Multiply((-this.linearDrag * area));\n         body.ApplyForce(dragForce, areac);\n         body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\n      }\n   }\n   b2BuoyancyController.prototype.Draw = function (debugDraw) {\n      var r = 1000;\n      var p1 = new b2Vec2();\n      var p2 = new b2Vec2();\n      p1.x = this.normal.x * this.offset + this.normal.y * r;\n      p1.y = this.normal.y * this.offset - this.normal.x * r;\n      p2.x = this.normal.x * this.offset - this.normal.y * r;\n      p2.y = this.normal.y * this.offset + this.normal.x * r;\n      var color = new b2Color(0, 0, 1);\n      debugDraw.DrawSegment(p1, p2, color);\n   }\n   Box2D.inherit(b2ConstantAccelController, Box2D.Dynamics.Controllers.b2Controller);\n   b2ConstantAccelController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\n   b2ConstantAccelController.b2ConstantAccelController = function () {\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\n      this.A = new b2Vec2(0, 0);\n   };\n   b2ConstantAccelController.prototype.Step = function (step) {\n      var smallA = new b2Vec2(this.A.x * step.dt, this.A.y * step.dt);\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\n         var body = i.body;\n         if (!body.IsAwake()) continue;\n         body.SetLinearVelocity(new b2Vec2(body.GetLinearVelocity().x + smallA.x, body.GetLinearVelocity().y + smallA.y));\n      }\n   }\n   Box2D.inherit(b2ConstantForceController, Box2D.Dynamics.Controllers.b2Controller);\n   b2ConstantForceController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\n   b2ConstantForceController.b2ConstantForceController = function () {\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\n      this.F = new b2Vec2(0, 0);\n   };\n   b2ConstantForceController.prototype.Step = function (step) {\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\n         var body = i.body;\n         if (!body.IsAwake()) continue;\n         body.ApplyForce(this.F, body.GetWorldCenter());\n      }\n   }\n   b2Controller.b2Controller = function () {};\n   b2Controller.prototype.Step = function (step) {}\n   b2Controller.prototype.Draw = function (debugDraw) {}\n   b2Controller.prototype.AddBody = function (body) {\n      var edge = new b2ControllerEdge();\n      edge.controller = this;\n      edge.body = body;\n      edge.nextBody = this.m_bodyList;\n      edge.prevBody = null;\n      this.m_bodyList = edge;\n      if (edge.nextBody) edge.nextBody.prevBody = edge;\n      this.m_bodyCount++;\n      edge.nextController = body.m_controllerList;\n      edge.prevController = null;\n      body.m_controllerList = edge;\n      if (edge.nextController) edge.nextController.prevController = edge;\n      body.m_controllerCount++;\n   }\n   b2Controller.prototype.RemoveBody = function (body) {\n      var edge = body.m_controllerList;\n      while (edge && edge.controller != this)\n      edge = edge.nextController;\n      if (edge.prevBody) edge.prevBody.nextBody = edge.nextBody;\n      if (edge.nextBody) edge.nextBody.prevBody = edge.prevBody;\n      if (edge.nextController) edge.nextController.prevController = edge.prevController;\n      if (edge.prevController) edge.prevController.nextController = edge.nextController;\n      if (this.m_bodyList == edge) this.m_bodyList = edge.nextBody;\n      if (body.m_controllerList == edge) body.m_controllerList = edge.nextController;\n      body.m_controllerCount--;\n      this.m_bodyCount--;\n   }\n   b2Controller.prototype.Clear = function () {\n      while (this.m_bodyList)\n      this.RemoveBody(this.m_bodyList.body);\n   }\n   b2Controller.prototype.GetNext = function () {\n      return this.m_next;\n   }\n   b2Controller.prototype.GetWorld = function () {\n      return this.m_world;\n   }\n   b2Controller.prototype.GetBodyList = function () {\n      return this.m_bodyList;\n   }\n   b2ControllerEdge.b2ControllerEdge = function () {};\n   Box2D.inherit(b2GravityController, Box2D.Dynamics.Controllers.b2Controller);\n   b2GravityController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\n   b2GravityController.b2GravityController = function () {\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\n      this.G = 1;\n      this.invSqr = true;\n   };\n   b2GravityController.prototype.Step = function (step) {\n      var i = null;\n      var body1 = null;\n      var p1 = null;\n      var mass1 = 0;\n      var j = null;\n      var body2 = null;\n      var p2 = null;\n      var dx = 0;\n      var dy = 0;\n      var r2 = 0;\n      var f = null;\n      if (this.invSqr) {\n         for (i = this.m_bodyList;\n         i; i = i.nextBody) {\n            body1 = i.body;\n            p1 = body1.GetWorldCenter();\n            mass1 = body1.GetMass();\n            for (j = this.m_bodyList;\n            j != i; j = j.nextBody) {\n               body2 = j.body;\n               p2 = body2.GetWorldCenter();\n               dx = p2.x - p1.x;\n               dy = p2.y - p1.y;\n               r2 = dx * dx + dy * dy;\n               if (r2 < Number.MIN_VALUE) continue;\n               f = new b2Vec2(dx, dy);\n               f.Multiply(this.G / r2 / Math.sqrt(r2) * mass1 * body2.GetMass());\n               if (body1.IsAwake()) body1.ApplyForce(f, p1);\n               f.Multiply((-1));\n               if (body2.IsAwake()) body2.ApplyForce(f, p2);\n            }\n         }\n      }\n      else {\n         for (i = this.m_bodyList;\n         i; i = i.nextBody) {\n            body1 = i.body;\n            p1 = body1.GetWorldCenter();\n            mass1 = body1.GetMass();\n            for (j = this.m_bodyList;\n            j != i; j = j.nextBody) {\n               body2 = j.body;\n               p2 = body2.GetWorldCenter();\n               dx = p2.x - p1.x;\n               dy = p2.y - p1.y;\n               r2 = dx * dx + dy * dy;\n               if (r2 < Number.MIN_VALUE) continue;\n               f = new b2Vec2(dx, dy);\n               f.Multiply(this.G / r2 * mass1 * body2.GetMass());\n               if (body1.IsAwake()) body1.ApplyForce(f, p1);\n               f.Multiply((-1));\n               if (body2.IsAwake()) body2.ApplyForce(f, p2);\n            }\n         }\n      }\n   }\n   Box2D.inherit(b2TensorDampingController, Box2D.Dynamics.Controllers.b2Controller);\n   b2TensorDampingController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\n   b2TensorDampingController.b2TensorDampingController = function () {\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\n      this.T = new b2Mat22();\n      this.maxTimestep = 0;\n   };\n   b2TensorDampingController.prototype.SetAxisAligned = function (xDamping, yDamping) {\n      if (xDamping === undefined) xDamping = 0;\n      if (yDamping === undefined) yDamping = 0;\n      this.T.col1.x = (-xDamping);\n      this.T.col1.y = 0;\n      this.T.col2.x = 0;\n      this.T.col2.y = (-yDamping);\n      if (xDamping > 0 || yDamping > 0) {\n         this.maxTimestep = 1 / Math.max(xDamping, yDamping);\n      }\n      else {\n         this.maxTimestep = 0;\n      }\n   }\n   b2TensorDampingController.prototype.Step = function (step) {\n      var timestep = step.dt;\n      if (timestep <= Number.MIN_VALUE) return;\n      if (timestep > this.maxTimestep && this.maxTimestep > 0) timestep = this.maxTimestep;\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\n         var body = i.body;\n         if (!body.IsAwake()) {\n            continue;\n         }\n         var damping = body.GetWorldVector(b2Math.MulMV(this.T, body.GetLocalVector(body.GetLinearVelocity())));\n         body.SetLinearVelocity(new b2Vec2(body.GetLinearVelocity().x + damping.x * timestep, body.GetLinearVelocity().y + damping.y * timestep));\n      }\n   }\n})();\n(function () {\n   var b2Color = Box2D.Common.b2Color,\n      b2internal = Box2D.Common.b2internal,\n      b2Settings = Box2D.Common.b2Settings,\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\n      b2Math = Box2D.Common.Math.b2Math,\n      b2Sweep = Box2D.Common.Math.b2Sweep,\n      b2Transform = Box2D.Common.Math.b2Transform,\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\n      b2DistanceJoint = Box2D.Dynamics.Joints.b2DistanceJoint,\n      b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef,\n      b2FrictionJoint = Box2D.Dynamics.Joints.b2FrictionJoint,\n      b2FrictionJointDef = Box2D.Dynamics.Joints.b2FrictionJointDef,\n      b2GearJoint = Box2D.Dynamics.Joints.b2GearJoint,\n      b2GearJointDef = Box2D.Dynamics.Joints.b2GearJointDef,\n      b2Jacobian = Box2D.Dynamics.Joints.b2Jacobian,\n      b2Joint = Box2D.Dynamics.Joints.b2Joint,\n      b2JointDef = Box2D.Dynamics.Joints.b2JointDef,\n      b2JointEdge = Box2D.Dynamics.Joints.b2JointEdge,\n      b2LineJoint = Box2D.Dynamics.Joints.b2LineJoint,\n      b2LineJointDef = Box2D.Dynamics.Joints.b2LineJointDef,\n      b2MouseJoint = Box2D.Dynamics.Joints.b2MouseJoint,\n      b2MouseJointDef = Box2D.Dynamics.Joints.b2MouseJointDef,\n      b2PrismaticJoint = Box2D.Dynamics.Joints.b2PrismaticJoint,\n      b2PrismaticJointDef = Box2D.Dynamics.Joints.b2PrismaticJointDef,\n      b2PulleyJoint = Box2D.Dynamics.Joints.b2PulleyJoint,\n      b2PulleyJointDef = Box2D.Dynamics.Joints.b2PulleyJointDef,\n      b2RevoluteJoint = Box2D.Dynamics.Joints.b2RevoluteJoint,\n      b2RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef,\n      b2WeldJoint = Box2D.Dynamics.Joints.b2WeldJoint,\n      b2WeldJointDef = Box2D.Dynamics.Joints.b2WeldJointDef,\n      b2Body = Box2D.Dynamics.b2Body,\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\n      b2FilterData = Box2D.Dynamics.b2FilterData,\n      b2Fixture = Box2D.Dynamics.b2Fixture,\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      b2Island = Box2D.Dynamics.b2Island,\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\n      b2World = Box2D.Dynamics.b2World;\n\n   Box2D.inherit(b2DistanceJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2DistanceJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2DistanceJoint.b2DistanceJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_u = new b2Vec2();\n   };\n   b2DistanceJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2DistanceJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2DistanceJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_u.x, inv_dt * this.m_impulse * this.m_u.y);\n   }\n   b2DistanceJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return 0.0;\n   }\n   b2DistanceJoint.prototype.GetLength = function () {\n      return this.m_length;\n   }\n   b2DistanceJoint.prototype.SetLength = function (length) {\n      if (length === undefined) length = 0;\n      this.m_length = length;\n   }\n   b2DistanceJoint.prototype.GetFrequency = function () {\n      return this.m_frequencyHz;\n   }\n   b2DistanceJoint.prototype.SetFrequency = function (hz) {\n      if (hz === undefined) hz = 0;\n      this.m_frequencyHz = hz;\n   }\n   b2DistanceJoint.prototype.GetDampingRatio = function () {\n      return this.m_dampingRatio;\n   }\n   b2DistanceJoint.prototype.SetDampingRatio = function (ratio) {\n      if (ratio === undefined) ratio = 0;\n      this.m_dampingRatio = ratio;\n   }\n   b2DistanceJoint.prototype.b2DistanceJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      var tMat;\n      var tX = 0;\n      var tY = 0;\n      this.m_localAnchor1.SetV(def.localAnchorA);\n      this.m_localAnchor2.SetV(def.localAnchorB);\n      this.m_length = def.length;\n      this.m_frequencyHz = def.frequencyHz;\n      this.m_dampingRatio = def.dampingRatio;\n      this.m_impulse = 0.0;\n      this.m_gamma = 0.0;\n      this.m_bias = 0.0;\n   }\n   b2DistanceJoint.prototype.InitVelocityConstraints = function (step) {\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      this.m_u.x = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n      this.m_u.y = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n      var length = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);\n      if (length > b2Settings.b2_linearSlop) {\n         this.m_u.Multiply(1.0 / length);\n      }\n      else {\n         this.m_u.SetZero();\n      }\n      var cr1u = (r1X * this.m_u.y - r1Y * this.m_u.x);\n      var cr2u = (r2X * this.m_u.y - r2Y * this.m_u.x);\n      var invMass = bA.m_invMass + bA.m_invI * cr1u * cr1u + bB.m_invMass + bB.m_invI * cr2u * cr2u;\n      this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n      if (this.m_frequencyHz > 0.0) {\n         var C = length - this.m_length;\n         var omega = 2.0 * Math.PI * this.m_frequencyHz;\n         var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n         var k = this.m_mass * omega * omega;\n         this.m_gamma = step.dt * (d + step.dt * k);\n         this.m_gamma = this.m_gamma != 0.0 ? 1 / this.m_gamma : 0.0;\n         this.m_bias = C * step.dt * k * this.m_gamma;\n         this.m_mass = invMass + this.m_gamma;\n         this.m_mass = this.m_mass != 0.0 ? 1.0 / this.m_mass : 0.0;\n      }\n      if (step.warmStarting) {\n         this.m_impulse *= step.dtRatio;\n         var PX = this.m_impulse * this.m_u.x;\n         var PY = this.m_impulse * this.m_u.y;\n         bA.m_linearVelocity.x -= bA.m_invMass * PX;\n         bA.m_linearVelocity.y -= bA.m_invMass * PY;\n         bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);\n         bB.m_linearVelocity.x += bB.m_invMass * PX;\n         bB.m_linearVelocity.y += bB.m_invMass * PY;\n         bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);\n      }\n      else {\n         this.m_impulse = 0.0;\n      }\n   }\n   b2DistanceJoint.prototype.SolveVelocityConstraints = function (step) {\n      var tMat;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\n      var v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\n      var v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\n      var v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\n      var Cdot = (this.m_u.x * (v2X - v1X) + this.m_u.y * (v2Y - v1Y));\n      var impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\n      this.m_impulse += impulse;\n      var PX = impulse * this.m_u.x;\n      var PY = impulse * this.m_u.y;\n      bA.m_linearVelocity.x -= bA.m_invMass * PX;\n      bA.m_linearVelocity.y -= bA.m_invMass * PY;\n      bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);\n      bB.m_linearVelocity.x += bB.m_invMass * PX;\n      bB.m_linearVelocity.y += bB.m_invMass * PY;\n      bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);\n   }\n   b2DistanceJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var tMat;\n      if (this.m_frequencyHz > 0.0) {\n         return true;\n      }\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n      var length = Math.sqrt(dX * dX + dY * dY);\n      dX /= length;\n      dY /= length;\n      var C = length - this.m_length;\n      C = b2Math.Clamp(C, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\n      var impulse = (-this.m_mass * C);\n      this.m_u.Set(dX, dY);\n      var PX = impulse * this.m_u.x;\n      var PY = impulse * this.m_u.y;\n      bA.m_sweep.c.x -= bA.m_invMass * PX;\n      bA.m_sweep.c.y -= bA.m_invMass * PY;\n      bA.m_sweep.a -= bA.m_invI * (r1X * PY - r1Y * PX);\n      bB.m_sweep.c.x += bB.m_invMass * PX;\n      bB.m_sweep.c.y += bB.m_invMass * PY;\n      bB.m_sweep.a += bB.m_invI * (r2X * PY - r2Y * PX);\n      bA.SynchronizeTransform();\n      bB.SynchronizeTransform();\n      return b2Math.Abs(C) < b2Settings.b2_linearSlop;\n   }\n   Box2D.inherit(b2DistanceJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2DistanceJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2DistanceJointDef.b2DistanceJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n   };\n   b2DistanceJointDef.prototype.b2DistanceJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_distanceJoint;\n      this.length = 1.0;\n      this.frequencyHz = 0.0;\n      this.dampingRatio = 0.0;\n   }\n   b2DistanceJointDef.prototype.Initialize = function (bA, bB, anchorA, anchorB) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchorA));\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchorB));\n      var dX = anchorB.x - anchorA.x;\n      var dY = anchorB.y - anchorA.y;\n      this.length = Math.sqrt(dX * dX + dY * dY);\n      this.frequencyHz = 0.0;\n      this.dampingRatio = 0.0;\n   }\n   Box2D.inherit(b2FrictionJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2FrictionJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2FrictionJoint.b2FrictionJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_localAnchorA = new b2Vec2();\n      this.m_localAnchorB = new b2Vec2();\n      this.m_linearMass = new b2Mat22();\n      this.m_linearImpulse = new b2Vec2();\n   };\n   b2FrictionJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);\n   }\n   b2FrictionJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);\n   }\n   b2FrictionJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\n   }\n   b2FrictionJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return inv_dt * this.m_angularImpulse;\n   }\n   b2FrictionJoint.prototype.SetMaxForce = function (force) {\n      if (force === undefined) force = 0;\n      this.m_maxForce = force;\n   }\n   b2FrictionJoint.prototype.GetMaxForce = function () {\n      return this.m_maxForce;\n   }\n   b2FrictionJoint.prototype.SetMaxTorque = function (torque) {\n      if (torque === undefined) torque = 0;\n      this.m_maxTorque = torque;\n   }\n   b2FrictionJoint.prototype.GetMaxTorque = function () {\n      return this.m_maxTorque;\n   }\n   b2FrictionJoint.prototype.b2FrictionJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      this.m_localAnchorA.SetV(def.localAnchorA);\n      this.m_localAnchorB.SetV(def.localAnchorB);\n      this.m_linearMass.SetZero();\n      this.m_angularMass = 0.0;\n      this.m_linearImpulse.SetZero();\n      this.m_angularImpulse = 0.0;\n      this.m_maxForce = def.maxForce;\n      this.m_maxTorque = def.maxTorque;\n   }\n   b2FrictionJoint.prototype.InitVelocityConstraints = function (step) {\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\n      rAX = tX;\n      tMat = bB.m_xf.R;\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\n      rBX = tX;\n      var mA = bA.m_invMass;\n      var mB = bB.m_invMass;\n      var iA = bA.m_invI;\n      var iB = bB.m_invI;\n      var K = new b2Mat22();\n      K.col1.x = mA + mB;\n      K.col2.x = 0.0;\n      K.col1.y = 0.0;\n      K.col2.y = mA + mB;\n      K.col1.x += iA * rAY * rAY;\n      K.col2.x += (-iA * rAX * rAY);\n      K.col1.y += (-iA * rAX * rAY);\n      K.col2.y += iA * rAX * rAX;\n      K.col1.x += iB * rBY * rBY;\n      K.col2.x += (-iB * rBX * rBY);\n      K.col1.y += (-iB * rBX * rBY);\n      K.col2.y += iB * rBX * rBX;\n      K.GetInverse(this.m_linearMass);\n      this.m_angularMass = iA + iB;\n      if (this.m_angularMass > 0.0) {\n         this.m_angularMass = 1.0 / this.m_angularMass;\n      }\n      if (step.warmStarting) {\n         this.m_linearImpulse.x *= step.dtRatio;\n         this.m_linearImpulse.y *= step.dtRatio;\n         this.m_angularImpulse *= step.dtRatio;\n         var P = this.m_linearImpulse;\n         bA.m_linearVelocity.x -= mA * P.x;\n         bA.m_linearVelocity.y -= mA * P.y;\n         bA.m_angularVelocity -= iA * (rAX * P.y - rAY * P.x + this.m_angularImpulse);\n         bB.m_linearVelocity.x += mB * P.x;\n         bB.m_linearVelocity.y += mB * P.y;\n         bB.m_angularVelocity += iB * (rBX * P.y - rBY * P.x + this.m_angularImpulse);\n      }\n      else {\n         this.m_linearImpulse.SetZero();\n         this.m_angularImpulse = 0.0;\n      }\n   }\n   b2FrictionJoint.prototype.SolveVelocityConstraints = function (step) {\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var vA = bA.m_linearVelocity;\n      var wA = bA.m_angularVelocity;\n      var vB = bB.m_linearVelocity;\n      var wB = bB.m_angularVelocity;\n      var mA = bA.m_invMass;\n      var mB = bB.m_invMass;\n      var iA = bA.m_invI;\n      var iB = bB.m_invI;\n      tMat = bA.m_xf.R;\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\n      rAX = tX;\n      tMat = bB.m_xf.R;\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\n      rBX = tX;\n      var maxImpulse = 0; {\n         var Cdot = wB - wA;\n         var impulse = (-this.m_angularMass * Cdot);\n         var oldImpulse = this.m_angularImpulse;\n         maxImpulse = step.dt * this.m_maxTorque;\n         this.m_angularImpulse = b2Math.Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\n         impulse = this.m_angularImpulse - oldImpulse;\n         wA -= iA * impulse;\n         wB += iB * impulse;\n      } {\n         var CdotX = vB.x - wB * rBY - vA.x + wA * rAY;\n         var CdotY = vB.y + wB * rBX - vA.y - wA * rAX;\n         var impulseV = b2Math.MulMV(this.m_linearMass, new b2Vec2((-CdotX), (-CdotY)));\n         var oldImpulseV = this.m_linearImpulse.Copy();\n         this.m_linearImpulse.Add(impulseV);\n         maxImpulse = step.dt * this.m_maxForce;\n         if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\n            this.m_linearImpulse.Normalize();\n            this.m_linearImpulse.Multiply(maxImpulse);\n         }\n         impulseV = b2Math.SubtractVV(this.m_linearImpulse, oldImpulseV);\n         vA.x -= mA * impulseV.x;\n         vA.y -= mA * impulseV.y;\n         wA -= iA * (rAX * impulseV.y - rAY * impulseV.x);\n         vB.x += mB * impulseV.x;\n         vB.y += mB * impulseV.y;\n         wB += iB * (rBX * impulseV.y - rBY * impulseV.x);\n      }\n      bA.m_angularVelocity = wA;\n      bB.m_angularVelocity = wB;\n   }\n   b2FrictionJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      return true;\n   }\n   Box2D.inherit(b2FrictionJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2FrictionJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2FrictionJointDef.b2FrictionJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n   };\n   b2FrictionJointDef.prototype.b2FrictionJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_frictionJoint;\n      this.maxForce = 0.0;\n      this.maxTorque = 0.0;\n   }\n   b2FrictionJointDef.prototype.Initialize = function (bA, bB, anchor) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));\n   }\n   Box2D.inherit(b2GearJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2GearJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2GearJoint.b2GearJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_groundAnchor1 = new b2Vec2();\n      this.m_groundAnchor2 = new b2Vec2();\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_J = new b2Jacobian();\n   };\n   b2GearJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2GearJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2GearJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_J.linearB.x, inv_dt * this.m_impulse * this.m_J.linearB.y);\n   }\n   b2GearJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      var tMat = this.m_bodyB.m_xf.R;\n      var rX = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x;\n      var rY = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y;\n      var tX = tMat.col1.x * rX + tMat.col2.x * rY;\n      rY = tMat.col1.y * rX + tMat.col2.y * rY;\n      rX = tX;\n      var PX = this.m_impulse * this.m_J.linearB.x;\n      var PY = this.m_impulse * this.m_J.linearB.y;\n      return inv_dt * (this.m_impulse * this.m_J.angularB - rX * PY + rY * PX);\n   }\n   b2GearJoint.prototype.GetRatio = function () {\n      return this.m_ratio;\n   }\n   b2GearJoint.prototype.SetRatio = function (ratio) {\n      if (ratio === undefined) ratio = 0;\n      this.m_ratio = ratio;\n   }\n   b2GearJoint.prototype.b2GearJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      var type1 = parseInt(def.joint1.m_type);\n      var type2 = parseInt(def.joint2.m_type);\n      this.m_revolute1 = null;\n      this.m_prismatic1 = null;\n      this.m_revolute2 = null;\n      this.m_prismatic2 = null;\n      var coordinate1 = 0;\n      var coordinate2 = 0;\n      this.m_ground1 = def.joint1.GetBodyA();\n      this.m_bodyA = def.joint1.GetBodyB();\n      if (type1 == b2Joint.e_revoluteJoint) {\n         this.m_revolute1 = (def.joint1 instanceof b2RevoluteJoint ? def.joint1 : null);\n         this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1);\n         this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2);\n         coordinate1 = this.m_revolute1.GetJointAngle();\n      }\n      else {\n         this.m_prismatic1 = (def.joint1 instanceof b2PrismaticJoint ? def.joint1 : null);\n         this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1);\n         this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2);\n         coordinate1 = this.m_prismatic1.GetJointTranslation();\n      }\n      this.m_ground2 = def.joint2.GetBodyA();\n      this.m_bodyB = def.joint2.GetBodyB();\n      if (type2 == b2Joint.e_revoluteJoint) {\n         this.m_revolute2 = (def.joint2 instanceof b2RevoluteJoint ? def.joint2 : null);\n         this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1);\n         this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2);\n         coordinate2 = this.m_revolute2.GetJointAngle();\n      }\n      else {\n         this.m_prismatic2 = (def.joint2 instanceof b2PrismaticJoint ? def.joint2 : null);\n         this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1);\n         this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2);\n         coordinate2 = this.m_prismatic2.GetJointTranslation();\n      }\n      this.m_ratio = def.ratio;\n      this.m_constant = coordinate1 + this.m_ratio * coordinate2;\n      this.m_impulse = 0.0;\n   }\n   b2GearJoint.prototype.InitVelocityConstraints = function (step) {\n      var g1 = this.m_ground1;\n      var g2 = this.m_ground2;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var ugX = 0;\n      var ugY = 0;\n      var rX = 0;\n      var rY = 0;\n      var tMat;\n      var tVec;\n      var crug = 0;\n      var tX = 0;\n      var K = 0.0;\n      this.m_J.SetZero();\n      if (this.m_revolute1) {\n         this.m_J.angularA = (-1.0);\n         K += bA.m_invI;\n      }\n      else {\n         tMat = g1.m_xf.R;\n         tVec = this.m_prismatic1.m_localXAxis1;\n         ugX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n         ugY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n         tMat = bA.m_xf.R;\n         rX = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         rY = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = tMat.col1.x * rX + tMat.col2.x * rY;\n         rY = tMat.col1.y * rX + tMat.col2.y * rY;\n         rX = tX;\n         crug = rX * ugY - rY * ugX;\n         this.m_J.linearA.Set((-ugX), (-ugY));\n         this.m_J.angularA = (-crug);\n         K += bA.m_invMass + bA.m_invI * crug * crug;\n      }\n      if (this.m_revolute2) {\n         this.m_J.angularB = (-this.m_ratio);\n         K += this.m_ratio * this.m_ratio * bB.m_invI;\n      }\n      else {\n         tMat = g2.m_xf.R;\n         tVec = this.m_prismatic2.m_localXAxis1;\n         ugX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\n         ugY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\n         tMat = bB.m_xf.R;\n         rX = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         rY = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = tMat.col1.x * rX + tMat.col2.x * rY;\n         rY = tMat.col1.y * rX + tMat.col2.y * rY;\n         rX = tX;\n         crug = rX * ugY - rY * ugX;\n         this.m_J.linearB.Set((-this.m_ratio * ugX), (-this.m_ratio * ugY));\n         this.m_J.angularB = (-this.m_ratio * crug);\n         K += this.m_ratio * this.m_ratio * (bB.m_invMass + bB.m_invI * crug * crug);\n      }\n      this.m_mass = K > 0.0 ? 1.0 / K : 0.0;\n      if (step.warmStarting) {\n         bA.m_linearVelocity.x += bA.m_invMass * this.m_impulse * this.m_J.linearA.x;\n         bA.m_linearVelocity.y += bA.m_invMass * this.m_impulse * this.m_J.linearA.y;\n         bA.m_angularVelocity += bA.m_invI * this.m_impulse * this.m_J.angularA;\n         bB.m_linearVelocity.x += bB.m_invMass * this.m_impulse * this.m_J.linearB.x;\n         bB.m_linearVelocity.y += bB.m_invMass * this.m_impulse * this.m_J.linearB.y;\n         bB.m_angularVelocity += bB.m_invI * this.m_impulse * this.m_J.angularB;\n      }\n      else {\n         this.m_impulse = 0.0;\n      }\n   }\n   b2GearJoint.prototype.SolveVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var Cdot = this.m_J.Compute(bA.m_linearVelocity, bA.m_angularVelocity, bB.m_linearVelocity, bB.m_angularVelocity);\n      var impulse = (-this.m_mass * Cdot);\n      this.m_impulse += impulse;\n      bA.m_linearVelocity.x += bA.m_invMass * impulse * this.m_J.linearA.x;\n      bA.m_linearVelocity.y += bA.m_invMass * impulse * this.m_J.linearA.y;\n      bA.m_angularVelocity += bA.m_invI * impulse * this.m_J.angularA;\n      bB.m_linearVelocity.x += bB.m_invMass * impulse * this.m_J.linearB.x;\n      bB.m_linearVelocity.y += bB.m_invMass * impulse * this.m_J.linearB.y;\n      bB.m_angularVelocity += bB.m_invI * impulse * this.m_J.angularB;\n   }\n   b2GearJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var linearError = 0.0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var coordinate1 = 0;\n      var coordinate2 = 0;\n      if (this.m_revolute1) {\n         coordinate1 = this.m_revolute1.GetJointAngle();\n      }\n      else {\n         coordinate1 = this.m_prismatic1.GetJointTranslation();\n      }\n      if (this.m_revolute2) {\n         coordinate2 = this.m_revolute2.GetJointAngle();\n      }\n      else {\n         coordinate2 = this.m_prismatic2.GetJointTranslation();\n      }\n      var C = this.m_constant - (coordinate1 + this.m_ratio * coordinate2);\n      var impulse = (-this.m_mass * C);\n      bA.m_sweep.c.x += bA.m_invMass * impulse * this.m_J.linearA.x;\n      bA.m_sweep.c.y += bA.m_invMass * impulse * this.m_J.linearA.y;\n      bA.m_sweep.a += bA.m_invI * impulse * this.m_J.angularA;\n      bB.m_sweep.c.x += bB.m_invMass * impulse * this.m_J.linearB.x;\n      bB.m_sweep.c.y += bB.m_invMass * impulse * this.m_J.linearB.y;\n      bB.m_sweep.a += bB.m_invI * impulse * this.m_J.angularB;\n      bA.SynchronizeTransform();\n      bB.SynchronizeTransform();\n      return linearError < b2Settings.b2_linearSlop;\n   }\n   Box2D.inherit(b2GearJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2GearJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2GearJointDef.b2GearJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n   };\n   b2GearJointDef.prototype.b2GearJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_gearJoint;\n      this.joint1 = null;\n      this.joint2 = null;\n      this.ratio = 1.0;\n   }\n   b2Jacobian.b2Jacobian = function () {\n      this.linearA = new b2Vec2();\n      this.linearB = new b2Vec2();\n   };\n   b2Jacobian.prototype.SetZero = function () {\n      this.linearA.SetZero();\n      this.angularA = 0.0;\n      this.linearB.SetZero();\n      this.angularB = 0.0;\n   }\n   b2Jacobian.prototype.Set = function (x1, a1, x2, a2) {\n      if (a1 === undefined) a1 = 0;\n      if (a2 === undefined) a2 = 0;\n      this.linearA.SetV(x1);\n      this.angularA = a1;\n      this.linearB.SetV(x2);\n      this.angularB = a2;\n   }\n   b2Jacobian.prototype.Compute = function (x1, a1, x2, a2) {\n      if (a1 === undefined) a1 = 0;\n      if (a2 === undefined) a2 = 0;\n      return (this.linearA.x * x1.x + this.linearA.y * x1.y) + this.angularA * a1 + (this.linearB.x * x2.x + this.linearB.y * x2.y) + this.angularB * a2;\n   }\n   b2Joint.b2Joint = function () {\n      this.m_edgeA = new b2JointEdge();\n      this.m_edgeB = new b2JointEdge();\n      this.m_localCenterA = new b2Vec2();\n      this.m_localCenterB = new b2Vec2();\n   };\n   b2Joint.prototype.GetType = function () {\n      return this.m_type;\n   }\n   b2Joint.prototype.GetAnchorA = function () {\n      return null;\n   }\n   b2Joint.prototype.GetAnchorB = function () {\n      return null;\n   }\n   b2Joint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return null;\n   }\n   b2Joint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return 0.0;\n   }\n   b2Joint.prototype.GetBodyA = function () {\n      return this.m_bodyA;\n   }\n   b2Joint.prototype.GetBodyB = function () {\n      return this.m_bodyB;\n   }\n   b2Joint.prototype.GetNext = function () {\n      return this.m_next;\n   }\n   b2Joint.prototype.GetUserData = function () {\n      return this.m_userData;\n   }\n   b2Joint.prototype.SetUserData = function (data) {\n      this.m_userData = data;\n   }\n   b2Joint.prototype.IsActive = function () {\n      return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\n   }\n   b2Joint.Create = function (def, allocator) {\n      var joint = null;\n      switch (def.type) {\n      case b2Joint.e_distanceJoint:\n         {\n            joint = new b2DistanceJoint((def instanceof b2DistanceJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_mouseJoint:\n         {\n            joint = new b2MouseJoint((def instanceof b2MouseJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_prismaticJoint:\n         {\n            joint = new b2PrismaticJoint((def instanceof b2PrismaticJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_revoluteJoint:\n         {\n            joint = new b2RevoluteJoint((def instanceof b2RevoluteJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_pulleyJoint:\n         {\n            joint = new b2PulleyJoint((def instanceof b2PulleyJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_gearJoint:\n         {\n            joint = new b2GearJoint((def instanceof b2GearJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_lineJoint:\n         {\n            joint = new b2LineJoint((def instanceof b2LineJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_weldJoint:\n         {\n            joint = new b2WeldJoint((def instanceof b2WeldJointDef ? def : null));\n         }\n         break;\n      case b2Joint.e_frictionJoint:\n         {\n            joint = new b2FrictionJoint((def instanceof b2FrictionJointDef ? def : null));\n         }\n         break;\n      default:\n         break;\n      }\n      return joint;\n   }\n   b2Joint.Destroy = function (joint, allocator) {}\n   b2Joint.prototype.b2Joint = function (def) {\n      b2Settings.b2Assert(def.bodyA != def.bodyB);\n      this.m_type = def.type;\n      this.m_prev = null;\n      this.m_next = null;\n      this.m_bodyA = def.bodyA;\n      this.m_bodyB = def.bodyB;\n      this.m_collideConnected = def.collideConnected;\n      this.m_islandFlag = false;\n      this.m_userData = def.userData;\n   }\n   b2Joint.prototype.InitVelocityConstraints = function (step) {}\n   b2Joint.prototype.SolveVelocityConstraints = function (step) {}\n   b2Joint.prototype.FinalizeVelocityConstraints = function () {}\n   b2Joint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      return false;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Joints.b2Joint.e_unknownJoint = 0;\n      Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint = 1;\n      Box2D.Dynamics.Joints.b2Joint.e_prismaticJoint = 2;\n      Box2D.Dynamics.Joints.b2Joint.e_distanceJoint = 3;\n      Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint = 4;\n      Box2D.Dynamics.Joints.b2Joint.e_mouseJoint = 5;\n      Box2D.Dynamics.Joints.b2Joint.e_gearJoint = 6;\n      Box2D.Dynamics.Joints.b2Joint.e_lineJoint = 7;\n      Box2D.Dynamics.Joints.b2Joint.e_weldJoint = 8;\n      Box2D.Dynamics.Joints.b2Joint.e_frictionJoint = 9;\n      Box2D.Dynamics.Joints.b2Joint.e_inactiveLimit = 0;\n      Box2D.Dynamics.Joints.b2Joint.e_atLowerLimit = 1;\n      Box2D.Dynamics.Joints.b2Joint.e_atUpperLimit = 2;\n      Box2D.Dynamics.Joints.b2Joint.e_equalLimits = 3;\n   });\n   b2JointDef.b2JointDef = function () {};\n   b2JointDef.prototype.b2JointDef = function () {\n      this.type = b2Joint.e_unknownJoint;\n      this.userData = null;\n      this.bodyA = null;\n      this.bodyB = null;\n      this.collideConnected = false;\n   }\n   b2JointEdge.b2JointEdge = function () {};\n   Box2D.inherit(b2LineJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2LineJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2LineJoint.b2LineJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_localXAxis1 = new b2Vec2();\n      this.m_localYAxis1 = new b2Vec2();\n      this.m_axis = new b2Vec2();\n      this.m_perp = new b2Vec2();\n      this.m_K = new b2Mat22();\n      this.m_impulse = new b2Vec2();\n   };\n   b2LineJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2LineJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2LineJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y));\n   }\n   b2LineJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return inv_dt * this.m_impulse.y;\n   }\n   b2LineJoint.prototype.GetJointTranslation = function () {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var p1 = bA.GetWorldPoint(this.m_localAnchor1);\n      var p2 = bB.GetWorldPoint(this.m_localAnchor2);\n      var dX = p2.x - p1.x;\n      var dY = p2.y - p1.y;\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\n      var translation = axis.x * dX + axis.y * dY;\n      return translation;\n   }\n   b2LineJoint.prototype.GetJointSpeed = function () {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var p1X = bA.m_sweep.c.x + r1X;\n      var p1Y = bA.m_sweep.c.y + r1Y;\n      var p2X = bB.m_sweep.c.x + r2X;\n      var p2Y = bB.m_sweep.c.y + r2Y;\n      var dX = p2X - p1X;\n      var dY = p2Y - p1Y;\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\n      var v1 = bA.m_linearVelocity;\n      var v2 = bB.m_linearVelocity;\n      var w1 = bA.m_angularVelocity;\n      var w2 = bB.m_angularVelocity;\n      var speed = (dX * ((-w1 * axis.y)) + dY * (w1 * axis.x)) + (axis.x * (((v2.x + ((-w2 * r2Y))) - v1.x) - ((-w1 * r1Y))) + axis.y * (((v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));\n      return speed;\n   }\n   b2LineJoint.prototype.IsLimitEnabled = function () {\n      return this.m_enableLimit;\n   }\n   b2LineJoint.prototype.EnableLimit = function (flag) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableLimit = flag;\n   }\n   b2LineJoint.prototype.GetLowerLimit = function () {\n      return this.m_lowerTranslation;\n   }\n   b2LineJoint.prototype.GetUpperLimit = function () {\n      return this.m_upperTranslation;\n   }\n   b2LineJoint.prototype.SetLimits = function (lower, upper) {\n      if (lower === undefined) lower = 0;\n      if (upper === undefined) upper = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_lowerTranslation = lower;\n      this.m_upperTranslation = upper;\n   }\n   b2LineJoint.prototype.IsMotorEnabled = function () {\n      return this.m_enableMotor;\n   }\n   b2LineJoint.prototype.EnableMotor = function (flag) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableMotor = flag;\n   }\n   b2LineJoint.prototype.SetMotorSpeed = function (speed) {\n      if (speed === undefined) speed = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n   }\n   b2LineJoint.prototype.GetMotorSpeed = function () {\n      return this.m_motorSpeed;\n   }\n   b2LineJoint.prototype.SetMaxMotorForce = function (force) {\n      if (force === undefined) force = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_maxMotorForce = force;\n   }\n   b2LineJoint.prototype.GetMaxMotorForce = function () {\n      return this.m_maxMotorForce;\n   }\n   b2LineJoint.prototype.GetMotorForce = function () {\n      return this.m_motorImpulse;\n   }\n   b2LineJoint.prototype.b2LineJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      var tMat;\n      var tX = 0;\n      var tY = 0;\n      this.m_localAnchor1.SetV(def.localAnchorA);\n      this.m_localAnchor2.SetV(def.localAnchorB);\n      this.m_localXAxis1.SetV(def.localAxisA);\n      this.m_localYAxis1.x = (-this.m_localXAxis1.y);\n      this.m_localYAxis1.y = this.m_localXAxis1.x;\n      this.m_impulse.SetZero();\n      this.m_motorMass = 0.0;\n      this.m_motorImpulse = 0.0;\n      this.m_lowerTranslation = def.lowerTranslation;\n      this.m_upperTranslation = def.upperTranslation;\n      this.m_maxMotorForce = def.maxMotorForce;\n      this.m_motorSpeed = def.motorSpeed;\n      this.m_enableLimit = def.enableLimit;\n      this.m_enableMotor = def.enableMotor;\n      this.m_limitState = b2Joint.e_inactiveLimit;\n      this.m_axis.SetZero();\n      this.m_perp.SetZero();\n   }\n   b2LineJoint.prototype.InitVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var tX = 0;\n      this.m_localCenterA.SetV(bA.GetLocalCenter());\n      this.m_localCenterB.SetV(bB.GetLocalCenter());\n      var xf1 = bA.GetTransform();\n      var xf2 = bB.GetTransform();\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n      this.m_invMassA = bA.m_invMass;\n      this.m_invMassB = bB.m_invMass;\n      this.m_invIA = bA.m_invI;\n      this.m_invIB = bB.m_invI; {\n         this.m_axis.SetV(b2Math.MulMV(xf1.R, this.m_localXAxis1));\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\n         this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;\n         this.m_motorMass = this.m_motorMass > Number.MIN_VALUE ? 1.0 / this.m_motorMass : 0.0;\n      } {\n         this.m_perp.SetV(b2Math.MulMV(xf1.R, this.m_localYAxis1));\n         this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\n         this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\n         var m1 = this.m_invMassA;\n         var m2 = this.m_invMassB;\n         var i1 = this.m_invIA;\n         var i2 = this.m_invIB;\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         this.m_K.col1.y = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\n         this.m_K.col2.x = this.m_K.col1.y;\n         this.m_K.col2.y = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\n      }\n      if (this.m_enableLimit) {\n         var jointTransition = this.m_axis.x * dX + this.m_axis.y * dY;\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\n            this.m_limitState = b2Joint.e_equalLimits;\n         }\n         else if (jointTransition <= this.m_lowerTranslation) {\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\n               this.m_limitState = b2Joint.e_atLowerLimit;\n               this.m_impulse.y = 0.0;\n            }\n         }\n         else if (jointTransition >= this.m_upperTranslation) {\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\n               this.m_limitState = b2Joint.e_atUpperLimit;\n               this.m_impulse.y = 0.0;\n            }\n         }\n         else {\n            this.m_limitState = b2Joint.e_inactiveLimit;\n            this.m_impulse.y = 0.0;\n         }\n      }\n      else {\n         this.m_limitState = b2Joint.e_inactiveLimit;\n      }\n      if (this.m_enableMotor == false) {\n         this.m_motorImpulse = 0.0;\n      }\n      if (step.warmStarting) {\n         this.m_impulse.x *= step.dtRatio;\n         this.m_impulse.y *= step.dtRatio;\n         this.m_motorImpulse *= step.dtRatio;\n         var PX = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x;\n         var PY = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y;\n         var L1 = this.m_impulse.x * this.m_s1 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a1;\n         var L2 = this.m_impulse.x * this.m_s2 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a2;\n         bA.m_linearVelocity.x -= this.m_invMassA * PX;\n         bA.m_linearVelocity.y -= this.m_invMassA * PY;\n         bA.m_angularVelocity -= this.m_invIA * L1;\n         bB.m_linearVelocity.x += this.m_invMassB * PX;\n         bB.m_linearVelocity.y += this.m_invMassB * PY;\n         bB.m_angularVelocity += this.m_invIB * L2;\n      }\n      else {\n         this.m_impulse.SetZero();\n         this.m_motorImpulse = 0.0;\n      }\n   }\n   b2LineJoint.prototype.SolveVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var v1 = bA.m_linearVelocity;\n      var w1 = bA.m_angularVelocity;\n      var v2 = bB.m_linearVelocity;\n      var w2 = bB.m_angularVelocity;\n      var PX = 0;\n      var PY = 0;\n      var L1 = 0;\n      var L2 = 0;\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\n         var Cdot = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\n         var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n         var oldImpulse = this.m_motorImpulse;\n         var maxImpulse = step.dt * this.m_maxMotorForce;\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\n         impulse = this.m_motorImpulse - oldImpulse;\n         PX = impulse * this.m_axis.x;\n         PY = impulse * this.m_axis.y;\n         L1 = impulse * this.m_a1;\n         L2 = impulse * this.m_a2;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      var Cdot1 = this.m_perp.x * (v2.x - v1.x) + this.m_perp.y * (v2.y - v1.y) + this.m_s2 * w2 - this.m_s1 * w1;\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\n         var Cdot2 = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\n         var f1 = this.m_impulse.Copy();\n         var df = this.m_K.Solve(new b2Vec2(), (-Cdot1), (-Cdot2));\n         this.m_impulse.Add(df);\n         if (this.m_limitState == b2Joint.e_atLowerLimit) {\n            this.m_impulse.y = b2Math.Max(this.m_impulse.y, 0.0);\n         }\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\n            this.m_impulse.y = b2Math.Min(this.m_impulse.y, 0.0);\n         }\n         var b = (-Cdot1) - (this.m_impulse.y - f1.y) * this.m_K.col2.x;\n         var f2r = 0;\n         if (this.m_K.col1.x != 0.0) {\n            f2r = b / this.m_K.col1.x + f1.x;\n         }\n         else {\n            f2r = f1.x;\n         }\n         this.m_impulse.x = f2r;\n         df.x = this.m_impulse.x - f1.x;\n         df.y = this.m_impulse.y - f1.y;\n         PX = df.x * this.m_perp.x + df.y * this.m_axis.x;\n         PY = df.x * this.m_perp.y + df.y * this.m_axis.y;\n         L1 = df.x * this.m_s1 + df.y * this.m_a1;\n         L2 = df.x * this.m_s2 + df.y * this.m_a2;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      else {\n         var df2 = 0;\n         if (this.m_K.col1.x != 0.0) {\n            df2 = ((-Cdot1)) / this.m_K.col1.x;\n         }\n         else {\n            df2 = 0.0;\n         }\n         this.m_impulse.x += df2;\n         PX = df2 * this.m_perp.x;\n         PY = df2 * this.m_perp.y;\n         L1 = df2 * this.m_s1;\n         L2 = df2 * this.m_s2;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      bA.m_linearVelocity.SetV(v1);\n      bA.m_angularVelocity = w1;\n      bB.m_linearVelocity.SetV(v2);\n      bB.m_angularVelocity = w2;\n   }\n   b2LineJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var limitC = 0;\n      var oldLimitImpulse = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var c1 = bA.m_sweep.c;\n      var a1 = bA.m_sweep.a;\n      var c2 = bB.m_sweep.c;\n      var a2 = bB.m_sweep.a;\n      var tMat;\n      var tX = 0;\n      var m1 = 0;\n      var m2 = 0;\n      var i1 = 0;\n      var i2 = 0;\n      var linearError = 0.0;\n      var angularError = 0.0;\n      var active = false;\n      var C2 = 0.0;\n      var R1 = b2Mat22.FromAngle(a1);\n      var R2 = b2Mat22.FromAngle(a2);\n      tMat = R1;\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = R2;\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var dX = c2.x + r2X - c1.x - r1X;\n      var dY = c2.y + r2Y - c1.y - r1Y;\n      if (this.m_enableLimit) {\n         this.m_axis = b2Math.MulMV(R1, this.m_localXAxis1);\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\n         var translation = this.m_axis.x * dX + this.m_axis.y * dY;\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\n            C2 = b2Math.Clamp(translation, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\n            linearError = b2Math.Abs(translation);\n            active = true;\n         }\n         else if (translation <= this.m_lowerTranslation) {\n            C2 = b2Math.Clamp(translation - this.m_lowerTranslation + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\n            linearError = this.m_lowerTranslation - translation;\n            active = true;\n         }\n         else if (translation >= this.m_upperTranslation) {\n            C2 = b2Math.Clamp(translation - this.m_upperTranslation + b2Settings.b2_linearSlop, 0.0, b2Settings.b2_maxLinearCorrection);\n            linearError = translation - this.m_upperTranslation;\n            active = true;\n         }\n      }\n      this.m_perp = b2Math.MulMV(R1, this.m_localYAxis1);\n      this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\n      this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\n      var impulse = new b2Vec2();\n      var C1 = this.m_perp.x * dX + this.m_perp.y * dY;\n      linearError = b2Math.Max(linearError, b2Math.Abs(C1));\n      angularError = 0.0;\n      if (active) {\n         m1 = this.m_invMassA;\n         m2 = this.m_invMassB;\n         i1 = this.m_invIA;\n         i2 = this.m_invIB;\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         this.m_K.col1.y = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\n         this.m_K.col2.x = this.m_K.col1.y;\n         this.m_K.col2.y = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\n         this.m_K.Solve(impulse, (-C1), (-C2));\n      }\n      else {\n         m1 = this.m_invMassA;\n         m2 = this.m_invMassB;\n         i1 = this.m_invIA;\n         i2 = this.m_invIB;\n         var k11 = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         var impulse1 = 0;\n         if (k11 != 0.0) {\n            impulse1 = ((-C1)) / k11;\n         }\n         else {\n            impulse1 = 0.0;\n         }\n         impulse.x = impulse1;\n         impulse.y = 0.0;\n      }\n      var PX = impulse.x * this.m_perp.x + impulse.y * this.m_axis.x;\n      var PY = impulse.x * this.m_perp.y + impulse.y * this.m_axis.y;\n      var L1 = impulse.x * this.m_s1 + impulse.y * this.m_a1;\n      var L2 = impulse.x * this.m_s2 + impulse.y * this.m_a2;\n      c1.x -= this.m_invMassA * PX;\n      c1.y -= this.m_invMassA * PY;\n      a1 -= this.m_invIA * L1;\n      c2.x += this.m_invMassB * PX;\n      c2.y += this.m_invMassB * PY;\n      a2 += this.m_invIB * L2;\n      bA.m_sweep.a = a1;\n      bB.m_sweep.a = a2;\n      bA.SynchronizeTransform();\n      bB.SynchronizeTransform();\n      return linearError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\n   }\n   Box2D.inherit(b2LineJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2LineJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2LineJointDef.b2LineJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n      this.localAxisA = new b2Vec2();\n   };\n   b2LineJointDef.prototype.b2LineJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_lineJoint;\n      this.localAxisA.Set(1.0, 0.0);\n      this.enableLimit = false;\n      this.lowerTranslation = 0.0;\n      this.upperTranslation = 0.0;\n      this.enableMotor = false;\n      this.maxMotorForce = 0.0;\n      this.motorSpeed = 0.0;\n   }\n   b2LineJointDef.prototype.Initialize = function (bA, bB, anchor, axis) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\n      this.localAxisA = this.bodyA.GetLocalVector(axis);\n   }\n   Box2D.inherit(b2MouseJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2MouseJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2MouseJoint.b2MouseJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.K = new b2Mat22();\n      this.K1 = new b2Mat22();\n      this.K2 = new b2Mat22();\n      this.m_localAnchor = new b2Vec2();\n      this.m_target = new b2Vec2();\n      this.m_impulse = new b2Vec2();\n      this.m_mass = new b2Mat22();\n      this.m_C = new b2Vec2();\n   };\n   b2MouseJoint.prototype.GetAnchorA = function () {\n      return this.m_target;\n   }\n   b2MouseJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor);\n   }\n   b2MouseJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\n   }\n   b2MouseJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return 0.0;\n   }\n   b2MouseJoint.prototype.GetTarget = function () {\n      return this.m_target;\n   }\n   b2MouseJoint.prototype.SetTarget = function (target) {\n      if (this.m_bodyB.IsAwake() == false) {\n         this.m_bodyB.SetAwake(true);\n      }\n      this.m_target = target;\n   }\n   b2MouseJoint.prototype.GetMaxForce = function () {\n      return this.m_maxForce;\n   }\n   b2MouseJoint.prototype.SetMaxForce = function (maxForce) {\n      if (maxForce === undefined) maxForce = 0;\n      this.m_maxForce = maxForce;\n   }\n   b2MouseJoint.prototype.GetFrequency = function () {\n      return this.m_frequencyHz;\n   }\n   b2MouseJoint.prototype.SetFrequency = function (hz) {\n      if (hz === undefined) hz = 0;\n      this.m_frequencyHz = hz;\n   }\n   b2MouseJoint.prototype.GetDampingRatio = function () {\n      return this.m_dampingRatio;\n   }\n   b2MouseJoint.prototype.SetDampingRatio = function (ratio) {\n      if (ratio === undefined) ratio = 0;\n      this.m_dampingRatio = ratio;\n   }\n   b2MouseJoint.prototype.b2MouseJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      this.m_target.SetV(def.target);\n      var tX = this.m_target.x - this.m_bodyB.m_xf.position.x;\n      var tY = this.m_target.y - this.m_bodyB.m_xf.position.y;\n      var tMat = this.m_bodyB.m_xf.R;\n      this.m_localAnchor.x = (tX * tMat.col1.x + tY * tMat.col1.y);\n      this.m_localAnchor.y = (tX * tMat.col2.x + tY * tMat.col2.y);\n      this.m_maxForce = def.maxForce;\n      this.m_impulse.SetZero();\n      this.m_frequencyHz = def.frequencyHz;\n      this.m_dampingRatio = def.dampingRatio;\n      this.m_beta = 0.0;\n      this.m_gamma = 0.0;\n   }\n   b2MouseJoint.prototype.InitVelocityConstraints = function (step) {\n      var b = this.m_bodyB;\n      var mass = b.GetMass();\n      var omega = 2.0 * Math.PI * this.m_frequencyHz;\n      var d = 2.0 * mass * this.m_dampingRatio * omega;\n      var k = mass * omega * omega;\n      this.m_gamma = step.dt * (d + step.dt * k);\n      this.m_gamma = this.m_gamma != 0 ? 1 / this.m_gamma : 0.0;\n      this.m_beta = step.dt * k * this.m_gamma;\n      var tMat;tMat = b.m_xf.R;\n      var rX = this.m_localAnchor.x - b.m_sweep.localCenter.x;\n      var rY = this.m_localAnchor.y - b.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * rX + tMat.col2.x * rY);rY = (tMat.col1.y * rX + tMat.col2.y * rY);\n      rX = tX;\n      var invMass = b.m_invMass;\n      var invI = b.m_invI;this.K1.col1.x = invMass;\n      this.K1.col2.x = 0.0;\n      this.K1.col1.y = 0.0;\n      this.K1.col2.y = invMass;\n      this.K2.col1.x = invI * rY * rY;\n      this.K2.col2.x = (-invI * rX * rY);\n      this.K2.col1.y = (-invI * rX * rY);\n      this.K2.col2.y = invI * rX * rX;\n      this.K.SetM(this.K1);\n      this.K.AddM(this.K2);\n      this.K.col1.x += this.m_gamma;\n      this.K.col2.y += this.m_gamma;\n      this.K.GetInverse(this.m_mass);\n      this.m_C.x = b.m_sweep.c.x + rX - this.m_target.x;\n      this.m_C.y = b.m_sweep.c.y + rY - this.m_target.y;\n      b.m_angularVelocity *= 0.98;\n      this.m_impulse.x *= step.dtRatio;\n      this.m_impulse.y *= step.dtRatio;\n      b.m_linearVelocity.x += invMass * this.m_impulse.x;\n      b.m_linearVelocity.y += invMass * this.m_impulse.y;\n      b.m_angularVelocity += invI * (rX * this.m_impulse.y - rY * this.m_impulse.x);\n   }\n   b2MouseJoint.prototype.SolveVelocityConstraints = function (step) {\n      var b = this.m_bodyB;\n      var tMat;\n      var tX = 0;\n      var tY = 0;\n      tMat = b.m_xf.R;\n      var rX = this.m_localAnchor.x - b.m_sweep.localCenter.x;\n      var rY = this.m_localAnchor.y - b.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rX + tMat.col2.x * rY);\n      rY = (tMat.col1.y * rX + tMat.col2.y * rY);\n      rX = tX;\n      var CdotX = b.m_linearVelocity.x + ((-b.m_angularVelocity * rY));\n      var CdotY = b.m_linearVelocity.y + (b.m_angularVelocity * rX);\n      tMat = this.m_mass;\n      tX = CdotX + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x;\n      tY = CdotY + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;\n      var impulseX = (-(tMat.col1.x * tX + tMat.col2.x * tY));\n      var impulseY = (-(tMat.col1.y * tX + tMat.col2.y * tY));\n      var oldImpulseX = this.m_impulse.x;\n      var oldImpulseY = this.m_impulse.y;\n      this.m_impulse.x += impulseX;\n      this.m_impulse.y += impulseY;\n      var maxImpulse = step.dt * this.m_maxForce;\n      if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\n         this.m_impulse.Multiply(maxImpulse / this.m_impulse.Length());\n      }\n      impulseX = this.m_impulse.x - oldImpulseX;\n      impulseY = this.m_impulse.y - oldImpulseY;\n      b.m_linearVelocity.x += b.m_invMass * impulseX;\n      b.m_linearVelocity.y += b.m_invMass * impulseY;\n      b.m_angularVelocity += b.m_invI * (rX * impulseY - rY * impulseX);\n   }\n   b2MouseJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      return true;\n   }\n   Box2D.inherit(b2MouseJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2MouseJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2MouseJointDef.b2MouseJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.target = new b2Vec2();\n   };\n   b2MouseJointDef.prototype.b2MouseJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_mouseJoint;\n      this.maxForce = 0.0;\n      this.frequencyHz = 5.0;\n      this.dampingRatio = 0.7;\n   }\n   Box2D.inherit(b2PrismaticJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2PrismaticJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2PrismaticJoint.b2PrismaticJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_localXAxis1 = new b2Vec2();\n      this.m_localYAxis1 = new b2Vec2();\n      this.m_axis = new b2Vec2();\n      this.m_perp = new b2Vec2();\n      this.m_K = new b2Mat33();\n      this.m_impulse = new b2Vec3();\n   };\n   b2PrismaticJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2PrismaticJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2PrismaticJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));\n   }\n   b2PrismaticJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return inv_dt * this.m_impulse.y;\n   }\n   b2PrismaticJoint.prototype.GetJointTranslation = function () {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var p1 = bA.GetWorldPoint(this.m_localAnchor1);\n      var p2 = bB.GetWorldPoint(this.m_localAnchor2);\n      var dX = p2.x - p1.x;\n      var dY = p2.y - p1.y;\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\n      var translation = axis.x * dX + axis.y * dY;\n      return translation;\n   }\n   b2PrismaticJoint.prototype.GetJointSpeed = function () {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var p1X = bA.m_sweep.c.x + r1X;\n      var p1Y = bA.m_sweep.c.y + r1Y;\n      var p2X = bB.m_sweep.c.x + r2X;\n      var p2Y = bB.m_sweep.c.y + r2Y;\n      var dX = p2X - p1X;\n      var dY = p2Y - p1Y;\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\n      var v1 = bA.m_linearVelocity;\n      var v2 = bB.m_linearVelocity;\n      var w1 = bA.m_angularVelocity;\n      var w2 = bB.m_angularVelocity;\n      var speed = (dX * ((-w1 * axis.y)) + dY * (w1 * axis.x)) + (axis.x * (((v2.x + ((-w2 * r2Y))) - v1.x) - ((-w1 * r1Y))) + axis.y * (((v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));\n      return speed;\n   }\n   b2PrismaticJoint.prototype.IsLimitEnabled = function () {\n      return this.m_enableLimit;\n   }\n   b2PrismaticJoint.prototype.EnableLimit = function (flag) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableLimit = flag;\n   }\n   b2PrismaticJoint.prototype.GetLowerLimit = function () {\n      return this.m_lowerTranslation;\n   }\n   b2PrismaticJoint.prototype.GetUpperLimit = function () {\n      return this.m_upperTranslation;\n   }\n   b2PrismaticJoint.prototype.SetLimits = function (lower, upper) {\n      if (lower === undefined) lower = 0;\n      if (upper === undefined) upper = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_lowerTranslation = lower;\n      this.m_upperTranslation = upper;\n   }\n   b2PrismaticJoint.prototype.IsMotorEnabled = function () {\n      return this.m_enableMotor;\n   }\n   b2PrismaticJoint.prototype.EnableMotor = function (flag) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableMotor = flag;\n   }\n   b2PrismaticJoint.prototype.SetMotorSpeed = function (speed) {\n      if (speed === undefined) speed = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n   }\n   b2PrismaticJoint.prototype.GetMotorSpeed = function () {\n      return this.m_motorSpeed;\n   }\n   b2PrismaticJoint.prototype.SetMaxMotorForce = function (force) {\n      if (force === undefined) force = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_maxMotorForce = force;\n   }\n   b2PrismaticJoint.prototype.GetMotorForce = function () {\n      return this.m_motorImpulse;\n   }\n   b2PrismaticJoint.prototype.b2PrismaticJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      var tMat;\n      var tX = 0;\n      var tY = 0;\n      this.m_localAnchor1.SetV(def.localAnchorA);\n      this.m_localAnchor2.SetV(def.localAnchorB);\n      this.m_localXAxis1.SetV(def.localAxisA);\n      this.m_localYAxis1.x = (-this.m_localXAxis1.y);\n      this.m_localYAxis1.y = this.m_localXAxis1.x;\n      this.m_refAngle = def.referenceAngle;\n      this.m_impulse.SetZero();\n      this.m_motorMass = 0.0;\n      this.m_motorImpulse = 0.0;\n      this.m_lowerTranslation = def.lowerTranslation;\n      this.m_upperTranslation = def.upperTranslation;\n      this.m_maxMotorForce = def.maxMotorForce;\n      this.m_motorSpeed = def.motorSpeed;\n      this.m_enableLimit = def.enableLimit;\n      this.m_enableMotor = def.enableMotor;\n      this.m_limitState = b2Joint.e_inactiveLimit;\n      this.m_axis.SetZero();\n      this.m_perp.SetZero();\n   }\n   b2PrismaticJoint.prototype.InitVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var tX = 0;\n      this.m_localCenterA.SetV(bA.GetLocalCenter());\n      this.m_localCenterB.SetV(bB.GetLocalCenter());\n      var xf1 = bA.GetTransform();\n      var xf2 = bB.GetTransform();\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n      this.m_invMassA = bA.m_invMass;\n      this.m_invMassB = bB.m_invMass;\n      this.m_invIA = bA.m_invI;\n      this.m_invIB = bB.m_invI; {\n         this.m_axis.SetV(b2Math.MulMV(xf1.R, this.m_localXAxis1));\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\n         this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;\n         if (this.m_motorMass > Number.MIN_VALUE) this.m_motorMass = 1.0 / this.m_motorMass;\n      } {\n         this.m_perp.SetV(b2Math.MulMV(xf1.R, this.m_localYAxis1));\n         this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\n         this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\n         var m1 = this.m_invMassA;\n         var m2 = this.m_invMassB;\n         var i1 = this.m_invIA;\n         var i2 = this.m_invIB;\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         this.m_K.col1.y = i1 * this.m_s1 + i2 * this.m_s2;\n         this.m_K.col1.z = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\n         this.m_K.col2.x = this.m_K.col1.y;\n         this.m_K.col2.y = i1 + i2;\n         this.m_K.col2.z = i1 * this.m_a1 + i2 * this.m_a2;\n         this.m_K.col3.x = this.m_K.col1.z;\n         this.m_K.col3.y = this.m_K.col2.z;\n         this.m_K.col3.z = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\n      }\n      if (this.m_enableLimit) {\n         var jointTransition = this.m_axis.x * dX + this.m_axis.y * dY;\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\n            this.m_limitState = b2Joint.e_equalLimits;\n         }\n         else if (jointTransition <= this.m_lowerTranslation) {\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\n               this.m_limitState = b2Joint.e_atLowerLimit;\n               this.m_impulse.z = 0.0;\n            }\n         }\n         else if (jointTransition >= this.m_upperTranslation) {\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\n               this.m_limitState = b2Joint.e_atUpperLimit;\n               this.m_impulse.z = 0.0;\n            }\n         }\n         else {\n            this.m_limitState = b2Joint.e_inactiveLimit;\n            this.m_impulse.z = 0.0;\n         }\n      }\n      else {\n         this.m_limitState = b2Joint.e_inactiveLimit;\n      }\n      if (this.m_enableMotor == false) {\n         this.m_motorImpulse = 0.0;\n      }\n      if (step.warmStarting) {\n         this.m_impulse.x *= step.dtRatio;\n         this.m_impulse.y *= step.dtRatio;\n         this.m_motorImpulse *= step.dtRatio;\n         var PX = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x;\n         var PY = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y;\n         var L1 = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n         var L2 = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n         bA.m_linearVelocity.x -= this.m_invMassA * PX;\n         bA.m_linearVelocity.y -= this.m_invMassA * PY;\n         bA.m_angularVelocity -= this.m_invIA * L1;\n         bB.m_linearVelocity.x += this.m_invMassB * PX;\n         bB.m_linearVelocity.y += this.m_invMassB * PY;\n         bB.m_angularVelocity += this.m_invIB * L2;\n      }\n      else {\n         this.m_impulse.SetZero();\n         this.m_motorImpulse = 0.0;\n      }\n   }\n   b2PrismaticJoint.prototype.SolveVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var v1 = bA.m_linearVelocity;\n      var w1 = bA.m_angularVelocity;\n      var v2 = bB.m_linearVelocity;\n      var w2 = bB.m_angularVelocity;\n      var PX = 0;\n      var PY = 0;\n      var L1 = 0;\n      var L2 = 0;\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\n         var Cdot = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\n         var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n         var oldImpulse = this.m_motorImpulse;\n         var maxImpulse = step.dt * this.m_maxMotorForce;\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\n         impulse = this.m_motorImpulse - oldImpulse;\n         PX = impulse * this.m_axis.x;\n         PY = impulse * this.m_axis.y;\n         L1 = impulse * this.m_a1;\n         L2 = impulse * this.m_a2;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      var Cdot1X = this.m_perp.x * (v2.x - v1.x) + this.m_perp.y * (v2.y - v1.y) + this.m_s2 * w2 - this.m_s1 * w1;\n      var Cdot1Y = w2 - w1;\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\n         var Cdot2 = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\n         var f1 = this.m_impulse.Copy();\n         var df = this.m_K.Solve33(new b2Vec3(), (-Cdot1X), (-Cdot1Y), (-Cdot2));\n         this.m_impulse.Add(df);\n         if (this.m_limitState == b2Joint.e_atLowerLimit) {\n            this.m_impulse.z = b2Math.Max(this.m_impulse.z, 0.0);\n         }\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\n            this.m_impulse.z = b2Math.Min(this.m_impulse.z, 0.0);\n         }\n         var bX = (-Cdot1X) - (this.m_impulse.z - f1.z) * this.m_K.col3.x;\n         var bY = (-Cdot1Y) - (this.m_impulse.z - f1.z) * this.m_K.col3.y;\n         var f2r = this.m_K.Solve22(new b2Vec2(), bX, bY);\n         f2r.x += f1.x;\n         f2r.y += f1.y;\n         this.m_impulse.x = f2r.x;\n         this.m_impulse.y = f2r.y;\n         df.x = this.m_impulse.x - f1.x;\n         df.y = this.m_impulse.y - f1.y;\n         df.z = this.m_impulse.z - f1.z;\n         PX = df.x * this.m_perp.x + df.z * this.m_axis.x;\n         PY = df.x * this.m_perp.y + df.z * this.m_axis.y;\n         L1 = df.x * this.m_s1 + df.y + df.z * this.m_a1;\n         L2 = df.x * this.m_s2 + df.y + df.z * this.m_a2;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      else {\n         var df2 = this.m_K.Solve22(new b2Vec2(), (-Cdot1X), (-Cdot1Y));\n         this.m_impulse.x += df2.x;\n         this.m_impulse.y += df2.y;\n         PX = df2.x * this.m_perp.x;\n         PY = df2.x * this.m_perp.y;\n         L1 = df2.x * this.m_s1 + df2.y;\n         L2 = df2.x * this.m_s2 + df2.y;\n         v1.x -= this.m_invMassA * PX;\n         v1.y -= this.m_invMassA * PY;\n         w1 -= this.m_invIA * L1;\n         v2.x += this.m_invMassB * PX;\n         v2.y += this.m_invMassB * PY;\n         w2 += this.m_invIB * L2;\n      }\n      bA.m_linearVelocity.SetV(v1);\n      bA.m_angularVelocity = w1;\n      bB.m_linearVelocity.SetV(v2);\n      bB.m_angularVelocity = w2;\n   }\n   b2PrismaticJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var limitC = 0;\n      var oldLimitImpulse = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var c1 = bA.m_sweep.c;\n      var a1 = bA.m_sweep.a;\n      var c2 = bB.m_sweep.c;\n      var a2 = bB.m_sweep.a;\n      var tMat;\n      var tX = 0;\n      var m1 = 0;\n      var m2 = 0;\n      var i1 = 0;\n      var i2 = 0;\n      var linearError = 0.0;\n      var angularError = 0.0;\n      var active = false;\n      var C2 = 0.0;\n      var R1 = b2Mat22.FromAngle(a1);\n      var R2 = b2Mat22.FromAngle(a2);\n      tMat = R1;\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = R2;\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var dX = c2.x + r2X - c1.x - r1X;\n      var dY = c2.y + r2Y - c1.y - r1Y;\n      if (this.m_enableLimit) {\n         this.m_axis = b2Math.MulMV(R1, this.m_localXAxis1);\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\n         var translation = this.m_axis.x * dX + this.m_axis.y * dY;\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\n            C2 = b2Math.Clamp(translation, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\n            linearError = b2Math.Abs(translation);\n            active = true;\n         }\n         else if (translation <= this.m_lowerTranslation) {\n            C2 = b2Math.Clamp(translation - this.m_lowerTranslation + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\n            linearError = this.m_lowerTranslation - translation;\n            active = true;\n         }\n         else if (translation >= this.m_upperTranslation) {\n            C2 = b2Math.Clamp(translation - this.m_upperTranslation + b2Settings.b2_linearSlop, 0.0, b2Settings.b2_maxLinearCorrection);\n            linearError = translation - this.m_upperTranslation;\n            active = true;\n         }\n      }\n      this.m_perp = b2Math.MulMV(R1, this.m_localYAxis1);\n      this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\n      this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\n      var impulse = new b2Vec3();\n      var C1X = this.m_perp.x * dX + this.m_perp.y * dY;\n      var C1Y = a2 - a1 - this.m_refAngle;\n      linearError = b2Math.Max(linearError, b2Math.Abs(C1X));\n      angularError = b2Math.Abs(C1Y);\n      if (active) {\n         m1 = this.m_invMassA;\n         m2 = this.m_invMassB;\n         i1 = this.m_invIA;\n         i2 = this.m_invIB;\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         this.m_K.col1.y = i1 * this.m_s1 + i2 * this.m_s2;\n         this.m_K.col1.z = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\n         this.m_K.col2.x = this.m_K.col1.y;\n         this.m_K.col2.y = i1 + i2;\n         this.m_K.col2.z = i1 * this.m_a1 + i2 * this.m_a2;\n         this.m_K.col3.x = this.m_K.col1.z;\n         this.m_K.col3.y = this.m_K.col2.z;\n         this.m_K.col3.z = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\n         this.m_K.Solve33(impulse, (-C1X), (-C1Y), (-C2));\n      }\n      else {\n         m1 = this.m_invMassA;\n         m2 = this.m_invMassB;\n         i1 = this.m_invIA;\n         i2 = this.m_invIB;\n         var k11 = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\n         var k12 = i1 * this.m_s1 + i2 * this.m_s2;\n         var k22 = i1 + i2;\n         this.m_K.col1.Set(k11, k12, 0.0);\n         this.m_K.col2.Set(k12, k22, 0.0);\n         var impulse1 = this.m_K.Solve22(new b2Vec2(), (-C1X), (-C1Y));\n         impulse.x = impulse1.x;\n         impulse.y = impulse1.y;\n         impulse.z = 0.0;\n      }\n      var PX = impulse.x * this.m_perp.x + impulse.z * this.m_axis.x;\n      var PY = impulse.x * this.m_perp.y + impulse.z * this.m_axis.y;\n      var L1 = impulse.x * this.m_s1 + impulse.y + impulse.z * this.m_a1;\n      var L2 = impulse.x * this.m_s2 + impulse.y + impulse.z * this.m_a2;\n      c1.x -= this.m_invMassA * PX;\n      c1.y -= this.m_invMassA * PY;\n      a1 -= this.m_invIA * L1;\n      c2.x += this.m_invMassB * PX;\n      c2.y += this.m_invMassB * PY;\n      a2 += this.m_invIB * L2;\n      bA.m_sweep.a = a1;\n      bB.m_sweep.a = a2;\n      bA.SynchronizeTransform();\n      bB.SynchronizeTransform();\n      return linearError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\n   }\n   Box2D.inherit(b2PrismaticJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2PrismaticJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2PrismaticJointDef.b2PrismaticJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n      this.localAxisA = new b2Vec2();\n   };\n   b2PrismaticJointDef.prototype.b2PrismaticJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_prismaticJoint;\n      this.localAxisA.Set(1.0, 0.0);\n      this.referenceAngle = 0.0;\n      this.enableLimit = false;\n      this.lowerTranslation = 0.0;\n      this.upperTranslation = 0.0;\n      this.enableMotor = false;\n      this.maxMotorForce = 0.0;\n      this.motorSpeed = 0.0;\n   }\n   b2PrismaticJointDef.prototype.Initialize = function (bA, bB, anchor, axis) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\n      this.localAxisA = this.bodyA.GetLocalVector(axis);\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n   }\n   Box2D.inherit(b2PulleyJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2PulleyJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2PulleyJoint.b2PulleyJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_groundAnchor1 = new b2Vec2();\n      this.m_groundAnchor2 = new b2Vec2();\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_u1 = new b2Vec2();\n      this.m_u2 = new b2Vec2();\n   };\n   b2PulleyJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2PulleyJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2PulleyJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_u2.x, inv_dt * this.m_impulse * this.m_u2.y);\n   }\n   b2PulleyJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return 0.0;\n   }\n   b2PulleyJoint.prototype.GetGroundAnchorA = function () {\n      var a = this.m_ground.m_xf.position.Copy();\n      a.Add(this.m_groundAnchor1);\n      return a;\n   }\n   b2PulleyJoint.prototype.GetGroundAnchorB = function () {\n      var a = this.m_ground.m_xf.position.Copy();\n      a.Add(this.m_groundAnchor2);\n      return a;\n   }\n   b2PulleyJoint.prototype.GetLength1 = function () {\n      var p = this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n      var sX = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\n      var sY = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\n      var dX = p.x - sX;\n      var dY = p.y - sY;\n      return Math.sqrt(dX * dX + dY * dY);\n   }\n   b2PulleyJoint.prototype.GetLength2 = function () {\n      var p = this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n      var sX = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\n      var sY = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\n      var dX = p.x - sX;\n      var dY = p.y - sY;\n      return Math.sqrt(dX * dX + dY * dY);\n   }\n   b2PulleyJoint.prototype.GetRatio = function () {\n      return this.m_ratio;\n   }\n   b2PulleyJoint.prototype.b2PulleyJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      var tMat;\n      var tX = 0;\n      var tY = 0;\n      this.m_ground = this.m_bodyA.m_world.m_groundBody;\n      this.m_groundAnchor1.x = def.groundAnchorA.x - this.m_ground.m_xf.position.x;\n      this.m_groundAnchor1.y = def.groundAnchorA.y - this.m_ground.m_xf.position.y;\n      this.m_groundAnchor2.x = def.groundAnchorB.x - this.m_ground.m_xf.position.x;\n      this.m_groundAnchor2.y = def.groundAnchorB.y - this.m_ground.m_xf.position.y;\n      this.m_localAnchor1.SetV(def.localAnchorA);\n      this.m_localAnchor2.SetV(def.localAnchorB);\n      this.m_ratio = def.ratio;\n      this.m_constant = def.lengthA + this.m_ratio * def.lengthB;\n      this.m_maxLength1 = b2Math.Min(def.maxLengthA, this.m_constant - this.m_ratio * b2PulleyJoint.b2_minPulleyLength);\n      this.m_maxLength2 = b2Math.Min(def.maxLengthB, (this.m_constant - b2PulleyJoint.b2_minPulleyLength) / this.m_ratio);\n      this.m_impulse = 0.0;\n      this.m_limitImpulse1 = 0.0;\n      this.m_limitImpulse2 = 0.0;\n   }\n   b2PulleyJoint.prototype.InitVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var p1X = bA.m_sweep.c.x + r1X;\n      var p1Y = bA.m_sweep.c.y + r1Y;\n      var p2X = bB.m_sweep.c.x + r2X;\n      var p2Y = bB.m_sweep.c.y + r2Y;\n      var s1X = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\n      var s1Y = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\n      var s2X = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\n      var s2Y = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\n      this.m_u1.Set(p1X - s1X, p1Y - s1Y);\n      this.m_u2.Set(p2X - s2X, p2Y - s2Y);\n      var length1 = this.m_u1.Length();\n      var length2 = this.m_u2.Length();\n      if (length1 > b2Settings.b2_linearSlop) {\n         this.m_u1.Multiply(1.0 / length1);\n      }\n      else {\n         this.m_u1.SetZero();\n      }\n      if (length2 > b2Settings.b2_linearSlop) {\n         this.m_u2.Multiply(1.0 / length2);\n      }\n      else {\n         this.m_u2.SetZero();\n      }\n      var C = this.m_constant - length1 - this.m_ratio * length2;\n      if (C > 0.0) {\n         this.m_state = b2Joint.e_inactiveLimit;\n         this.m_impulse = 0.0;\n      }\n      else {\n         this.m_state = b2Joint.e_atUpperLimit;\n      }\n      if (length1 < this.m_maxLength1) {\n         this.m_limitState1 = b2Joint.e_inactiveLimit;\n         this.m_limitImpulse1 = 0.0;\n      }\n      else {\n         this.m_limitState1 = b2Joint.e_atUpperLimit;\n      }\n      if (length2 < this.m_maxLength2) {\n         this.m_limitState2 = b2Joint.e_inactiveLimit;\n         this.m_limitImpulse2 = 0.0;\n      }\n      else {\n         this.m_limitState2 = b2Joint.e_atUpperLimit;\n      }\n      var cr1u1 = r1X * this.m_u1.y - r1Y * this.m_u1.x;\n      var cr2u2 = r2X * this.m_u2.y - r2Y * this.m_u2.x;\n      this.m_limitMass1 = bA.m_invMass + bA.m_invI * cr1u1 * cr1u1;\n      this.m_limitMass2 = bB.m_invMass + bB.m_invI * cr2u2 * cr2u2;\n      this.m_pulleyMass = this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2;\n      this.m_limitMass1 = 1.0 / this.m_limitMass1;\n      this.m_limitMass2 = 1.0 / this.m_limitMass2;\n      this.m_pulleyMass = 1.0 / this.m_pulleyMass;\n      if (step.warmStarting) {\n         this.m_impulse *= step.dtRatio;\n         this.m_limitImpulse1 *= step.dtRatio;\n         this.m_limitImpulse2 *= step.dtRatio;\n         var P1X = ((-this.m_impulse) - this.m_limitImpulse1) * this.m_u1.x;\n         var P1Y = ((-this.m_impulse) - this.m_limitImpulse1) * this.m_u1.y;\n         var P2X = ((-this.m_ratio * this.m_impulse) - this.m_limitImpulse2) * this.m_u2.x;\n         var P2Y = ((-this.m_ratio * this.m_impulse) - this.m_limitImpulse2) * this.m_u2.y;\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\n      }\n      else {\n         this.m_impulse = 0.0;\n         this.m_limitImpulse1 = 0.0;\n         this.m_limitImpulse2 = 0.0;\n      }\n   }\n   b2PulleyJoint.prototype.SolveVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var v1X = 0;\n      var v1Y = 0;\n      var v2X = 0;\n      var v2Y = 0;\n      var P1X = 0;\n      var P1Y = 0;\n      var P2X = 0;\n      var P2Y = 0;\n      var Cdot = 0;\n      var impulse = 0;\n      var oldImpulse = 0;\n      if (this.m_state == b2Joint.e_atUpperLimit) {\n         v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\n         v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\n         v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\n         v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\n         Cdot = (-(this.m_u1.x * v1X + this.m_u1.y * v1Y)) - this.m_ratio * (this.m_u2.x * v2X + this.m_u2.y * v2Y);\n         impulse = this.m_pulleyMass * ((-Cdot));\n         oldImpulse = this.m_impulse;\n         this.m_impulse = b2Math.Max(0.0, this.m_impulse + impulse);\n         impulse = this.m_impulse - oldImpulse;\n         P1X = (-impulse * this.m_u1.x);\n         P1Y = (-impulse * this.m_u1.y);\n         P2X = (-this.m_ratio * impulse * this.m_u2.x);\n         P2Y = (-this.m_ratio * impulse * this.m_u2.y);\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\n      }\n      if (this.m_limitState1 == b2Joint.e_atUpperLimit) {\n         v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\n         v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\n         Cdot = (-(this.m_u1.x * v1X + this.m_u1.y * v1Y));\n         impulse = (-this.m_limitMass1 * Cdot);\n         oldImpulse = this.m_limitImpulse1;\n         this.m_limitImpulse1 = b2Math.Max(0.0, this.m_limitImpulse1 + impulse);\n         impulse = this.m_limitImpulse1 - oldImpulse;\n         P1X = (-impulse * this.m_u1.x);\n         P1Y = (-impulse * this.m_u1.y);\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\n      }\n      if (this.m_limitState2 == b2Joint.e_atUpperLimit) {\n         v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\n         v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\n         Cdot = (-(this.m_u2.x * v2X + this.m_u2.y * v2Y));\n         impulse = (-this.m_limitMass2 * Cdot);\n         oldImpulse = this.m_limitImpulse2;\n         this.m_limitImpulse2 = b2Math.Max(0.0, this.m_limitImpulse2 + impulse);\n         impulse = this.m_limitImpulse2 - oldImpulse;\n         P2X = (-impulse * this.m_u2.x);\n         P2Y = (-impulse * this.m_u2.y);\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\n      }\n   }\n   b2PulleyJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var s1X = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\n      var s1Y = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\n      var s2X = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\n      var s2Y = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\n      var r1X = 0;\n      var r1Y = 0;\n      var r2X = 0;\n      var r2Y = 0;\n      var p1X = 0;\n      var p1Y = 0;\n      var p2X = 0;\n      var p2Y = 0;\n      var length1 = 0;\n      var length2 = 0;\n      var C = 0;\n      var impulse = 0;\n      var oldImpulse = 0;\n      var oldLimitPositionImpulse = 0;\n      var tX = 0;\n      var linearError = 0.0;\n      if (this.m_state == b2Joint.e_atUpperLimit) {\n         tMat = bA.m_xf.R;\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n         r1X = tX;\n         tMat = bB.m_xf.R;\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n         r2X = tX;\n         p1X = bA.m_sweep.c.x + r1X;\n         p1Y = bA.m_sweep.c.y + r1Y;\n         p2X = bB.m_sweep.c.x + r2X;\n         p2Y = bB.m_sweep.c.y + r2Y;\n         this.m_u1.Set(p1X - s1X, p1Y - s1Y);\n         this.m_u2.Set(p2X - s2X, p2Y - s2Y);\n         length1 = this.m_u1.Length();\n         length2 = this.m_u2.Length();\n         if (length1 > b2Settings.b2_linearSlop) {\n            this.m_u1.Multiply(1.0 / length1);\n         }\n         else {\n            this.m_u1.SetZero();\n         }\n         if (length2 > b2Settings.b2_linearSlop) {\n            this.m_u2.Multiply(1.0 / length2);\n         }\n         else {\n            this.m_u2.SetZero();\n         }\n         C = this.m_constant - length1 - this.m_ratio * length2;\n         linearError = b2Math.Max(linearError, (-C));\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\n         impulse = (-this.m_pulleyMass * C);\n         p1X = (-impulse * this.m_u1.x);\n         p1Y = (-impulse * this.m_u1.y);\n         p2X = (-this.m_ratio * impulse * this.m_u2.x);\n         p2Y = (-this.m_ratio * impulse * this.m_u2.y);\n         bA.m_sweep.c.x += bA.m_invMass * p1X;\n         bA.m_sweep.c.y += bA.m_invMass * p1Y;\n         bA.m_sweep.a += bA.m_invI * (r1X * p1Y - r1Y * p1X);\n         bB.m_sweep.c.x += bB.m_invMass * p2X;\n         bB.m_sweep.c.y += bB.m_invMass * p2Y;\n         bB.m_sweep.a += bB.m_invI * (r2X * p2Y - r2Y * p2X);\n         bA.SynchronizeTransform();\n         bB.SynchronizeTransform();\n      }\n      if (this.m_limitState1 == b2Joint.e_atUpperLimit) {\n         tMat = bA.m_xf.R;\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n         r1X = tX;\n         p1X = bA.m_sweep.c.x + r1X;\n         p1Y = bA.m_sweep.c.y + r1Y;\n         this.m_u1.Set(p1X - s1X, p1Y - s1Y);\n         length1 = this.m_u1.Length();\n         if (length1 > b2Settings.b2_linearSlop) {\n            this.m_u1.x *= 1.0 / length1;\n            this.m_u1.y *= 1.0 / length1;\n         }\n         else {\n            this.m_u1.SetZero();\n         }\n         C = this.m_maxLength1 - length1;\n         linearError = b2Math.Max(linearError, (-C));\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\n         impulse = (-this.m_limitMass1 * C);\n         p1X = (-impulse * this.m_u1.x);\n         p1Y = (-impulse * this.m_u1.y);\n         bA.m_sweep.c.x += bA.m_invMass * p1X;\n         bA.m_sweep.c.y += bA.m_invMass * p1Y;\n         bA.m_sweep.a += bA.m_invI * (r1X * p1Y - r1Y * p1X);\n         bA.SynchronizeTransform();\n      }\n      if (this.m_limitState2 == b2Joint.e_atUpperLimit) {\n         tMat = bB.m_xf.R;\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n         r2X = tX;\n         p2X = bB.m_sweep.c.x + r2X;\n         p2Y = bB.m_sweep.c.y + r2Y;\n         this.m_u2.Set(p2X - s2X, p2Y - s2Y);\n         length2 = this.m_u2.Length();\n         if (length2 > b2Settings.b2_linearSlop) {\n            this.m_u2.x *= 1.0 / length2;\n            this.m_u2.y *= 1.0 / length2;\n         }\n         else {\n            this.m_u2.SetZero();\n         }\n         C = this.m_maxLength2 - length2;\n         linearError = b2Math.Max(linearError, (-C));\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\n         impulse = (-this.m_limitMass2 * C);\n         p2X = (-impulse * this.m_u2.x);\n         p2Y = (-impulse * this.m_u2.y);\n         bB.m_sweep.c.x += bB.m_invMass * p2X;\n         bB.m_sweep.c.y += bB.m_invMass * p2Y;\n         bB.m_sweep.a += bB.m_invI * (r2X * p2Y - r2Y * p2X);\n         bB.SynchronizeTransform();\n      }\n      return linearError < b2Settings.b2_linearSlop;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength = 2.0;\n   });\n   Box2D.inherit(b2PulleyJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2PulleyJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2PulleyJointDef.b2PulleyJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.groundAnchorA = new b2Vec2();\n      this.groundAnchorB = new b2Vec2();\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n   };\n   b2PulleyJointDef.prototype.b2PulleyJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_pulleyJoint;\n      this.groundAnchorA.Set((-1.0), 1.0);\n      this.groundAnchorB.Set(1.0, 1.0);\n      this.localAnchorA.Set((-1.0), 0.0);\n      this.localAnchorB.Set(1.0, 0.0);\n      this.lengthA = 0.0;\n      this.maxLengthA = 0.0;\n      this.lengthB = 0.0;\n      this.maxLengthB = 0.0;\n      this.ratio = 1.0;\n      this.collideConnected = true;\n   }\n   b2PulleyJointDef.prototype.Initialize = function (bA, bB, gaA, gaB, anchorA, anchorB, r) {\n      if (r === undefined) r = 0;\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.groundAnchorA.SetV(gaA);\n      this.groundAnchorB.SetV(gaB);\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchorA);\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchorB);\n      var d1X = anchorA.x - gaA.x;\n      var d1Y = anchorA.y - gaA.y;\n      this.lengthA = Math.sqrt(d1X * d1X + d1Y * d1Y);\n      var d2X = anchorB.x - gaB.x;\n      var d2Y = anchorB.y - gaB.y;\n      this.lengthB = Math.sqrt(d2X * d2X + d2Y * d2Y);\n      this.ratio = r;\n      var C = this.lengthA + this.ratio * this.lengthB;\n      this.maxLengthA = C - this.ratio * b2PulleyJoint.b2_minPulleyLength;\n      this.maxLengthB = (C - b2PulleyJoint.b2_minPulleyLength) / this.ratio;\n   }\n   Box2D.inherit(b2RevoluteJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2RevoluteJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2RevoluteJoint.b2RevoluteJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.K = new b2Mat22();\n      this.K1 = new b2Mat22();\n      this.K2 = new b2Mat22();\n      this.K3 = new b2Mat22();\n      this.impulse3 = new b2Vec3();\n      this.impulse2 = new b2Vec2();\n      this.reduced = new b2Vec2();\n      this.m_localAnchor1 = new b2Vec2();\n      this.m_localAnchor2 = new b2Vec2();\n      this.m_impulse = new b2Vec3();\n      this.m_mass = new b2Mat33();\n   };\n   b2RevoluteJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\n   }\n   b2RevoluteJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\n   }\n   b2RevoluteJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\n   }\n   b2RevoluteJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return inv_dt * this.m_impulse.z;\n   }\n   b2RevoluteJoint.prototype.GetJointAngle = function () {\n      return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\n   }\n   b2RevoluteJoint.prototype.GetJointSpeed = function () {\n      return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\n   }\n   b2RevoluteJoint.prototype.IsLimitEnabled = function () {\n      return this.m_enableLimit;\n   }\n   b2RevoluteJoint.prototype.EnableLimit = function (flag) {\n      this.m_enableLimit = flag;\n   }\n   b2RevoluteJoint.prototype.GetLowerLimit = function () {\n      return this.m_lowerAngle;\n   }\n   b2RevoluteJoint.prototype.GetUpperLimit = function () {\n      return this.m_upperAngle;\n   }\n   b2RevoluteJoint.prototype.SetLimits = function (lower, upper) {\n      if (lower === undefined) lower = 0;\n      if (upper === undefined) upper = 0;\n      this.m_lowerAngle = lower;\n      this.m_upperAngle = upper;\n   }\n   b2RevoluteJoint.prototype.IsMotorEnabled = function () {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      return this.m_enableMotor;\n   }\n   b2RevoluteJoint.prototype.EnableMotor = function (flag) {\n      this.m_enableMotor = flag;\n   }\n   b2RevoluteJoint.prototype.SetMotorSpeed = function (speed) {\n      if (speed === undefined) speed = 0;\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n   }\n   b2RevoluteJoint.prototype.GetMotorSpeed = function () {\n      return this.m_motorSpeed;\n   }\n   b2RevoluteJoint.prototype.SetMaxMotorTorque = function (torque) {\n      if (torque === undefined) torque = 0;\n      this.m_maxMotorTorque = torque;\n   }\n   b2RevoluteJoint.prototype.GetMotorTorque = function () {\n      return this.m_maxMotorTorque;\n   }\n   b2RevoluteJoint.prototype.b2RevoluteJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      this.m_localAnchor1.SetV(def.localAnchorA);\n      this.m_localAnchor2.SetV(def.localAnchorB);\n      this.m_referenceAngle = def.referenceAngle;\n      this.m_impulse.SetZero();\n      this.m_motorImpulse = 0.0;\n      this.m_lowerAngle = def.lowerAngle;\n      this.m_upperAngle = def.upperAngle;\n      this.m_maxMotorTorque = def.maxMotorTorque;\n      this.m_motorSpeed = def.motorSpeed;\n      this.m_enableLimit = def.enableLimit;\n      this.m_enableMotor = def.enableMotor;\n      this.m_limitState = b2Joint.e_inactiveLimit;\n   }\n   b2RevoluteJoint.prototype.InitVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var tX = 0;\n      if (this.m_enableMotor || this.m_enableLimit) {}\n      tMat = bA.m_xf.R;\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n      r1X = tX;\n      tMat = bB.m_xf.R;\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n      r2X = tX;\n      var m1 = bA.m_invMass;\n      var m2 = bB.m_invMass;\n      var i1 = bA.m_invI;\n      var i2 = bB.m_invI;\n      this.m_mass.col1.x = m1 + m2 + r1Y * r1Y * i1 + r2Y * r2Y * i2;\n      this.m_mass.col2.x = (-r1Y * r1X * i1) - r2Y * r2X * i2;\n      this.m_mass.col3.x = (-r1Y * i1) - r2Y * i2;\n      this.m_mass.col1.y = this.m_mass.col2.x;\n      this.m_mass.col2.y = m1 + m2 + r1X * r1X * i1 + r2X * r2X * i2;\n      this.m_mass.col3.y = r1X * i1 + r2X * i2;\n      this.m_mass.col1.z = this.m_mass.col3.x;\n      this.m_mass.col2.z = this.m_mass.col3.y;\n      this.m_mass.col3.z = i1 + i2;\n      this.m_motorMass = 1.0 / (i1 + i2);\n      if (this.m_enableMotor == false) {\n         this.m_motorImpulse = 0.0;\n      }\n      if (this.m_enableLimit) {\n         var jointAngle = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n         if (b2Math.Abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * b2Settings.b2_angularSlop) {\n            this.m_limitState = b2Joint.e_equalLimits;\n         }\n         else if (jointAngle <= this.m_lowerAngle) {\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\n               this.m_impulse.z = 0.0;\n            }\n            this.m_limitState = b2Joint.e_atLowerLimit;\n         }\n         else if (jointAngle >= this.m_upperAngle) {\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\n               this.m_impulse.z = 0.0;\n            }\n            this.m_limitState = b2Joint.e_atUpperLimit;\n         }\n         else {\n            this.m_limitState = b2Joint.e_inactiveLimit;\n            this.m_impulse.z = 0.0;\n         }\n      }\n      else {\n         this.m_limitState = b2Joint.e_inactiveLimit;\n      }\n      if (step.warmStarting) {\n         this.m_impulse.x *= step.dtRatio;\n         this.m_impulse.y *= step.dtRatio;\n         this.m_motorImpulse *= step.dtRatio;\n         var PX = this.m_impulse.x;\n         var PY = this.m_impulse.y;\n         bA.m_linearVelocity.x -= m1 * PX;\n         bA.m_linearVelocity.y -= m1 * PY;\n         bA.m_angularVelocity -= i1 * ((r1X * PY - r1Y * PX) + this.m_motorImpulse + this.m_impulse.z);\n         bB.m_linearVelocity.x += m2 * PX;\n         bB.m_linearVelocity.y += m2 * PY;\n         bB.m_angularVelocity += i2 * ((r2X * PY - r2Y * PX) + this.m_motorImpulse + this.m_impulse.z);\n      }\n      else {\n         this.m_impulse.SetZero();\n         this.m_motorImpulse = 0.0;\n      }\n   }\n   b2RevoluteJoint.prototype.SolveVelocityConstraints = function (step) {\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var tMat;\n      var tX = 0;\n      var newImpulse = 0;\n      var r1X = 0;\n      var r1Y = 0;\n      var r2X = 0;\n      var r2Y = 0;\n      var v1 = bA.m_linearVelocity;\n      var w1 = bA.m_angularVelocity;\n      var v2 = bB.m_linearVelocity;\n      var w2 = bB.m_angularVelocity;\n      var m1 = bA.m_invMass;\n      var m2 = bB.m_invMass;\n      var i1 = bA.m_invI;\n      var i2 = bB.m_invI;\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\n         var Cdot = w2 - w1 - this.m_motorSpeed;\n         var impulse = this.m_motorMass * ((-Cdot));\n         var oldImpulse = this.m_motorImpulse;\n         var maxImpulse = step.dt * this.m_maxMotorTorque;\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\n         impulse = this.m_motorImpulse - oldImpulse;\n         w1 -= i1 * impulse;\n         w2 += i2 * impulse;\n      }\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\n         tMat = bA.m_xf.R;\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n         r1X = tX;\n         tMat = bB.m_xf.R;\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n         r2X = tX;\n         var Cdot1X = v2.x + ((-w2 * r2Y)) - v1.x - ((-w1 * r1Y));\n         var Cdot1Y = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);\n         var Cdot2 = w2 - w1;\n         this.m_mass.Solve33(this.impulse3, (-Cdot1X), (-Cdot1Y), (-Cdot2));\n         if (this.m_limitState == b2Joint.e_equalLimits) {\n            this.m_impulse.Add(this.impulse3);\n         }\n         else if (this.m_limitState == b2Joint.e_atLowerLimit) {\n            newImpulse = this.m_impulse.z + this.impulse3.z;\n            if (newImpulse < 0.0) {\n               this.m_mass.Solve22(this.reduced, (-Cdot1X), (-Cdot1Y));\n               this.impulse3.x = this.reduced.x;\n               this.impulse3.y = this.reduced.y;\n               this.impulse3.z = (-this.m_impulse.z);\n               this.m_impulse.x += this.reduced.x;\n               this.m_impulse.y += this.reduced.y;\n               this.m_impulse.z = 0.0;\n            }\n         }\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\n            newImpulse = this.m_impulse.z + this.impulse3.z;\n            if (newImpulse > 0.0) {\n               this.m_mass.Solve22(this.reduced, (-Cdot1X), (-Cdot1Y));\n               this.impulse3.x = this.reduced.x;\n               this.impulse3.y = this.reduced.y;\n               this.impulse3.z = (-this.m_impulse.z);\n               this.m_impulse.x += this.reduced.x;\n               this.m_impulse.y += this.reduced.y;\n               this.m_impulse.z = 0.0;\n            }\n         }\n         v1.x -= m1 * this.impulse3.x;\n         v1.y -= m1 * this.impulse3.y;\n         w1 -= i1 * (r1X * this.impulse3.y - r1Y * this.impulse3.x + this.impulse3.z);\n         v2.x += m2 * this.impulse3.x;\n         v2.y += m2 * this.impulse3.y;\n         w2 += i2 * (r2X * this.impulse3.y - r2Y * this.impulse3.x + this.impulse3.z);\n      }\n      else {\n         tMat = bA.m_xf.R;\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n         r1X = tX;\n         tMat = bB.m_xf.R;\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n         r2X = tX;\n         var CdotX = v2.x + ((-w2 * r2Y)) - v1.x - ((-w1 * r1Y));\n         var CdotY = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);\n         this.m_mass.Solve22(this.impulse2, (-CdotX), (-CdotY));\n         this.m_impulse.x += this.impulse2.x;\n         this.m_impulse.y += this.impulse2.y;\n         v1.x -= m1 * this.impulse2.x;\n         v1.y -= m1 * this.impulse2.y;\n         w1 -= i1 * (r1X * this.impulse2.y - r1Y * this.impulse2.x);\n         v2.x += m2 * this.impulse2.x;\n         v2.y += m2 * this.impulse2.y;\n         w2 += i2 * (r2X * this.impulse2.y - r2Y * this.impulse2.x);\n      }\n      bA.m_linearVelocity.SetV(v1);\n      bA.m_angularVelocity = w1;\n      bB.m_linearVelocity.SetV(v2);\n      bB.m_angularVelocity = w2;\n   }\n   b2RevoluteJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var oldLimitImpulse = 0;\n      var C = 0;\n      var tMat;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var angularError = 0.0;\n      var positionError = 0.0;\n      var tX = 0;\n      var impulseX = 0;\n      var impulseY = 0;\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\n         var angle = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n         var limitImpulse = 0.0;\n         if (this.m_limitState == b2Joint.e_equalLimits) {\n            C = b2Math.Clamp(angle - this.m_lowerAngle, (-b2Settings.b2_maxAngularCorrection), b2Settings.b2_maxAngularCorrection);\n            limitImpulse = (-this.m_motorMass * C);\n            angularError = b2Math.Abs(C);\n         }\n         else if (this.m_limitState == b2Joint.e_atLowerLimit) {\n            C = angle - this.m_lowerAngle;\n            angularError = (-C);\n            C = b2Math.Clamp(C + b2Settings.b2_angularSlop, (-b2Settings.b2_maxAngularCorrection), 0.0);\n            limitImpulse = (-this.m_motorMass * C);\n         }\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\n            C = angle - this.m_upperAngle;\n            angularError = C;\n            C = b2Math.Clamp(C - b2Settings.b2_angularSlop, 0.0, b2Settings.b2_maxAngularCorrection);\n            limitImpulse = (-this.m_motorMass * C);\n         }\n         bA.m_sweep.a -= bA.m_invI * limitImpulse;\n         bB.m_sweep.a += bB.m_invI * limitImpulse;\n         bA.SynchronizeTransform();\n         bB.SynchronizeTransform();\n      } {\n         tMat = bA.m_xf.R;\n         var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\n         var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\n         r1X = tX;\n         tMat = bB.m_xf.R;\n         var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\n         var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\n         r2X = tX;\n         var CX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n         var CY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n         var CLengthSquared = CX * CX + CY * CY;\n         var CLength = Math.sqrt(CLengthSquared);\n         positionError = CLength;\n         var invMass1 = bA.m_invMass;\n         var invMass2 = bB.m_invMass;\n         var invI1 = bA.m_invI;\n         var invI2 = bB.m_invI;\n         var k_allowedStretch = 10.0 * b2Settings.b2_linearSlop;\n         if (CLengthSquared > k_allowedStretch * k_allowedStretch) {\n            var uX = CX / CLength;\n            var uY = CY / CLength;\n            var k = invMass1 + invMass2;\n            var m = 1.0 / k;\n            impulseX = m * ((-CX));\n            impulseY = m * ((-CY));\n            var k_beta = 0.5;\n            bA.m_sweep.c.x -= k_beta * invMass1 * impulseX;\n            bA.m_sweep.c.y -= k_beta * invMass1 * impulseY;\n            bB.m_sweep.c.x += k_beta * invMass2 * impulseX;\n            bB.m_sweep.c.y += k_beta * invMass2 * impulseY;\n            CX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\n            CY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\n         }\n         this.K1.col1.x = invMass1 + invMass2;\n         this.K1.col2.x = 0.0;\n         this.K1.col1.y = 0.0;\n         this.K1.col2.y = invMass1 + invMass2;\n         this.K2.col1.x = invI1 * r1Y * r1Y;\n         this.K2.col2.x = (-invI1 * r1X * r1Y);\n         this.K2.col1.y = (-invI1 * r1X * r1Y);\n         this.K2.col2.y = invI1 * r1X * r1X;\n         this.K3.col1.x = invI2 * r2Y * r2Y;\n         this.K3.col2.x = (-invI2 * r2X * r2Y);\n         this.K3.col1.y = (-invI2 * r2X * r2Y);\n         this.K3.col2.y = invI2 * r2X * r2X;\n         this.K.SetM(this.K1);\n         this.K.AddM(this.K2);\n         this.K.AddM(this.K3);\n         this.K.Solve(b2RevoluteJoint.tImpulse, (-CX), (-CY));\n         impulseX = b2RevoluteJoint.tImpulse.x;\n         impulseY = b2RevoluteJoint.tImpulse.y;\n         bA.m_sweep.c.x -= bA.m_invMass * impulseX;\n         bA.m_sweep.c.y -= bA.m_invMass * impulseY;\n         bA.m_sweep.a -= bA.m_invI * (r1X * impulseY - r1Y * impulseX);\n         bB.m_sweep.c.x += bB.m_invMass * impulseX;\n         bB.m_sweep.c.y += bB.m_invMass * impulseY;\n         bB.m_sweep.a += bB.m_invI * (r2X * impulseY - r2Y * impulseX);\n         bA.SynchronizeTransform();\n         bB.SynchronizeTransform();\n      }\n      return positionError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\n   }\n   Box2D.postDefs.push(function () {\n      Box2D.Dynamics.Joints.b2RevoluteJoint.tImpulse = new b2Vec2();\n   });\n   Box2D.inherit(b2RevoluteJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2RevoluteJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2RevoluteJointDef.b2RevoluteJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n   };\n   b2RevoluteJointDef.prototype.b2RevoluteJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_revoluteJoint;\n      this.localAnchorA.Set(0.0, 0.0);\n      this.localAnchorB.Set(0.0, 0.0);\n      this.referenceAngle = 0.0;\n      this.lowerAngle = 0.0;\n      this.upperAngle = 0.0;\n      this.maxMotorTorque = 0.0;\n      this.motorSpeed = 0.0;\n      this.enableLimit = false;\n      this.enableMotor = false;\n   }\n   b2RevoluteJointDef.prototype.Initialize = function (bA, bB, anchor) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n   }\n   Box2D.inherit(b2WeldJoint, Box2D.Dynamics.Joints.b2Joint);\n   b2WeldJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\n   b2WeldJoint.b2WeldJoint = function () {\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\n      this.m_localAnchorA = new b2Vec2();\n      this.m_localAnchorB = new b2Vec2();\n      this.m_impulse = new b2Vec3();\n      this.m_mass = new b2Mat33();\n   };\n   b2WeldJoint.prototype.GetAnchorA = function () {\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);\n   }\n   b2WeldJoint.prototype.GetAnchorB = function () {\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);\n   }\n   b2WeldJoint.prototype.GetReactionForce = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\n   }\n   b2WeldJoint.prototype.GetReactionTorque = function (inv_dt) {\n      if (inv_dt === undefined) inv_dt = 0;\n      return inv_dt * this.m_impulse.z;\n   }\n   b2WeldJoint.prototype.b2WeldJoint = function (def) {\n      this.__super.b2Joint.call(this, def);\n      this.m_localAnchorA.SetV(def.localAnchorA);\n      this.m_localAnchorB.SetV(def.localAnchorB);\n      this.m_referenceAngle = def.referenceAngle;\n      this.m_impulse.SetZero();\n      this.m_mass = new b2Mat33();\n   }\n   b2WeldJoint.prototype.InitVelocityConstraints = function (step) {\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\n      rAX = tX;\n      tMat = bB.m_xf.R;\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\n      rBX = tX;\n      var mA = bA.m_invMass;\n      var mB = bB.m_invMass;\n      var iA = bA.m_invI;\n      var iB = bB.m_invI;\n      this.m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;\n      this.m_mass.col2.x = (-rAY * rAX * iA) - rBY * rBX * iB;\n      this.m_mass.col3.x = (-rAY * iA) - rBY * iB;\n      this.m_mass.col1.y = this.m_mass.col2.x;\n      this.m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;\n      this.m_mass.col3.y = rAX * iA + rBX * iB;\n      this.m_mass.col1.z = this.m_mass.col3.x;\n      this.m_mass.col2.z = this.m_mass.col3.y;\n      this.m_mass.col3.z = iA + iB;\n      if (step.warmStarting) {\n         this.m_impulse.x *= step.dtRatio;\n         this.m_impulse.y *= step.dtRatio;\n         this.m_impulse.z *= step.dtRatio;\n         bA.m_linearVelocity.x -= mA * this.m_impulse.x;\n         bA.m_linearVelocity.y -= mA * this.m_impulse.y;\n         bA.m_angularVelocity -= iA * (rAX * this.m_impulse.y - rAY * this.m_impulse.x + this.m_impulse.z);\n         bB.m_linearVelocity.x += mB * this.m_impulse.x;\n         bB.m_linearVelocity.y += mB * this.m_impulse.y;\n         bB.m_angularVelocity += iB * (rBX * this.m_impulse.y - rBY * this.m_impulse.x + this.m_impulse.z);\n      }\n      else {\n         this.m_impulse.SetZero();\n      }\n   }\n   b2WeldJoint.prototype.SolveVelocityConstraints = function (step) {\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      var vA = bA.m_linearVelocity;\n      var wA = bA.m_angularVelocity;\n      var vB = bB.m_linearVelocity;\n      var wB = bB.m_angularVelocity;\n      var mA = bA.m_invMass;\n      var mB = bB.m_invMass;\n      var iA = bA.m_invI;\n      var iB = bB.m_invI;\n      tMat = bA.m_xf.R;\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\n      rAX = tX;\n      tMat = bB.m_xf.R;\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\n      rBX = tX;\n      var Cdot1X = vB.x - wB * rBY - vA.x + wA * rAY;\n      var Cdot1Y = vB.y + wB * rBX - vA.y - wA * rAX;\n      var Cdot2 = wB - wA;\n      var impulse = new b2Vec3();\n      this.m_mass.Solve33(impulse, (-Cdot1X), (-Cdot1Y), (-Cdot2));\n      this.m_impulse.Add(impulse);\n      vA.x -= mA * impulse.x;\n      vA.y -= mA * impulse.y;\n      wA -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);\n      vB.x += mB * impulse.x;\n      vB.y += mB * impulse.y;\n      wB += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);\n      bA.m_angularVelocity = wA;\n      bB.m_angularVelocity = wB;\n   }\n   b2WeldJoint.prototype.SolvePositionConstraints = function (baumgarte) {\n      if (baumgarte === undefined) baumgarte = 0;\n      var tMat;\n      var tX = 0;\n      var bA = this.m_bodyA;\n      var bB = this.m_bodyB;\n      tMat = bA.m_xf.R;\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\n      rAX = tX;\n      tMat = bB.m_xf.R;\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\n      rBX = tX;\n      var mA = bA.m_invMass;\n      var mB = bB.m_invMass;\n      var iA = bA.m_invI;\n      var iB = bB.m_invI;\n      var C1X = bB.m_sweep.c.x + rBX - bA.m_sweep.c.x - rAX;\n      var C1Y = bB.m_sweep.c.y + rBY - bA.m_sweep.c.y - rAY;\n      var C2 = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n      var k_allowedStretch = 10.0 * b2Settings.b2_linearSlop;\n      var positionError = Math.sqrt(C1X * C1X + C1Y * C1Y);\n      var angularError = b2Math.Abs(C2);\n      if (positionError > k_allowedStretch) {\n         iA *= 1.0;\n         iB *= 1.0;\n      }\n      this.m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;\n      this.m_mass.col2.x = (-rAY * rAX * iA) - rBY * rBX * iB;\n      this.m_mass.col3.x = (-rAY * iA) - rBY * iB;\n      this.m_mass.col1.y = this.m_mass.col2.x;\n      this.m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;\n      this.m_mass.col3.y = rAX * iA + rBX * iB;\n      this.m_mass.col1.z = this.m_mass.col3.x;\n      this.m_mass.col2.z = this.m_mass.col3.y;\n      this.m_mass.col3.z = iA + iB;\n      var impulse = new b2Vec3();\n      this.m_mass.Solve33(impulse, (-C1X), (-C1Y), (-C2));\n      bA.m_sweep.c.x -= mA * impulse.x;\n      bA.m_sweep.c.y -= mA * impulse.y;\n      bA.m_sweep.a -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);\n      bB.m_sweep.c.x += mB * impulse.x;\n      bB.m_sweep.c.y += mB * impulse.y;\n      bB.m_sweep.a += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);\n      bA.SynchronizeTransform();\n      bB.SynchronizeTransform();\n      return positionError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\n   }\n   Box2D.inherit(b2WeldJointDef, Box2D.Dynamics.Joints.b2JointDef);\n   b2WeldJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\n   b2WeldJointDef.b2WeldJointDef = function () {\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\n      this.localAnchorA = new b2Vec2();\n      this.localAnchorB = new b2Vec2();\n   };\n   b2WeldJointDef.prototype.b2WeldJointDef = function () {\n      this.__super.b2JointDef.call(this);\n      this.type = b2Joint.e_weldJoint;\n      this.referenceAngle = 0.0;\n   }\n   b2WeldJointDef.prototype.Initialize = function (bA, bB, anchor) {\n      this.bodyA = bA;\n      this.bodyB = bB;\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n   }\n})();\n(function () {\n   var b2DebugDraw = Box2D.Dynamics.b2DebugDraw;\n   b2DebugDraw.b2DebugDraw = function () {\n      this.m_drawScale = 1.0;\n      this.m_lineThickness = 1.0;\n      this.m_alpha = 1.0;\n      this.m_fillAlpha = 1.0;\n      this.m_xformScale = 1.0;\n      var __this = this;\n      //#WORKAROUND\n      this.m_sprite = {\n         graphics: {\n            clear: function () {\n               __this.m_ctx.clearRect(0, 0, __this.m_ctx.canvas.width, __this.m_ctx.canvas.height)\n            }\n         }\n      };\n   };\n   b2DebugDraw.prototype._color = function (color, alpha) {\n      return \"rgba(\" + ((color & 0xFF0000) >> 16) + \",\" + ((color & 0xFF00) >> 8) + \",\" + (color & 0xFF) + \",\" + alpha + \")\";\n   };\n   b2DebugDraw.prototype.b2DebugDraw = function () {\n      this.m_drawFlags = 0;\n   };\n   b2DebugDraw.prototype.SetFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n      this.m_drawFlags = flags;\n   };\n   b2DebugDraw.prototype.GetFlags = function () {\n      return this.m_drawFlags;\n   };\n   b2DebugDraw.prototype.AppendFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n      this.m_drawFlags |= flags;\n   };\n   b2DebugDraw.prototype.ClearFlags = function (flags) {\n      if (flags === undefined) flags = 0;\n      this.m_drawFlags &= ~flags;\n   };\n   b2DebugDraw.prototype.SetSprite = function (sprite) {\n      this.m_ctx = sprite;\n   };\n   b2DebugDraw.prototype.GetSprite = function () {\n      return this.m_ctx;\n   };\n   b2DebugDraw.prototype.SetDrawScale = function (drawScale) {\n      if (drawScale === undefined) drawScale = 0;\n      this.m_drawScale = drawScale;\n   };\n   b2DebugDraw.prototype.GetDrawScale = function () {\n      return this.m_drawScale;\n   };\n   b2DebugDraw.prototype.SetLineThickness = function (lineThickness) {\n      if (lineThickness === undefined) lineThickness = 0;\n      this.m_lineThickness = lineThickness;\n      this.m_ctx.strokeWidth = lineThickness;\n   };\n   b2DebugDraw.prototype.GetLineThickness = function () {\n      return this.m_lineThickness;\n   };\n   b2DebugDraw.prototype.SetAlpha = function (alpha) {\n      if (alpha === undefined) alpha = 0;\n      this.m_alpha = alpha;\n   };\n   b2DebugDraw.prototype.GetAlpha = function () {\n      return this.m_alpha;\n   };\n   b2DebugDraw.prototype.SetFillAlpha = function (alpha) {\n      if (alpha === undefined) alpha = 0;\n      this.m_fillAlpha = alpha;\n   };\n   b2DebugDraw.prototype.GetFillAlpha = function () {\n      return this.m_fillAlpha;\n   };\n   b2DebugDraw.prototype.SetXFormScale = function (xformScale) {\n      if (xformScale === undefined) xformScale = 0;\n      this.m_xformScale = xformScale;\n   };\n   b2DebugDraw.prototype.GetXFormScale = function () {\n      return this.m_xformScale;\n   };\n   b2DebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color) {\n      if (!vertexCount) return;\n      var s = this.m_ctx;\n      var drawScale = this.m_drawScale;\n      s.beginPath();\n      s.strokeStyle = this._color(color.color, this.m_alpha);\n      s.moveTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\n      for (var i = 1; i < vertexCount; i++) {\n         s.lineTo(vertices[i].x * drawScale, vertices[i].y * drawScale);\n      }\n      s.lineTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\n      s.closePath();\n      s.stroke();\n   };\n   b2DebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color) {\n      if (!vertexCount) return;\n      var s = this.m_ctx;\n      var drawScale = this.m_drawScale;\n      s.beginPath();\n      s.strokeStyle = this._color(color.color, this.m_alpha);\n      s.fillStyle = this._color(color.color, this.m_fillAlpha);\n      s.moveTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\n      for (var i = 1; i < vertexCount; i++) {\n         s.lineTo(vertices[i].x * drawScale, vertices[i].y * drawScale);\n      }\n      s.lineTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\n      s.closePath();\n      s.fill();\n      s.stroke();\n   };\n   b2DebugDraw.prototype.DrawCircle = function (center, radius, color) {\n      if (!radius) return;\n      var s = this.m_ctx;\n      var drawScale = this.m_drawScale;\n      s.beginPath();\n      s.strokeStyle = this._color(color.color, this.m_alpha);\n      s.arc(center.x * drawScale, center.y * drawScale, radius * drawScale, 0, Math.PI * 2, true);\n      s.closePath();\n      s.stroke();\n   };\n   b2DebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color) {\n      if (!radius) return;\n      var s = this.m_ctx,\n         drawScale = this.m_drawScale,\n         cx = center.x * drawScale,\n         cy = center.y * drawScale;\n      s.moveTo(0, 0);\n      s.beginPath();\n      s.strokeStyle = this._color(color.color, this.m_alpha);\n      s.fillStyle = this._color(color.color, this.m_fillAlpha);\n      s.arc(cx, cy, radius * drawScale, 0, Math.PI * 2, true);\n      s.moveTo(cx, cy);\n      s.lineTo((center.x + axis.x * radius) * drawScale, (center.y + axis.y * radius) * drawScale);\n      s.closePath();\n      s.fill();\n      s.stroke();\n   };\n   b2DebugDraw.prototype.DrawSegment = function (p1, p2, color) {\n      var s = this.m_ctx,\n         drawScale = this.m_drawScale;\n      s.strokeStyle = this._color(color.color, this.m_alpha);\n      s.beginPath();\n      s.moveTo(p1.x * drawScale, p1.y * drawScale);\n      s.lineTo(p2.x * drawScale, p2.y * drawScale);\n      s.closePath();\n      s.stroke();\n   };\n   b2DebugDraw.prototype.DrawTransform = function (xf) {\n      var s = this.m_ctx,\n         drawScale = this.m_drawScale;\n      s.beginPath();\n      s.strokeStyle = this._color(0xff0000, this.m_alpha);\n      s.moveTo(xf.position.x * drawScale, xf.position.y * drawScale);\n      s.lineTo((xf.position.x + this.m_xformScale * xf.R.col1.x) * drawScale, (xf.position.y + this.m_xformScale * xf.R.col1.y) * drawScale);\n\n      s.strokeStyle = this._color(0xff00, this.m_alpha);\n      s.moveTo(xf.position.x * drawScale, xf.position.y * drawScale);\n      s.lineTo((xf.position.x + this.m_xformScale * xf.R.col2.x) * drawScale, (xf.position.y + this.m_xformScale * xf.R.col2.y) * drawScale);\n      s.closePath();\n      s.stroke();\n   };\n})(); //post-definitions\nvar i;\nfor (i = 0; i < Box2D.postDefs.length; ++i) Box2D.postDefs[i]();\ndelete Box2D.postDefs;\n","/*!\n * string_score.js: String Scoring Algorithm 0.1.10 \n *\n * http://joshaven.com/string_score\n * https://github.com/joshaven/string_score\n *\n * Copyright (C) 2009-2011 Joshaven Potter <yourtech@gmail.com>\n * Special thanks to all of the contributors listed here https://github.com/joshaven/string_score\n * MIT license: http://www.opensource.org/licenses/mit-license.php\n *\n * Date: Tue Mar 1 2011\n*/\n\n/*\n * Modified by Nick Winter to not create a new method on the String prototype, just doing what Esprima does with UMD.\n */\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.string_score = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    /**\n     * Scores a string against another string.\n     *  string_score('Hello World', 'he');     //=> 0.5931818181818181\n     *  string_score('Hello World', 'Hello');  //=> 0.7318181818181818\n     */\n    function score(string, abbreviation, fuzziness) {\n      // If the string is equal to the abbreviation, perfect match.\n      if (string == abbreviation) {return 1;}\n      //if it's not a perfect match and is empty return 0\n      if(abbreviation == \"\") {return 0;}\n    \n      var total_character_score = 0,\n          abbreviation_length = abbreviation.length,\n          string_length = string.length,\n          start_of_string_bonus,\n          abbreviation_score,\n          fuzzies=1,\n          final_score;\n      \n      // Walk through abbreviation and add up scores.\n      for (var i = 0,\n             character_score/* = 0*/,\n             index_in_string/* = 0*/,\n             c/* = ''*/,\n             index_c_lowercase/* = 0*/,\n             index_c_uppercase/* = 0*/,\n             min_index/* = 0*/;\n         i < abbreviation_length;\n         ++i) {\n        \n        // Find the first case-insensitive match of a character.\n        c = abbreviation.charAt(i);\n        \n        index_c_lowercase = string.indexOf(c.toLowerCase());\n        index_c_uppercase = string.indexOf(c.toUpperCase());\n        min_index = Math.min(index_c_lowercase, index_c_uppercase);\n        index_in_string = (min_index > -1) ? min_index : Math.max(index_c_lowercase, index_c_uppercase);\n        \n        if (index_in_string === -1) { \n          if (fuzziness) {\n            fuzzies += 1-fuzziness;\n            continue;\n          } else {\n            return 0;\n          }\n        } else {\n          character_score = 0.1;\n        }\n        \n        // Set base score for matching 'c'.\n        \n        // Same case bonus.\n        if (string[index_in_string] === c) { \n          character_score += 0.1; \n        }\n        \n        // Consecutive letter & start-of-string Bonus\n        if (index_in_string === 0) {\n          // Increase the score when matching first character of the remainder of the string\n          character_score += 0.6;\n          if (i === 0) {\n            // If match is the first character of the string\n            // & the first character of abbreviation, add a\n            // start-of-string match bonus.\n            start_of_string_bonus = 1; //true;\n          }\n        }\n        else {\n      // Acronym Bonus\n      // Weighing Logic: Typing the first character of an acronym is as if you\n      // preceded it with two perfect character matches.\n      if (string.charAt(index_in_string - 1) === ' ') {\n        character_score += 0.8; // * Math.min(index_in_string, 5); // Cap bonus at 0.4 * 5\n      }\n        }\n        \n        // Left trim the already matched part of the string\n        // (forces sequential matching).\n        string = string.substring(index_in_string + 1, string_length);\n        \n        total_character_score += character_score;\n      } // end of for loop\n      \n      // Uncomment to weigh smaller words higher.\n      // return total_character_score / string_length;\n      \n      abbreviation_score = total_character_score / abbreviation_length;\n      //percentage_of_matched_string = abbreviation_length / string_length;\n      //word_score = abbreviation_score * percentage_of_matched_string;\n      \n      // Reduce penalty for longer strings.\n      //final_score = (word_score + abbreviation_score) / 2;\n      final_score = ((abbreviation_score * (abbreviation_length / string_length)) + abbreviation_score) / 2;\n      \n      final_score /= fuzzies;\n      \n      if (start_of_string_bonus && (final_score + 0.15 < 1)) {\n        final_score += 0.15;\n      }\n      \n      return final_score;\n    };\n\n    exports.score = score;\n\n}));\n","//  Underscore.string\r\n//  (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\r\n//  Underscore.string is freely distributable under the terms of the MIT license.\r\n//  Documentation: https://github.com/epeli/underscore.string\r\n//  Some code is borrowed from MooTools and Alexandru Marasteanu.\r\n//  Version '2.3.2'\r\n\r\n!function(root, String){\r\n  'use strict';\r\n\r\n  // Defining helper functions.\r\n\r\n  var nativeTrim = String.prototype.trim;\r\n  var nativeTrimRight = String.prototype.trimRight;\r\n  var nativeTrimLeft = String.prototype.trimLeft;\r\n\r\n  var parseNumber = function(source) { return source * 1 || 0; };\r\n\r\n  var strRepeat = function(str, qty){\r\n    if (qty < 1) return '';\r\n    var result = '';\r\n    while (qty > 0) {\r\n      if (qty & 1) result += str;\r\n      qty >>= 1, str += str;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  var slice = [].slice;\r\n\r\n  var defaultToWhiteSpace = function(characters) {\r\n    if (characters == null)\r\n      return '\\\\s';\r\n    else if (characters.source)\r\n      return characters.source;\r\n    else\r\n      return '[' + _s.escapeRegExp(characters) + ']';\r\n  };\r\n\r\n  // Helper for toBoolean\r\n  function boolMatch(s, matchers) {\r\n    var i, matcher, down = s.toLowerCase();\r\n    matchers = [].concat(matchers);\r\n    for (i = 0; i < matchers.length; i += 1) {\r\n      matcher = matchers[i];\r\n      if (!matcher) continue;\r\n      if (matcher.test && matcher.test(s)) return true;\r\n      if (matcher.toLowerCase() === down) return true;\r\n    }\r\n  }\r\n\r\n  var escapeChars = {\r\n    lt: '<',\r\n    gt: '>',\r\n    quot: '\"',\r\n    amp: '&',\r\n    apos: \"'\"\r\n  };\r\n\r\n  var reversedEscapeChars = {};\r\n  for(var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;\r\n  reversedEscapeChars[\"'\"] = '#39';\r\n\r\n  // sprintf() for JavaScript 0.7-beta1\r\n  // http://www.diveintojavascript.com/projects/javascript-sprintf\r\n  //\r\n  // Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>\r\n  // All rights reserved.\r\n\r\n  var sprintf = (function() {\r\n    function get_type(variable) {\r\n      return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\r\n    }\r\n\r\n    var str_repeat = strRepeat;\r\n\r\n    var str_format = function() {\r\n      if (!str_format.cache.hasOwnProperty(arguments[0])) {\r\n        str_format.cache[arguments[0]] = str_format.parse(arguments[0]);\r\n      }\r\n      return str_format.format.call(null, str_format.cache[arguments[0]], arguments);\r\n    };\r\n\r\n    str_format.format = function(parse_tree, argv) {\r\n      var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\r\n      for (i = 0; i < tree_length; i++) {\r\n        node_type = get_type(parse_tree[i]);\r\n        if (node_type === 'string') {\r\n          output.push(parse_tree[i]);\r\n        }\r\n        else if (node_type === 'array') {\r\n          match = parse_tree[i]; // convenience purposes only\r\n          if (match[2]) { // keyword argument\r\n            arg = argv[cursor];\r\n            for (k = 0; k < match[2].length; k++) {\r\n              if (!arg.hasOwnProperty(match[2][k])) {\r\n                throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\r\n              }\r\n              arg = arg[match[2][k]];\r\n            }\r\n          } else if (match[1]) { // positional argument (explicit)\r\n            arg = argv[match[1]];\r\n          }\r\n          else { // positional argument (implicit)\r\n            arg = argv[cursor++];\r\n          }\r\n\r\n          if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\r\n            throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\r\n          }\r\n          switch (match[8]) {\r\n            case 'b': arg = arg.toString(2); break;\r\n            case 'c': arg = String.fromCharCode(arg); break;\r\n            case 'd': arg = parseInt(arg, 10); break;\r\n            case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\r\n            case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\r\n            case 'o': arg = arg.toString(8); break;\r\n            case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\r\n            case 'u': arg = Math.abs(arg); break;\r\n            case 'x': arg = arg.toString(16); break;\r\n            case 'X': arg = arg.toString(16).toUpperCase(); break;\r\n          }\r\n          arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);\r\n          pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';\r\n          pad_length = match[6] - String(arg).length;\r\n          pad = match[6] ? str_repeat(pad_character, pad_length) : '';\r\n          output.push(match[5] ? arg + pad : pad + arg);\r\n        }\r\n      }\r\n      return output.join('');\r\n    };\r\n\r\n    str_format.cache = {};\r\n\r\n    str_format.parse = function(fmt) {\r\n      var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\r\n      while (_fmt) {\r\n        if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\r\n          parse_tree.push(match[0]);\r\n        }\r\n        else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\r\n          parse_tree.push('%');\r\n        }\r\n        else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\r\n          if (match[2]) {\r\n            arg_names |= 1;\r\n            var field_list = [], replacement_field = match[2], field_match = [];\r\n            if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\r\n              field_list.push(field_match[1]);\r\n              while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\r\n                if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\r\n                  field_list.push(field_match[1]);\r\n                }\r\n                else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\r\n                  field_list.push(field_match[1]);\r\n                }\r\n                else {\r\n                  throw new Error('[_.sprintf] huh?');\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              throw new Error('[_.sprintf] huh?');\r\n            }\r\n            match[2] = field_list;\r\n          }\r\n          else {\r\n            arg_names |= 2;\r\n          }\r\n          if (arg_names === 3) {\r\n            throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\r\n          }\r\n          parse_tree.push(match);\r\n        }\r\n        else {\r\n          throw new Error('[_.sprintf] huh?');\r\n        }\r\n        _fmt = _fmt.substring(match[0].length);\r\n      }\r\n      return parse_tree;\r\n    };\r\n\r\n    return str_format;\r\n  })();\r\n\r\n\r\n\r\n  // Defining underscore.string\r\n\r\n  var _s = {\r\n\r\n    VERSION: '2.3.0',\r\n\r\n    isBlank: function(str){\r\n      if (str == null) str = '';\r\n      return (/^\\s*$/).test(str);\r\n    },\r\n\r\n    stripTags: function(str){\r\n      if (str == null) return '';\r\n      return String(str).replace(/<\\/?[^>]+>/g, '');\r\n    },\r\n\r\n    capitalize : function(str){\r\n      str = str == null ? '' : String(str);\r\n      return str.charAt(0).toUpperCase() + str.slice(1);\r\n    },\r\n\r\n    chop: function(str, step){\r\n      if (str == null) return [];\r\n      str = String(str);\r\n      step = ~~step;\r\n      return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\r\n    },\r\n\r\n    clean: function(str){\r\n      return _s.strip(str).replace(/\\s+/g, ' ');\r\n    },\r\n\r\n    count: function(str, substr){\r\n      if (str == null || substr == null) return 0;\r\n\r\n      str = String(str);\r\n      substr = String(substr);\r\n\r\n      var count = 0,\r\n        pos = 0,\r\n        length = substr.length;\r\n\r\n      while (true) {\r\n        pos = str.indexOf(substr, pos);\r\n        if (pos === -1) break;\r\n        count++;\r\n        pos += length;\r\n      }\r\n\r\n      return count;\r\n    },\r\n\r\n    chars: function(str) {\r\n      if (str == null) return [];\r\n      return String(str).split('');\r\n    },\r\n\r\n    swapCase: function(str) {\r\n      if (str == null) return '';\r\n      return String(str).replace(/\\S/g, function(c){\r\n        return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\r\n      });\r\n    },\r\n\r\n    escapeHTML: function(str) {\r\n      if (str == null) return '';\r\n      return String(str).replace(/[&<>\"']/g, function(m){ return '&' + reversedEscapeChars[m] + ';'; });\r\n    },\r\n\r\n    unescapeHTML: function(str) {\r\n      if (str == null) return '';\r\n      return String(str).replace(/\\&([^;]+);/g, function(entity, entityCode){\r\n        var match;\r\n\r\n        if (entityCode in escapeChars) {\r\n          return escapeChars[entityCode];\r\n        } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\r\n          return String.fromCharCode(parseInt(match[1], 16));\r\n        } else if (match = entityCode.match(/^#(\\d+)$/)) {\r\n          return String.fromCharCode(~~match[1]);\r\n        } else {\r\n          return entity;\r\n        }\r\n      });\r\n    },\r\n\r\n    escapeRegExp: function(str){\r\n      if (str == null) return '';\r\n      return String(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\r\n    },\r\n\r\n    splice: function(str, i, howmany, substr){\r\n      var arr = _s.chars(str);\r\n      arr.splice(~~i, ~~howmany, substr);\r\n      return arr.join('');\r\n    },\r\n\r\n    insert: function(str, i, substr){\r\n      return _s.splice(str, i, 0, substr);\r\n    },\r\n\r\n    include: function(str, needle){\r\n      if (needle === '') return true;\r\n      if (str == null) return false;\r\n      return String(str).indexOf(needle) !== -1;\r\n    },\r\n\r\n    join: function() {\r\n      var args = slice.call(arguments),\r\n        separator = args.shift();\r\n\r\n      if (separator == null) separator = '';\r\n\r\n      return args.join(separator);\r\n    },\r\n\r\n    lines: function(str) {\r\n      if (str == null) return [];\r\n      return String(str).split(\"\\n\");\r\n    },\r\n\r\n    reverse: function(str){\r\n      return _s.chars(str).reverse().join('');\r\n    },\r\n\r\n    startsWith: function(str, starts){\r\n      if (starts === '') return true;\r\n      if (str == null || starts == null) return false;\r\n      str = String(str); starts = String(starts);\r\n      return str.length >= starts.length && str.slice(0, starts.length) === starts;\r\n    },\r\n\r\n    endsWith: function(str, ends){\r\n      if (ends === '') return true;\r\n      if (str == null || ends == null) return false;\r\n      str = String(str); ends = String(ends);\r\n      return str.length >= ends.length && str.slice(str.length - ends.length) === ends;\r\n    },\r\n\r\n    succ: function(str){\r\n      if (str == null) return '';\r\n      str = String(str);\r\n      return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length-1) + 1);\r\n    },\r\n\r\n    titleize: function(str){\r\n      if (str == null) return '';\r\n      str  = String(str).toLowerCase();\r\n      return str.replace(/(?:^|\\s|-)\\S/g, function(c){ return c.toUpperCase(); });\r\n    },\r\n\r\n    camelize: function(str){\r\n      return _s.trim(str).replace(/[-_\\s]+(.)?/g, function(match, c){ return c ? c.toUpperCase() : \"\"; });\r\n    },\r\n\r\n    underscored: function(str){\r\n      return _s.trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();\r\n    },\r\n\r\n    dasherize: function(str){\r\n      return _s.trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();\r\n    },\r\n\r\n    classify: function(str){\r\n      return _s.titleize(String(str).replace(/[\\W_]/g, ' ')).replace(/\\s/g, '');\r\n    },\r\n\r\n    humanize: function(str){\r\n      return _s.capitalize(_s.underscored(str).replace(/_id$/,'').replace(/_/g, ' '));\r\n    },\r\n\r\n    trim: function(str, characters){\r\n      if (str == null) return '';\r\n      if (!characters && nativeTrim) return nativeTrim.call(str);\r\n      characters = defaultToWhiteSpace(characters);\r\n      return String(str).replace(new RegExp('\\^' + characters + '+|' + characters + '+$', 'g'), '');\r\n    },\r\n\r\n    ltrim: function(str, characters){\r\n      if (str == null) return '';\r\n      if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);\r\n      characters = defaultToWhiteSpace(characters);\r\n      return String(str).replace(new RegExp('^' + characters + '+'), '');\r\n    },\r\n\r\n    rtrim: function(str, characters){\r\n      if (str == null) return '';\r\n      if (!characters && nativeTrimRight) return nativeTrimRight.call(str);\r\n      characters = defaultToWhiteSpace(characters);\r\n      return String(str).replace(new RegExp(characters + '+$'), '');\r\n    },\r\n\r\n    truncate: function(str, length, truncateStr){\r\n      if (str == null) return '';\r\n      str = String(str); truncateStr = truncateStr || '...';\r\n      length = ~~length;\r\n      return str.length > length ? str.slice(0, length) + truncateStr : str;\r\n    },\r\n\r\n    /**\r\n     * _s.prune: a more elegant version of truncate\r\n     * prune extra chars, never leaving a half-chopped word.\r\n     * @author github.com/rwz\r\n     */\r\n    prune: function(str, length, pruneStr){\r\n      if (str == null) return '';\r\n\r\n      str = String(str); length = ~~length;\r\n      pruneStr = pruneStr != null ? String(pruneStr) : '...';\r\n\r\n      if (str.length <= length) return str;\r\n\r\n      var tmpl = function(c){ return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' '; },\r\n        template = str.slice(0, length+1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\r\n\r\n      if (template.slice(template.length-2).match(/\\w\\w/))\r\n        template = template.replace(/\\s*\\S+$/, '');\r\n      else\r\n        template = _s.rtrim(template.slice(0, template.length-1));\r\n\r\n      return (template+pruneStr).length > str.length ? str : str.slice(0, template.length)+pruneStr;\r\n    },\r\n\r\n    words: function(str, delimiter) {\r\n      if (_s.isBlank(str)) return [];\r\n      return _s.trim(str, delimiter).split(delimiter || /\\s+/);\r\n    },\r\n\r\n    pad: function(str, length, padStr, type) {\r\n      str = str == null ? '' : String(str);\r\n      length = ~~length;\r\n\r\n      var padlen  = 0;\r\n\r\n      if (!padStr)\r\n        padStr = ' ';\r\n      else if (padStr.length > 1)\r\n        padStr = padStr.charAt(0);\r\n\r\n      switch(type) {\r\n        case 'right':\r\n          padlen = length - str.length;\r\n          return str + strRepeat(padStr, padlen);\r\n        case 'both':\r\n          padlen = length - str.length;\r\n          return strRepeat(padStr, Math.ceil(padlen/2)) + str\r\n                  + strRepeat(padStr, Math.floor(padlen/2));\r\n        default: // 'left'\r\n          padlen = length - str.length;\r\n          return strRepeat(padStr, padlen) + str;\r\n        }\r\n    },\r\n\r\n    lpad: function(str, length, padStr) {\r\n      return _s.pad(str, length, padStr);\r\n    },\r\n\r\n    rpad: function(str, length, padStr) {\r\n      return _s.pad(str, length, padStr, 'right');\r\n    },\r\n\r\n    lrpad: function(str, length, padStr) {\r\n      return _s.pad(str, length, padStr, 'both');\r\n    },\r\n\r\n    sprintf: sprintf,\r\n\r\n    vsprintf: function(fmt, argv){\r\n      argv.unshift(fmt);\r\n      return sprintf.apply(null, argv);\r\n    },\r\n\r\n    toNumber: function(str, decimals) {\r\n      if (!str) return 0;\r\n      str = _s.trim(str);\r\n      if (!str.match(/^-?\\d+(?:\\.\\d+)?$/)) return NaN;\r\n      return parseNumber(parseNumber(str).toFixed(~~decimals));\r\n    },\r\n\r\n    numberFormat : function(number, dec, dsep, tsep) {\r\n      if (isNaN(number) || number == null) return '';\r\n\r\n      number = number.toFixed(~~dec);\r\n      tsep = typeof tsep == 'string' ? tsep : ',';\r\n\r\n      var parts = number.split('.'), fnums = parts[0],\r\n        decimals = parts[1] ? (dsep || '.') + parts[1] : '';\r\n\r\n      return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;\r\n    },\r\n\r\n    strRight: function(str, sep){\r\n      if (str == null) return '';\r\n      str = String(str); sep = sep != null ? String(sep) : sep;\r\n      var pos = !sep ? -1 : str.indexOf(sep);\r\n      return ~pos ? str.slice(pos+sep.length, str.length) : str;\r\n    },\r\n\r\n    strRightBack: function(str, sep){\r\n      if (str == null) return '';\r\n      str = String(str); sep = sep != null ? String(sep) : sep;\r\n      var pos = !sep ? -1 : str.lastIndexOf(sep);\r\n      return ~pos ? str.slice(pos+sep.length, str.length) : str;\r\n    },\r\n\r\n    strLeft: function(str, sep){\r\n      if (str == null) return '';\r\n      str = String(str); sep = sep != null ? String(sep) : sep;\r\n      var pos = !sep ? -1 : str.indexOf(sep);\r\n      return ~pos ? str.slice(0, pos) : str;\r\n    },\r\n\r\n    strLeftBack: function(str, sep){\r\n      if (str == null) return '';\r\n      str += ''; sep = sep != null ? ''+sep : sep;\r\n      var pos = str.lastIndexOf(sep);\r\n      return ~pos ? str.slice(0, pos) : str;\r\n    },\r\n\r\n    toSentence: function(array, separator, lastSeparator, serial) {\r\n      separator = separator || ', ';\r\n      lastSeparator = lastSeparator || ' and ';\r\n      var a = array.slice(), lastMember = a.pop();\r\n\r\n      if (array.length > 2 && serial) lastSeparator = _s.rtrim(separator) + lastSeparator;\r\n\r\n      return a.length ? a.join(separator) + lastSeparator + lastMember : lastMember;\r\n    },\r\n\r\n    toSentenceSerial: function() {\r\n      var args = slice.call(arguments);\r\n      args[3] = true;\r\n      return _s.toSentence.apply(_s, args);\r\n    },\r\n\r\n    slugify: function(str) {\r\n      if (str == null) return '';\r\n\r\n      var from  = \"ąàáäâãåæăćęèéëêìíïîłńòóöôõøśșțùúüûñçżź\",\r\n          to    = \"aaaaaaaaaceeeeeiiiilnoooooosstuuuunczz\",\r\n          regex = new RegExp(defaultToWhiteSpace(from), 'g');\r\n\r\n      str = String(str).toLowerCase().replace(regex, function(c){\r\n        var index = from.indexOf(c);\r\n        return to.charAt(index) || '-';\r\n      });\r\n\r\n      return _s.dasherize(str.replace(/[^\\w\\s-]/g, ''));\r\n    },\r\n\r\n    surround: function(str, wrapper) {\r\n      return [wrapper, str, wrapper].join('');\r\n    },\r\n\r\n    quote: function(str, quoteChar) {\r\n      return _s.surround(str, quoteChar || '\"');\r\n    },\r\n\r\n    unquote: function(str, quoteChar) {\r\n      quoteChar = quoteChar || '\"';\r\n      if (str[0] === quoteChar && str[str.length-1] === quoteChar)\r\n        return str.slice(1,str.length-1);\r\n      else return str;\r\n    },\r\n\r\n    exports: function() {\r\n      var result = {};\r\n\r\n      for (var prop in this) {\r\n        if (!this.hasOwnProperty(prop) || prop.match(/^(?:include|contains|reverse)$/)) continue;\r\n        result[prop] = this[prop];\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    repeat: function(str, qty, separator){\r\n      if (str == null) return '';\r\n\r\n      qty = ~~qty;\r\n\r\n      // using faster implementation if separator is not needed;\r\n      if (separator == null) return strRepeat(String(str), qty);\r\n\r\n      // this one is about 300x slower in Google Chrome\r\n      for (var repeat = []; qty > 0; repeat[--qty] = str) {}\r\n      return repeat.join(separator);\r\n    },\r\n\r\n    naturalCmp: function(str1, str2){\r\n      if (str1 == str2) return 0;\r\n      if (!str1) return -1;\r\n      if (!str2) return 1;\r\n\r\n      var cmpRegex = /(\\.\\d+)|(\\d+)|(\\D+)/g,\r\n        tokens1 = String(str1).toLowerCase().match(cmpRegex),\r\n        tokens2 = String(str2).toLowerCase().match(cmpRegex),\r\n        count = Math.min(tokens1.length, tokens2.length);\r\n\r\n      for(var i = 0; i < count; i++) {\r\n        var a = tokens1[i], b = tokens2[i];\r\n\r\n        if (a !== b){\r\n          var num1 = parseInt(a, 10);\r\n          if (!isNaN(num1)){\r\n            var num2 = parseInt(b, 10);\r\n            if (!isNaN(num2) && num1 - num2)\r\n              return num1 - num2;\r\n          }\r\n          return a < b ? -1 : 1;\r\n        }\r\n      }\r\n\r\n      if (tokens1.length === tokens2.length)\r\n        return tokens1.length - tokens2.length;\r\n\r\n      return str1 < str2 ? -1 : 1;\r\n    },\r\n\r\n    levenshtein: function(str1, str2) {\r\n      if (str1 == null && str2 == null) return 0;\r\n      if (str1 == null) return String(str2).length;\r\n      if (str2 == null) return String(str1).length;\r\n\r\n      str1 = String(str1); str2 = String(str2);\r\n\r\n      var current = [], prev, value;\r\n\r\n      for (var i = 0; i <= str2.length; i++)\r\n        for (var j = 0; j <= str1.length; j++) {\r\n          if (i && j)\r\n            if (str1.charAt(j - 1) === str2.charAt(i - 1))\r\n              value = prev;\r\n            else\r\n              value = Math.min(current[j], current[j - 1], prev) + 1;\r\n          else\r\n            value = i + j;\r\n\r\n          prev = current[j];\r\n          current[j] = value;\r\n        }\r\n\r\n      return current.pop();\r\n    },\r\n\r\n    toBoolean: function(str, trueValues, falseValues) {\r\n      if (typeof str === \"number\") str = \"\" + str;\r\n      if (typeof str !== \"string\") return !!str;\r\n      str = _s.trim(str);\r\n      if (boolMatch(str, trueValues || [\"true\", \"1\"])) return true;\r\n      if (boolMatch(str, falseValues || [\"false\", \"0\"])) return false;\r\n    }\r\n  };\r\n\r\n  // Aliases\r\n\r\n  _s.strip    = _s.trim;\r\n  _s.lstrip   = _s.ltrim;\r\n  _s.rstrip   = _s.rtrim;\r\n  _s.center   = _s.lrpad;\r\n  _s.rjust    = _s.lpad;\r\n  _s.ljust    = _s.rpad;\r\n  _s.contains = _s.include;\r\n  _s.q        = _s.quote;\r\n  _s.toBool   = _s.toBoolean;\r\n\r\n  // Exporting\r\n\r\n  // CommonJS module is defined\r\n  if (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports)\r\n      module.exports = _s;\r\n\r\n    exports._s = _s;\r\n  }\r\n\r\n  // Register as a named module with AMD.\r\n  if (typeof define === 'function' && define.amd)\r\n    define('underscore.string', [], function(){ return _s; });\r\n\r\n\r\n  // Integrate with Underscore.js if defined\r\n  // or create our own underscore object.\r\n  root._ = root._ || {};\r\n  root._.string = root._.str = _s;\r\n}(this, String);\r\n","/**\r\n * CoffeeScript Compiler v1.6.3\r\n * http://coffeescript.org\r\n *\r\n * Copyright 2011, Jeremy Ashkenas\r\n * Released under the MIT License\r\n */\r\n!function(root){var CoffeeScript=function(){function require(e){return require[e]}return require[\"./helpers\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s,r,o;e.starts=function(e,t,n){return t===e.substr(n,t.length)},e.ends=function(e,t,n){var i;return i=t.length,t===e.substr(e.length-i-(n||0),i)},e.repeat=r=function(e,t){var n;for(n=\"\";t>0;)1&t&&(n+=e),t>>>=1,e+=e;return n},e.compact=function(e){var t,n,i,s;for(s=[],n=0,i=e.length;i>n;n++)t=e[n],t&&s.push(t);return s},e.count=function(e,t){var n,i;if(n=i=0,!t.length)return 1/0;for(;i=1+e.indexOf(t,i);)n++;return n},e.merge=function(e,t){return n(n({},e),t)},n=e.extend=function(e,t){var n,i;for(n in t)i=t[n],e[n]=i;return e},e.flatten=i=function(e){var t,n,s,r;for(n=[],s=0,r=e.length;r>s;s++)t=e[s],t instanceof Array?n=n.concat(i(t)):n.push(t);return n},e.del=function(e,t){var n;return n=e[t],delete e[t],n},e.last=s=function(e,t){return e[e.length-(t||0)-1]},e.some=null!=(o=Array.prototype.some)?o:function(e){var t,n,i;for(n=0,i=this.length;i>n;n++)if(t=this[n],e(t))return!0;return!1},e.invertLiterate=function(e){var t,n,i;return i=!0,n=function(){var n,s,r,o;for(r=e.split(\"\\n\"),o=[],n=0,s=r.length;s>n;n++)t=r[n],i&&/^([ ]{4}|[ ]{0,3}\\t)/.test(t)?o.push(t):(i=/^\\s*$/.test(t))?o.push(t):o.push(\"# \"+t);return o}(),n.join(\"\\n\")},t=function(e,t){return t?{first_line:e.first_line,first_column:e.first_column,last_line:t.last_line,last_column:t.last_column}:e},e.addLocationDataFn=function(e,n){return function(i){return\"object\"==typeof i&&i.updateLocationDataIfMissing&&i.updateLocationDataIfMissing(t(e,n)),i}},e.locationDataToString=function(e){var t;return\"2\"in e&&\"first_line\"in e[2]?t=e[2]:\"first_line\"in e&&(t=e),t?\"\"+(t.first_line+1)+\":\"+(t.first_column+1)+\"-\"+(\"\"+(t.last_line+1)+\":\"+(t.last_column+1)):\"No location data\"},e.baseFileName=function(e,t,n){var i,s;return null==t&&(t=!1),null==n&&(n=!1),s=n?/\\\\|\\//:/\\//,i=e.split(s),e=i[i.length-1],t?(i=e.split(\".\"),i.pop(),\"coffee\"===i[i.length-1]&&i.length>1&&i.pop(),i.join(\".\")):e},e.isCoffee=function(e){return/\\.((lit)?coffee|coffee\\.md)$/.test(e)},e.isLiterate=function(e){return/\\.(litcoffee|coffee\\.md)$/.test(e)},e.throwSyntaxError=function(e,t){var n;throw null==t.last_line&&(t.last_line=t.first_line),null==t.last_column&&(t.last_column=t.first_column),n=new SyntaxError(e),n.location=t,n},e.prettyErrorMessage=function(e,t,n,i){var s,o,a,c,h,l,u,p,d,f,m;return e.location?(m=e.location,h=m.first_line,c=m.first_column,u=m.last_line,l=m.last_column,s=n.split(\"\\n\")[h],f=c,a=h===u?l+1:s.length,p=r(\" \",f)+r(\"^\",a-f),i&&(o=function(e){return\"\u001b[1;31m\"+e+\"\u001b[0m\"},s=s.slice(0,f)+o(s.slice(f,a))+s.slice(a),p=o(p)),d=\"\"+t+\":\"+(h+1)+\":\"+(c+1)+\": error: \"+e.message+\"\\n\"+s+\"\\n\"+p):e.stack||\"\"+e}}.call(this),t.exports}(),require[\"./rewriter\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,m,b,k,g,y=[].indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(t in this&&this[t]===e)return t;return-1},v=[].slice;for(d=function(e,t){var n;return n=[e,t],n.generated=!0,n},e.Rewriter=function(){function e(){}return e.prototype.rewrite=function(e){return this.tokens=e,this.removeLeadingNewlines(),this.removeMidExpressionNewlines(),this.closeOpenCalls(),this.closeOpenIndexes(),this.addImplicitIndentation(),this.tagPostfixConditionals(),this.addImplicitBracesAndParens(),this.addLocationDataToGeneratedTokens(),this.tokens},e.prototype.scanTokens=function(e){var t,n,i;for(i=this.tokens,t=0;n=i[t];)t+=e.call(this,n,t,i);return!0},e.prototype.detectEnd=function(e,t,n){var r,o,a,c,h;for(a=this.tokens,r=0;o=a[e];){if(0===r&&t.call(this,o,e))return n.call(this,o,e);if(!o||0>r)return n.call(this,o,e-1);c=o[0],y.call(s,c)>=0?r+=1:(h=o[0],y.call(i,h)>=0&&(r-=1)),e+=1}return e-1},e.prototype.removeLeadingNewlines=function(){var e,t,n,i,s;for(s=this.tokens,e=n=0,i=s.length;i>n&&(t=s[e][0],\"TERMINATOR\"===t);e=++n);return e?this.tokens.splice(0,e):void 0},e.prototype.removeMidExpressionNewlines=function(){return this.scanTokens(function(e,t,i){var s;return\"TERMINATOR\"===e[0]&&(s=this.tag(t+1),y.call(n,s)>=0)?(i.splice(t,1),0):1})},e.prototype.closeOpenCalls=function(){var e,t;return t=function(e,t){var n;return\")\"===(n=e[0])||\"CALL_END\"===n||\"OUTDENT\"===e[0]&&\")\"===this.tag(t-1)},e=function(e,t){return this.tokens[\"OUTDENT\"===e[0]?t-1:t][0]=\"CALL_END\"},this.scanTokens(function(n,i){return\"CALL_START\"===n[0]&&this.detectEnd(i+1,t,e),1})},e.prototype.closeOpenIndexes=function(){var e,t;return t=function(e){var t;return\"]\"===(t=e[0])||\"INDEX_END\"===t},e=function(e){return e[0]=\"INDEX_END\"},this.scanTokens(function(n,i){return\"INDEX_START\"===n[0]&&this.detectEnd(i+1,t,e),1})},e.prototype.matchTags=function(){var e,t,n,i,s,r,o;for(t=arguments[0],i=2<=arguments.length?v.call(arguments,1):[],e=0,n=s=0,r=i.length;r>=0?r>s:s>r;n=r>=0?++s:--s){for(;\"HERECOMMENT\"===this.tag(t+n+e);)e+=2;if(null!=i[n]&&(\"string\"==typeof i[n]&&(i[n]=[i[n]]),o=this.tag(t+n+e),y.call(i[n],o)<0))return!1}return!0},e.prototype.looksObjectish=function(e){return this.matchTags(e,\"@\",null,\":\")||this.matchTags(e,null,\":\")},e.prototype.findTagsBackwards=function(e,t){var n,r,o,a,c,h,u;for(n=[];e>=0&&(n.length||(a=this.tag(e),y.call(t,a)<0&&(c=this.tag(e),y.call(s,c)<0||this.tokens[e].generated)&&(h=this.tag(e),y.call(l,h)<0)));)r=this.tag(e),y.call(i,r)>=0&&n.push(this.tag(e)),o=this.tag(e),y.call(s,o)>=0&&n.length&&n.pop(),e-=1;return u=this.tag(e),y.call(t,u)>=0},e.prototype.addImplicitBracesAndParens=function(){var e;return e=[],this.scanTokens(function(t,n,h){var u,p,f,m,b,k,g,v,w,T,C,F,L,N,x,E,D,S,R,A,I,_,$,O,j,M;if(A=t[0],T=(n>0?h[n-1]:[])[0],v=(n<h.length-1?h[n+1]:[])[0],x=function(){return e[e.length-1]},E=n,f=function(e){return n-E+e},m=function(){var e,t;return null!=(e=x())?null!=(t=e[2])?t.ours:void 0:void 0},b=function(){var e;return m()&&\"(\"===(null!=(e=x())?e[0]:void 0)},g=function(){var e;return m()&&\"{\"===(null!=(e=x())?e[0]:void 0)},k=function(){var e;return m&&\"CONTROL\"===(null!=(e=x())?e[0]:void 0)},D=function(t){var i;return i=null!=t?t:n,e.push([\"(\",i,{ours:!0}]),h.splice(i,0,d(\"CALL_START\",\"(\")),null==t?n+=1:void 0},u=function(){return e.pop(),h.splice(n,0,d(\"CALL_END\",\")\")),n+=1},S=function(t,i){var s;return null==i&&(i=!0),s=null!=t?t:n,e.push([\"{\",s,{sameLine:!0,startsLine:i,ours:!0}]),h.splice(s,0,d(\"{\",d(new String(\"{\")))),null==t?n+=1:void 0},p=function(t){return t=null!=t?t:n,e.pop(),h.splice(t,0,d(\"}\",\"}\")),n+=1},b()&&(\"IF\"===A||\"TRY\"===A||\"FINALLY\"===A||\"CATCH\"===A||\"CLASS\"===A||\"SWITCH\"===A))return e.push([\"CONTROL\",n,{ours:!0}]),f(1);if(\"INDENT\"===A&&m()){if(\"=>\"!==T&&\"->\"!==T&&\"[\"!==T&&\"(\"!==T&&\",\"!==T&&\"{\"!==T&&\"TRY\"!==T&&\"ELSE\"!==T&&\"=\"!==T)for(;b();)u();return k()&&e.pop(),e.push([A,n]),f(1)}if(y.call(s,A)>=0)return e.push([A,n]),f(1);if(y.call(i,A)>=0){for(;m();)b()?u():g()?p():e.pop();e.pop()}if((y.call(a,A)>=0&&t.spaced&&!t.stringEnd||\"?\"===A&&n>0&&!h[n-1].spaced)&&(y.call(r,v)>=0||y.call(c,v)>=0&&!(null!=(I=h[n+1])?I.spaced:void 0)&&!(null!=(_=h[n+1])?_.newLine:void 0)))return\"?\"===A&&(A=t[0]=\"FUNC_EXIST\"),D(n+1),f(2);if(y.call(a,A)>=0&&this.matchTags(n+1,\"INDENT\",null,\":\")&&!this.findTagsBackwards(n,[\"CLASS\",\"EXTENDS\",\"IF\",\"CATCH\",\"SWITCH\",\"LEADING_WHEN\",\"FOR\",\"WHILE\",\"UNTIL\"]))return D(n+1),e.push([\"INDENT\",n+2]),f(3);if(\":\"===A){for(C=\"@\"===this.tag(n-2)?n-2:n-1;\"HERECOMMENT\"===this.tag(C-2);)C-=2;return R=0===C||($=this.tag(C-1),y.call(l,$)>=0)||h[C-1].newLine,x()&&(O=x(),N=O[0],L=O[1],(\"{\"===N||\"INDENT\"===N&&\"{\"===this.tag(L-1))&&(R||\",\"===this.tag(C-1)||\"{\"===this.tag(C-1)))?f(1):(S(C,!!R),f(2))}if(\"OUTDENT\"===T&&b()&&(\".\"===A||\"?.\"===A||\"::\"===A||\"?::\"===A))return u(),f(1);if(g()&&y.call(l,A)>=0&&(x()[2].sameLine=!1),y.call(o,A)>=0)for(;m();)if(j=x(),N=j[0],L=j[1],M=j[2],F=M.sameLine,R=M.startsLine,b()&&\",\"!==T)u();else if(g()&&F&&!R)p();else{if(!g()||\"TERMINATOR\"!==A||\",\"===T||R&&this.looksObjectish(n+1))break;p()}if(\",\"===A&&!this.looksObjectish(n+1)&&g()&&(\"TERMINATOR\"!==v||!this.looksObjectish(n+2)))for(w=\"OUTDENT\"===v?1:0;g();)p(n+w);return f(1)})},e.prototype.addLocationDataToGeneratedTokens=function(){return this.scanTokens(function(e,t,n){var i,s,r,o,a,c;return e[2]?1:e.generated||e.explicit?(\"{\"===e[0]&&(r=null!=(a=n[t+1])?a[2]:void 0)?(s=r.first_line,i=r.first_column):(o=null!=(c=n[t-1])?c[2]:void 0)?(s=o.last_line,i=o.last_column):s=i=0,e[2]={first_line:s,first_column:i,last_line:s,last_column:i},1):1})},e.prototype.addImplicitIndentation=function(){var e,t,n,i,s;return s=n=i=null,t=function(e){var t,n;return\";\"!==e[1]&&(t=e[0],y.call(u,t)>=0)&&!(\"ELSE\"===e[0]&&\"THEN\"!==s)&&!!(\"CATCH\"!==(n=e[0])&&\"FINALLY\"!==n||\"->\"!==s&&\"=>\"!==s)},e=function(e,t){return this.tokens.splice(\",\"===this.tag(t-1)?t-1:t,0,i)},this.scanTokens(function(r,o,a){var c,h,l,u,d;if(h=r[0],\"TERMINATOR\"===h&&\"THEN\"===this.tag(o+1))return a.splice(o,1),0;if(\"ELSE\"===h&&\"OUTDENT\"!==this.tag(o-1))return a.splice.apply(a,[o,0].concat(v.call(this.indentation()))),2;if(\"CATCH\"===h)for(c=l=1;2>=l;c=++l)if(\"OUTDENT\"===(u=this.tag(o+c))||\"TERMINATOR\"===u||\"FINALLY\"===u)return a.splice.apply(a,[o+c,0].concat(v.call(this.indentation()))),2+c;return y.call(p,h)>=0&&\"INDENT\"!==this.tag(o+1)&&(\"ELSE\"!==h||\"IF\"!==this.tag(o+1))?(s=h,d=this.indentation(!0),n=d[0],i=d[1],\"THEN\"===s&&(n.fromThen=!0),a.splice(o+1,0,n),this.detectEnd(o+2,t,e),\"THEN\"===h&&a.splice(o,1),1):1})},e.prototype.tagPostfixConditionals=function(){var e,t,n;return n=null,t=function(e,t){var n,i;return i=e[0],n=this.tokens[t-1][0],\"TERMINATOR\"===i||\"INDENT\"===i&&y.call(p,n)<0},e=function(e){return\"INDENT\"!==e[0]||e.generated&&!e.fromThen?n[0]=\"POST_\"+n[0]:void 0},this.scanTokens(function(i,s){return\"IF\"!==i[0]?1:(n=i,this.detectEnd(s+1,t,e),1)})},e.prototype.indentation=function(e){var t,n;return null==e&&(e=!1),t=[\"INDENT\",2],n=[\"OUTDENT\",2],e&&(t.generated=n.generated=!0),e||(t.explicit=n.explicit=!0),[t,n]},e.prototype.generate=d,e.prototype.tag=function(e){var t;return null!=(t=this.tokens[e])?t[0]:void 0},e}(),t=[[\"(\",\")\"],[\"[\",\"]\"],[\"{\",\"}\"],[\"INDENT\",\"OUTDENT\"],[\"CALL_START\",\"CALL_END\"],[\"PARAM_START\",\"PARAM_END\"],[\"INDEX_START\",\"INDEX_END\"]],e.INVERSES=h={},s=[],i=[],b=0,k=t.length;k>b;b++)g=t[b],f=g[0],m=g[1],s.push(h[m]=f),i.push(h[f]=m);n=[\"CATCH\",\"WHEN\",\"ELSE\",\"FINALLY\"].concat(i),a=[\"IDENTIFIER\",\"SUPER\",\")\",\"CALL_END\",\"]\",\"INDEX_END\",\"@\",\"THIS\"],r=[\"IDENTIFIER\",\"NUMBER\",\"STRING\",\"JS\",\"REGEX\",\"NEW\",\"PARAM_START\",\"CLASS\",\"IF\",\"TRY\",\"SWITCH\",\"THIS\",\"BOOL\",\"NULL\",\"UNDEFINED\",\"UNARY\",\"SUPER\",\"THROW\",\"@\",\"->\",\"=>\",\"[\",\"(\",\"{\",\"--\",\"++\"],c=[\"+\",\"-\"],o=[\"POST_IF\",\"FOR\",\"WHILE\",\"UNTIL\",\"WHEN\",\"BY\",\"LOOP\",\"TERMINATOR\"],p=[\"ELSE\",\"->\",\"=>\",\"TRY\",\"FINALLY\",\"THEN\"],u=[\"TERMINATOR\",\"CATCH\",\"FINALLY\",\"ELSE\",\"OUTDENT\",\"LEADING_WHEN\"],l=[\"TERMINATOR\",\"INDENT\",\"OUTDENT\"]}.call(this),t.exports}(),require[\"./lexer\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,m,b,k,g,y,v,w,T,C,F,L,N,x,E,D,S,R,A,I,_,$,O,j,M,B,V,P,U,q,H,G,W,X,Y,K,z,J,Z,Q,et=[].indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(t in this&&this[t]===e)return t;return-1};Z=require(\"./rewriter\"),O=Z.Rewriter,g=Z.INVERSES,Q=require(\"./helpers\"),H=Q.count,z=Q.starts,q=Q.compact,X=Q.last,K=Q.repeat,G=Q.invertLiterate,Y=Q.locationDataToString,J=Q.throwSyntaxError,e.Lexer=L=function(){function e(){}return e.prototype.tokenize=function(e,t){var n,i,s,r;for(null==t&&(t={}),this.literate=t.literate,this.indent=0,this.indebt=0,this.outdebt=0,this.indents=[],this.ends=[],this.tokens=[],this.chunkLine=t.line||0,this.chunkColumn=t.column||0,e=this.clean(e),i=0;this.chunk=e.slice(i);)n=this.identifierToken()||this.commentToken()||this.whitespaceToken()||this.lineToken()||this.heredocToken()||this.stringToken()||this.numberToken()||this.regexToken()||this.jsToken()||this.literalToken(),r=this.getLineAndColumnFromChunk(n),this.chunkLine=r[0],this.chunkColumn=r[1],i+=n;return this.closeIndentation(),(s=this.ends.pop())&&this.error(\"missing \"+s),t.rewrite===!1?this.tokens:(new O).rewrite(this.tokens)},e.prototype.clean=function(e){return e.charCodeAt(0)===t&&(e=e.slice(1)),e=e.replace(/\\r/g,\"\").replace(V,\"\"),U.test(e)&&(e=\"\\n\"+e,this.chunkLine--),this.literate&&(e=G(e)),e},e.prototype.identifierToken=function(){var e,t,n,i,s,c,h,l,u,p,d,f,m,k;return(h=b.exec(this.chunk))?(c=h[0],i=h[1],e=h[2],s=i.length,l=void 0,\"own\"===i&&\"FOR\"===this.tag()?(this.token(\"OWN\",i),i.length):(n=e||(u=X(this.tokens))&&(\".\"===(f=u[0])||\"?.\"===f||\"::\"===f||\"?::\"===f||!u.spaced&&\"@\"===u[0]),p=\"IDENTIFIER\",!n&&(et.call(w,i)>=0||et.call(a,i)>=0)&&(p=i.toUpperCase(),\"WHEN\"===p&&(m=this.tag(),et.call(T,m)>=0)?p=\"LEADING_WHEN\":\"FOR\"===p?this.seenFor=!0:\"UNLESS\"===p?p=\"IF\":et.call(P,p)>=0?p=\"UNARY\":et.call(_,p)>=0&&(\"INSTANCEOF\"!==p&&this.seenFor?(p=\"FOR\"+p,this.seenFor=!1):(p=\"RELATION\",\"!\"===this.value()&&(l=this.tokens.pop(),i=\"!\"+i)))),et.call(v,i)>=0&&(n?(p=\"IDENTIFIER\",i=new String(i),i.reserved=!0):et.call($,i)>=0&&this.error('reserved word \"'+i+'\"')),n||(et.call(r,i)>=0&&(i=o[i]),p=function(){switch(i){case\"!\":return\"UNARY\";case\"==\":case\"!=\":return\"COMPARE\";case\"&&\":case\"||\":return\"LOGIC\";case\"true\":case\"false\":return\"BOOL\";case\"break\":case\"continue\":return\"STATEMENT\";default:return p}}()),d=this.token(p,i,0,s),l&&(k=[l[2].first_line,l[2].first_column],d[2].first_line=k[0],d[2].first_column=k[1]),e&&(t=c.lastIndexOf(\":\"),this.token(\":\",\":\",t,e.length)),c.length)):0},e.prototype.numberToken=function(){var e,t,n,i,s;return(n=R.exec(this.chunk))?(i=n[0],/^0[BOX]/.test(i)?this.error(\"radix prefix '\"+i+\"' must be lowercase\"):/E/.test(i)&&!/^0x/.test(i)?this.error(\"exponential notation '\"+i+\"' must be indicated with a lowercase 'e'\"):/^0\\d*[89]/.test(i)?this.error(\"decimal literal '\"+i+\"' must not be prefixed with '0'\"):/^0\\d+/.test(i)&&this.error(\"octal literal '\"+i+\"' must be prefixed with '0o'\"),t=i.length,(s=/^0o([0-7]+)/.exec(i))&&(i=\"0x\"+parseInt(s[1],8).toString(16)),(e=/^0b([01]+)/.exec(i))&&(i=\"0x\"+parseInt(e[1],2).toString(16)),this.token(\"NUMBER\",i,0,t),t):0},e.prototype.stringToken=function(){var e,t,n;switch(this.chunk.charAt(0)){case\"'\":if(!(e=M.exec(this.chunk)))return 0;n=e[0],this.token(\"STRING\",n.replace(x,\"\\\\\\n\"),0,n.length);break;case'\"':if(!(n=this.balancedString(this.chunk,'\"')))return 0;0<n.indexOf(\"#{\",1)?this.interpolateString(n.slice(1,-1),{strOffset:1,lexedLength:n.length}):this.token(\"STRING\",this.escapeLines(n,0,n.length));break;default:return 0}return(t=/^(?:\\\\.|[^\\\\])*\\\\(?:0[0-7]|[1-7])/.test(n))&&this.error(\"octal escape sequences \"+n+\" are not allowed\"),n.length},e.prototype.heredocToken=function(){var e,t,n,i;return(n=u.exec(this.chunk))?(t=n[0],i=t.charAt(0),e=this.sanitizeHeredoc(n[2],{quote:i,indent:null}),'\"'===i&&0<=e.indexOf(\"#{\")?this.interpolateString(e,{heredoc:!0,strOffset:3,lexedLength:t.length}):this.token(\"STRING\",this.makeString(e,i,!0),0,t.length),t.length):0},e.prototype.commentToken=function(){var e,t,n;return(n=this.chunk.match(c))?(e=n[0],t=n[1],t&&this.token(\"HERECOMMENT\",this.sanitizeHeredoc(t,{herecomment:!0,indent:K(\" \",this.indent)}),0,e.length),e.length):0},e.prototype.jsToken=function(){var e,t;return\"`\"===this.chunk.charAt(0)&&(e=y.exec(this.chunk))?(this.token(\"JS\",(t=e[0]).slice(1,-1),0,t.length),t.length):0},e.prototype.regexToken=function(){var e,t,n,i,s,r,o;return\"/\"!==this.chunk.charAt(0)?0:(n=f.exec(this.chunk))?t=this.heregexToken(n):(i=X(this.tokens),i&&(r=i[0],et.call(i.spaced?D:S,r)>=0)?0:(n=I.exec(this.chunk))?(o=n,n=o[0],s=o[1],e=o[2],\"/*\"===s.slice(0,2)&&this.error(\"regular expressions cannot begin with `*`\"),\"//\"===s&&(s=\"/(?:)/\"),this.token(\"REGEX\",\"\"+s+e,0,n.length),n.length):0)},e.prototype.heregexToken=function(e){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,b,k;if(s=e[0],t=e[1],n=e[2],0>t.indexOf(\"#{\"))return a=t.replace(m,\"\").replace(/\\//g,\"\\\\/\"),a.match(/^\\*/)&&this.error(\"regular expressions cannot begin with `*`\"),this.token(\"REGEX\",\"/\"+(a||\"(?:)\")+\"/\"+n,0,s.length),s.length;for(this.token(\"IDENTIFIER\",\"RegExp\",0,0),this.token(\"CALL_START\",\"(\",0,0),l=[],f=this.interpolateString(t,{regex:!0}),p=0,d=f.length;d>p;p++){if(h=f[p],c=h[0],u=h[1],\"TOKENS\"===c)l.push.apply(l,u);else if(\"NEOSTRING\"===c){if(!(u=u.replace(m,\"\")))continue;u=u.replace(/\\\\/g,\"\\\\\\\\\"),h[0]=\"STRING\",h[1]=this.makeString(u,'\"',!0),l.push(h)}else this.error(\"Unexpected \"+c);o=X(this.tokens),r=[\"+\",\"+\"],r[2]=o[2],l.push(r)}return l.pop(),\"STRING\"!==(null!=(b=l[0])?b[0]:void 0)&&(this.token(\"STRING\",'\"\"',0,0),this.token(\"+\",\"+\",0,0)),(k=this.tokens).push.apply(k,l),n&&(i=s.lastIndexOf(n),this.token(\",\",\",\",i,0),this.token(\"STRING\",'\"'+n+'\"',i,n.length)),this.token(\")\",\")\",s.length-1,0),s.length},e.prototype.lineToken=function(){var e,t,n,i,s;if(!(n=E.exec(this.chunk)))return 0;if(t=n[0],this.seenFor=!1,s=t.length-1-t.lastIndexOf(\"\\n\"),i=this.unfinished(),s-this.indebt===this.indent)return i?this.suppressNewlines():this.newlineToken(0),t.length;if(s>this.indent){if(i)return this.indebt=s-this.indent,this.suppressNewlines(),t.length;e=s-this.indent+this.outdebt,this.token(\"INDENT\",e,t.length-s,s),this.indents.push(e),this.ends.push(\"OUTDENT\"),this.outdebt=this.indebt=0}else this.indebt=0,this.outdentToken(this.indent-s,i,t.length);return this.indent=s,t.length},e.prototype.outdentToken=function(e,t,n){for(var i,s;e>0;)s=this.indents.length-1,void 0===this.indents[s]?e=0:this.indents[s]===this.outdebt?(e-=this.outdebt,this.outdebt=0):this.indents[s]<this.outdebt?(this.outdebt-=this.indents[s],e-=this.indents[s]):(i=this.indents.pop()+this.outdebt,e-=i,this.outdebt=0,this.pair(\"OUTDENT\"),this.token(\"OUTDENT\",i,0,n));for(i&&(this.outdebt-=e);\";\"===this.value();)this.tokens.pop();return\"TERMINATOR\"===this.tag()||t||this.token(\"TERMINATOR\",\"\\n\",n,0),this},e.prototype.whitespaceToken=function(){var e,t,n;return(e=U.exec(this.chunk))||(t=\"\\n\"===this.chunk.charAt(0))?(n=X(this.tokens),n&&(n[e?\"spaced\":\"newLine\"]=!0),e?e[0].length:0):0},e.prototype.newlineToken=function(e){for(;\";\"===this.value();)this.tokens.pop();return\"TERMINATOR\"!==this.tag()&&this.token(\"TERMINATOR\",\"\\n\",e,0),this},e.prototype.suppressNewlines=function(){return\"\\\\\"===this.value()&&this.tokens.pop(),this},e.prototype.literalToken=function(){var e,t,n,r,o,a,c,u;if((e=A.exec(this.chunk))?(r=e[0],s.test(r)&&this.tagParameters()):r=this.chunk.charAt(0),n=r,t=X(this.tokens),\"=\"===r&&t&&(!t[1].reserved&&(o=t[1],et.call(v,o)>=0)&&this.error('reserved word \"'+this.value()+\"\\\" can't be assigned\"),\"||\"===(a=t[1])||\"&&\"===a))return t[0]=\"COMPOUND_ASSIGN\",t[1]+=\"=\",r.length;if(\";\"===r)this.seenFor=!1,n=\"TERMINATOR\";else if(et.call(N,r)>=0)n=\"MATH\";else if(et.call(h,r)>=0)n=\"COMPARE\";else if(et.call(l,r)>=0)n=\"COMPOUND_ASSIGN\";else if(et.call(P,r)>=0)n=\"UNARY\";else if(et.call(j,r)>=0)n=\"SHIFT\";else if(et.call(F,r)>=0||\"?\"===r&&(null!=t?t.spaced:void 0))n=\"LOGIC\";else if(t&&!t.spaced)if(\"(\"===r&&(c=t[0],et.call(i,c)>=0))\"?\"===t[0]&&(t[0]=\"FUNC_EXIST\"),n=\"CALL_START\";else if(\"[\"===r&&(u=t[0],et.call(k,u)>=0))switch(n=\"INDEX_START\",t[0]){case\"?\":t[0]=\"INDEX_SOAK\"}switch(r){case\"(\":case\"{\":case\"[\":this.ends.push(g[r]);break;case\")\":case\"}\":case\"]\":this.pair(r)}return this.token(n,r),r.length},e.prototype.sanitizeHeredoc=function(e,t){var n,i,s,r,o;if(s=t.indent,i=t.herecomment){if(p.test(e)&&this.error('block comment cannot contain \"*/\", starting'),e.indexOf(\"\\n\")<0)return e}else for(;r=d.exec(e);)n=r[1],(null===s||0<(o=n.length)&&o<s.length)&&(s=n);return s&&(e=e.replace(RegExp(\"\\\\n\"+s,\"g\"),\"\\n\")),i||(e=e.replace(/^\\n/,\"\")),e},e.prototype.tagParameters=function(){var e,t,n,i;if(\")\"!==this.tag())return this;for(t=[],i=this.tokens,e=i.length,i[--e][0]=\"PARAM_END\";n=i[--e];)switch(n[0]){case\")\":t.push(n);break;case\"(\":case\"CALL_START\":if(!t.length)return\"(\"===n[0]?(n[0]=\"PARAM_START\",this):this;t.pop()}return this},e.prototype.closeIndentation=function(){return this.outdentToken(this.indent)},e.prototype.balancedString=function(e,t){var n,i,s,r,o,a,c,h;for(n=0,a=[t],i=c=1,h=e.length;h>=1?h>c:c>h;i=h>=1?++c:--c)if(n)--n;else{switch(s=e.charAt(i)){case\"\\\\\":++n;continue;case t:if(a.pop(),!a.length)return e.slice(0,+i+1||9e9);t=a[a.length-1];continue}\"}\"!==t||'\"'!==s&&\"'\"!==s?\"}\"===t&&\"/\"===s&&(r=f.exec(e.slice(i))||I.exec(e.slice(i)))?n+=r[0].length-1:\"}\"===t&&\"{\"===s?a.push(t=\"}\"):'\"'===t&&\"#\"===o&&\"{\"===s&&a.push(t=\"}\"):a.push(t=s),o=s}return this.error(\"missing \"+a.pop()+\", starting\")},e.prototype.interpolateString=function(t,n){var i,s,r,o,a,c,h,l,u,p,d,f,m,b,k,g,y,v,w,T,C,F,L,N,x,E,D,S;for(null==n&&(n={}),r=n.heredoc,y=n.regex,m=n.offsetInChunk,w=n.strOffset,u=n.lexedLength,m=m||0,w=w||0,u=u||t.length,r&&t.length>0&&\"\\n\"===t[0]&&(t=t.slice(1),w++),F=[],b=0,o=-1;l=t.charAt(o+=1);)\"\\\\\"!==l?\"#\"===l&&\"{\"===t.charAt(o+1)&&(s=this.balancedString(t.slice(o+1),\"}\"))&&(o>b&&F.push(this.makeToken(\"NEOSTRING\",t.slice(b,o),w+b)),a=s.slice(1,-1),a.length&&(E=this.getLineAndColumnFromChunk(w+o+1),p=E[0],i=E[1],f=(new e).tokenize(a,{line:p,column:i,rewrite:!1}),g=f.pop(),\"TERMINATOR\"===(null!=(D=f[0])?D[0]:void 0)&&(g=f.shift()),(h=f.length)&&(h>1&&(f.unshift(this.makeToken(\"(\",\"(\",w+o+1,0)),f.push(this.makeToken(\")\",\")\",w+o+1+a.length,0))),F.push([\"TOKENS\",f]))),o+=s.length,b=o+1):o+=1;if(o>b&&b<t.length&&F.push(this.makeToken(\"NEOSTRING\",t.slice(b),w+b)),y)return F;if(!F.length)return this.token(\"STRING\",'\"\"',m,u);for(\"NEOSTRING\"!==F[0][0]&&F.unshift(this.makeToken(\"NEOSTRING\",\"\",m)),(c=F.length>1)&&this.token(\"(\",\"(\",m,0),o=N=0,x=F.length;x>N;o=++N)C=F[o],T=C[0],L=C[1],o&&(o&&(k=this.token(\"+\",\"+\")),d=\"TOKENS\"===T?L[0]:C,k[2]={first_line:d[2].first_line,first_column:d[2].first_column,last_line:d[2].first_line,last_column:d[2].first_column}),\"TOKENS\"===T?(S=this.tokens).push.apply(S,L):\"NEOSTRING\"===T?(C[0]=\"STRING\",C[1]=this.makeString(L,'\"',r),this.tokens.push(C)):this.error(\"Unexpected \"+T);return c&&(v=this.makeToken(\")\",\")\",m+u,0),v.stringEnd=!0,this.tokens.push(v)),F},e.prototype.pair=function(e){var t,n;return e!==(n=X(this.ends))?(\"OUTDENT\"!==n&&this.error(\"unmatched \"+e),this.indent-=t=X(this.indents),this.outdentToken(t,!0),this.pair(e)):this.ends.pop()},e.prototype.getLineAndColumnFromChunk=function(e){var t,n,i,s;return 0===e?[this.chunkLine,this.chunkColumn]:(s=e>=this.chunk.length?this.chunk:this.chunk.slice(0,+(e-1)+1||9e9),n=H(s,\"\\n\"),t=this.chunkColumn,n>0?(i=s.split(\"\\n\"),t=X(i).length):t+=s.length,[this.chunkLine+n,t])},e.prototype.makeToken=function(e,t,n,i){var s,r,o,a,c;return null==n&&(n=0),null==i&&(i=t.length),r={},a=this.getLineAndColumnFromChunk(n),r.first_line=a[0],r.first_column=a[1],s=Math.max(0,i-1),c=this.getLineAndColumnFromChunk(n+s),r.last_line=c[0],r.last_column=c[1],o=[e,t,r]},e.prototype.token=function(e,t,n,i){var s;return s=this.makeToken(e,t,n,i),this.tokens.push(s),s},e.prototype.tag=function(e,t){var n;return(n=X(this.tokens,e))&&(t?n[0]=t:n[0])},e.prototype.value=function(e,t){var n;return(n=X(this.tokens,e))&&(t?n[1]=t:n[1])},e.prototype.unfinished=function(){var e;return C.test(this.chunk)||\"\\\\\"===(e=this.tag())||\".\"===e||\"?.\"===e||\"?::\"===e||\"UNARY\"===e||\"MATH\"===e||\"+\"===e||\"-\"===e||\"SHIFT\"===e||\"RELATION\"===e||\"COMPARE\"===e||\"LOGIC\"===e||\"THROW\"===e||\"EXTENDS\"===e},e.prototype.escapeLines=function(e,t){return e.replace(x,t?\"\\\\n\":\"\")},e.prototype.makeString=function(e,t,n){return e?(e=e.replace(/\\\\([\\s\\S])/g,function(e,n){return\"\\n\"===n||n===t?n:e}),e=e.replace(RegExp(\"\"+t,\"g\"),\"\\\\$&\"),t+this.escapeLines(e,n)+t):t+t},e.prototype.error=function(e){return J(e,{first_line:this.chunkLine,first_column:this.chunkColumn})},e}(),w=[\"true\",\"false\",\"null\",\"this\",\"new\",\"delete\",\"typeof\",\"in\",\"instanceof\",\"return\",\"throw\",\"break\",\"continue\",\"debugger\",\"if\",\"else\",\"switch\",\"for\",\"while\",\"do\",\"try\",\"catch\",\"finally\",\"class\",\"extends\",\"super\"],a=[\"undefined\",\"then\",\"unless\",\"until\",\"loop\",\"of\",\"by\",\"when\"],o={and:\"&&\",or:\"||\",is:\"==\",isnt:\"!=\",not:\"!\",yes:\"true\",no:\"false\",on:\"true\",off:\"false\"},r=function(){var e;e=[];for(W in o)e.push(W);return e}(),a=a.concat(r),$=[\"case\",\"default\",\"function\",\"var\",\"void\",\"with\",\"const\",\"let\",\"enum\",\"export\",\"import\",\"native\",\"__hasProp\",\"__extends\",\"__slice\",\"__bind\",\"__indexOf\",\"implements\",\"interface\",\"package\",\"private\",\"protected\",\"public\",\"static\",\"yield\"],B=[\"arguments\",\"eval\"],v=w.concat($).concat(B),e.RESERVED=$.concat(w).concat(a).concat(B),e.STRICT_PROSCRIBED=B,t=65279,b=/^([$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)([^\\n\\S]*:(?!:))?/,R=/^0b[01]+|^0o[0-7]+|^0x[\\da-f]+|^\\d*\\.?\\d+(?:e[+-]?\\d+)?/i,u=/^(\"\"\"|''')([\\s\\S]*?)(?:\\n[^\\n\\S]*)?\\1/,A=/^(?:[-=]>|[-+*\\/%<>&|^!?=]=|>>>=?|([-+:])\\1|([&|<>])\\2=?|\\?(\\.|::)|\\.{2,3})/,U=/^[^\\n\\S]+/,c=/^###([^#][\\s\\S]*?)(?:###[^\\n\\S]*|(?:###)$)|^(?:\\s*#(?!##[^#]).*)+/,s=/^[-=]>/,E=/^(?:\\n[^\\n\\S]*)+/,M=/^'[^\\\\']*(?:\\\\.[^\\\\']*)*'/,y=/^`[^\\\\`]*(?:\\\\.[^\\\\`]*)*`/,I=/^(\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)([imgy]{0,4})(?!\\w)/,f=/^\\/{3}([\\s\\S]+?)\\/{3}([imgy]{0,4})(?!\\w)/,m=/\\s+(?:#.*)?/g,x=/\\n/g,d=/\\n+([^\\n\\S]*)/g,p=/\\*\\//,C=/^\\s*(?:,|\\??\\.(?![.\\d])|::)/,V=/\\s+$/,l=[\"-=\",\"+=\",\"/=\",\"*=\",\"%=\",\"||=\",\"&&=\",\"?=\",\"<<=\",\">>=\",\">>>=\",\"&=\",\"^=\",\"|=\"],P=[\"!\",\"~\",\"NEW\",\"TYPEOF\",\"DELETE\",\"DO\"],F=[\"&&\",\"||\",\"&\",\"|\",\"^\"],j=[\"<<\",\">>\",\">>>\"],h=[\"==\",\"!=\",\"<\",\">\",\"<=\",\">=\"],N=[\"*\",\"/\",\"%\"],_=[\"IN\",\"OF\",\"INSTANCEOF\"],n=[\"TRUE\",\"FALSE\"],D=[\"NUMBER\",\"REGEX\",\"BOOL\",\"NULL\",\"UNDEFINED\",\"++\",\"--\"],S=D.concat(\")\",\"}\",\"THIS\",\"IDENTIFIER\",\"STRING\",\"]\"),i=[\"IDENTIFIER\",\"STRING\",\"REGEX\",\")\",\"]\",\"}\",\"?\",\"::\",\"@\",\"THIS\",\"SUPER\"],k=i.concat(\"NUMBER\",\"BOOL\",\"NULL\",\"UNDEFINED\"),T=[\"INDENT\",\"OUTDENT\",\"TERMINATOR\"]}.call(this),t.exports}(),require[\"./parser\"]=function(){var e={},t={exports:e},n=function(){function e(){this.yy={}}var t={trace:function(){},yy:{},symbols_:{error:2,Root:3,Body:4,Block:5,TERMINATOR:6,Line:7,Expression:8,Statement:9,Return:10,Comment:11,STATEMENT:12,Value:13,Invocation:14,Code:15,Operation:16,Assign:17,If:18,Try:19,While:20,For:21,Switch:22,Class:23,Throw:24,INDENT:25,OUTDENT:26,Identifier:27,IDENTIFIER:28,AlphaNumeric:29,NUMBER:30,STRING:31,Literal:32,JS:33,REGEX:34,DEBUGGER:35,UNDEFINED:36,NULL:37,BOOL:38,Assignable:39,\"=\":40,AssignObj:41,ObjAssignable:42,\":\":43,ThisProperty:44,RETURN:45,HERECOMMENT:46,PARAM_START:47,ParamList:48,PARAM_END:49,FuncGlyph:50,\"->\":51,\"=>\":52,OptComma:53,\",\":54,Param:55,ParamVar:56,\"...\":57,Array:58,Object:59,Splat:60,SimpleAssignable:61,Accessor:62,Parenthetical:63,Range:64,This:65,\".\":66,\"?.\":67,\"::\":68,\"?::\":69,Index:70,INDEX_START:71,IndexValue:72,INDEX_END:73,INDEX_SOAK:74,Slice:75,\"{\":76,AssignList:77,\"}\":78,CLASS:79,EXTENDS:80,OptFuncExist:81,Arguments:82,SUPER:83,FUNC_EXIST:84,CALL_START:85,CALL_END:86,ArgList:87,THIS:88,\"@\":89,\"[\":90,\"]\":91,RangeDots:92,\"..\":93,Arg:94,SimpleArgs:95,TRY:96,Catch:97,FINALLY:98,CATCH:99,THROW:100,\"(\":101,\")\":102,WhileSource:103,WHILE:104,WHEN:105,UNTIL:106,Loop:107,LOOP:108,ForBody:109,FOR:110,ForStart:111,ForSource:112,ForVariables:113,OWN:114,ForValue:115,FORIN:116,FOROF:117,BY:118,SWITCH:119,Whens:120,ELSE:121,When:122,LEADING_WHEN:123,IfBlock:124,IF:125,POST_IF:126,UNARY:127,\"-\":128,\"+\":129,\"--\":130,\"++\":131,\"?\":132,MATH:133,SHIFT:134,COMPARE:135,LOGIC:136,RELATION:137,COMPOUND_ASSIGN:138,$accept:0,$end:1},terminals_:{2:\"error\",6:\"TERMINATOR\",12:\"STATEMENT\",25:\"INDENT\",26:\"OUTDENT\",28:\"IDENTIFIER\",30:\"NUMBER\",31:\"STRING\",33:\"JS\",34:\"REGEX\",35:\"DEBUGGER\",36:\"UNDEFINED\",37:\"NULL\",38:\"BOOL\",40:\"=\",43:\":\",45:\"RETURN\",46:\"HERECOMMENT\",47:\"PARAM_START\",49:\"PARAM_END\",51:\"->\",52:\"=>\",54:\",\",57:\"...\",66:\".\",67:\"?.\",68:\"::\",69:\"?::\",71:\"INDEX_START\",73:\"INDEX_END\",74:\"INDEX_SOAK\",76:\"{\",78:\"}},productions_:[0,[3,0],[3,1],[3,2],[4,1],[4,3],[4,2],[7,1],[7,1],[9,1],[9,1],[9,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[5,2],[5,3],[27,1],[29,1],[29,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[17,3],[17,4],[17,5],[41,1],[41,3],[41,5],[41,1],[42,1],[42,1],[42,1],[10,2],[10,1],[11,1],[15,5],[15,2],[50,1],[50,1],[53,0],[53,1],[48,0],[48,1],[48,3],[48,4],[48,6],[55,1],[55,2],[55,3],[56,1],[56,1],[56,1],[56,1],[60,2],[61,1],[61,2],[61,2],[61,1],[39,1],[39,1],[39,1],[13,1],[13,1],[13,1],[13,1],[13,1],[62,2],[62,2],[62,2],[62,2],[62,1],[62,1],[70,3],[70,2],[72,1],[72,1],[59,4],[77,0],[77,1],[77,3],[77,4],[77,6],[23,1],[23,2],[23,3],[23,4],[23,2],[23,3],[23,4],[23,5],[14,3],[14,3],[14,1],[14,2],[81,0],[81,1],[82,2],[82,4],[65,1],[65,1],[44,2],[58,2],[58,4],[92,1],[92,1],[64,5],[75,3],[75,2],[75,2],[75,1],[87,1],[87,3],[87,4],[87,4],[87,6],[94,1],[94,1],[95,1],[95,3],[19,2],[19,3],[19,4],[19,5],[97,3],[97,3],[97,2],[24,2],[63,3],[63,5],[103,2],[103,4],[103,2],[103,4],[20,2],[20,2],[20,2],[20,1],[107,2],[107,2],[21,2],[21,2],[21,2],[109,2],[109,2],[111,2],[111,3],[115,1],[115,1],[115,1],[115,1],[113,1],[113,3],[112,2],[112,2],[112,4],[112,4],[112,4],[112,6],[112,6],[22,5],[22,7],[22,4],[22,6],[120,1],[120,2],[122,3],[122,4],[124,3],[124,5],[18,1],[18,3],[18,3],[18,3],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,3],[16,3],[16,3],[16,3],[16,3],[16,3],[16,3],[16,3],[16,5],[16,4],[16,3]],performAction:function(e,t,n,i,s,r,o){var a=r.length-1;switch(s){case 1:return this.$=i.addLocationDataFn(o[a],o[a])(new i.Block);case 2:return this.$=r[a];case 3:return this.$=r[a-1];case 4:this.$=i.addLocationDataFn(o[a],o[a])(i.Block.wrap([r[a]]));break;case 5:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-2].push(r[a]));break;case 6:this.$=r[a-1];break;case 7:this.$=r[a];break;case 8:this.$=r[a];break;case 9:this.$=r[a];break;case 10:this.$=r[a];break;case 11:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 12:this.$=r[a];break;case 13:this.$=r[a];break;case 14:this.$=r[a];break;case 15:this.$=r[a];break;case 16:this.$=r[a];break;case 17:this.$=r[a];break;case 18:this.$=r[a];break;case 19:this.$=r[a];break;case 20:this.$=r[a];break;case 21:this.$=r[a];break;case 22:this.$=r[a];break;case 23:this.$=r[a];break;case 24:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Block);break;case 25:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-1]);break;case 26:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 27:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 28:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 29:this.$=r[a];break;case 30:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 31:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 32:this.$=i.addLocationDataFn(o[a],o[a])(new i.Literal(r[a]));break;case 33:this.$=i.addLocationDataFn(o[a],o[a])(new i.Undefined);break;case 34:this.$=i.addLocationDataFn(o[a],o[a])(new i.Null);break;case 35:this.$=i.addLocationDataFn(o[a],o[a])(new i.Bool(r[a]));break;case 36:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Assign(r[a-2],r[a]));break;case 37:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Assign(r[a-3],r[a]));break;case 38:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Assign(r[a-4],r[a-1]));break;case 39:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 40:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Assign(i.addLocationDataFn(o[a-2])(new i.Value(r[a-2])),r[a],\"object\"));break;case 41:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Assign(i.addLocationDataFn(o[a-4])(new i.Value(r[a-4])),r[a-1],\"object\"));break;case 42:this.$=r[a];break;case 43:this.$=r[a];break;case 44:this.$=r[a];break;case 45:this.$=r[a];break;case 46:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Return(r[a]));break;case 47:this.$=i.addLocationDataFn(o[a],o[a])(new i.Return);break;case 48:this.$=i.addLocationDataFn(o[a],o[a])(new i.Comment(r[a]));break;case 49:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Code(r[a-3],r[a],r[a-1]));break;case 50:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Code([],r[a],r[a-1]));\r\nbreak;case 51:this.$=i.addLocationDataFn(o[a],o[a])(\"func\");break;case 52:this.$=i.addLocationDataFn(o[a],o[a])(\"boundfunc\");break;case 53:this.$=r[a];break;case 54:this.$=r[a];break;case 55:this.$=i.addLocationDataFn(o[a],o[a])([]);break;case 56:this.$=i.addLocationDataFn(o[a],o[a])([r[a]]);break;case 57:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-2].concat(r[a]));break;case 58:this.$=i.addLocationDataFn(o[a-3],o[a])(r[a-3].concat(r[a]));break;case 59:this.$=i.addLocationDataFn(o[a-5],o[a])(r[a-5].concat(r[a-2]));break;case 60:this.$=i.addLocationDataFn(o[a],o[a])(new i.Param(r[a]));break;case 61:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Param(r[a-1],null,!0));break;case 62:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Param(r[a-2],r[a]));break;case 63:this.$=r[a];break;case 64:this.$=r[a];break;case 65:this.$=r[a];break;case 66:this.$=r[a];break;case 67:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Splat(r[a-1]));break;case 68:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 69:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a-1].add(r[a]));break;case 70:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Value(r[a-1],[].concat(r[a])));break;case 71:this.$=r[a];break;case 72:this.$=r[a];break;case 73:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 74:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 75:this.$=r[a];break;case 76:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 77:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 78:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 79:this.$=r[a];break;case 80:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Access(r[a]));break;case 81:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Access(r[a],\"soak\"));break;case 82:this.$=i.addLocationDataFn(o[a-1],o[a])([i.addLocationDataFn(o[a-1])(new i.Access(new i.Literal(\"prototype\"))),i.addLocationDataFn(o[a])(new i.Access(r[a]))]);break;case 83:this.$=i.addLocationDataFn(o[a-1],o[a])([i.addLocationDataFn(o[a-1])(new i.Access(new i.Literal(\"prototype\"),\"soak\")),i.addLocationDataFn(o[a])(new i.Access(r[a]))]);break;case 84:this.$=i.addLocationDataFn(o[a],o[a])(new i.Access(new i.Literal(\"prototype\")));break;case 85:this.$=r[a];break;case 86:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-1]);break;case 87:this.$=i.addLocationDataFn(o[a-1],o[a])(i.extend(r[a],{soak:!0}));break;case 88:this.$=i.addLocationDataFn(o[a],o[a])(new i.Index(r[a]));break;case 89:this.$=i.addLocationDataFn(o[a],o[a])(new i.Slice(r[a]));break;case 90:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Obj(r[a-2],r[a-3].generated));break;case 91:this.$=i.addLocationDataFn(o[a],o[a])([]);break;case 92:this.$=i.addLocationDataFn(o[a],o[a])([r[a]]);break;case 93:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-2].concat(r[a]));break;case 94:this.$=i.addLocationDataFn(o[a-3],o[a])(r[a-3].concat(r[a]));break;case 95:this.$=i.addLocationDataFn(o[a-5],o[a])(r[a-5].concat(r[a-2]));break;case 96:this.$=i.addLocationDataFn(o[a],o[a])(new i.Class);break;case 97:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Class(null,null,r[a]));break;case 98:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Class(null,r[a]));break;case 99:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Class(null,r[a-1],r[a]));break;case 100:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Class(r[a]));break;case 101:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Class(r[a-1],null,r[a]));break;case 102:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Class(r[a-2],r[a]));break;case 103:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Class(r[a-3],r[a-1],r[a]));break;case 104:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Call(r[a-2],r[a],r[a-1]));break;case 105:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Call(r[a-2],r[a],r[a-1]));break;case 106:this.$=i.addLocationDataFn(o[a],o[a])(new i.Call(\"super\",[new i.Splat(new i.Literal(\"arguments\"))]));break;case 107:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Call(\"super\",r[a]));break;case 108:this.$=i.addLocationDataFn(o[a],o[a])(!1);break;case 109:this.$=i.addLocationDataFn(o[a],o[a])(!0);break;case 110:this.$=i.addLocationDataFn(o[a-1],o[a])([]);break;case 111:this.$=i.addLocationDataFn(o[a-3],o[a])(r[a-2]);break;case 112:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(new i.Literal(\"this\")));break;case 113:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(new i.Literal(\"this\")));break;case 114:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Value(i.addLocationDataFn(o[a-1])(new i.Literal(\"this\")),[i.addLocationDataFn(o[a])(new i.Access(r[a]))],\"this\"));break;case 115:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Arr([]));break;case 116:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Arr(r[a-2]));break;case 117:this.$=i.addLocationDataFn(o[a],o[a])(\"inclusive\");break;case 118:this.$=i.addLocationDataFn(o[a],o[a])(\"exclusive\");break;case 119:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Range(r[a-3],r[a-1],r[a-2]));break;case 120:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Range(r[a-2],r[a],r[a-1]));break;case 121:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Range(r[a-1],null,r[a]));break;case 122:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Range(null,r[a],r[a-1]));break;case 123:this.$=i.addLocationDataFn(o[a],o[a])(new i.Range(null,null,r[a]));break;case 124:this.$=i.addLocationDataFn(o[a],o[a])([r[a]]);break;case 125:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-2].concat(r[a]));break;case 126:this.$=i.addLocationDataFn(o[a-3],o[a])(r[a-3].concat(r[a]));break;case 127:this.$=i.addLocationDataFn(o[a-3],o[a])(r[a-2]);break;case 128:this.$=i.addLocationDataFn(o[a-5],o[a])(r[a-5].concat(r[a-2]));break;case 129:this.$=r[a];break;case 130:this.$=r[a];break;case 131:this.$=r[a];break;case 132:this.$=i.addLocationDataFn(o[a-2],o[a])([].concat(r[a-2],r[a]));break;case 133:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Try(r[a]));break;case 134:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Try(r[a-1],r[a][0],r[a][1]));break;case 135:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Try(r[a-2],null,null,r[a]));break;case 136:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Try(r[a-3],r[a-2][0],r[a-2][1],r[a]));break;case 137:this.$=i.addLocationDataFn(o[a-2],o[a])([r[a-1],r[a]]);break;case 138:this.$=i.addLocationDataFn(o[a-2],o[a])([i.addLocationDataFn(o[a-1])(new i.Value(r[a-1])),r[a]]);break;case 139:this.$=i.addLocationDataFn(o[a-1],o[a])([null,r[a]]);break;case 140:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Throw(r[a]));break;case 141:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Parens(r[a-1]));break;case 142:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Parens(r[a-2]));break;case 143:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.While(r[a]));break;case 144:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.While(r[a-2],{guard:r[a]}));break;case 145:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.While(r[a],{invert:!0}));break;case 146:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.While(r[a-2],{invert:!0,guard:r[a]}));break;case 147:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a-1].addBody(r[a]));break;case 148:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a].addBody(i.addLocationDataFn(o[a-1])(i.Block.wrap([r[a-1]]))));break;case 149:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a].addBody(i.addLocationDataFn(o[a-1])(i.Block.wrap([r[a-1]]))));break;case 150:this.$=i.addLocationDataFn(o[a],o[a])(r[a]);break;case 151:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.While(i.addLocationDataFn(o[a-1])(new i.Literal(\"true\"))).addBody(r[a]));break;case 152:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.While(i.addLocationDataFn(o[a-1])(new i.Literal(\"true\"))).addBody(i.addLocationDataFn(o[a])(i.Block.wrap([r[a]]))));break;case 153:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.For(r[a-1],r[a]));break;case 154:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.For(r[a-1],r[a]));break;case 155:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.For(r[a],r[a-1]));break;case 156:this.$=i.addLocationDataFn(o[a-1],o[a])({source:i.addLocationDataFn(o[a])(new i.Value(r[a]))});break;case 157:this.$=i.addLocationDataFn(o[a-1],o[a])(function(){return r[a].own=r[a-1].own,r[a].name=r[a-1][0],r[a].index=r[a-1][1],r[a]}());break;case 158:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a]);break;case 159:this.$=i.addLocationDataFn(o[a-2],o[a])(function(){return r[a].own=!0,r[a]}());break;case 160:this.$=r[a];break;case 161:this.$=r[a];break;case 162:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 163:this.$=i.addLocationDataFn(o[a],o[a])(new i.Value(r[a]));break;case 164:this.$=i.addLocationDataFn(o[a],o[a])([r[a]]);break;case 165:this.$=i.addLocationDataFn(o[a-2],o[a])([r[a-2],r[a]]);break;case 166:this.$=i.addLocationDataFn(o[a-1],o[a])({source:r[a]});break;case 167:this.$=i.addLocationDataFn(o[a-1],o[a])({source:r[a],object:!0});break;case 168:this.$=i.addLocationDataFn(o[a-3],o[a])({source:r[a-2],guard:r[a]});break;case 169:this.$=i.addLocationDataFn(o[a-3],o[a])({source:r[a-2],guard:r[a],object:!0});break;case 170:this.$=i.addLocationDataFn(o[a-3],o[a])({source:r[a-2],step:r[a]});break;case 171:this.$=i.addLocationDataFn(o[a-5],o[a])({source:r[a-4],guard:r[a-2],step:r[a]});break;case 172:this.$=i.addLocationDataFn(o[a-5],o[a])({source:r[a-4],step:r[a-2],guard:r[a]});break;case 173:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Switch(r[a-3],r[a-1]));break;case 174:this.$=i.addLocationDataFn(o[a-6],o[a])(new i.Switch(r[a-5],r[a-3],r[a-1]));break;case 175:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Switch(null,r[a-1]));break;case 176:this.$=i.addLocationDataFn(o[a-5],o[a])(new i.Switch(null,r[a-3],r[a-1]));break;case 177:this.$=r[a];break;case 178:this.$=i.addLocationDataFn(o[a-1],o[a])(r[a-1].concat(r[a]));break;case 179:this.$=i.addLocationDataFn(o[a-2],o[a])([[r[a-1],r[a]]]);break;case 180:this.$=i.addLocationDataFn(o[a-3],o[a])([[r[a-2],r[a-1]]]);break;case 181:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.If(r[a-1],r[a],{type:r[a-2]}));break;case 182:this.$=i.addLocationDataFn(o[a-4],o[a])(r[a-4].addElse(new i.If(r[a-1],r[a],{type:r[a-2]})));break;case 183:this.$=r[a];break;case 184:this.$=i.addLocationDataFn(o[a-2],o[a])(r[a-2].addElse(r[a]));break;case 185:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.If(r[a],i.addLocationDataFn(o[a-2])(i.Block.wrap([r[a-2]])),{type:r[a-1],statement:!0}));break;case 186:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.If(r[a],i.addLocationDataFn(o[a-2])(i.Block.wrap([r[a-2]])),{type:r[a-1],statement:!0}));break;case 187:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(r[a-1],r[a]));break;case 188:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"-\",r[a]));break;case 189:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"+\",r[a]));break;case 190:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"--\",r[a]));break;case 191:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"++\",r[a]));break;case 192:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"--\",r[a-1],null,!0));break;case 193:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Op(\"++\",r[a-1],null,!0));break;case 194:this.$=i.addLocationDataFn(o[a-1],o[a])(new i.Existence(r[a-1]));break;case 195:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(\"+\",r[a-2],r[a]));break;case 196:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(\"-\",r[a-2],r[a]));break;case 197:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(r[a-1],r[a-2],r[a]));break;case 198:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(r[a-1],r[a-2],r[a]));break;case 199:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(r[a-1],r[a-2],r[a]));break;case 200:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Op(r[a-1],r[a-2],r[a]));break;case 201:this.$=i.addLocationDataFn(o[a-2],o[a])(function(){return\"!\"===r[a-1].charAt(0)?new i.Op(r[a-1].slice(1),r[a-2],r[a]).invert():new i.Op(r[a-1],r[a-2],r[a])}());break;case 202:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Assign(r[a-2],r[a],r[a-1]));break;case 203:this.$=i.addLocationDataFn(o[a-4],o[a])(new i.Assign(r[a-4],r[a-1],r[a-3]));break;case 204:this.$=i.addLocationDataFn(o[a-3],o[a])(new i.Assign(r[a-3],r[a],r[a-2]));break;case 205:this.$=i.addLocationDataFn(o[a-2],o[a])(new i.Extends(r[a-2],r[a]))}},table:[{1:[2,1],3:1,4:2,5:3,7:4,8:6,9:7,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,5],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[3]},{1:[2,2],6:[1,74]},{6:[1,75]},{1:[2,4],6:[2,4],26:[2,4],102:[2,4]},{4:77,7:4,8:6,9:7,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,26:[1,76],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,7],6:[2,7],26:[2,7],102:[2,7],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,8],6:[2,8],26:[2,8],102:[2,8],103:90,104:[1,65],106:[1,66],109:91,110:[1,68],111:69,126:[1,89]},{1:[2,12],6:[2,12],25:[2,12],26:[2,12],49:[2,12],54:[2,12],57:[2,12],62:93,66:[1,95],67:[1,96],68:[1,97],69:[1,98],70:99,71:[1,100],73:[2,12],74:[1,101],78:[2,12],81:92,84:[1,94],85:[2,108],86:[2,12],91:[2,12],93:[2,12],102:[2,12],104:[2,12],105:[2,12],106:[2,12],110:[2,12],118:[2,12],126:[2,12],128:[2,12],129:[2,12],132:[2,12],133:[2,12],134:[2,12],135:[2,12],136:[2,12],137:[2,12]},{1:[2,13],6:[2,13],25:[2,13],26:[2,13],49:[2,13],54:[2,13],57:[2,13],62:103,66:[1,95],67:[1,96],68:[1,97],69:[1,98],70:99,71:[1,100],73:[2,13],74:[1,101],78:[2,13],81:102,84:[1,94],85:[2,108],86:[2,13],91:[2,13],93:[2,13],102:[2,13],104:[2,13],105:[2,13],106:[2,13],110:[2,13],118:[2,13],126:[2,13],128:[2,13],129:[2,13],132:[2,13],133:[2,13],134:[2,13],135:[2,13],136:[2,13],137:[2,13]},{1:[2,14],6:[2,14],25:[2,14],26:[2,14],49:[2,14],54:[2,14],57:[2,14],73:[2,14],78:[2,14],86:[2,14],91:[2,14],93:[2,14],102:[2,14],104:[2,14],105:[2,14],106:[2,14],110:[2,14],118:[2,14],126:[2,14],128:[2,14],129:[2,14],132:[2,14],133:[2,14],134:[2,14],135:[2,14],136:[2,14],137:[2,14]},{1:[2,15],6:[2,15],25:[2,15],26:[2,15],49:[2,15],54:[2,15],57:[2,15],73:[2,15],78:[2,15],86:[2,15],91:[2,15],93:[2,15],102:[2,15],104:[2,15],105:[2,15],106:[2,15],110:[2,15],118:[2,15],126:[2,15],128:[2,15],129:[2,15],132:[2,15],133:[2,15],134:[2,15],135:[2,15],136:[2,15],137:[2,15]},{1:[2,16],6:[2,16],25:[2,16],26:[2,16],49:[2,16],54:[2,16],57:[2,16],73:[2,16],78:[2,16],86:[2,16],91:[2,16],93:[2,16],102:[2,16],104:[2,16],105:[2,16],106:[2,16],110:[2,16],118:[2,16],126:[2,16],128:[2,16],129:[2,16],132:[2,16],133:[2,16],134:[2,16],135:[2,16],136:[2,16],137:[2,16]},{1:[2,17],6:[2,17],25:[2,17],26:[2,17],49:[2,17],54:[2,17],57:[2,17],73:[2,17],78:[2,17],86:[2,17],91:[2,17],93:[2,17],102:[2,17],104:[2,17],105:[2,17],106:[2,17],110:[2,17],118:[2,17],126:[2,17],128:[2,17],129:[2,17],132:[2,17],133:[2,17],134:[2,17],135:[2,17],136:[2,17],137:[2,17]},{1:[2,18],6:[2,18],25:[2,18],26:[2,18],49:[2,18],54:[2,18],57:[2,18],73:[2,18],78:[2,18],86:[2,18],91:[2,18],93:[2,18],102:[2,18],104:[2,18],105:[2,18],106:[2,18],110:[2,18],118:[2,18],126:[2,18],128:[2,18],129:[2,18],132:[2,18],133:[2,18],134:[2,18],135:[2,18],136:[2,18],137:[2,18]},{1:[2,19],6:[2,19],25:[2,19],26:[2,19],49:[2,19],54:[2,19],57:[2,19],73:[2,19],78:[2,19],86:[2,19],91:[2,19],93:[2,19],102:[2,19],104:[2,19],105:[2,19],106:[2,19],110:[2,19],118:[2,19],126:[2,19],128:[2,19],129:[2,19],132:[2,19],133:[2,19],134:[2,19],135:[2,19],136:[2,19],137:[2,19]},{1:[2,20],6:[2,20],25:[2,20],26:[2,20],49:[2,20],54:[2,20],57:[2,20],73:[2,20],78:[2,20],86:[2,20],91:[2,20],93:[2,20],102:[2,20],104:[2,20],105:[2,20],106:[2,20],110:[2,20],118:[2,20],126:[2,20],128:[2,20],129:[2,20],132:[2,20],133:[2,20],134:[2,20],135:[2,20],136:[2,20],137:[2,20]},{1:[2,21],6:[2,21],25:[2,21],26:[2,21],49:[2,21],54:[2,21],57:[2,21],73:[2,21],78:[2,21],86:[2,21],91:[2,21],93:[2,21],102:[2,21],104:[2,21],105:[2,21],106:[2,21],110:[2,21],118:[2,21],126:[2,21],128:[2,21],129:[2,21],132:[2,21],133:[2,21],134:[2,21],135:[2,21],136:[2,21],137:[2,21]},{1:[2,22],6:[2,22],25:[2,22],26:[2,22],49:[2,22],54:[2,22],57:[2,22],73:[2,22],78:[2,22],86:[2,22],91:[2,22],93:[2,22],102:[2,22],104:[2,22],105:[2,22],106:[2,22],110:[2,22],118:[2,22],126:[2,22],128:[2,22],129:[2,22],132:[2,22],133:[2,22],134:[2,22],135:[2,22],136:[2,22],137:[2,22]},{1:[2,23],6:[2,23],25:[2,23],26:[2,23],49:[2,23],54:[2,23],57:[2,23],73:[2,23],78:[2,23],86:[2,23],91:[2,23],93:[2,23],102:[2,23],104:[2,23],105:[2,23],106:[2,23],110:[2,23],118:[2,23],126:[2,23],128:[2,23],129:[2,23],132:[2,23],133:[2,23],134:[2,23],135:[2,23],136:[2,23],137:[2,23]},{1:[2,9],6:[2,9],26:[2,9],102:[2,9],104:[2,9],106:[2,9],110:[2,9],126:[2,9]},{1:[2,10],6:[2,10],26:[2,10],102:[2,10],104:[2,10],106:[2,10],110:[2,10],126:[2,10]},{1:[2,11],6:[2,11],26:[2,11],102:[2,11],104:[2,11],106:[2,11],110:[2,11],126:[2,11]},{1:[2,75],6:[2,75],25:[2,75],26:[2,75],40:[1,104],49:[2,75],54:[2,75],57:[2,75],66:[2,75],67:[2,75],68:[2,75],69:[2,75],71:[2,75],73:[2,75],74:[2,75],78:[2,75],84:[2,75],85:[2,75],86:[2,75],91:[2,75],93:[2,75],102:[2,75],104:[2,75],105:[2,75],106:[2,75],110:[2,75],118:[2,75],126:[2,75],128:[2,75],129:[2,75],132:[2,75],133:[2,75],134:[2,75],135:[2,75],136:[2,75],137:[2,75]},{1:[2,76],6:[2,76],25:[2,76],26:[2,76],49:[2,76],54:[2,76],57:[2,76],66:[2,76],67:[2,76],68:[2,76],69:[2,76],71:[2,76],73:[2,76],74:[2,76],78:[2,76],84:[2,76],85:[2,76],86:[2,76],91:[2,76],93:[2,76],102:[2,76],104:[2,76],105:[2,76],106:[2,76],110:[2,76],118:[2,76],126:[2,76],128:[2,76],129:[2,76],132:[2,76],133:[2,76],134:[2,76],135:[2,76],136:[2,76],137:[2,76]},{1:[2,77],6:[2,77],25:[2,77],26:[2,77],49:[2,77],54:[2,77],57:[2,77],66:[2,77],67:[2,77],68:[2,77],69:[2,77],71:[2,77],73:[2,77],74:[2,77],78:[2,77],84:[2,77],85:[2,77],86:[2,77],91:[2,77],93:[2,77],102:[2,77],104:[2,77],105:[2,77],106:[2,77],110:[2,77],118:[2,77],126:[2,77],128:[2,77],129:[2,77],132:[2,77],133:[2,77],134:[2,77],135:[2,77],136:[2,77],137:[2,77]},{1:[2,78],6:[2,78],25:[2,78],26:[2,78],49:[2,78],54:[2,78],57:[2,78],66:[2,78],67:[2,78],68:[2,78],69:[2,78],71:[2,78],73:[2,78],74:[2,78],78:[2,78],84:[2,78],85:[2,78],86:[2,78],91:[2,78],93:[2,78],102:[2,78],104:[2,78],105:[2,78],106:[2,78],110:[2,78],118:[2,78],126:[2,78],128:[2,78],129:[2,78],132:[2,78],133:[2,78],134:[2,78],135:[2,78],136:[2,78],137:[2,78]},{1:[2,79],6:[2,79],25:[2,79],26:[2,79],49:[2,79],54:[2,79],57:[2,79],66:[2,79],67:[2,79],68:[2,79],69:[2,79],71:[2,79],73:[2,79],74:[2,79],78:[2,79],84:[2,79],85:[2,79],86:[2,79],91:[2,79],93:[2,79],102:[2,79],104:[2,79],105:[2,79],106:[2,79],110:[2,79],118:[2,79],126:[2,79],128:[2,79],129:[2,79],132:[2,79],133:[2,79],134:[2,79],135:[2,79],136:[2,79],137:[2,79]},{1:[2,106],6:[2,106],25:[2,106],26:[2,106],49:[2,106],54:[2,106],57:[2,106],66:[2,106],67:[2,106],68:[2,106],69:[2,106],71:[2,106],73:[2,106],74:[2,106],78:[2,106],82:105,84:[2,106],85:[1,106],86:[2,106],91:[2,106],93:[2,106],102:[2,106],104:[2,106],105:[2,106],106:[2,106],110:[2,106],118:[2,106],126:[2,106],128:[2,106],129:[2,106],132:[2,106],133:[2,106],134:[2,106],135:[2,106],136:[2,106],137:[2,106]},{6:[2,55],25:[2,55],27:110,28:[1,73],44:111,48:107,49:[2,55],54:[2,55],55:108,56:109,58:112,59:113,76:[1,70],89:[1,114],90:[1,115]},{5:116,25:[1,5]},{8:117,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:119,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:120,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{13:122,14:123,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:124,44:63,58:47,59:48,61:121,63:25,64:26,65:27,76:[1,70],83:[1,28],88:[1,58],89:[1,59],90:[1,57],101:[1,56]},{13:122,14:123,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:124,44:63,58:47,59:48,61:125,63:25,64:26,65:27,76:[1,70],83:[1,28],88:[1,58],89:[1,59],90:[1,57],101:[1,56]},{1:[2,72],6:[2,72],25:[2,72],26:[2,72],40:[2,72],49:[2,72],54:[2,72],57:[2,72],66:[2,72],67:[2,72],68:[2,72],69:[2,72],71:[2,72],73:[2,72],74:[2,72],78:[2,72],80:[1,129],84:[2,72],85:[2,72],86:[2,72],91:[2,72],93:[2,72],102:[2,72],104:[2,72],105:[2,72],106:[2,72],110:[2,72],118:[2,72],126:[2,72],128:[2,72],129:[2,72],130:[1,126],131:[1,127],132:[2,72],133:[2,72],134:[2,72],135:[2,72],136:[2,72],137:[2,72],138:[1,128]},{1:[2,183],6:[2,183],25:[2,183],26:[2,183],49:[2,183],54:[2,183],57:[2,183],73:[2,183],78:[2,183],86:[2,183],91:[2,183],93:[2,183],102:[2,183],104:[2,183],105:[2,183],106:[2,183],110:[2,183],118:[2,183],121:[1,130],126:[2,183],128:[2,183],129:[2,183],132:[2,183],133:[2,183],134:[2,183],135:[2,183],136:[2,183],137:[2,183]},{5:131,25:[1,5]},{5:132,25:[1,5]},{1:[2,150],6:[2,150],25:[2,150],26:[2,150],49:[2,150],54:[2,150],57:[2,150],73:[2,150],78:[2,150],86:[2,150],91:[2,150],93:[2,150],102:[2,150],104:[2,150],105:[2,150],106:[2,150],110:[2,150],118:[2,150],126:[2,150],128:[2,150],129:[2,150],132:[2,150],133:[2,150],134:[2,150],135:[2,150],136:[2,150],137:[2,150]},{5:133,25:[1,5]},{8:134,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,135],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,96],5:136,6:[2,96],13:122,14:123,25:[1,5],26:[2,96],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:124,44:63,49:[2,96],54:[2,96],57:[2,96],58:47,59:48,61:138,63:25,64:26,65:27,73:[2,96],76:[1,70],78:[2,96],80:[1,137],83:[1,28],86:[2,96],88:[1,58],89:[1,59],90:[1,57],91:[2,96],93:[2,96],101:[1,56],102:[2,96],104:[2,96],105:[2,96],106:[2,96],110:[2,96],118:[2,96],126:[2,96],128:[2,96],129:[2,96],132:[2,96],133:[2,96],134:[2,96],135:[2,96],136:[2,96],137:[2,96]},{8:139,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,47],6:[2,47],8:140,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,26:[2,47],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],102:[2,47],103:39,104:[2,47],106:[2,47],107:40,108:[1,67],109:41,110:[2,47],111:69,119:[1,42],124:37,125:[1,64],126:[2,47],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,48],6:[2,48],25:[2,48],26:[2,48],54:[2,48],78:[2,48],102:[2,48],104:[2,48],106:[2,48],110:[2,48],126:[2,48]},{1:[2,73],6:[2,73],25:[2,73],26:[2,73],40:[2,73],49:[2,73],54:[2,73],57:[2,73],66:[2,73],67:[2,73],68:[2,73],69:[2,73],71:[2,73],73:[2,73],74:[2,73],78:[2,73],84:[2,73],85:[2,73],86:[2,73],91:[2,73],93:[2,73],102:[2,73],104:[2,73],105:[2,73],106:[2,73],110:[2,73],118:[2,73],126:[2,73],128:[2,73],129:[2,73],132:[2,73],133:[2,73],134:[2,73],135:[2,73],136:[2,73],137:[2,73]},{1:[2,74],6:[2,74],25:[2,74],26:[2,74],40:[2,74],49:[2,74],54:[2,74],57:[2,74],66:[2,74],67:[2,74],68:[2,74],69:[2,74],71:[2,74],73:[2,74],74:[2,74],78:[2,74],84:[2,74],85:[2,74],86:[2,74],91:[2,74],93:[2,74],102:[2,74],104:[2,74],105:[2,74],106:[2,74],110:[2,74],118:[2,74],126:[2,74],128:[2,74],129:[2,74],132:[2,74],133:[2,74],134:[2,74],135:[2,74],136:[2,74],137:[2,74]},{1:[2,29],6:[2,29],25:[2,29],26:[2,29],49:[2,29],54:[2,29],57:[2,29],66:[2,29],67:[2,29],68:[2,29],69:[2,29],71:[2,29],73:[2,29],74:[2,29],78:[2,29],84:[2,29],85:[2,29],86:[2,29],91:[2,29],93:[2,29],102:[2,29],104:[2,29],105:[2,29],106:[2,29],110:[2,29],118:[2,29],126:[2,29],128:[2,29],129:[2,29],132:[2,29],133:[2,29],134:[2,29],135:[2,29],136:[2,29],137:[2,29]},{1:[2,30],6:[2,30],25:[2,30],26:[2,30],49:[2,30],54:[2,30],57:[2,30],66:[2,30],67:[2,30],68:[2,30],69:[2,30],71:[2,30],73:[2,30],74:[2,30],78:[2,30],84:[2,30],85:[2,30],86:[2,30],91:[2,30],93:[2,30],102:[2,30],104:[2,30],105:[2,30],106:[2,30],110:[2,30],118:[2,30],126:[2,30],128:[2,30],129:[2,30],132:[2,30],133:[2,30],134:[2,30],135:[2,30],136:[2,30],137:[2,30]},{1:[2,31],6:[2,31],25:[2,31],26:[2,31],49:[2,31],54:[2,31],57:[2,31],66:[2,31],67:[2,31],68:[2,31],69:[2,31],71:[2,31],73:[2,31],74:[2,31],78:[2,31],84:[2,31],85:[2,31],86:[2,31],91:[2,31],93:[2,31],102:[2,31],104:[2,31],105:[2,31],106:[2,31],110:[2,31],118:[2,31],126:[2,31],128:[2,31],129:[2,31],132:[2,31],133:[2,31],134:[2,31],135:[2,31],136:[2,31],137:[2,31]},{1:[2,32],6:[2,32],25:[2,32],26:[2,32],49:[2,32],54:[2,32],57:[2,32],66:[2,32],67:[2,32],68:[2,32],69:[2,32],71:[2,32],73:[2,32],74:[2,32],78:[2,32],84:[2,32],85:[2,32],86:[2,32],91:[2,32],93:[2,32],102:[2,32],104:[2,32],105:[2,32],106:[2,32],110:[2,32],118:[2,32],126:[2,32],128:[2,32],129:[2,32],132:[2,32],133:[2,32],134:[2,32],135:[2,32],136:[2,32],137:[2,32]},{1:[2,33],6:[2,33],25:[2,33],26:[2,33],49:[2,33],54:[2,33],57:[2,33],66:[2,33],67:[2,33],68:[2,33],69:[2,33],71:[2,33],73:[2,33],74:[2,33],78:[2,33],84:[2,33],85:[2,33],86:[2,33],91:[2,33],93:[2,33],102:[2,33],104:[2,33],105:[2,33],106:[2,33],110:[2,33],118:[2,33],126:[2,33],128:[2,33],129:[2,33],132:[2,33],133:[2,33],134:[2,33],135:[2,33],136:[2,33],137:[2,33]},{1:[2,34],6:[2,34],25:[2,34],26:[2,34],49:[2,34],54:[2,34],57:[2,34],66:[2,34],67:[2,34],68:[2,34],69:[2,34],71:[2,34],73:[2,34],74:[2,34],78:[2,34],84:[2,34],85:[2,34],86:[2,34],91:[2,34],93:[2,34],102:[2,34],104:[2,34],105:[2,34],106:[2,34],110:[2,34],118:[2,34],126:[2,34],128:[2,34],129:[2,34],132:[2,34],133:[2,34],134:[2,34],135:[2,34],136:[2,34],137:[2,34]},{1:[2,35],6:[2,35],25:[2,35],26:[2,35],49:[2,35],54:[2,35],57:[2,35],66:[2,35],67:[2,35],68:[2,35],69:[2,35],71:[2,35],73:[2,35],74:[2,35],78:[2,35],84:[2,35],85:[2,35],86:[2,35],91:[2,35],93:[2,35],102:[2,35],104:[2,35],105:[2,35],106:[2,35],110:[2,35],118:[2,35],126:[2,35],128:[2,35],129:[2,35],132:[2,35],133:[2,35],134:[2,35],135:[2,35],136:[2,35],137:[2,35]},{4:141,7:4,8:6,9:7,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,142],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:143,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,147],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],87:145,88:[1,58],89:[1,59],90:[1,57],91:[1,144],94:146,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,112],6:[2,112],25:[2,112],26:[2,112],49:[2,112],54:[2,112],57:[2,112],66:[2,112],67:[2,112],68:[2,112],69:[2,112],71:[2,112],73:[2,112],74:[2,112],78:[2,112],84:[2,112],85:[2,112],86:[2,112],91:[2,112],93:[2,112],102:[2,112],104:[2,112],105:[2,112],106:[2,112],110:[2,112],118:[2,112],126:[2,112],128:[2,112],129:[2,112],132:[2,112],133:[2,112],134:[2,112],135:[2,112],136:[2,112],137:[2,112]},{1:[2,113],6:[2,113],25:[2,113],26:[2,113],27:149,28:[1,73],49:[2,113],54:[2,113],57:[2,113],66:[2,113],67:[2,113],68:[2,113],69:[2,113],71:[2,113],73:[2,113],74:[2,113],78:[2,113],84:[2,113],85:[2,113],86:[2,113],91:[2,113],93:[2,113],102:[2,113],104:[2,113],105:[2,113],106:[2,113],110:[2,113],118:[2,113],126:[2,113],128:[2,113],129:[2,113],132:[2,113],133:[2,113],134:[2,113],135:[2,113],136:[2,113],137:[2,113]},{25:[2,51]},{25:[2,52]},{1:[2,68],6:[2,68],25:[2,68],26:[2,68],40:[2,68],49:[2,68],54:[2,68],57:[2,68],66:[2,68],67:[2,68],68:[2,68],69:[2,68],71:[2,68],73:[2,68],74:[2,68],78:[2,68],80:[2,68],84:[2,68],85:[2,68],86:[2,68],91:[2,68],93:[2,68],102:[2,68],104:[2,68],105:[2,68],106:[2,68],110:[2,68],118:[2,68],126:[2,68],128:[2,68],129:[2,68],130:[2,68],131:[2,68],132:[2,68],133:[2,68],134:[2,68],135:[2,68],136:[2,68],137:[2,68],138:[2,68]},{1:[2,71],6:[2,71],25:[2,71],26:[2,71],40:[2,71],49:[2,71],54:[2,71],57:[2,71],66:[2,71],67:[2,71],68:[2,71],69:[2,71],71:[2,71],73:[2,71],74:[2,71],78:[2,71],80:[2,71],84:[2,71],85:[2,71],86:[2,71],91:[2,71],93:[2,71],102:[2,71],104:[2,71],105:[2,71],106:[2,71],110:[2,71],118:[2,71],126:[2,71],128:[2,71],129:[2,71],130:[2,71],131:[2,71],132:[2,71],133:[2,71],134:[2,71],135:[2,71],136:[2,71],137:[2,71],138:[2,71]},{8:150,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:151,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:152,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{5:153,8:154,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,5],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{27:159,28:[1,73],44:160,58:161,59:162,64:155,76:[1,70],89:[1,114],90:[1,57],113:156,114:[1,157],115:158},{112:163,116:[1,164],117:[1,165]},{6:[2,91],11:169,25:[2,91],27:170,28:[1,73],29:171,30:[1,71],31:[1,72],41:167,42:168,44:172,46:[1,46],54:[2,91],77:166,78:[2,91],89:[1,114]},{1:[2,27],6:[2,27],25:[2,27],26:[2,27],43:[2,27],49:[2,27],54:[2,27],57:[2,27],66:[2,27],67:[2,27],68:[2,27],69:[2,27],71:[2,27],73:[2,27],74:[2,27],78:[2,27],84:[2,27],85:[2,27],86:[2,27],91:[2,27],93:[2,27],102:[2,27],104:[2,27],105:[2,27],106:[2,27],110:[2,27],118:[2,27],126:[2,27],128:[2,27],129:[2,27],132:[2,27],133:[2,27],134:[2,27],135:[2,27],136:[2,27],137:[2,27]},{1:[2,28],6:[2,28],25:[2,28],26:[2,28],43:[2,28],49:[2,28],54:[2,28],57:[2,28],66:[2,28],67:[2,28],68:[2,28],69:[2,28],71:[2,28],73:[2,28],74:[2,28],78:[2,28],84:[2,28],85:[2,28],86:[2,28],91:[2,28],93:[2,28],102:[2,28],104:[2,28],105:[2,28],106:[2,28],110:[2,28],118:[2,28],126:[2,28],128:[2,28],129:[2,28],132:[2,28],133:[2,28],134:[2,28],135:[2,28],136:[2,28],137:[2,28]},{1:[2,26],6:[2,26],25:[2,26],26:[2,26],40:[2,26],43:[2,26],49:[2,26],54:[2,26],57:[2,26],66:[2,26],67:[2,26],68:[2,26],69:[2,26],71:[2,26],73:[2,26],74:[2,26],78:[2,26],80:[2,26],84:[2,26],85:[2,26],86:[2,26],91:[2,26],93:[2,26],102:[2,26],104:[2,26],105:[2,26],106:[2,26],110:[2,26],116:[2,26],117:[2,26],118:[2,26],126:[2,26],128:[2,26],129:[2,26],130:[2,26],131:[2,26],132:[2,26],133:[2,26],134:[2,26],135:[2,26],136:[2,26],137:[2,26],138:[2,26]},{1:[2,6],6:[2,6],7:173,8:6,9:7,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,26:[2,6],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],102:[2,6],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,3]},{1:[2,24],6:[2,24],25:[2,24],26:[2,24],49:[2,24],54:[2,24],57:[2,24],73:[2,24],78:[2,24],86:[2,24],91:[2,24],93:[2,24],98:[2,24],99:[2,24],102:[2,24],104:[2,24],105:[2,24],106:[2,24],110:[2,24],118:[2,24],121:[2,24],123:[2,24],126:[2,24],128:[2,24],129:[2,24],132:[2,24],133:[2,24],134:[2,24],135:[2,24],136:[2,24],137:[2,24]},{6:[1,74],26:[1,174]},{1:[2,194],6:[2,194],25:[2,194],26:[2,194],49:[2,194],54:[2,194],57:[2,194],73:[2,194],78:[2,194],86:[2,194],91:[2,194],93:[2,194],102:[2,194],104:[2,194],105:[2,194],106:[2,194],110:[2,194],118:[2,194],126:[2,194],128:[2,194],129:[2,194],132:[2,194],133:[2,194],134:[2,194],135:[2,194],136:[2,194],137:[2,194]},{8:175,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:176,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:177,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:178,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:179,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:180,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:181,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:182,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,149],6:[2,149],25:[2,149],26:[2,149],49:[2,149],54:[2,149],57:[2,149],73:[2,149],78:[2,149],86:[2,149],91:[2,149],93:[2,149],102:[2,149],104:[2,149],105:[2,149],106:[2,149],110:[2,149],118:[2,149],126:[2,149],128:[2,149],129:[2,149],132:[2,149],133:[2,149],134:[2,149],135:[2,149],136:[2,149],137:[2,149]},{1:[2,154],6:[2,154],25:[2,154],26:[2,154],49:[2,154],54:[2,154],57:[2,154],73:[2,154],78:[2,154],86:[2,154],91:[2,154],93:[2,154],102:[2,154],104:[2,154],105:[2,154],106:[2,154],110:[2,154],118:[2,154],126:[2,154],128:[2,154],129:[2,154],132:[2,154],133:[2,154],134:[2,154],135:[2,154],136:[2,154],137:[2,154]},{8:183,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,148],6:[2,148],25:[2,148],26:[2,148],49:[2,148],54:[2,148],57:[2,148],73:[2,148],78:[2,148],86:[2,148],91:[2,148],93:[2,148],102:[2,148],104:[2,148],105:[2,148],106:[2,148],110:[2,148],118:[2,148],126:[2,148],128:[2,148],129:[2,148],132:[2,148],133:[2,148],134:[2,148],135:[2,148],136:[2,148],137:[2,148]},{1:[2,153],6:[2,153],25:[2,153],26:[2,153],49:[2,153],54:[2,153],57:[2,153],73:[2,153],78:[2,153],86:[2,153],91:[2,153],93:[2,153],102:[2,153],104:[2,153],105:[2,153],106:[2,153],110:[2,153],118:[2,153],126:[2,153],128:[2,153],129:[2,153],132:[2,153],133:[2,153],134:[2,153],135:[2,153],136:[2,153],137:[2,153]},{82:184,85:[1,106]},{1:[2,69],6:[2,69],25:[2,69],26:[2,69],40:[2,69],49:[2,69],54:[2,69],57:[2,69],66:[2,69],67:[2,69],68:[2,69],69:[2,69],71:[2,69],73:[2,69],74:[2,69],78:[2,69],80:[2,69],84:[2,69],85:[2,69],86:[2,69],91:[2,69],93:[2,69],102:[2,69],104:[2,69],105:[2,69],106:[2,69],110:[2,69],118:[2,69],126:[2,69],128:[2,69],129:[2,69],130:[2,69],131:[2,69],132:[2,69],133:[2,69],134:[2,69],135:[2,69],136:[2,69],137:[2,69],138:[2,69]},{85:[2,109]},{27:185,28:[1,73]},{27:186,28:[1,73]},{1:[2,84],6:[2,84],25:[2,84],26:[2,84],27:187,28:[1,73],40:[2,84],49:[2,84],54:[2,84],57:[2,84],66:[2,84],67:[2,84],68:[2,84],69:[2,84],71:[2,84],73:[2,84],74:[2,84],78:[2,84],80:[2,84],84:[2,84],85:[2,84],86:[2,84],91:[2,84],93:[2,84],102:[2,84],104:[2,84],105:[2,84],106:[2,84],110:[2,84],118:[2,84],126:[2,84],128:[2,84],129:[2,84],130:[2,84],131:[2,84],132:[2,84],133:[2,84],134:[2,84],135:[2,84],136:[2,84],137:[2,84],138:[2,84]},{27:188,28:[1,73]},{1:[2,85],6:[2,85],25:[2,85],26:[2,85],40:[2,85],49:[2,85],54:[2,85],57:[2,85],66:[2,85],67:[2,85],68:[2,85],69:[2,85],71:[2,85],73:[2,85],74:[2,85],78:[2,85],80:[2,85],84:[2,85],85:[2,85],86:[2,85],91:[2,85],93:[2,85],102:[2,85],104:[2,85],105:[2,85],106:[2,85],110:[2,85],118:[2,85],126:[2,85],128:[2,85],129:[2,85],130:[2,85],131:[2,85],132:[2,85],133:[2,85],134:[2,85],135:[2,85],136:[2,85],137:[2,85],138:[2,85]},{8:190,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],57:[1,194],58:47,59:48,61:36,63:25,64:26,65:27,72:189,75:191,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],92:192,93:[1,193],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{70:195,71:[1,100],74:[1,101]},{82:196,85:[1,106]},{1:[2,70],6:[2,70],25:[2,70],26:[2,70],40:[2,70],49:[2,70],54:[2,70],57:[2,70],66:[2,70],67:[2,70],68:[2,70],69:[2,70],71:[2,70],73:[2,70],74:[2,70],78:[2,70],80:[2,70],84:[2,70],85:[2,70],86:[2,70],91:[2,70],93:[2,70],102:[2,70],104:[2,70],105:[2,70],106:[2,70],110:[2,70],118:[2,70],126:[2,70],128:[2,70],129:[2,70],130:[2,70],131:[2,70],132:[2,70],133:[2,70],134:[2,70],135:[2,70],136:[2,70],137:[2,70],138:[2,70]},{6:[1,198],8:197,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,199],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,107],6:[2,107],25:[2,107],26:[2,107],49:[2,107],54:[2,107],57:[2,107],66:[2,107],67:[2,107],68:[2,107],69:[2,107],71:[2,107],73:[2,107],74:[2,107],78:[2,107],84:[2,107],85:[2,107],86:[2,107],91:[2,107],93:[2,107],102:[2,107],104:[2,107],105:[2,107],106:[2,107],110:[2,107],118:[2,107],126:[2,107],128:[2,107],129:[2,107],132:[2,107],133:[2,107],134:[2,107],135:[2,107],136:[2,107],137:[2,107]},{8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,147],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],86:[1,200],87:201,88:[1,58],89:[1,59],90:[1,57],94:146,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,53],25:[2,53],49:[1,203],53:205,54:[1,204]},{6:[2,56],25:[2,56],26:[2,56],49:[2,56],54:[2,56]},{6:[2,60],25:[2,60],26:[2,60],40:[1,207],49:[2,60],54:[2,60],57:[1,206]},{6:[2,63],25:[2,63],26:[2,63],40:[2,63],49:[2,63],54:[2,63],57:[2,63]},{6:[2,64],25:[2,64],26:[2,64],40:[2,64],49:[2,64],54:[2,64],57:[2,64]},{6:[2,65],25:[2,65],26:[2,65],40:[2,65],49:[2,65],54:[2,65],57:[2,65]},{6:[2,66],25:[2,66],26:[2,66],40:[2,66],49:[2,66],54:[2,66],57:[2,66]},{27:149,28:[1,73]},{8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,147],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],87:145,88:[1,58],89:[1,59],90:[1,57],91:[1,144],94:146,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,50],6:[2,50],25:[2,50],26:[2,50],49:[2,50],54:[2,50],57:[2,50],73:[2,50],78:[2,50],86:[2,50],91:[2,50],93:[2,50],102:[2,50],104:[2,50],105:[2,50],106:[2,50],110:[2,50],118:[2,50],126:[2,50],128:[2,50],129:[2,50],132:[2,50],133:[2,50],134:[2,50],135:[2,50],136:[2,50],137:[2,50]},{1:[2,187],6:[2,187],25:[2,187],26:[2,187],49:[2,187],54:[2,187],57:[2,187],73:[2,187],78:[2,187],86:[2,187],91:[2,187],93:[2,187],102:[2,187],103:87,104:[2,187],105:[2,187],106:[2,187],109:88,110:[2,187],111:69,118:[2,187],126:[2,187],128:[2,187],129:[2,187],132:[1,78],133:[2,187],134:[2,187],135:[2,187],136:[2,187],137:[2,187]},{103:90,104:[1,65],106:[1,66],109:91,110:[1,68],111:69,126:[1,89]},{1:[2,188],6:[2,188],25:[2,188],26:[2,188],49:[2,188],54:[2,188],57:[2,188],73:[2,188],78:[2,188],86:[2,188],91:[2,188],93:[2,188],102:[2,188],103:87,104:[2,188],105:[2,188],106:[2,188],109:88,110:[2,188],111:69,118:[2,188],126:[2,188],128:[2,188],129:[2,188],132:[1,78],133:[2,188],134:[2,188],135:[2,188],136:[2,188],137:[2,188]},{1:[2,189],6:[2,189],25:[2,189],26:[2,189],49:[2,189],54:[2,189],57:[2,189],73:[2,189],78:[2,189],86:[2,189],91:[2,189],93:[2,189],102:[2,189],103:87,104:[2,189],105:[2,189],106:[2,189],109:88,110:[2,189],111:69,118:[2,189],126:[2,189],128:[2,189],129:[2,189],132:[1,78],133:[2,189],134:[2,189],135:[2,189],136:[2,189],137:[2,189]},{1:[2,190],6:[2,190],25:[2,190],26:[2,190],49:[2,190],54:[2,190],57:[2,190],66:[2,72],67:[2,72],68:[2,72],69:[2,72],71:[2,72],73:[2,190],74:[2,72],78:[2,190],84:[2,72],85:[2,72],86:[2,190],91:[2,190],93:[2,190],102:[2,190],104:[2,190],105:[2,190],106:[2,190],110:[2,190],118:[2,190],126:[2,190],128:[2,190],129:[2,190],132:[2,190],133:[2,190],134:[2,190],135:[2,190],136:[2,190],137:[2,190]},{62:93,66:[1,95],67:[1,96],68:[1,97],69:[1,98],70:99,71:[1,100],74:[1,101],81:92,84:[1,94],85:[2,108]},{62:103,66:[1,95],67:[1,96],68:[1,97],69:[1,98],70:99,71:[1,100],74:[1,101],81:102,84:[1,94],85:[2,108]},{66:[2,75],67:[2,75],68:[2,75],69:[2,75],71:[2,75],74:[2,75],84:[2,75],85:[2,75]},{1:[2,191],6:[2,191],25:[2,191],26:[2,191],49:[2,191],54:[2,191],57:[2,191],66:[2,72],67:[2,72],68:[2,72],69:[2,72],71:[2,72],73:[2,191],74:[2,72],78:[2,191],84:[2,72],85:[2,72],86:[2,191],91:[2,191],93:[2,191],102:[2,191],104:[2,191],105:[2,191],106:[2,191],110:[2,191],118:[2,191],126:[2,191],128:[2,191],129:[2,191],132:[2,191],133:[2,191],134:[2,191],135:[2,191],136:[2,191],137:[2,191]},{1:[2,192],6:[2,192],25:[2,192],26:[2,192],49:[2,192],54:[2,192],57:[2,192],73:[2,192],78:[2,192],86:[2,192],91:[2,192],93:[2,192],102:[2,192],104:[2,192],105:[2,192],106:[2,192],110:[2,192],118:[2,192],126:[2,192],128:[2,192],129:[2,192],132:[2,192],133:[2,192],134:[2,192],135:[2,192],136:[2,192],137:[2,192]},{1:[2,193],6:[2,193],25:[2,193],26:[2,193],49:[2,193],54:[2,193],57:[2,193],73:[2,193],78:[2,193],86:[2,193],91:[2,193],93:[2,193],102:[2,193],104:[2,193],105:[2,193],106:[2,193],110:[2,193],118:[2,193],126:[2,193],128:[2,193],129:[2,193],132:[2,193],133:[2,193],134:[2,193],135:[2,193],136:[2,193],137:[2,193]},{6:[1,210],8:208,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,209],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:211,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{5:212,25:[1,5],125:[1,213]},{1:[2,133],6:[2,133],25:[2,133],26:[2,133],49:[2,133],54:[2,133],57:[2,133],73:[2,133],78:[2,133],86:[2,133],91:[2,133],93:[2,133],97:214,98:[1,215],99:[1,216],102:[2,133],104:[2,133],105:[2,133],106:[2,133],110:[2,133],118:[2,133],126:[2,133],128:[2,133],129:[2,133],132:[2,133],133:[2,133],134:[2,133],135:[2,133],136:[2,133],137:[2,133]},{1:[2,147],6:[2,147],25:[2,147],26:[2,147],49:[2,147],54:[2,147],57:[2,147],73:[2,147],78:[2,147],86:[2,147],91:[2,147],93:[2,147],102:[2,147],104:[2,147],105:[2,147],106:[2,147],110:[2,147],118:[2,147],126:[2,147],128:[2,147],129:[2,147],132:[2,147],133:[2,147],134:[2,147],135:[2,147],136:[2,147],137:[2,147]},{1:[2,155],6:[2,155],25:[2,155],26:[2,155],49:[2,155],54:[2,155],57:[2,155],73:[2,155],78:[2,155],86:[2,155],91:[2,155],93:[2,155],102:[2,155],104:[2,155],105:[2,155],106:[2,155],110:[2,155],118:[2,155],126:[2,155],128:[2,155],129:[2,155],132:[2,155],133:[2,155],134:[2,155],135:[2,155],136:[2,155],137:[2,155]},{25:[1,217],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{120:218,122:219,123:[1,220]},{1:[2,97],6:[2,97],25:[2,97],26:[2,97],49:[2,97],54:[2,97],57:[2,97],73:[2,97],78:[2,97],86:[2,97],91:[2,97],93:[2,97],102:[2,97],104:[2,97],105:[2,97],106:[2,97],110:[2,97],118:[2,97],126:[2,97],128:[2,97],129:[2,97],132:[2,97],133:[2,97],134:[2,97],135:[2,97],136:[2,97],137:[2,97]},{8:221,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,100],5:222,6:[2,100],25:[1,5],26:[2,100],49:[2,100],54:[2,100],57:[2,100],66:[2,72],67:[2,72],68:[2,72],69:[2,72],71:[2,72],73:[2,100],74:[2,72],78:[2,100],80:[1,223],84:[2,72],85:[2,72],86:[2,100],91:[2,100],93:[2,100],102:[2,100],104:[2,100],105:[2,100],106:[2,100],110:[2,100],118:[2,100],126:[2,100],128:[2,100],129:[2,100],132:[2,100],133:[2,100],134:[2,100],135:[2,100],136:[2,100],137:[2,100]},{1:[2,140],6:[2,140],25:[2,140],26:[2,140],49:[2,140],54:[2,140],57:[2,140],73:[2,140],78:[2,140],86:[2,140],91:[2,140],93:[2,140],102:[2,140],103:87,104:[2,140],105:[2,140],106:[2,140],109:88,110:[2,140],111:69,118:[2,140],126:[2,140],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,46],6:[2,46],26:[2,46],102:[2,46],103:87,104:[2,46],106:[2,46],109:88,110:[2,46],111:69,126:[2,46],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[1,74],102:[1,224]},{4:225,7:4,8:6,9:7,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,129],25:[2,129],54:[2,129],57:[1,227],91:[2,129],92:226,93:[1,193],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,115],6:[2,115],25:[2,115],26:[2,115],40:[2,115],49:[2,115],54:[2,115],57:[2,115],66:[2,115],67:[2,115],68:[2,115],69:[2,115],71:[2,115],73:[2,115],74:[2,115],78:[2,115],84:[2,115],85:[2,115],86:[2,115],91:[2,115],93:[2,115],102:[2,115],104:[2,115],105:[2,115],106:[2,115],110:[2,115],116:[2,115],117:[2,115],118:[2,115],126:[2,115],128:[2,115],129:[2,115],132:[2,115],133:[2,115],134:[2,115],135:[2,115],136:[2,115],137:[2,115]},{6:[2,53],25:[2,53],53:228,54:[1,229],91:[2,53]},{6:[2,124],25:[2,124],26:[2,124],54:[2,124],86:[2,124],91:[2,124]},{8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,147],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],87:230,88:[1,58],89:[1,59],90:[1,57],94:146,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,130],25:[2,130],26:[2,130],54:[2,130],86:[2,130],91:[2,130]},{1:[2,114],6:[2,114],25:[2,114],26:[2,114],40:[2,114],43:[2,114],49:[2,114],54:[2,114],57:[2,114],66:[2,114],67:[2,114],68:[2,114],69:[2,114],71:[2,114],73:[2,114],74:[2,114],78:[2,114],80:[2,114],84:[2,114],85:[2,114],86:[2,114],91:[2,114],93:[2,114],102:[2,114],104:[2,114],105:[2,114],106:[2,114],110:[2,114],116:[2,114],117:[2,114],118:[2,114],126:[2,114],128:[2,114],129:[2,114],130:[2,114],131:[2,114],132:[2,114],133:[2,114],134:[2,114],135:[2,114],136:[2,114],137:[2,114],138:[2,114]},{5:231,25:[1,5],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,143],6:[2,143],25:[2,143],26:[2,143],49:[2,143],54:[2,143],57:[2,143],73:[2,143],78:[2,143],86:[2,143],91:[2,143],93:[2,143],102:[2,143],103:87,104:[1,65],105:[1,232],106:[1,66],109:88,110:[1,68],111:69,118:[2,143],126:[2,143],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,145],6:[2,145],25:[2,145],26:[2,145],49:[2,145],54:[2,145],57:[2,145],73:[2,145],78:[2,145],86:[2,145],91:[2,145],93:[2,145],102:[2,145],103:87,104:[1,65],105:[1,233],106:[1,66],109:88,110:[1,68],111:69,118:[2,145],126:[2,145],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,151],6:[2,151],25:[2,151],26:[2,151],49:[2,151],54:[2,151],57:[2,151],73:[2,151],78:[2,151],86:[2,151],91:[2,151],93:[2,151],102:[2,151],104:[2,151],105:[2,151],106:[2,151],110:[2,151],118:[2,151],126:[2,151],128:[2,151],129:[2,151],132:[2,151],133:[2,151],134:[2,151],135:[2,151],136:[2,151],137:[2,151]},{1:[2,152],6:[2,152],25:[2,152],26:[2,152],49:[2,152],54:[2,152],57:[2,152],73:[2,152],78:[2,152],86:[2,152],91:[2,152],93:[2,152],102:[2,152],103:87,104:[1,65],105:[2,152],106:[1,66],109:88,110:[1,68],111:69,118:[2,152],126:[2,152],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,156],6:[2,156],25:[2,156],26:[2,156],49:[2,156],54:[2,156],57:[2,156],73:[2,156],78:[2,156],86:[2,156],91:[2,156],93:[2,156],102:[2,156],104:[2,156],105:[2,156],106:[2,156],110:[2,156],118:[2,156],126:[2,156],128:[2,156],129:[2,156],132:[2,156],133:[2,156],134:[2,156],135:[2,156],136:[2,156],137:[2,156]},{116:[2,158],117:[2,158]},{27:159,28:[1,73],44:160,58:161,59:162,76:[1,70],89:[1,114],90:[1,115],113:234,115:158},{54:[1,235],116:[2,164],117:[2,164]},{54:[2,160],116:[2,160],117:[2,160]},{54:[2,161],116:[2,161],117:[2,161]},{54:[2,162],116:[2,162],117:[2,162]},{54:[2,163],116:[2,163],117:[2,163]},{1:[2,157],6:[2,157],25:[2,157],26:[2,157],49:[2,157],54:[2,157],57:[2,157],73:[2,157],78:[2,157],86:[2,157],91:[2,157],93:[2,157],102:[2,157],104:[2,157],105:[2,157],106:[2,157],110:[2,157],118:[2,157],126:[2,157],128:[2,157],129:[2,157],132:[2,157],133:[2,157],134:[2,157],135:[2,157],136:[2,157],137:[2,157]},{8:236,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:237,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,53],25:[2,53],53:238,54:[1,239],78:[2,53]},{6:[2,92],25:[2,92],26:[2,92],54:[2,92],78:[2,92]},{6:[2,39],25:[2,39],26:[2,39],43:[1,240],54:[2,39],78:[2,39]},{6:[2,42],25:[2,42],26:[2,42],54:[2,42],78:[2,42]},{6:[2,43],25:[2,43],26:[2,43],43:[2,43],54:[2,43],78:[2,43]},{6:[2,44],25:[2,44],26:[2,44],43:[2,44],54:[2,44],78:[2,44]},{6:[2,45],25:[2,45],26:[2,45],43:[2,45],54:[2,45],78:[2,45]},{1:[2,5],6:[2,5],26:[2,5],102:[2,5]},{1:[2,25],6:[2,25],25:[2,25],26:[2,25],49:[2,25],54:[2,25],57:[2,25],73:[2,25],78:[2,25],86:[2,25],91:[2,25],93:[2,25],98:[2,25],99:[2,25],102:[2,25],104:[2,25],105:[2,25],106:[2,25],110:[2,25],118:[2,25],121:[2,25],123:[2,25],126:[2,25],128:[2,25],129:[2,25],132:[2,25],133:[2,25],134:[2,25],135:[2,25],136:[2,25],137:[2,25]},{1:[2,195],6:[2,195],25:[2,195],26:[2,195],49:[2,195],54:[2,195],57:[2,195],73:[2,195],78:[2,195],86:[2,195],91:[2,195],93:[2,195],102:[2,195],103:87,104:[2,195],105:[2,195],106:[2,195],109:88,110:[2,195],111:69,118:[2,195],126:[2,195],128:[2,195],129:[2,195],132:[1,78],133:[1,81],134:[2,195],135:[2,195],136:[2,195],137:[2,195]},{1:[2,196],6:[2,196],25:[2,196],26:[2,196],49:[2,196],54:[2,196],57:[2,196],73:[2,196],78:[2,196],86:[2,196],91:[2,196],93:[2,196],102:[2,196],103:87,104:[2,196],105:[2,196],106:[2,196],109:88,110:[2,196],111:69,118:[2,196],126:[2,196],128:[2,196],129:[2,196],132:[1,78],133:[1,81],134:[2,196],135:[2,196],136:[2,196],137:[2,196]},{1:[2,197],6:[2,197],25:[2,197],26:[2,197],49:[2,197],54:[2,197],57:[2,197],73:[2,197],78:[2,197],86:[2,197],91:[2,197],93:[2,197],102:[2,197],103:87,104:[2,197],105:[2,197],106:[2,197],109:88,110:[2,197],111:69,118:[2,197],126:[2,197],128:[2,197],129:[2,197],132:[1,78],133:[2,197],134:[2,197],135:[2,197],136:[2,197],137:[2,197]},{1:[2,198],6:[2,198],25:[2,198],26:[2,198],49:[2,198],54:[2,198],57:[2,198],73:[2,198],78:[2,198],86:[2,198],91:[2,198],93:[2,198],102:[2,198],103:87,104:[2,198],105:[2,198],106:[2,198],109:88,110:[2,198],111:69,118:[2,198],126:[2,198],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[2,198],135:[2,198],136:[2,198],137:[2,198]},{1:[2,199],6:[2,199],25:[2,199],26:[2,199],49:[2,199],54:[2,199],57:[2,199],73:[2,199],78:[2,199],86:[2,199],91:[2,199],93:[2,199],102:[2,199],103:87,104:[2,199],105:[2,199],106:[2,199],109:88,110:[2,199],111:69,118:[2,199],126:[2,199],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[2,199],136:[2,199],137:[1,85]},{1:[2,200],6:[2,200],25:[2,200],26:[2,200],49:[2,200],54:[2,200],57:[2,200],73:[2,200],78:[2,200],86:[2,200],91:[2,200],93:[2,200],102:[2,200],103:87,104:[2,200],105:[2,200],106:[2,200],109:88,110:[2,200],111:69,118:[2,200],126:[2,200],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[2,200],137:[1,85]},{1:[2,201],6:[2,201],25:[2,201],26:[2,201],49:[2,201],54:[2,201],57:[2,201],73:[2,201],78:[2,201],86:[2,201],91:[2,201],93:[2,201],102:[2,201],103:87,104:[2,201],105:[2,201],106:[2,201],109:88,110:[2,201],111:69,118:[2,201],126:[2,201],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[2,201],136:[2,201],137:[2,201]},{1:[2,186],6:[2,186],25:[2,186],26:[2,186],49:[2,186],54:[2,186],57:[2,186],73:[2,186],78:[2,186],86:[2,186],91:[2,186],93:[2,186],102:[2,186],103:87,104:[1,65],105:[2,186],106:[1,66],109:88,110:[1,68],111:69,118:[2,186],126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,185],6:[2,185],25:[2,185],26:[2,185],49:[2,185],54:[2,185],57:[2,185],73:[2,185],78:[2,185],86:[2,185],91:[2,185],93:[2,185],102:[2,185],103:87,104:[1,65],105:[2,185],106:[1,66],109:88,110:[1,68],111:69,118:[2,185],126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,104],6:[2,104],25:[2,104],26:[2,104],49:[2,104],54:[2,104],57:[2,104],66:[2,104],67:[2,104],68:[2,104],69:[2,104],71:[2,104],73:[2,104],74:[2,104],78:[2,104],84:[2,104],85:[2,104],86:[2,104],91:[2,104],93:[2,104],102:[2,104],104:[2,104],105:[2,104],106:[2,104],110:[2,104],118:[2,104],126:[2,104],128:[2,104],129:[2,104],132:[2,104],133:[2,104],134:[2,104],135:[2,104],136:[2,104],137:[2,104]},{1:[2,80],6:[2,80],25:[2,80],26:[2,80],40:[2,80],49:[2,80],54:[2,80],57:[2,80],66:[2,80],67:[2,80],68:[2,80],69:[2,80],71:[2,80],73:[2,80],74:[2,80],78:[2,80],80:[2,80],84:[2,80],85:[2,80],86:[2,80],91:[2,80],93:[2,80],102:[2,80],104:[2,80],105:[2,80],106:[2,80],110:[2,80],118:[2,80],126:[2,80],128:[2,80],129:[2,80],130:[2,80],131:[2,80],132:[2,80],133:[2,80],134:[2,80],135:[2,80],136:[2,80],137:[2,80],138:[2,80]},{1:[2,81],6:[2,81],25:[2,81],26:[2,81],40:[2,81],49:[2,81],54:[2,81],57:[2,81],66:[2,81],67:[2,81],68:[2,81],69:[2,81],71:[2,81],73:[2,81],74:[2,81],78:[2,81],80:[2,81],84:[2,81],85:[2,81],86:[2,81],91:[2,81],93:[2,81],102:[2,81],104:[2,81],105:[2,81],106:[2,81],110:[2,81],118:[2,81],126:[2,81],128:[2,81],129:[2,81],130:[2,81],131:[2,81],132:[2,81],133:[2,81],134:[2,81],135:[2,81],136:[2,81],137:[2,81],138:[2,81]},{1:[2,82],6:[2,82],25:[2,82],26:[2,82],40:[2,82],49:[2,82],54:[2,82],57:[2,82],66:[2,82],67:[2,82],68:[2,82],69:[2,82],71:[2,82],73:[2,82],74:[2,82],78:[2,82],80:[2,82],84:[2,82],85:[2,82],86:[2,82],91:[2,82],93:[2,82],102:[2,82],104:[2,82],105:[2,82],106:[2,82],110:[2,82],118:[2,82],126:[2,82],128:[2,82],129:[2,82],130:[2,82],131:[2,82],132:[2,82],133:[2,82],134:[2,82],135:[2,82],136:[2,82],137:[2,82],138:[2,82]},{1:[2,83],6:[2,83],25:[2,83],26:[2,83],40:[2,83],49:[2,83],54:[2,83],57:[2,83],66:[2,83],67:[2,83],68:[2,83],69:[2,83],71:[2,83],73:[2,83],74:[2,83],78:[2,83],80:[2,83],84:[2,83],85:[2,83],86:[2,83],91:[2,83],93:[2,83],102:[2,83],104:[2,83],105:[2,83],106:[2,83],110:[2,83],118:[2,83],126:[2,83],128:[2,83],129:[2,83],130:[2,83],131:[2,83],132:[2,83],133:[2,83],134:[2,83],135:[2,83],136:[2,83],137:[2,83],138:[2,83]},{73:[1,241]},{57:[1,194],73:[2,88],92:242,93:[1,193],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{73:[2,89]},{8:243,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,73:[2,123],76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{12:[2,117],28:[2,117],30:[2,117],31:[2,117],33:[2,117],34:[2,117],35:[2,117],36:[2,117],37:[2,117],38:[2,117],45:[2,117],46:[2,117],47:[2,117],51:[2,117],52:[2,117],73:[2,117],76:[2,117],79:[2,117],83:[2,117],88:[2,117],89:[2,117],90:[2,117],96:[2,117],100:[2,117],101:[2,117],104:[2,117],106:[2,117],108:[2,117],110:[2,117],119:[2,117],125:[2,117],127:[2,117],128:[2,117],129:[2,117],130:[2,117],131:[2,117]},{12:[2,118],28:[2,118],30:[2,118],31:[2,118],33:[2,118],34:[2,118],35:[2,118],36:[2,118],37:[2,118],38:[2,118],45:[2,118],46:[2,118],47:[2,118],51:[2,118],52:[2,118],73:[2,118],76:[2,118],79:[2,118],83:[2,118],88:[2,118],89:[2,118],90:[2,118],96:[2,118],100:[2,118],101:[2,118],104:[2,118],106:[2,118],108:[2,118],110:[2,118],119:[2,118],125:[2,118],127:[2,118],128:[2,118],129:[2,118],130:[2,118],131:[2,118]},{1:[2,87],6:[2,87],25:[2,87],26:[2,87],40:[2,87],49:[2,87],54:[2,87],57:[2,87],66:[2,87],67:[2,87],68:[2,87],69:[2,87],71:[2,87],73:[2,87],74:[2,87],78:[2,87],80:[2,87],84:[2,87],85:[2,87],86:[2,87],91:[2,87],93:[2,87],102:[2,87],104:[2,87],105:[2,87],106:[2,87],110:[2,87],118:[2,87],126:[2,87],128:[2,87],129:[2,87],130:[2,87],131:[2,87],132:[2,87],133:[2,87],134:[2,87],135:[2,87],136:[2,87],137:[2,87],138:[2,87]},{1:[2,105],6:[2,105],25:[2,105],26:[2,105],49:[2,105],54:[2,105],57:[2,105],66:[2,105],67:[2,105],68:[2,105],69:[2,105],71:[2,105],73:[2,105],74:[2,105],78:[2,105],84:[2,105],85:[2,105],86:[2,105],91:[2,105],93:[2,105],102:[2,105],104:[2,105],105:[2,105],106:[2,105],110:[2,105],118:[2,105],126:[2,105],128:[2,105],129:[2,105],132:[2,105],133:[2,105],134:[2,105],135:[2,105],136:[2,105],137:[2,105]},{1:[2,36],6:[2,36],25:[2,36],26:[2,36],49:[2,36],54:[2,36],57:[2,36],73:[2,36],78:[2,36],86:[2,36],91:[2,36],93:[2,36],102:[2,36],103:87,104:[2,36],105:[2,36],106:[2,36],109:88,110:[2,36],111:69,118:[2,36],126:[2,36],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{8:244,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:245,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,110],6:[2,110],25:[2,110],26:[2,110],49:[2,110],54:[2,110],57:[2,110],66:[2,110],67:[2,110],68:[2,110],69:[2,110],71:[2,110],73:[2,110],74:[2,110],78:[2,110],84:[2,110],85:[2,110],86:[2,110],91:[2,110],93:[2,110],102:[2,110],104:[2,110],105:[2,110],106:[2,110],110:[2,110],118:[2,110],126:[2,110],128:[2,110],129:[2,110],132:[2,110],133:[2,110],134:[2,110],135:[2,110],136:[2,110],137:[2,110]},{6:[2,53],25:[2,53],53:246,54:[1,229],86:[2,53]},{6:[2,129],25:[2,129],26:[2,129],54:[2,129],57:[1,247],86:[2,129],91:[2,129],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{50:248,51:[1,60],52:[1,61]},{6:[2,54],25:[2,54],26:[2,54],27:110,28:[1,73],44:111,55:249,56:109,58:112,59:113,76:[1,70],89:[1,114],90:[1,115]},{6:[1,250],25:[1,251]},{6:[2,61],25:[2,61],26:[2,61],49:[2,61],54:[2,61]},{8:252,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,202],6:[2,202],25:[2,202],26:[2,202],49:[2,202],54:[2,202],57:[2,202],73:[2,202],78:[2,202],86:[2,202],91:[2,202],93:[2,202],102:[2,202],103:87,104:[2,202],105:[2,202],106:[2,202],109:88,110:[2,202],111:69,118:[2,202],126:[2,202],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{8:253,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:254,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,205],6:[2,205],25:[2,205],26:[2,205],49:[2,205],54:[2,205],57:[2,205],73:[2,205],78:[2,205],86:[2,205],91:[2,205],93:[2,205],102:[2,205],103:87,104:[2,205],105:[2,205],106:[2,205],109:88,110:[2,205],111:69,118:[2,205],126:[2,205],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,184],6:[2,184],25:[2,184],26:[2,184],49:[2,184],54:[2,184],57:[2,184],73:[2,184],78:[2,184],86:[2,184],91:[2,184],93:[2,184],102:[2,184],104:[2,184],105:[2,184],106:[2,184],110:[2,184],118:[2,184],126:[2,184],128:[2,184],129:[2,184],132:[2,184],133:[2,184],134:[2,184],135:[2,184],136:[2,184],137:[2,184]},{8:255,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,134],6:[2,134],25:[2,134],26:[2,134],49:[2,134],54:[2,134],57:[2,134],73:[2,134],78:[2,134],86:[2,134],91:[2,134],93:[2,134],98:[1,256],102:[2,134],104:[2,134],105:[2,134],106:[2,134],110:[2,134],118:[2,134],126:[2,134],128:[2,134],129:[2,134],132:[2,134],133:[2,134],134:[2,134],135:[2,134],136:[2,134],137:[2,134]},{5:257,25:[1,5]},{5:260,25:[1,5],27:258,28:[1,73],59:259,76:[1,70]},{120:261,122:219,123:[1,220]},{26:[1,262],121:[1,263],122:264,123:[1,220]},{26:[2,177],121:[2,177],123:[2,177]},{8:266,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],95:265,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,98],5:267,6:[2,98],25:[1,5],26:[2,98],49:[2,98],54:[2,98],57:[2,98],73:[2,98],78:[2,98],86:[2,98],91:[2,98],93:[2,98],102:[2,98],103:87,104:[1,65],105:[2,98],106:[1,66],109:88,110:[1,68],111:69,118:[2,98],126:[2,98],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,101],6:[2,101],25:[2,101],26:[2,101],49:[2,101],54:[2,101],57:[2,101],73:[2,101],78:[2,101],86:[2,101],91:[2,101],93:[2,101],102:[2,101],104:[2,101],105:[2,101],106:[2,101],110:[2,101],118:[2,101],126:[2,101],128:[2,101],129:[2,101],132:[2,101],133:[2,101],134:[2,101],135:[2,101],136:[2,101],137:[2,101]},{8:268,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,141],6:[2,141],25:[2,141],26:[2,141],49:[2,141],54:[2,141],57:[2,141],66:[2,141],67:[2,141],68:[2,141],69:[2,141],71:[2,141],73:[2,141],74:[2,141],78:[2,141],84:[2,141],85:[2,141],86:[2,141],91:[2,141],93:[2,141],102:[2,141],104:[2,141],105:[2,141],106:[2,141],110:[2,141],118:[2,141],126:[2,141],128:[2,141],129:[2,141],132:[2,141],133:[2,141],134:[2,141],135:[2,141],136:[2,141],137:[2,141]},{6:[1,74],26:[1,269]},{8:270,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,67],12:[2,118],25:[2,67],28:[2,118],30:[2,118],31:[2,118],33:[2,118],34:[2,118],35:[2,118],36:[2,118],37:[2,118],38:[2,118],45:[2,118],46:[2,118],47:[2,118],51:[2,118],52:[2,118],54:[2,67],76:[2,118],79:[2,118],83:[2,118],88:[2,118],89:[2,118],90:[2,118],91:[2,67],96:[2,118],100:[2,118],101:[2,118],104:[2,118],106:[2,118],108:[2,118],110:[2,118],119:[2,118],125:[2,118],127:[2,118],128:[2,118],129:[2,118],130:[2,118],131:[2,118]},{6:[1,272],25:[1,273],91:[1,271]},{6:[2,54],8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[2,54],26:[2,54],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],86:[2,54],88:[1,58],89:[1,59],90:[1,57],91:[2,54],94:274,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,53],25:[2,53],26:[2,53],53:275,54:[1,229]},{1:[2,181],6:[2,181],25:[2,181],26:[2,181],49:[2,181],54:[2,181],57:[2,181],73:[2,181],78:[2,181],86:[2,181],91:[2,181],93:[2,181],102:[2,181],104:[2,181],105:[2,181],106:[2,181],110:[2,181],118:[2,181],121:[2,181],126:[2,181],128:[2,181],129:[2,181],132:[2,181],133:[2,181],134:[2,181],135:[2,181],136:[2,181],137:[2,181]},{8:276,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:277,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{116:[2,159],117:[2,159]},{27:159,28:[1,73],44:160,58:161,59:162,76:[1,70],89:[1,114],90:[1,115],115:278},{1:[2,166],6:[2,166],25:[2,166],26:[2,166],49:[2,166],54:[2,166],57:[2,166],73:[2,166],78:[2,166],86:[2,166],91:[2,166],93:[2,166],102:[2,166],103:87,104:[2,166],105:[1,279],106:[2,166],109:88,110:[2,166],111:69,118:[1,280],126:[2,166],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,167],6:[2,167],25:[2,167],26:[2,167],49:[2,167],54:[2,167],57:[2,167],73:[2,167],78:[2,167],86:[2,167],91:[2,167],93:[2,167],102:[2,167],103:87,104:[2,167],105:[1,281],106:[2,167],109:88,110:[2,167],111:69,118:[2,167],126:[2,167],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[1,283],25:[1,284],78:[1,282]},{6:[2,54],11:169,25:[2,54],26:[2,54],27:170,28:[1,73],29:171,30:[1,71],31:[1,72],41:285,42:168,44:172,46:[1,46],78:[2,54],89:[1,114]},{8:286,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,287],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,86],6:[2,86],25:[2,86],26:[2,86],40:[2,86],49:[2,86],54:[2,86],57:[2,86],66:[2,86],67:[2,86],68:[2,86],69:[2,86],71:[2,86],73:[2,86],74:[2,86],78:[2,86],80:[2,86],84:[2,86],85:[2,86],86:[2,86],91:[2,86],93:[2,86],102:[2,86],104:[2,86],105:[2,86],106:[2,86],110:[2,86],118:[2,86],126:[2,86],128:[2,86],129:[2,86],130:[2,86],131:[2,86],132:[2,86],133:[2,86],134:[2,86],135:[2,86],136:[2,86],137:[2,86],138:[2,86]},{8:288,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,73:[2,121],76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{73:[2,122],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,37],6:[2,37],25:[2,37],26:[2,37],49:[2,37],54:[2,37],57:[2,37],73:[2,37],78:[2,37],86:[2,37],91:[2,37],93:[2,37],102:[2,37],103:87,104:[2,37],105:[2,37],106:[2,37],109:88,110:[2,37],111:69,118:[2,37],126:[2,37],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{26:[1,289],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[1,272],25:[1,273],86:[1,290]},{6:[2,67],25:[2,67],26:[2,67],54:[2,67],86:[2,67],91:[2,67]},{5:291,25:[1,5]},{6:[2,57],25:[2,57],26:[2,57],49:[2,57],54:[2,57]},{27:110,28:[1,73],44:111,55:292,56:109,58:112,59:113,76:[1,70],89:[1,114],90:[1,115]},{6:[2,55],25:[2,55],26:[2,55],27:110,28:[1,73],44:111,48:293,54:[2,55],55:108,56:109,58:112,59:113,76:[1,70],89:[1,114],90:[1,115]},{6:[2,62],25:[2,62],26:[2,62],49:[2,62],54:[2,62],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{26:[1,294],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,204],6:[2,204],25:[2,204],26:[2,204],49:[2,204],54:[2,204],57:[2,204],73:[2,204],78:[2,204],86:[2,204],91:[2,204],93:[2,204],102:[2,204],103:87,104:[2,204],105:[2,204],106:[2,204],109:88,110:[2,204],111:69,118:[2,204],126:[2,204],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{5:295,25:[1,5],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{5:296,25:[1,5]},{1:[2,135],6:[2,135],25:[2,135],26:[2,135],49:[2,135],54:[2,135],57:[2,135],73:[2,135],78:[2,135],86:[2,135],91:[2,135],93:[2,135],102:[2,135],104:[2,135],105:[2,135],106:[2,135],110:[2,135],118:[2,135],126:[2,135],128:[2,135],129:[2,135],132:[2,135],133:[2,135],134:[2,135],135:[2,135],136:[2,135],137:[2,135]},{5:297,25:[1,5]},{5:298,25:[1,5]},{1:[2,139],6:[2,139],25:[2,139],26:[2,139],49:[2,139],54:[2,139],57:[2,139],73:[2,139],78:[2,139],86:[2,139],91:[2,139],93:[2,139],98:[2,139],102:[2,139],104:[2,139],105:[2,139],106:[2,139],110:[2,139],118:[2,139],126:[2,139],128:[2,139],129:[2,139],132:[2,139],133:[2,139],134:[2,139],135:[2,139],136:[2,139],137:[2,139]},{26:[1,299],121:[1,300],122:264,123:[1,220]},{1:[2,175],6:[2,175],25:[2,175],26:[2,175],49:[2,175],54:[2,175],57:[2,175],73:[2,175],78:[2,175],86:[2,175],91:[2,175],93:[2,175],102:[2,175],104:[2,175],105:[2,175],106:[2,175],110:[2,175],118:[2,175],126:[2,175],128:[2,175],129:[2,175],132:[2,175],133:[2,175],134:[2,175],135:[2,175],136:[2,175],137:[2,175]},{5:301,25:[1,5]},{26:[2,178],121:[2,178],123:[2,178]},{5:302,25:[1,5],54:[1,303]},{25:[2,131],54:[2,131],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,99],6:[2,99],25:[2,99],26:[2,99],49:[2,99],54:[2,99],57:[2,99],73:[2,99],78:[2,99],86:[2,99],91:[2,99],93:[2,99],102:[2,99],104:[2,99],105:[2,99],106:[2,99],110:[2,99],118:[2,99],126:[2,99],128:[2,99],129:[2,99],132:[2,99],133:[2,99],134:[2,99],135:[2,99],136:[2,99],137:[2,99]},{1:[2,102],5:304,6:[2,102],25:[1,5],26:[2,102],49:[2,102],54:[2,102],57:[2,102],73:[2,102],78:[2,102],86:[2,102],91:[2,102],93:[2,102],102:[2,102],103:87,104:[1,65],105:[2,102],106:[1,66],109:88,110:[1,68],111:69,118:[2,102],126:[2,102],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{102:[1,305]},{91:[1,306],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,116],6:[2,116],25:[2,116],26:[2,116],40:[2,116],49:[2,116],54:[2,116],57:[2,116],66:[2,116],67:[2,116],68:[2,116],69:[2,116],71:[2,116],73:[2,116],74:[2,116],78:[2,116],84:[2,116],85:[2,116],86:[2,116],91:[2,116],93:[2,116],102:[2,116],104:[2,116],105:[2,116],106:[2,116],110:[2,116],116:[2,116],117:[2,116],118:[2,116],126:[2,116],128:[2,116],129:[2,116],132:[2,116],133:[2,116],134:[2,116],135:[2,116],136:[2,116],137:[2,116]},{8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],94:307,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:202,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,25:[1,147],27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,60:148,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],87:308,88:[1,58],89:[1,59],90:[1,57],94:146,96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[2,125],25:[2,125],26:[2,125],54:[2,125],86:[2,125],91:[2,125]},{6:[1,272],25:[1,273],26:[1,309]},{1:[2,144],6:[2,144],25:[2,144],26:[2,144],49:[2,144],54:[2,144],57:[2,144],73:[2,144],78:[2,144],86:[2,144],91:[2,144],93:[2,144],102:[2,144],103:87,104:[1,65],105:[2,144],106:[1,66],109:88,110:[1,68],111:69,118:[2,144],126:[2,144],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,146],6:[2,146],25:[2,146],26:[2,146],49:[2,146],54:[2,146],57:[2,146],73:[2,146],78:[2,146],86:[2,146],91:[2,146],93:[2,146],102:[2,146],103:87,104:[1,65],105:[2,146],106:[1,66],109:88,110:[1,68],111:69,118:[2,146],126:[2,146],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{116:[2,165],117:[2,165]},{8:310,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:311,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:312,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,90],6:[2,90],25:[2,90],26:[2,90],40:[2,90],49:[2,90],54:[2,90],57:[2,90],66:[2,90],67:[2,90],68:[2,90],69:[2,90],71:[2,90],73:[2,90],74:[2,90],78:[2,90],84:[2,90],85:[2,90],86:[2,90],91:[2,90],93:[2,90],102:[2,90],104:[2,90],105:[2,90],106:[2,90],110:[2,90],116:[2,90],117:[2,90],118:[2,90],126:[2,90],128:[2,90],129:[2,90],132:[2,90],133:[2,90],134:[2,90],135:[2,90],136:[2,90],137:[2,90]},{11:169,27:170,28:[1,73],29:171,30:[1,71],31:[1,72],41:313,42:168,44:172,46:[1,46],89:[1,114]},{6:[2,91],11:169,25:[2,91],26:[2,91],27:170,28:[1,73],29:171,30:[1,71],31:[1,72],41:167,42:168,44:172,46:[1,46],54:[2,91],77:314,89:[1,114]},{6:[2,93],25:[2,93],26:[2,93],54:[2,93],78:[2,93]},{6:[2,40],25:[2,40],26:[2,40],54:[2,40],78:[2,40],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{8:315,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{73:[2,120],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,38],6:[2,38],25:[2,38],26:[2,38],49:[2,38],54:[2,38],57:[2,38],73:[2,38],78:[2,38],86:[2,38],91:[2,38],93:[2,38],102:[2,38],104:[2,38],105:[2,38],106:[2,38],110:[2,38],118:[2,38],126:[2,38],128:[2,38],129:[2,38],132:[2,38],133:[2,38],134:[2,38],135:[2,38],136:[2,38],137:[2,38]},{1:[2,111],6:[2,111],25:[2,111],26:[2,111],49:[2,111],54:[2,111],57:[2,111],66:[2,111],67:[2,111],68:[2,111],69:[2,111],71:[2,111],73:[2,111],74:[2,111],78:[2,111],84:[2,111],85:[2,111],86:[2,111],91:[2,111],93:[2,111],102:[2,111],104:[2,111],105:[2,111],106:[2,111],110:[2,111],118:[2,111],126:[2,111],128:[2,111],129:[2,111],132:[2,111],133:[2,111],134:[2,111],135:[2,111],136:[2,111],137:[2,111]},{1:[2,49],6:[2,49],25:[2,49],26:[2,49],49:[2,49],54:[2,49],57:[2,49],73:[2,49],78:[2,49],86:[2,49],91:[2,49],93:[2,49],102:[2,49],104:[2,49],105:[2,49],106:[2,49],110:[2,49],118:[2,49],126:[2,49],128:[2,49],129:[2,49],132:[2,49],133:[2,49],134:[2,49],135:[2,49],136:[2,49],137:[2,49]},{6:[2,58],25:[2,58],26:[2,58],49:[2,58],54:[2,58]},{6:[2,53],25:[2,53],26:[2,53],53:316,54:[1,204]},{1:[2,203],6:[2,203],25:[2,203],26:[2,203],49:[2,203],54:[2,203],57:[2,203],73:[2,203],78:[2,203],86:[2,203],91:[2,203],93:[2,203],102:[2,203],104:[2,203],105:[2,203],106:[2,203],110:[2,203],118:[2,203],126:[2,203],128:[2,203],129:[2,203],132:[2,203],133:[2,203],134:[2,203],135:[2,203],136:[2,203],137:[2,203]},{1:[2,182],6:[2,182],25:[2,182],26:[2,182],49:[2,182],54:[2,182],57:[2,182],73:[2,182],78:[2,182],86:[2,182],91:[2,182],93:[2,182],102:[2,182],104:[2,182],105:[2,182],106:[2,182],110:[2,182],118:[2,182],121:[2,182],126:[2,182],128:[2,182],129:[2,182],132:[2,182],133:[2,182],134:[2,182],135:[2,182],136:[2,182],137:[2,182]},{1:[2,136],6:[2,136],25:[2,136],26:[2,136],49:[2,136],54:[2,136],57:[2,136],73:[2,136],78:[2,136],86:[2,136],91:[2,136],93:[2,136],102:[2,136],104:[2,136],105:[2,136],106:[2,136],110:[2,136],118:[2,136],126:[2,136],128:[2,136],129:[2,136],132:[2,136],133:[2,136],134:[2,136],135:[2,136],136:[2,136],137:[2,136]},{1:[2,137],6:[2,137],25:[2,137],26:[2,137],49:[2,137],54:[2,137],57:[2,137],73:[2,137],78:[2,137],86:[2,137],91:[2,137],93:[2,137],98:[2,137],102:[2,137],104:[2,137],105:[2,137],106:[2,137],110:[2,137],118:[2,137],126:[2,137],128:[2,137],129:[2,137],132:[2,137],133:[2,137],134:[2,137],135:[2,137],136:[2,137],137:[2,137]},{1:[2,138],6:[2,138],25:[2,138],26:[2,138],49:[2,138],54:[2,138],57:[2,138],73:[2,138],78:[2,138],86:[2,138],91:[2,138],93:[2,138],98:[2,138],102:[2,138],104:[2,138],105:[2,138],106:[2,138],110:[2,138],118:[2,138],126:[2,138],128:[2,138],129:[2,138],132:[2,138],133:[2,138],134:[2,138],135:[2,138],136:[2,138],137:[2,138]},{1:[2,173],6:[2,173],25:[2,173],26:[2,173],49:[2,173],54:[2,173],57:[2,173],73:[2,173],78:[2,173],86:[2,173],91:[2,173],93:[2,173],102:[2,173],104:[2,173],105:[2,173],106:[2,173],110:[2,173],118:[2,173],126:[2,173],128:[2,173],129:[2,173],132:[2,173],133:[2,173],134:[2,173],135:[2,173],136:[2,173],137:[2,173]},{5:317,25:[1,5]},{26:[1,318]},{6:[1,319],26:[2,179],121:[2,179],123:[2,179]},{8:320,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{1:[2,103],6:[2,103],25:[2,103],26:[2,103],49:[2,103],54:[2,103],57:[2,103],73:[2,103],78:[2,103],86:[2,103],91:[2,103],93:[2,103],102:[2,103],104:[2,103],105:[2,103],106:[2,103],110:[2,103],118:[2,103],126:[2,103],128:[2,103],129:[2,103],132:[2,103],133:[2,103],134:[2,103],135:[2,103],136:[2,103],137:[2,103]},{1:[2,142],6:[2,142],25:[2,142],26:[2,142],49:[2,142],54:[2,142],57:[2,142],66:[2,142],67:[2,142],68:[2,142],69:[2,142],71:[2,142],73:[2,142],74:[2,142],78:[2,142],84:[2,142],85:[2,142],86:[2,142],91:[2,142],93:[2,142],102:[2,142],104:[2,142],105:[2,142],106:[2,142],110:[2,142],118:[2,142],126:[2,142],128:[2,142],129:[2,142],132:[2,142],133:[2,142],134:[2,142],135:[2,142],136:[2,142],137:[2,142]},{1:[2,119],6:[2,119],25:[2,119],26:[2,119],49:[2,119],54:[2,119],57:[2,119],66:[2,119],67:[2,119],68:[2,119],69:[2,119],71:[2,119],73:[2,119],74:[2,119],78:[2,119],84:[2,119],85:[2,119],86:[2,119],91:[2,119],93:[2,119],102:[2,119],104:[2,119],105:[2,119],106:[2,119],110:[2,119],118:[2,119],126:[2,119],128:[2,119],129:[2,119],132:[2,119],133:[2,119],134:[2,119],135:[2,119],136:[2,119],137:[2,119]},{6:[2,126],25:[2,126],26:[2,126],54:[2,126],86:[2,126],91:[2,126]},{6:[2,53],25:[2,53],26:[2,53],53:321,54:[1,229]},{6:[2,127],25:[2,127],26:[2,127],54:[2,127],86:[2,127],91:[2,127]},{1:[2,168],6:[2,168],25:[2,168],26:[2,168],49:[2,168],54:[2,168],57:[2,168],73:[2,168],78:[2,168],86:[2,168],91:[2,168],93:[2,168],102:[2,168],103:87,104:[2,168],105:[2,168],106:[2,168],109:88,110:[2,168],111:69,118:[1,322],126:[2,168],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,170],6:[2,170],25:[2,170],26:[2,170],49:[2,170],54:[2,170],57:[2,170],73:[2,170],78:[2,170],86:[2,170],91:[2,170],93:[2,170],102:[2,170],103:87,104:[2,170],105:[1,323],106:[2,170],109:88,110:[2,170],111:69,118:[2,170],126:[2,170],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,169],6:[2,169],25:[2,169],26:[2,169],49:[2,169],54:[2,169],57:[2,169],73:[2,169],78:[2,169],86:[2,169],91:[2,169],93:[2,169],102:[2,169],103:87,104:[2,169],105:[2,169],106:[2,169],109:88,110:[2,169],111:69,118:[2,169],126:[2,169],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[2,94],25:[2,94],26:[2,94],54:[2,94],78:[2,94]},{6:[2,53],25:[2,53],26:[2,53],53:324,54:[1,239]},{26:[1,325],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[1,250],25:[1,251],26:[1,326]},{26:[1,327]},{1:[2,176],6:[2,176],25:[2,176],26:[2,176],49:[2,176],54:[2,176],57:[2,176],73:[2,176],78:[2,176],86:[2,176],91:[2,176],93:[2,176],102:[2,176],104:[2,176],105:[2,176],106:[2,176],110:[2,176],118:[2,176],126:[2,176],128:[2,176],129:[2,176],132:[2,176],133:[2,176],134:[2,176],135:[2,176],136:[2,176],137:[2,176]},{26:[2,180],121:[2,180],123:[2,180]},{25:[2,132],54:[2,132],103:87,104:[1,65],106:[1,66],109:88,110:[1,68],111:69,126:[1,86],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[1,272],25:[1,273],26:[1,328]},{8:329,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{8:330,9:118,10:20,11:21,12:[1,22],13:8,14:9,15:10,16:11,17:12,18:13,19:14,20:15,21:16,22:17,23:18,24:19,27:62,28:[1,73],29:49,30:[1,71],31:[1,72],32:24,33:[1,50],34:[1,51],35:[1,52],36:[1,53],37:[1,54],38:[1,55],39:23,44:63,45:[1,45],46:[1,46],47:[1,29],50:30,51:[1,60],52:[1,61],58:47,59:48,61:36,63:25,64:26,65:27,76:[1,70],79:[1,43],83:[1,28],88:[1,58],89:[1,59],90:[1,57],96:[1,38],100:[1,44],101:[1,56],103:39,104:[1,65],106:[1,66],107:40,108:[1,67],109:41,110:[1,68],111:69,119:[1,42],124:37,125:[1,64],127:[1,31],128:[1,32],129:[1,33],130:[1,34],131:[1,35]},{6:[1,283],25:[1,284],26:[1,331]},{6:[2,41],25:[2,41],26:[2,41],54:[2,41],78:[2,41]},{6:[2,59],25:[2,59],26:[2,59],49:[2,59],54:[2,59]},{1:[2,174],6:[2,174],25:[2,174],26:[2,174],49:[2,174],54:[2,174],57:[2,174],73:[2,174],78:[2,174],86:[2,174],91:[2,174],93:[2,174],102:[2,174],104:[2,174],105:[2,174],106:[2,174],110:[2,174],118:[2,174],126:[2,174],128:[2,174],129:[2,174],132:[2,174],133:[2,174],134:[2,174],135:[2,174],136:[2,174],137:[2,174]},{6:[2,128],25:[2,128],26:[2,128],54:[2,128],86:[2,128],91:[2,128]},{1:[2,171],6:[2,171],25:[2,171],26:[2,171],49:[2,171],54:[2,171],57:[2,171],73:[2,171],78:[2,171],86:[2,171],91:[2,171],93:[2,171],102:[2,171],103:87,104:[2,171],105:[2,171],106:[2,171],109:88,110:[2,171],111:69,118:[2,171],126:[2,171],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{1:[2,172],6:[2,172],25:[2,172],26:[2,172],49:[2,172],54:[2,172],57:[2,172],73:[2,172],78:[2,172],86:[2,172],91:[2,172],93:[2,172],102:[2,172],103:87,104:[2,172],105:[2,172],106:[2,172],109:88,110:[2,172],111:69,118:[2,172],126:[2,172],128:[1,80],129:[1,79],132:[1,78],133:[1,81],134:[1,82],135:[1,83],136:[1,84],137:[1,85]},{6:[2,95],25:[2,95],26:[2,95],54:[2,95],78:[2,95]}],defaultActions:{60:[2,51],61:[2,52],75:[2,3],94:[2,109],191:[2,89]},parseError:function(e){throw new Error(e)\r\n},parse:function(e){function t(){var e;return e=n.lexer.lex()||1,\"number\"!=typeof e&&(e=n.symbols_[e]||e),e}var n=this,i=[0],s=[null],r=[],o=this.table,a=\"\",c=0,h=0,l=0;this.lexer.setInput(e),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,\"undefined\"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var u=this.lexer.yylloc;r.push(u);var p=this.lexer.options&&this.lexer.options.ranges;\"function\"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var d,f,m,b,k,g,y,v,w,T={};;){if(m=i[i.length-1],this.defaultActions[m]?b=this.defaultActions[m]:((null===d||\"undefined\"==typeof d)&&(d=t()),b=o[m]&&o[m][d]),\"undefined\"==typeof b||!b.length||!b[0]){var C=\"\";if(!l){w=[];for(g in o[m])this.terminals_[g]&&g>2&&w.push(\"'\"+this.terminals_[g]+\"'\");C=this.lexer.showPosition?\"Parse error on line \"+(c+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+w.join(\", \")+\", got '\"+(this.terminals_[d]||d)+\"'\":\"Parse error on line \"+(c+1)+\": Unexpected \"+(1==d?\"end of input\":\"'\"+(this.terminals_[d]||d)+\"'\"),this.parseError(C,{text:this.lexer.match,token:this.terminals_[d]||d,line:this.lexer.yylineno,loc:u,expected:w})}}if(b[0]instanceof Array&&b.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+m+\", token: \"+d);switch(b[0]){case 1:i.push(d),s.push(this.lexer.yytext),r.push(this.lexer.yylloc),i.push(b[1]),d=null,f?(d=f,f=null):(h=this.lexer.yyleng,a=this.lexer.yytext,c=this.lexer.yylineno,u=this.lexer.yylloc,l>0&&l--);break;case 2:if(y=this.productions_[b[1]][1],T.$=s[s.length-y],T._$={first_line:r[r.length-(y||1)].first_line,last_line:r[r.length-1].last_line,first_column:r[r.length-(y||1)].first_column,last_column:r[r.length-1].last_column},p&&(T._$.range=[r[r.length-(y||1)].range[0],r[r.length-1].range[1]]),k=this.performAction.call(T,a,h,c,this.yy,b[1],s,r),\"undefined\"!=typeof k)return k;y&&(i=i.slice(0,2*-1*y),s=s.slice(0,-1*y),r=r.slice(0,-1*y)),i.push(this.productions_[b[1]][0]),s.push(T.$),r.push(T._$),v=o[i[i.length-2]][i[i.length-1]],i.push(v);break;case 3:return!0}}return!0}};return e.prototype=t,t.Parser=e,new e}();return\"undefined\"!=typeof require&&\"undefined\"!=typeof e&&(e.parser=n,e.Parser=n.Parser,e.parse=function(){return n.parse.apply(n,arguments)},e.main=function(t){t[1]||(console.log(\"Usage: \"+t[0]+\" FILE\"),process.exit(1));var n=require(\"fs\").readFileSync(require(\"path\").normalize(t[1]),\"utf8\");return e.parser.parse(n)},\"undefined\"!=typeof t&&require.main===t&&e.main(process.argv.slice(1))),t.exports}(),require[\"./scope\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s;s=require(\"./helpers\"),n=s.extend,i=s.last,e.Scope=t=function(){function e(t,n,i){this.parent=t,this.expressions=n,this.method=i,this.variables=[{name:\"arguments\",type:\"arguments\"}],this.positions={},this.parent||(e.root=this)}return e.root=null,e.prototype.add=function(e,t,n){return this.shared&&!n?this.parent.add(e,t,n):Object.prototype.hasOwnProperty.call(this.positions,e)?this.variables[this.positions[e]].type=t:this.positions[e]=this.variables.push({name:e,type:t})-1},e.prototype.namedMethod=function(){var e;return(null!=(e=this.method)?e.name:void 0)||!this.parent?this.method:this.parent.namedMethod()},e.prototype.find=function(e){return this.check(e)?!0:(this.add(e,\"var\"),!1)},e.prototype.parameter=function(e){return this.shared&&this.parent.check(e,!0)?void 0:this.add(e,\"param\")},e.prototype.check=function(e){var t;return!!(this.type(e)||(null!=(t=this.parent)?t.check(e):void 0))},e.prototype.temporary=function(e,t){return e.length>1?\"_\"+e+(t>1?t-1:\"\"):\"_\"+(t+parseInt(e,36)).toString(36).replace(/\\d/g,\"a\")},e.prototype.type=function(e){var t,n,i,s;for(s=this.variables,n=0,i=s.length;i>n;n++)if(t=s[n],t.name===e)return t.type;return null},e.prototype.freeVariable=function(e,t){var n,i;for(null==t&&(t=!0),n=0;this.check(i=this.temporary(e,n));)n++;return t&&this.add(i,\"var\",!0),i},e.prototype.assign=function(e,t){return this.add(e,{value:t,assigned:!0},!0),this.hasAssignments=!0},e.prototype.hasDeclarations=function(){return!!this.declaredVariables().length},e.prototype.declaredVariables=function(){var e,t,n,i,s,r;for(e=[],t=[],r=this.variables,i=0,s=r.length;s>i;i++)n=r[i],\"var\"===n.type&&(\"_\"===n.name.charAt(0)?t:e).push(n.name);return e.sort().concat(t.sort())},e.prototype.assignedVariables=function(){var e,t,n,i,s;for(i=this.variables,s=[],t=0,n=i.length;n>t;t++)e=i[t],e.type.assigned&&s.push(\"\"+e.name+\" = \"+e.type.value);return s},e}()}.call(this),t.exports}(),require[\"./nodes\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,m,b,k,g,y,v,w,T,C,F,L,N,x,E,D,S,R,A,I,_,$,O,j,M,B,V,P,U,q,H,G,W,X,Y,K,z,J,Z,Q,et,tt,nt,it,st,rt,ot,at,ct,ht,lt,ut,pt,dt,ft,mt,bt,kt,gt={}.hasOwnProperty,yt=function(e,t){function n(){this.constructor=e}for(var i in t)gt.call(t,i)&&(e[i]=t[i]);return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},vt=[].indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(t in this&&this[t]===e)return t;return-1},wt=[].slice;Error.stackTraceLimit=1/0,V=require(\"./scope\").Scope,ft=require(\"./lexer\"),$=ft.RESERVED,B=ft.STRICT_PROSCRIBED,mt=require(\"./helpers\"),Q=mt.compact,it=mt.flatten,nt=mt.extend,at=mt.merge,et=mt.del,lt=mt.starts,tt=mt.ends,rt=mt.last,ht=mt.some,Z=mt.addLocationDataFn,ot=mt.locationDataToString,ut=mt.throwSyntaxError,e.extend=nt,e.addLocationDataFn=Z,J=function(){return!0},S=function(){return!1},G=function(){return this},D=function(){return this.negated=!this.negated,this},e.CodeFragment=l=function(){function e(e,t){var n;this.code=\"\"+t,this.locationData=null!=e?e.locationData:void 0,this.type=(null!=e?null!=(n=e.constructor)?n.name:void 0:void 0)||\"unknown\"}return e.prototype.toString=function(){return\"\"+this.code+(this.locationData?\": \"+ot(this.locationData):\"\")},e}(),st=function(e){var t;return function(){var n,i,s;for(s=[],n=0,i=e.length;i>n;n++)t=e[n],s.push(t.code);return s}().join(\"\")},e.Base=s=function(){function e(){}return e.prototype.compile=function(e,t){return st(this.compileToFragments(e,t))},e.prototype.compileToFragments=function(e,t){var n;return e=nt({},e),t&&(e.level=t),n=this.unfoldSoak(e)||this,n.tab=e.indent,e.level!==N&&n.isStatement(e)?n.compileClosure(e):n.compileNode(e)},e.prototype.compileClosure=function(e){var t;return(t=this.jumps())&&t.error(\"cannot use a pure statement in an expression\"),e.sharedScope=!0,c.wrap(this).compileNode(e)},e.prototype.cache=function(e,t,n){var s,r;return this.isComplex()?(s=new x(n||e.scope.freeVariable(\"ref\")),r=new i(s,this),t?[r.compileToFragments(e,t),[this.makeCode(s.value)]]:[r,s]):(s=t?this.compileToFragments(e,t):this,[s,s])},e.prototype.cacheToCodeFragments=function(e){return[st(e[0]),st(e[1])]},e.prototype.makeReturn=function(e){var t;return t=this.unwrapAll(),e?new o(new x(\"\"+e+\".push\"),[t]):new j(t)},e.prototype.contains=function(e){var t;return t=void 0,this.traverseChildren(!1,function(n){return e(n)?(t=n,!1):void 0}),t},e.prototype.lastNonComment=function(e){var t;for(t=e.length;t--;)if(!(e[t]instanceof u))return e[t];return null},e.prototype.toString=function(e,t){var n;return null==e&&(e=\"\"),null==t&&(t=this.constructor.name),n=\"\\n\"+e+t,this.soak&&(n+=\"?\"),this.eachChild(function(t){return n+=t.toString(e+H)}),n},e.prototype.eachChild=function(e){var t,n,i,s,r,o,a,c;if(!this.children)return this;for(a=this.children,i=0,r=a.length;r>i;i++)if(t=a[i],this[t])for(c=it([this[t]]),s=0,o=c.length;o>s;s++)if(n=c[s],e(n)===!1)return this;return this},e.prototype.traverseChildren=function(e,t){return this.eachChild(function(n){var i;return i=t(n),i!==!1?n.traverseChildren(e,t):void 0})},e.prototype.invert=function(){return new A(\"!\",this)},e.prototype.unwrapAll=function(){var e;for(e=this;e!==(e=e.unwrap()););return e},e.prototype.children=[],e.prototype.isStatement=S,e.prototype.jumps=S,e.prototype.isComplex=J,e.prototype.isChainable=S,e.prototype.isAssignable=S,e.prototype.unwrap=G,e.prototype.unfoldSoak=S,e.prototype.assigns=S,e.prototype.updateLocationDataIfMissing=function(e){return this.locationData||(this.locationData=e),this.eachChild(function(t){return t.updateLocationDataIfMissing(e)})},e.prototype.error=function(e){return ut(e,this.locationData)},e.prototype.makeCode=function(e){return new l(this,e)},e.prototype.wrapInBraces=function(e){return[].concat(this.makeCode(\"(\"),e,this.makeCode(\")\"))},e.prototype.joinFragmentArrays=function(e,t){var n,i,s,r,o;for(n=[],s=r=0,o=e.length;o>r;s=++r)i=e[s],s&&n.push(this.makeCode(t)),n=n.concat(i);return n},e}(),e.Block=r=function(e){function t(e){this.expressions=Q(it(e||[]))}return yt(t,e),t.prototype.children=[\"expressions\"],t.prototype.push=function(e){return this.expressions.push(e),this},t.prototype.pop=function(){return this.expressions.pop()},t.prototype.unshift=function(e){return this.expressions.unshift(e),this},t.prototype.unwrap=function(){return 1===this.expressions.length?this.expressions[0]:this},t.prototype.isEmpty=function(){return!this.expressions.length},t.prototype.isStatement=function(e){var t,n,i,s;for(s=this.expressions,n=0,i=s.length;i>n;n++)if(t=s[n],t.isStatement(e))return!0;return!1},t.prototype.jumps=function(e){var t,n,i,s;for(s=this.expressions,n=0,i=s.length;i>n;n++)if(t=s[n],t.jumps(e))return t},t.prototype.makeReturn=function(e){var t,n;for(n=this.expressions.length;n--;)if(t=this.expressions[n],!(t instanceof u)){this.expressions[n]=t.makeReturn(e),t instanceof j&&!t.expression&&this.expressions.splice(n,1);break}return this},t.prototype.compileToFragments=function(e,n){return null==e&&(e={}),e.scope?t.__super__.compileToFragments.call(this,e,n):this.compileRoot(e)},t.prototype.compileNode=function(e){var n,i,s,r,o,a,c,h,l;for(this.tab=e.indent,a=e.level===N,i=[],l=this.expressions,r=c=0,h=l.length;h>c;r=++c)o=l[r],o=o.unwrapAll(),o=o.unfoldSoak(e)||o,o instanceof t?i.push(o.compileNode(e)):a?(o.front=!0,s=o.compileToFragments(e),o.isStatement(e)||(s.unshift(this.makeCode(\"\"+this.tab)),s.push(this.makeCode(\";\"))),i.push(s)):i.push(o.compileToFragments(e,C));return a?this.spaced?[].concat(this.joinFragmentArrays(i,\"\\n\\n\"),this.makeCode(\"\\n\")):this.joinFragmentArrays(i,\"\\n\"):(n=i.length?this.joinFragmentArrays(i,\", \"):[this.makeCode(\"void 0\")],i.length>1&&e.level>=C?this.wrapInBraces(n):n)},t.prototype.compileRoot=function(e){var t,n,i,s,r,o,a,c,h,l;for(e.indent=e.bare?\"\":H,e.level=N,this.spaced=!0,e.scope=new V(null,this,null),l=e.locals||[],c=0,h=l.length;h>c;c++)s=l[c],e.scope.parameter(s);return r=[],e.bare||(o=function(){var e,n,s,r;for(s=this.expressions,r=[],i=e=0,n=s.length;n>e&&(t=s[i],t.unwrap()instanceof u);i=++e)r.push(t);return r}.call(this),a=this.expressions.slice(o.length),this.expressions=o,o.length&&(r=this.compileNode(at(e,{indent:\"\"})),r.push(this.makeCode(\"\\n\"))),this.expressions=a),n=this.compileWithDeclarations(e),e.bare?n:[].concat(r,this.makeCode(\"(function() {\\n\"),n,this.makeCode(\"\\n}).call(this);\\n\"))},t.prototype.compileWithDeclarations=function(e){var t,n,i,s,r,o,a,c,h,l,p,d,f,m;for(s=[],o=[],d=this.expressions,r=l=0,p=d.length;p>l&&(i=d[r],i=i.unwrap(),i instanceof u||i instanceof x);r=++l);return e=at(e,{level:N}),r&&(a=this.expressions.splice(r,9e9),f=[this.spaced,!1],h=f[0],this.spaced=f[1],m=[this.compileNode(e),h],s=m[0],this.spaced=m[1],this.expressions=a),o=this.compileNode(e),c=e.scope,c.expressions===this&&(n=e.scope.hasDeclarations(),t=c.hasAssignments,n||t?(r&&s.push(this.makeCode(\"\\n\")),s.push(this.makeCode(\"\"+this.tab+\"var \")),n&&s.push(this.makeCode(c.declaredVariables().join(\", \"))),t&&(n&&s.push(this.makeCode(\",\\n\"+(this.tab+H))),s.push(this.makeCode(c.assignedVariables().join(\",\\n\"+(this.tab+H))))),s.push(this.makeCode(\";\\n\"+(this.spaced?\"\\n\":\"\")))):s.length&&o.length&&s.push(this.makeCode(\"\\n\"))),s.concat(o)},t.wrap=function(e){return 1===e.length&&e[0]instanceof t?e[0]:new t(e)},t}(s),e.Literal=x=function(e){function t(e){this.value=e}return yt(t,e),t.prototype.makeReturn=function(){return this.isStatement()?this:t.__super__.makeReturn.apply(this,arguments)},t.prototype.isAssignable=function(){return m.test(this.value)},t.prototype.isStatement=function(){var e;return\"break\"===(e=this.value)||\"continue\"===e||\"debugger\"===e},t.prototype.isComplex=S,t.prototype.assigns=function(e){return e===this.value},t.prototype.jumps=function(e){return\"break\"!==this.value||(null!=e?e.loop:void 0)||(null!=e?e.block:void 0)?\"continue\"!==this.value||(null!=e?e.loop:void 0)?void 0:this:this},t.prototype.compileNode=function(e){var t,n,i;return n=\"this\"===this.value?(null!=(i=e.scope.method)?i.bound:void 0)?e.scope.method.context:this.value:this.value.reserved?'\"'+this.value+'\"':this.value,t=this.isStatement()?\"\"+this.tab+n+\";\":n,[this.makeCode(t)]},t.prototype.toString=function(){return' \"'+this.value+'\"'},t}(s),e.Undefined=function(e){function t(){return bt=t.__super__.constructor.apply(this,arguments)}return yt(t,e),t.prototype.isAssignable=S,t.prototype.isComplex=S,t.prototype.compileNode=function(e){return[this.makeCode(e.level>=w?\"(void 0)\":\"void 0\")]},t}(s),e.Null=function(e){function t(){return kt=t.__super__.constructor.apply(this,arguments)}return yt(t,e),t.prototype.isAssignable=S,t.prototype.isComplex=S,t.prototype.compileNode=function(){return[this.makeCode(\"null\")]},t}(s),e.Bool=function(e){function t(e){this.val=e}return yt(t,e),t.prototype.isAssignable=S,t.prototype.isComplex=S,t.prototype.compileNode=function(){return[this.makeCode(this.val)]},t}(s),e.Return=j=function(e){function t(e){e&&!e.unwrap().isUndefined&&(this.expression=e)}return yt(t,e),t.prototype.children=[\"expression\"],t.prototype.isStatement=J,t.prototype.makeReturn=G,t.prototype.jumps=G,t.prototype.compileToFragments=function(e,n){var i,s;return i=null!=(s=this.expression)?s.makeReturn():void 0,!i||i instanceof t?t.__super__.compileToFragments.call(this,e,n):i.compileToFragments(e,n)},t.prototype.compileNode=function(e){var t;return t=[],t.push(this.makeCode(this.tab+(\"return\"+(this.expression?\" \":\"\")))),this.expression&&(t=t.concat(this.expression.compileToFragments(e,L))),t.push(this.makeCode(\";\")),t},t}(s),e.Value=K=function(e){function t(e,n,i){return!n&&e instanceof t?e:(this.base=e,this.properties=n||[],i&&(this[i]=!0),this)}return yt(t,e),t.prototype.children=[\"base\",\"properties\"],t.prototype.add=function(e){return this.properties=this.properties.concat(e),this},t.prototype.hasProperties=function(){return!!this.properties.length},t.prototype.isArray=function(){return!this.properties.length&&this.base instanceof n},t.prototype.isComplex=function(){return this.hasProperties()||this.base.isComplex()},t.prototype.isAssignable=function(){return this.hasProperties()||this.base.isAssignable()},t.prototype.isSimpleNumber=function(){return this.base instanceof x&&M.test(this.base.value)},t.prototype.isString=function(){return this.base instanceof x&&k.test(this.base.value)},t.prototype.isAtomic=function(){var e,t,n,i;for(i=this.properties.concat(this.base),t=0,n=i.length;n>t;t++)if(e=i[t],e.soak||e instanceof o)return!1;return!0},t.prototype.isStatement=function(e){return!this.properties.length&&this.base.isStatement(e)},t.prototype.assigns=function(e){return!this.properties.length&&this.base.assigns(e)},t.prototype.jumps=function(e){return!this.properties.length&&this.base.jumps(e)},t.prototype.isObject=function(e){return this.properties.length?!1:this.base instanceof R&&(!e||this.base.generated)},t.prototype.isSplice=function(){return rt(this.properties)instanceof P},t.prototype.unwrap=function(){return this.properties.length?this:this.base},t.prototype.cacheReference=function(e){var n,s,r,o;return r=rt(this.properties),this.properties.length<2&&!this.base.isComplex()&&!(null!=r?r.isComplex():void 0)?[this,this]:(n=new t(this.base,this.properties.slice(0,-1)),n.isComplex()&&(s=new x(e.scope.freeVariable(\"base\")),n=new t(new _(new i(s,n)))),r?(r.isComplex()&&(o=new x(e.scope.freeVariable(\"name\")),r=new v(new i(o,r.index)),o=new v(o)),[n.add(r),new t(s||n.base,[o||r])]):[n,s])},t.prototype.compileNode=function(e){var t,n,i,s,r;for(this.base.front=this.front,i=this.properties,t=this.base.compileToFragments(e,i.length?w:null),(this.base instanceof _||i.length)&&M.test(st(t))&&t.push(this.makeCode(\".\")),s=0,r=i.length;r>s;s++)n=i[s],t.push.apply(t,n.compileToFragments(e));return t},t.prototype.unfoldSoak=function(e){var n=this;return null!=this.unfoldedSoak?this.unfoldedSoak:this.unfoldedSoak=function(){var s,r,o,a,c,h,l,u,d,f;if(o=n.base.unfoldSoak(e))return(d=o.body.properties).push.apply(d,n.properties),o;for(f=n.properties,r=l=0,u=f.length;u>l;r=++l)if(a=f[r],a.soak)return a.soak=!1,s=new t(n.base,n.properties.slice(0,r)),h=new t(n.base,n.properties.slice(r)),s.isComplex()&&(c=new x(e.scope.freeVariable(\"ref\")),s=new _(new i(c,s)),h.base=c),new g(new p(s),h,{soak:!0});return!1}()},t}(s),e.Comment=u=function(e){function t(e){this.comment=e}return yt(t,e),t.prototype.isStatement=J,t.prototype.makeReturn=G,t.prototype.compileNode=function(e,t){var n;return n=\"/*\"+ct(this.comment,this.tab)+(vt.call(this.comment,\"\\n\")>=0?\"\\n\"+this.tab:\"\")+\"*/\\n\",(t||e.level)===N&&(n=e.indent+n),[this.makeCode(n)]},t}(s),e.Call=o=function(e){function n(e,t,n){this.args=null!=t?t:[],this.soak=n,this.isNew=!1,this.isSuper=\"super\"===e,this.variable=this.isSuper?null:e}return yt(n,e),n.prototype.children=[\"variable\",\"args\"],n.prototype.newInstance=function(){var e,t;return e=(null!=(t=this.variable)?t.base:void 0)||this.variable,e instanceof n&&!e.isNew?e.newInstance():this.isNew=!0,this},n.prototype.superReference=function(e){var n,i;return i=e.scope.namedMethod(),(null!=i?i.klass:void 0)?(n=[new t(new x(\"__super__\"))],i[\"static\"]&&n.push(new t(new x(\"constructor\"))),n.push(new t(new x(i.name))),new K(new x(i.klass),n).compile(e)):(null!=i?i.ctor:void 0)?\"\"+i.name+\".__super__.constructor\":this.error(\"cannot call super outside of an instance method.\")},n.prototype.superThis=function(e){var t;return t=e.scope.method,t&&!t.klass&&t.context||\"this\"},n.prototype.unfoldSoak=function(e){var t,i,s,r,o,a,c,h,l;if(this.soak){if(this.variable){if(i=pt(e,this,\"variable\"))return i;h=new K(this.variable).cacheReference(e),s=h[0],o=h[1]}else s=new x(this.superReference(e)),o=new K(s);return o=new n(o,this.args),o.isNew=this.isNew,s=new x(\"typeof \"+s.compile(e)+' === \"function\"'),new g(s,new K(o),{soak:!0})}for(t=this,r=[];;)if(t.variable instanceof n)r.push(t),t=t.variable;else{if(!(t.variable instanceof K))break;if(r.push(t),!((t=t.variable.base)instanceof n))break}for(l=r.reverse(),a=0,c=l.length;c>a;a++)t=l[a],i&&(t.variable instanceof n?t.variable=i:t.variable.base=i),i=pt(e,t,\"variable\");return i},n.prototype.compileNode=function(e){var t,n,i,s,r,o,a,c,h,l;if(null!=(h=this.variable)&&(h.front=this.front),s=U.compileSplattedArray(e,this.args,!0),s.length)return this.compileSplat(e,s);for(i=[],l=this.args,n=a=0,c=l.length;c>a;n=++a)t=l[n],n&&i.push(this.makeCode(\", \")),i.push.apply(i,t.compileToFragments(e,C));return r=[],this.isSuper?(o=this.superReference(e)+(\".call(\"+this.superThis(e)),i.length&&(o+=\", \"),r.push(this.makeCode(o))):(this.isNew&&r.push(this.makeCode(\"new \")),r.push.apply(r,this.variable.compileToFragments(e,w)),r.push(this.makeCode(\"(\"))),r.push.apply(r,i),r.push(this.makeCode(\")\")),r},n.prototype.compileSplat=function(e,t){var n,i,s,r,o,a;return this.isSuper?[].concat(this.makeCode(\"\"+this.superReference(e)+\".apply(\"+this.superThis(e)+\", \"),t,this.makeCode(\")\")):this.isNew?(r=this.tab+H,[].concat(this.makeCode(\"(function(func, args, ctor) {\\n\"+r+\"ctor.prototype = func.prototype;\\n\"+r+\"var child = new ctor, result = func.apply(child, args);\\n\"+r+\"return Object(result) === result ? result : child;\\n\"+this.tab+\"})(\"),this.variable.compileToFragments(e,C),this.makeCode(\", \"),t,this.makeCode(\", function(){})\"))):(n=[],i=new K(this.variable),(o=i.properties.pop())&&i.isComplex()?(a=e.scope.freeVariable(\"ref\"),n=n.concat(this.makeCode(\"(\"+a+\" = \"),i.compileToFragments(e,C),this.makeCode(\")\"),o.compileToFragments(e))):(s=i.compileToFragments(e,w),M.test(st(s))&&(s=this.wrapInBraces(s)),o?(a=st(s),s.push.apply(s,o.compileToFragments(e))):a=\"null\",n=n.concat(s)),n=n.concat(this.makeCode(\".apply(\"+a+\", \"),t,this.makeCode(\")\")))},n}(s),e.Extends=d=function(e){function t(e,t){this.child=e,this.parent=t}return yt(t,e),t.prototype.children=[\"child\",\"parent\"],t.prototype.compileToFragments=function(e){return new o(new K(new x(dt(\"extends\"))),[this.child,this.parent]).compileToFragments(e)},t}(s),e.Access=t=function(e){function t(e,t){this.name=e,this.name.asKey=!0,this.soak=\"soak\"===t}return yt(t,e),t.prototype.children=[\"name\"],t.prototype.compileToFragments=function(e){var t;return t=this.name.compileToFragments(e),m.test(st(t))?t.unshift(this.makeCode(\".\")):(t.unshift(this.makeCode(\"[\")),t.push(this.makeCode(\"]\"))),t},t.prototype.isComplex=S,t}(s),e.Index=v=function(e){function t(e){this.index=e}return yt(t,e),t.prototype.children=[\"index\"],t.prototype.compileToFragments=function(e){return[].concat(this.makeCode(\"[\"),this.index.compileToFragments(e,L),this.makeCode(\"]\"))},t.prototype.isComplex=function(){return this.index.isComplex()},t}(s),e.Range=O=function(e){function t(e,t,n){this.from=e,this.to=t,this.exclusive=\"exclusive\"===n,this.equals=this.exclusive?\"\":\"=\"}return yt(t,e),t.prototype.children=[\"from\",\"to\"],t.prototype.compileVariables=function(e){var t,n,i,s,r;return e=at(e,{top:!0}),n=this.cacheToCodeFragments(this.from.cache(e,C)),this.fromC=n[0],this.fromVar=n[1],i=this.cacheToCodeFragments(this.to.cache(e,C)),this.toC=i[0],this.toVar=i[1],(t=et(e,\"step\"))&&(s=this.cacheToCodeFragments(t.cache(e,C)),this.step=s[0],this.stepVar=s[1]),r=[this.fromVar.match(M),this.toVar.match(M)],this.fromNum=r[0],this.toNum=r[1],this.stepVar?this.stepNum=this.stepVar.match(M):void 0},t.prototype.compileNode=function(e){var t,n,i,s,r,o,a,c,h,l,u,p,d,f;return this.fromVar||this.compileVariables(e),e.index?(a=this.fromNum&&this.toNum,r=et(e,\"index\"),o=et(e,\"name\"),h=o&&o!==r,p=\"\"+r+\" = \"+this.fromC,this.toC!==this.toVar&&(p+=\", \"+this.toC),this.step!==this.stepVar&&(p+=\", \"+this.step),d=[\"\"+r+\" <\"+this.equals,\"\"+r+\" >\"+this.equals],c=d[0],s=d[1],n=this.stepNum?+this.stepNum>0?\"\"+c+\" \"+this.toVar:\"\"+s+\" \"+this.toVar:a?(f=[+this.fromNum,+this.toNum],i=f[0],u=f[1],f,u>=i?\"\"+c+\" \"+u:\"\"+s+\" \"+u):(t=this.stepVar?\"\"+this.stepVar+\" > 0\":\"\"+this.fromVar+\" <= \"+this.toVar,\"\"+t+\" ? \"+c+\" \"+this.toVar+\" : \"+s+\" \"+this.toVar),l=this.stepVar?\"\"+r+\" += \"+this.stepVar:a?h?u>=i?\"++\"+r:\"--\"+r:u>=i?\"\"+r+\"++\":\"\"+r+\"--\":h?\"\"+t+\" ? ++\"+r+\" : --\"+r:\"\"+t+\" ? \"+r+\"++ : \"+r+\"--\",h&&(p=\"\"+o+\" = \"+p),h&&(l=\"\"+o+\" = \"+l),[this.makeCode(\"\"+p+\"; \"+n+\"; \"+l)]):this.compileArray(e)},t.prototype.compileArray=function(e){var t,n,i,s,r,o,a,c,h,l,u,p,d;return this.fromNum&&this.toNum&&Math.abs(this.fromNum-this.toNum)<=20?(h=function(){d=[];for(var e=p=+this.fromNum,t=+this.toNum;t>=p?t>=e:e>=t;t>=p?e++:e--)d.push(e);return d}.apply(this),this.exclusive&&h.pop(),[this.makeCode(\"[\"+h.join(\", \")+\"]\")]):(o=this.tab+H,r=e.scope.freeVariable(\"i\"),l=e.scope.freeVariable(\"results\"),c=\"\\n\"+o+l+\" = [];\",this.fromNum&&this.toNum?(e.index=r,n=st(this.compileNode(e))):(u=\"\"+r+\" = \"+this.fromC+(this.toC!==this.toVar?\", \"+this.toC:\"\"),i=\"\"+this.fromVar+\" <= \"+this.toVar,n=\"var \"+u+\"; \"+i+\" ? \"+r+\" <\"+this.equals+\" \"+this.toVar+\" : \"+r+\" >\"+this.equals+\" \"+this.toVar+\"; \"+i+\" ? \"+r+\"++ : \"+r+\"--\"),a=\"{ \"+l+\".push(\"+r+\"); }\\n\"+o+\"return \"+l+\";\\n\"+e.indent,s=function(e){return null!=e?e.contains(function(e){return e instanceof x&&\"arguments\"===e.value&&!e.asKey}):void 0},(s(this.from)||s(this.to))&&(t=\", arguments\"),[this.makeCode(\"(function() {\"+c+\"\\n\"+o+\"for (\"+n+\")\"+a+\"}).apply(this\"+(null!=t?t:\"\")+\")\")])},t}(s),e.Slice=P=function(e){function t(e){this.range=e,t.__super__.constructor.call(this)}return yt(t,e),t.prototype.children=[\"range\"],t.prototype.compileNode=function(e){var t,n,i,s,r,o,a;return a=this.range,r=a.to,i=a.from,s=i&&i.compileToFragments(e,L)||[this.makeCode(\"0\")],r&&(t=r.compileToFragments(e,L),n=st(t),(this.range.exclusive||-1!==+n)&&(o=\", \"+(this.range.exclusive?n:M.test(n)?\"\"+(+n+1):(t=r.compileToFragments(e,w),\"+\"+st(t)+\" + 1 || 9e9\")))),[this.makeCode(\".slice(\"+st(s)+(o||\"\")+\")\")]},t}(s),e.Obj=R=function(e){function t(e,t){this.generated=null!=t?t:!1,this.objects=this.properties=e||[]}return yt(t,e),t.prototype.children=[\"properties\"],t.prototype.compileNode=function(e){var t,n,s,r,o,a,c,h,l,p,d,f,m;if(l=this.properties,!l.length)return[this.makeCode(this.front?\"({})\":\"{}\")];if(this.generated)for(p=0,f=l.length;f>p;p++)c=l[p],c instanceof K&&c.error(\"cannot have an implicit value in an implicit object\");for(s=e.indent+=H,a=this.lastNonComment(this.properties),t=[],n=d=0,m=l.length;m>d;n=++d)h=l[n],o=n===l.length-1?\"\":h===a||h instanceof u?\"\\n\":\",\\n\",r=h instanceof u?\"\":s,h instanceof i&&h.variable instanceof K&&h.variable.hasProperties()&&h.variable.error(\"Invalid object key\"),h instanceof K&&h[\"this\"]&&(h=new i(h.properties[0].name,h,\"object\")),h instanceof u||(h instanceof i||(h=new i(h,h,\"object\")),(h.variable.base||h.variable).asKey=!0),r&&t.push(this.makeCode(r)),t.push.apply(t,h.compileToFragments(e,N)),o&&t.push(this.makeCode(o));return t.unshift(this.makeCode(\"{\"+(l.length&&\"\\n\"))),t.push(this.makeCode(\"\"+(l.length&&\"\\n\"+this.tab)+\"}\")),this.front?this.wrapInBraces(t):t},t.prototype.assigns=function(e){var t,n,i,s;for(s=this.properties,n=0,i=s.length;i>n;n++)if(t=s[n],t.assigns(e))return!0;return!1},t}(s),e.Arr=n=function(e){function t(e){this.objects=e||[]}return yt(t,e),t.prototype.children=[\"objects\"],t.prototype.compileNode=function(e){var t,n,i,s,r,o,a;if(!this.objects.length)return[this.makeCode(\"[]\")];if(e.indent+=H,t=U.compileSplattedArray(e,this.objects),t.length)return t;for(t=[],n=function(){var t,n,i,s;for(i=this.objects,s=[],t=0,n=i.length;n>t;t++)r=i[t],s.push(r.compileToFragments(e,C));return s}.call(this),s=o=0,a=n.length;a>o;s=++o)i=n[s],s&&t.push(this.makeCode(\", \")),t.push.apply(t,i);return st(t).indexOf(\"\\n\")>=0?(t.unshift(this.makeCode(\"[\\n\"+e.indent)),t.push(this.makeCode(\"\\n\"+this.tab+\"]\"))):(t.unshift(this.makeCode(\"[\")),t.push(this.makeCode(\"]\"))),t},t.prototype.assigns=function(e){var t,n,i,s;for(s=this.objects,n=0,i=s.length;i>n;n++)if(t=s[n],t.assigns(e))return!0;return!1},t}(s),e.Class=a=function(e){function n(e,t,n){this.variable=e,this.parent=t,this.body=null!=n?n:new r,this.boundFuncs=[],this.body.classBody=!0}return yt(n,e),n.prototype.children=[\"variable\",\"parent\",\"body\"],n.prototype.determineName=function(){var e,n;return this.variable?(e=(n=rt(this.variable.properties))?n instanceof t&&n.name.value:this.variable.base.value,vt.call(B,e)>=0&&this.variable.error(\"class variable name may not be \"+e),e&&(e=m.test(e)&&e)):null},n.prototype.setContext=function(e){return this.body.traverseChildren(!1,function(t){return t.classBody?!1:t instanceof x&&\"this\"===t.value?t.value=e:t instanceof h&&(t.klass=e,t.bound)?t.context=e:void 0})},n.prototype.addBoundFunctions=function(e){var n,i,s,r,o;for(o=this.boundFuncs,s=0,r=o.length;r>s;s++)n=o[s],i=new K(new x(\"this\"),[new t(n)]).compile(e),this.ctor.body.unshift(new x(\"\"+i+\" = \"+dt(\"bind\")+\"(\"+i+\", this)\"))},n.prototype.addProperties=function(e,n,s){var r,o,a,c,l;return l=e.base.properties.slice(0),a=function(){var e;for(e=[];r=l.shift();)r instanceof i&&(o=r.variable.base,delete r.context,c=r.value,\"constructor\"===o.value?(this.ctor&&r.error(\"cannot define more than one constructor in a class\"),c.bound&&r.error(\"cannot define a constructor as a bound function\"),c instanceof h?r=this.ctor=c:(this.externalCtor=s.scope.freeVariable(\"class\"),r=new i(new x(this.externalCtor),c))):r.variable[\"this\"]?(c[\"static\"]=!0,c.bound&&(c.context=n)):(r.variable=new K(new x(n),[new t(new x(\"prototype\")),new t(o)]),c instanceof h&&c.bound&&(this.boundFuncs.push(o),c.bound=!1))),e.push(r);return e}.call(this),Q(a)},n.prototype.walkBody=function(e,t){var i=this;return this.traverseChildren(!1,function(s){var o,a,c,h,l,u,p;if(o=!0,s instanceof n)return!1;if(s instanceof r){for(p=a=s.expressions,c=l=0,u=p.length;u>l;c=++l)h=p[c],h instanceof K&&h.isObject(!0)&&(o=!1,a[c]=i.addProperties(h,e,t));s.expressions=a=it(a)}return o&&!(s instanceof n)})},n.prototype.hoistDirectivePrologue=function(){var e,t,n;for(t=0,e=this.body.expressions;(n=e[t])&&n instanceof u||n instanceof K&&n.isString();)++t;return this.directives=e.splice(0,t)},n.prototype.ensureConstructor=function(e,t){var n,s,r;return n=!this.ctor,this.ctor||(this.ctor=new h),this.ctor.ctor=this.ctor.name=e,this.ctor.klass=null,this.ctor.noReturn=!0,n?(this.parent&&(r=new x(\"\"+e+\".__super__.constructor.apply(this, arguments)\")),this.externalCtor&&(r=new x(\"\"+this.externalCtor+\".apply(this, arguments)\")),r&&(s=new x(t.scope.freeVariable(\"ref\")),this.ctor.body.unshift(new i(s,r))),this.addBoundFunctions(t),r&&(this.ctor.body.push(s),this.ctor.body.makeReturn()),this.body.expressions.unshift(this.ctor)):this.addBoundFunctions(t)},n.prototype.compileNode=function(e){var t,n,s,r,o,a,l;return n=this.determineName(),o=n||\"_Class\",o.reserved&&(o=\"_\"+o),r=new x(o),this.hoistDirectivePrologue(),this.setContext(o),this.walkBody(o,e),this.ensureConstructor(o,e),this.body.spaced=!0,this.ctor instanceof h||this.body.expressions.unshift(this.ctor),this.body.expressions.push(r),(l=this.body.expressions).unshift.apply(l,this.directives),t=c.wrap(this.body),this.parent&&(this.superClass=new x(e.scope.freeVariable(\"super\",!1)),this.body.expressions.unshift(new d(r,this.superClass)),t.args.push(this.parent),a=t.variable.params||t.variable.base.params,a.push(new I(this.superClass))),s=new _(t,!0),this.variable&&(s=new i(this.variable,s)),s.compileToFragments(e)},n}(s),e.Assign=i=function(e){function n(e,t,n,i){var s,r,o;this.variable=e,this.value=t,this.context=n,this.param=i&&i.param,this.subpattern=i&&i.subpattern,o=r=this.variable.unwrapAll().value,s=vt.call(B,o)>=0,s&&\"object\"!==this.context&&this.variable.error('variable name may not be \"'+r+'\"')}return yt(n,e),n.prototype.children=[\"variable\",\"value\"],n.prototype.isStatement=function(e){return(null!=e?e.level:void 0)===N&&null!=this.context&&vt.call(this.context,\"?\")>=0},n.prototype.assigns=function(e){return this[\"object\"===this.context?\"value\":\"variable\"].assigns(e)},n.prototype.unfoldSoak=function(e){return pt(e,this,\"variable\")},n.prototype.compileNode=function(e){var t,n,i,s,r,o,a,c,l,u,p;if(i=this.variable instanceof K){if(this.variable.isArray()||this.variable.isObject())return this.compilePatternMatch(e);if(this.variable.isSplice())return this.compileSplice(e);if(\"||=\"===(c=this.context)||\"&&=\"===c||\"?=\"===c)return this.compileConditional(e)}return n=this.variable.compileToFragments(e,C),r=st(n),this.context||(a=this.variable.unwrapAll(),a.isAssignable()||this.variable.error('\"'+this.variable.compile(e)+'\" cannot be assigned'),(\"function\"==typeof a.hasProperties?a.hasProperties():void 0)||(this.param?e.scope.add(r,\"var\"):e.scope.find(r))),this.value instanceof h&&(s=E.exec(r))&&(s[1]&&(this.value.klass=s[1]),this.value.name=null!=(l=null!=(u=null!=(p=s[2])?p:s[3])?u:s[4])?l:s[5]),o=this.value.compileToFragments(e,C),\"object\"===this.context?n.concat(this.makeCode(\": \"),o):(t=n.concat(this.makeCode(\" \"+(this.context||\"=\")+\" \"),o),e.level<=C?t:this.wrapInBraces(t))},n.prototype.compilePatternMatch=function(e){var i,s,r,o,a,c,h,l,u,p,d,f,b,k,g,y,w,T,L,E,D,S,R,A,I,O,j,M;if(y=e.level===N,T=this.value,d=this.variable.base.objects,!(f=d.length))return r=T.compileToFragments(e),e.level>=F?this.wrapInBraces(r):r;if(h=this.variable.isObject(),y&&1===f&&!((p=d[0])instanceof U))return p instanceof n?(R=p,A=R.variable,c=A.base,p=R.value):c=h?p[\"this\"]?p.properties[0].name:p:new x(0),i=m.test(c.unwrap().value||0),T=new K(T),T.properties.push(new(i?t:v)(c)),I=p.unwrap().value,vt.call($,I)>=0&&p.error(\"assignment to a reserved word: \"+p.compile(e)),new n(p,T,null,{param:this.param}).compileToFragments(e,N);for(L=T.compileToFragments(e,C),E=st(L),s=[],g=!1,(!m.test(E)||this.variable.assigns(E))&&(s.push([this.makeCode(\"\"+(b=e.scope.freeVariable(\"ref\"))+\" = \")].concat(wt.call(L))),L=[this.makeCode(b)],E=b),a=D=0,S=d.length;S>D;a=++D)p=d[a],c=a,h&&(p instanceof n?(O=p,j=O.variable,c=j.base,p=O.value):p.base instanceof _?(M=new K(p.unwrapAll()).cacheReference(e),p=M[0],c=M[1]):c=p[\"this\"]?p.properties[0].name:p),!g&&p instanceof U?(u=p.name.unwrap().value,p=p.unwrap(),w=\"\"+f+\" <= \"+E+\".length ? \"+dt(\"slice\")+\".call(\"+E+\", \"+a,(k=f-a-1)?(l=e.scope.freeVariable(\"i\"),w+=\", \"+l+\" = \"+E+\".length - \"+k+\") : (\"+l+\" = \"+a+\", [])\"):w+=\") : []\",w=new x(w),g=\"\"+l+\"++\"):(u=p.unwrap().value,p instanceof U&&p.error(\"multiple splats are disallowed in an assignment\"),\"number\"==typeof c?(c=new x(g||c),i=!1):i=h&&m.test(c.unwrap().value||0),w=new K(new x(E),[new(i?t:v)(c)])),null!=u&&vt.call($,u)>=0&&p.error(\"assignment to a reserved word: \"+p.compile(e)),s.push(new n(p,w,null,{param:this.param,subpattern:!0}).compileToFragments(e,C));\r\nreturn y||this.subpattern||s.push(L),o=this.joinFragmentArrays(s,\", \"),e.level<C?o:this.wrapInBraces(o)},n.prototype.compileConditional=function(e){var t,i,s;return s=this.variable.cacheReference(e),t=s[0],i=s[1],!t.properties.length&&t.base instanceof x&&\"this\"!==t.base.value&&!e.scope.check(t.base.value)&&this.variable.error('the variable \"'+t.base.value+\"\\\" can't be assigned with \"+this.context+\" because it has not been declared before\"),vt.call(this.context,\"?\")>=0&&(e.isExistentialEquals=!0),new A(this.context.slice(0,-1),t,new n(i,this.value,\"=\")).compileToFragments(e)},n.prototype.compileSplice=function(e){var t,n,i,s,r,o,a,c,h,l,u,p;return l=this.variable.properties.pop().range,i=l.from,a=l.to,n=l.exclusive,o=this.variable.compile(e),i?(u=this.cacheToCodeFragments(i.cache(e,F)),s=u[0],r=u[1]):s=r=\"0\",a?(null!=i?i.isSimpleNumber():void 0)&&a.isSimpleNumber()?(a=+a.compile(e)-+r,n||(a+=1)):(a=a.compile(e,w)+\" - \"+r,n||(a+=\" + 1\")):a=\"9e9\",p=this.value.cache(e,C),c=p[0],h=p[1],t=[].concat(this.makeCode(\"[].splice.apply(\"+o+\", [\"+s+\", \"+a+\"].concat(\"),c,this.makeCode(\")), \"),h),e.level>N?this.wrapInBraces(t):t},n}(s),e.Code=h=function(e){function t(e,t,n){this.params=e||[],this.body=t||new r,this.bound=\"boundfunc\"===n,this.bound&&(this.context=\"_this\")}return yt(t,e),t.prototype.children=[\"params\",\"body\"],t.prototype.isStatement=function(){return!!this.ctor},t.prototype.jumps=S,t.prototype.compileNode=function(e){var t,s,r,o,a,c,h,l,u,p,d,f,m,b,k,y,v,T,C,F,L,N,E,D,S,R,I,_,$;for(e.scope=new V(e.scope,this.body,this),e.scope.shared=et(e,\"sharedScope\"),e.indent+=H,delete e.bare,delete e.isExistentialEquals,u=[],r=[],this.eachParamName(function(t){return e.scope.check(t)?void 0:e.scope.parameter(t)}),S=this.params,k=0,C=S.length;C>k;k++)if(l=S[k],l.splat){for(R=this.params,y=0,F=R.length;F>y;y++)h=R[y].name,h[\"this\"]&&(h=h.properties[0].name),h.value&&e.scope.add(h.value,\"var\",!0);d=new i(new K(new n(function(){var t,n,i,s;for(i=this.params,s=[],t=0,n=i.length;n>t;t++)h=i[t],s.push(h.asReference(e));return s}.call(this))),new K(new x(\"arguments\")));break}for(I=this.params,v=0,L=I.length;L>v;v++)l=I[v],l.isComplex()?(m=p=l.asReference(e),l.value&&(m=new A(\"?\",p,l.value)),r.push(new i(new K(l.name),m,\"=\",{param:!0}))):(p=l,l.value&&(c=new x(p.name.value+\" == null\"),m=new i(new K(l.name),l.value,\"=\"),r.push(new g(c,m)))),d||u.push(p);for(b=this.body.isEmpty(),d&&r.unshift(d),r.length&&(_=this.body.expressions).unshift.apply(_,r),o=T=0,N=u.length;N>T;o=++T)h=u[o],u[o]=h.compileToFragments(e),e.scope.parameter(st(u[o]));for(f=[],this.eachParamName(function(e,t){return vt.call(f,e)>=0&&t.error(\"multiple parameters named '\"+e+\"'\"),f.push(e)}),b||this.noReturn||this.body.makeReturn(),this.bound&&((null!=($=e.scope.parent.method)?$.bound:void 0)?this.bound=this.context=e.scope.parent.method.context:this[\"static\"]||e.scope.parent.assign(\"_this\",\"this\")),a=e.indent,s=\"function\",this.ctor&&(s+=\" \"+this.name),s+=\"(\",t=[this.makeCode(s)],o=D=0,E=u.length;E>D;o=++D)h=u[o],o&&t.push(this.makeCode(\", \")),t.push.apply(t,h);return t.push(this.makeCode(\") {\")),this.body.isEmpty()||(t=t.concat(this.makeCode(\"\\n\"),this.body.compileWithDeclarations(e),this.makeCode(\"\\n\"+this.tab))),t.push(this.makeCode(\"}\")),this.ctor?[this.makeCode(this.tab)].concat(wt.call(t)):this.front||e.level>=w?this.wrapInBraces(t):t},t.prototype.eachParamName=function(e){var t,n,i,s,r;for(s=this.params,r=[],n=0,i=s.length;i>n;n++)t=s[n],r.push(t.eachName(e));return r},t.prototype.traverseChildren=function(e,n){return e?t.__super__.traverseChildren.call(this,e,n):void 0},t}(s),e.Param=I=function(e){function t(e,t,n){var i;this.name=e,this.value=t,this.splat=n,i=e=this.name.unwrapAll().value,vt.call(B,i)>=0&&this.name.error('parameter name \"'+e+'\" is not allowed')}return yt(t,e),t.prototype.children=[\"name\",\"value\"],t.prototype.compileToFragments=function(e){return this.name.compileToFragments(e,C)},t.prototype.asReference=function(e){var t;return this.reference?this.reference:(t=this.name,t[\"this\"]?(t=t.properties[0].name,t.value.reserved&&(t=new x(e.scope.freeVariable(t.value)))):t.isComplex()&&(t=new x(e.scope.freeVariable(\"arg\"))),t=new K(t),this.splat&&(t=new U(t)),this.reference=t)},t.prototype.isComplex=function(){return this.name.isComplex()},t.prototype.eachName=function(e,t){var n,s,r,o,a,c;if(null==t&&(t=this.name),n=function(t){var n;return n=t.properties[0].name,n.value.reserved?void 0:e(n.value,n)},t instanceof x)return e(t.value,t);if(t instanceof K)return n(t);for(c=t.objects,o=0,a=c.length;a>o;o++)r=c[o],r instanceof i?this.eachName(e,r.value.unwrap()):r instanceof U?(s=r.name.unwrap(),e(s.value,s)):r instanceof K?r.isArray()||r.isObject()?this.eachName(e,r.base):r[\"this\"]?n(r):e(r.base.value,r.base):r.error(\"illegal parameter \"+r.compile())},t}(s),e.Splat=U=function(e){function t(e){this.name=e.compile?e:new x(e)}return yt(t,e),t.prototype.children=[\"name\"],t.prototype.isAssignable=J,t.prototype.assigns=function(e){return this.name.assigns(e)},t.prototype.compileToFragments=function(e){return this.name.compileToFragments(e)},t.prototype.unwrap=function(){return this.name},t.compileSplattedArray=function(e,n,i){var s,r,o,a,c,h,l,u,p,d;for(l=-1;(u=n[++l])&&!(u instanceof t););if(l>=n.length)return[];if(1===n.length)return u=n[0],c=u.compileToFragments(e,C),i?c:[].concat(u.makeCode(\"\"+dt(\"slice\")+\".call(\"),c,u.makeCode(\")\"));for(s=n.slice(l),h=p=0,d=s.length;d>p;h=++p)u=s[h],o=u.compileToFragments(e,C),s[h]=u instanceof t?[].concat(u.makeCode(\"\"+dt(\"slice\")+\".call(\"),o,u.makeCode(\")\")):[].concat(u.makeCode(\"[\"),o,u.makeCode(\"]\"));return 0===l?(u=n[0],a=u.joinFragmentArrays(s.slice(1),\", \"),s[0].concat(u.makeCode(\".concat(\"),a,u.makeCode(\")\"))):(r=function(){var t,i,s,r;for(s=n.slice(0,l),r=[],t=0,i=s.length;i>t;t++)u=s[t],r.push(u.compileToFragments(e,C));return r}(),r=n[0].joinFragmentArrays(r,\", \"),a=n[l].joinFragmentArrays(s,\", \"),[].concat(n[0].makeCode(\"[\"),r,n[l].makeCode(\"].concat(\"),a,rt(n).makeCode(\")\")))},t}(s),e.While=z=function(e){function t(e,t){this.condition=(null!=t?t.invert:void 0)?e.invert():e,this.guard=null!=t?t.guard:void 0}return yt(t,e),t.prototype.children=[\"condition\",\"guard\",\"body\"],t.prototype.isStatement=J,t.prototype.makeReturn=function(e){return e?t.__super__.makeReturn.apply(this,arguments):(this.returns=!this.jumps({loop:!0}),this)},t.prototype.addBody=function(e){return this.body=e,this},t.prototype.jumps=function(){var e,t,n,i;if(e=this.body.expressions,!e.length)return!1;for(n=0,i=e.length;i>n;n++)if(t=e[n],t.jumps({loop:!0}))return t;return!1},t.prototype.compileNode=function(e){var t,n,i,s;return e.indent+=H,s=\"\",n=this.body,n.isEmpty()?n=this.makeCode(\"\"):(this.returns&&(n.makeReturn(i=e.scope.freeVariable(\"results\")),s=\"\"+this.tab+i+\" = [];\\n\"),this.guard&&(n.expressions.length>1?n.expressions.unshift(new g(new _(this.guard).invert(),new x(\"continue\"))):this.guard&&(n=r.wrap([new g(this.guard,n)]))),n=[].concat(this.makeCode(\"\\n\"),n.compileToFragments(e,N),this.makeCode(\"\\n\"+this.tab))),t=[].concat(this.makeCode(s+this.tab+\"while (\"),this.condition.compileToFragments(e,L),this.makeCode(\") {\"),n,this.makeCode(\"}\")),this.returns&&t.push(this.makeCode(\"\\n\"+this.tab+\"return \"+i+\";\")),t},t}(s),e.Op=A=function(e){function t(e,t,i,s){if(\"in\"===e)return new y(t,i);if(\"do\"===e)return this.generateDo(t);if(\"new\"===e){if(t instanceof o&&!t[\"do\"]&&!t.isNew)return t.newInstance();(t instanceof h&&t.bound||t[\"do\"])&&(t=new _(t))}return this.operator=n[e]||e,this.first=t,this.second=i,this.flip=!!s,this}var n,s;return yt(t,e),n={\"==\":\"===\",\"!=\":\"!==\",of:\"in\"},s={\"!==\":\"===\",\"===\":\"!==\"},t.prototype.children=[\"first\",\"second\"],t.prototype.isSimpleNumber=S,t.prototype.isUnary=function(){return!this.second},t.prototype.isComplex=function(){var e;return!(this.isUnary()&&(\"+\"===(e=this.operator)||\"-\"===e))||this.first.isComplex()},t.prototype.isChainable=function(){var e;return\"<\"===(e=this.operator)||\">\"===e||\">=\"===e||\"<=\"===e||\"===\"===e||\"!==\"===e},t.prototype.invert=function(){var e,n,i,r,o;if(this.isChainable()&&this.first.isChainable()){for(e=!0,n=this;n&&n.operator;)e&&(e=n.operator in s),n=n.first;if(!e)return new _(this).invert();for(n=this;n&&n.operator;)n.invert=!n.invert,n.operator=s[n.operator],n=n.first;return this}return(r=s[this.operator])?(this.operator=r,this.first.unwrap()instanceof t&&this.first.invert(),this):this.second?new _(this).invert():\"!\"===this.operator&&(i=this.first.unwrap())instanceof t&&(\"!\"===(o=i.operator)||\"in\"===o||\"instanceof\"===o)?i:new t(\"!\",this)},t.prototype.unfoldSoak=function(e){var t;return(\"++\"===(t=this.operator)||\"--\"===t||\"delete\"===t)&&pt(e,this,\"first\")},t.prototype.generateDo=function(e){var t,n,s,r,a,c,l,u;for(r=[],n=e instanceof i&&(a=e.value.unwrap())instanceof h?a:e,u=n.params||[],c=0,l=u.length;l>c;c++)s=u[c],s.value?(r.push(s.value),delete s.value):r.push(s);return t=new o(e,r),t[\"do\"]=!0,t},t.prototype.compileNode=function(e){var t,n,i,s;return n=this.isChainable()&&this.first.isChainable(),n||(this.first.front=this.front),\"delete\"===this.operator&&e.scope.check(this.first.unwrapAll().value)&&this.error(\"delete operand may not be argument or var\"),(\"--\"===(i=this.operator)||\"++\"===i)&&(s=this.first.unwrapAll().value,vt.call(B,s)>=0)&&this.error('cannot increment/decrement \"'+this.first.unwrapAll().value+'\"'),this.isUnary()?this.compileUnary(e):n?this.compileChain(e):\"?\"===this.operator?this.compileExistence(e):(t=[].concat(this.first.compileToFragments(e,F),this.makeCode(\" \"+this.operator+\" \"),this.second.compileToFragments(e,F)),e.level<=F?t:this.wrapInBraces(t))},t.prototype.compileChain=function(e){var t,n,i,s;return s=this.first.second.cache(e),this.first.second=s[0],i=s[1],n=this.first.compileToFragments(e,F),t=n.concat(this.makeCode(\" \"+(this.invert?\"&&\":\"||\")+\" \"),i.compileToFragments(e),this.makeCode(\" \"+this.operator+\" \"),this.second.compileToFragments(e,F)),this.wrapInBraces(t)},t.prototype.compileExistence=function(e){var t,n;return!e.isExistentialEquals&&this.first.isComplex()?(n=new x(e.scope.freeVariable(\"ref\")),t=new _(new i(n,this.first))):(t=this.first,n=t),new g(new p(t),n,{type:\"if\"}).addElse(this.second).compileToFragments(e)},t.prototype.compileUnary=function(e){var n,i,s;return i=[],n=this.operator,i.push([this.makeCode(n)]),\"!\"===n&&this.first instanceof p?(this.first.negated=!this.first.negated,this.first.compileToFragments(e)):e.level>=w?new _(this).compileToFragments(e):(s=\"+\"===n||\"-\"===n,(\"new\"===n||\"typeof\"===n||\"delete\"===n||s&&this.first instanceof t&&this.first.operator===n)&&i.push([this.makeCode(\" \")]),(s&&this.first instanceof t||\"new\"===n&&this.first.isStatement(e))&&(this.first=new _(this.first)),i.push(this.first.compileToFragments(e,F)),this.flip&&i.reverse(),this.joinFragmentArrays(i,\"\"))},t.prototype.toString=function(e){return t.__super__.toString.call(this,e,this.constructor.name+\" \"+this.operator)},t}(s),e.In=y=function(e){function t(e,t){this.object=e,this.array=t}return yt(t,e),t.prototype.children=[\"object\",\"array\"],t.prototype.invert=D,t.prototype.compileNode=function(e){var t,n,i,s,r;if(this.array instanceof K&&this.array.isArray()){for(r=this.array.base.objects,i=0,s=r.length;s>i;i++)if(n=r[i],n instanceof U){t=!0;break}if(!t)return this.compileOrTest(e)}return this.compileLoopTest(e)},t.prototype.compileOrTest=function(e){var t,n,i,s,r,o,a,c,h,l,u,p;if(0===this.array.base.objects.length)return[this.makeCode(\"\"+!!this.negated)];for(l=this.object.cache(e,F),o=l[0],r=l[1],u=this.negated?[\" !== \",\" && \"]:[\" === \",\" || \"],t=u[0],n=u[1],a=[],p=this.array.base.objects,i=c=0,h=p.length;h>c;i=++c)s=p[i],i&&a.push(this.makeCode(n)),a=a.concat(i?r:o,this.makeCode(t),s.compileToFragments(e,w));return e.level<F?a:this.wrapInBraces(a)},t.prototype.compileLoopTest=function(e){var t,n,i,s;return s=this.object.cache(e,C),i=s[0],n=s[1],t=[].concat(this.makeCode(dt(\"indexOf\")+\".call(\"),this.array.compileToFragments(e,C),this.makeCode(\", \"),n,this.makeCode(\") \"+(this.negated?\"< 0\":\">= 0\"))),st(i)===st(n)?t:(t=i.concat(this.makeCode(\", \"),t),e.level<C?t:this.wrapInBraces(t))},t.prototype.toString=function(e){return t.__super__.toString.call(this,e,this.constructor.name+(this.negated?\"!\":\"\"))},t}(s),e.Try=X=function(e){function t(e,t,n,i){this.attempt=e,this.errorVariable=t,this.recovery=n,this.ensure=i}return yt(t,e),t.prototype.children=[\"attempt\",\"recovery\",\"ensure\"],t.prototype.isStatement=J,t.prototype.jumps=function(e){var t;return this.attempt.jumps(e)||(null!=(t=this.recovery)?t.jumps(e):void 0)},t.prototype.makeReturn=function(e){return this.attempt&&(this.attempt=this.attempt.makeReturn(e)),this.recovery&&(this.recovery=this.recovery.makeReturn(e)),this},t.prototype.compileNode=function(e){var t,n,s,r;return e.indent+=H,r=this.attempt.compileToFragments(e,N),t=this.recovery?(s=new x(\"_error\"),this.errorVariable?this.recovery.unshift(new i(this.errorVariable,s)):void 0,[].concat(this.makeCode(\" catch (\"),s.compileToFragments(e),this.makeCode(\") {\\n\"),this.recovery.compileToFragments(e,N),this.makeCode(\"\\n\"+this.tab+\"}\"))):this.ensure||this.recovery?[]:[this.makeCode(\" catch (_error) {}\")],n=this.ensure?[].concat(this.makeCode(\" finally {\\n\"),this.ensure.compileToFragments(e,N),this.makeCode(\"\\n\"+this.tab+\"}\")):[],[].concat(this.makeCode(\"\"+this.tab+\"try {\\n\"),r,this.makeCode(\"\\n\"+this.tab+\"}\"),t,n)},t}(s),e.Throw=W=function(e){function t(e){this.expression=e}return yt(t,e),t.prototype.children=[\"expression\"],t.prototype.isStatement=J,t.prototype.jumps=S,t.prototype.makeReturn=G,t.prototype.compileNode=function(e){return[].concat(this.makeCode(this.tab+\"throw \"),this.expression.compileToFragments(e),this.makeCode(\";\"))},t}(s),e.Existence=p=function(e){function t(e){this.expression=e}return yt(t,e),t.prototype.children=[\"expression\"],t.prototype.invert=D,t.prototype.compileNode=function(e){var t,n,i,s;return this.expression.front=this.front,i=this.expression.compile(e,F),m.test(i)&&!e.scope.check(i)?(s=this.negated?[\"===\",\"||\"]:[\"!==\",\"&&\"],t=s[0],n=s[1],i=\"typeof \"+i+\" \"+t+' \"undefined\" '+n+\" \"+i+\" \"+t+\" null\"):i=\"\"+i+\" \"+(this.negated?\"==\":\"!=\")+\" null\",[this.makeCode(e.level<=T?i:\"(\"+i+\")\")]},t}(s),e.Parens=_=function(e){function t(e){this.body=e}return yt(t,e),t.prototype.children=[\"body\"],t.prototype.unwrap=function(){return this.body},t.prototype.isComplex=function(){return this.body.isComplex()},t.prototype.compileNode=function(e){var t,n,i;return n=this.body.unwrap(),n instanceof K&&n.isAtomic()?(n.front=this.front,n.compileToFragments(e)):(i=n.compileToFragments(e,L),t=e.level<F&&(n instanceof A||n instanceof o||n instanceof f&&n.returns),t?i:this.wrapInBraces(i))},t}(s),e.For=f=function(e){function t(e,t){var n;this.source=t.source,this.guard=t.guard,this.step=t.step,this.name=t.name,this.index=t.index,this.body=r.wrap([e]),this.own=!!t.own,this.object=!!t.object,this.object&&(n=[this.index,this.name],this.name=n[0],this.index=n[1]),this.index instanceof K&&this.index.error(\"index cannot be a pattern matching expression\"),this.range=this.source instanceof K&&this.source.base instanceof O&&!this.source.properties.length,this.pattern=this.name instanceof K,this.range&&this.index&&this.index.error(\"indexes do not apply to range loops\"),this.range&&this.pattern&&this.name.error(\"cannot pattern match over range loops\"),this.own&&!this.object&&this.index.error(\"cannot use own with for-in\"),this.returns=!1}return yt(t,e),t.prototype.children=[\"body\",\"source\",\"guard\",\"step\"],t.prototype.compileNode=function(e){var t,n,s,o,a,c,h,l,u,p,d,f,b,k,y,v,w,T,F,L,E,D,S,R,A,I,$,O,B,V,P,U,q,G;return t=r.wrap([this.body]),T=null!=(q=rt(t.expressions))?q.jumps():void 0,T&&T instanceof j&&(this.returns=!1),$=this.range?this.source.base:this.source,I=e.scope,L=this.name&&this.name.compile(e,C),k=this.index&&this.index.compile(e,C),L&&!this.pattern&&I.find(L),k&&I.find(k),this.returns&&(A=I.freeVariable(\"results\")),y=this.object&&k||I.freeVariable(\"i\"),v=this.range&&L||k||y,w=v!==y?\"\"+v+\" = \":\"\",this.step&&!this.range&&(G=this.cacheToCodeFragments(this.step.cache(e,C)),O=G[0],V=G[1],B=V.match(M)),this.pattern&&(L=y),U=\"\",d=\"\",h=\"\",f=this.tab+H,this.range?p=$.compileToFragments(at(e,{index:y,name:L,step:this.step})):(P=this.source.compile(e,C),!L&&!this.own||m.test(P)||(h+=\"\"+this.tab+(D=I.freeVariable(\"ref\"))+\" = \"+P+\";\\n\",P=D),L&&!this.pattern&&(E=\"\"+L+\" = \"+P+\"[\"+v+\"]\"),this.object||(O!==V&&(h+=\"\"+this.tab+O+\";\\n\"),this.step&&B&&(u=0>+B)||(F=I.freeVariable(\"len\")),a=\"\"+w+y+\" = 0, \"+F+\" = \"+P+\".length\",c=\"\"+w+y+\" = \"+P+\".length - 1\",s=\"\"+y+\" < \"+F,o=\"\"+y+\" >= 0\",this.step?(B?u&&(s=o,a=c):(s=\"\"+V+\" > 0 ? \"+s+\" : \"+o,a=\"(\"+V+\" > 0 ? (\"+a+\") : \"+c+\")\"),b=\"\"+y+\" += \"+V):b=\"\"+(v!==y?\"++\"+y:\"\"+y+\"++\"),p=[this.makeCode(\"\"+a+\"; \"+s+\"; \"+w+b)])),this.returns&&(S=\"\"+this.tab+A+\" = [];\\n\",R=\"\\n\"+this.tab+\"return \"+A+\";\",t.makeReturn(A)),this.guard&&(t.expressions.length>1?t.expressions.unshift(new g(new _(this.guard).invert(),new x(\"continue\"))):this.guard&&(t=r.wrap([new g(this.guard,t)]))),this.pattern&&t.expressions.unshift(new i(this.name,new x(\"\"+P+\"[\"+v+\"]\"))),l=[].concat(this.makeCode(h),this.pluckDirectCall(e,t)),E&&(U=\"\\n\"+f+E+\";\"),this.object&&(p=[this.makeCode(\"\"+v+\" in \"+P)],this.own&&(d=\"\\n\"+f+\"if (!\"+dt(\"hasProp\")+\".call(\"+P+\", \"+v+\")) continue;\")),n=t.compileToFragments(at(e,{indent:f}),N),n&&n.length>0&&(n=[].concat(this.makeCode(\"\\n\"),n,this.makeCode(\"\\n\"))),[].concat(l,this.makeCode(\"\"+(S||\"\")+this.tab+\"for (\"),p,this.makeCode(\") {\"+d+U),n,this.makeCode(\"\"+this.tab+\"}\"+(R||\"\")))},t.prototype.pluckDirectCall=function(e,t){var n,s,r,a,c,l,u,p,d,f,m,b,k,g,y;for(s=[],f=t.expressions,c=p=0,d=f.length;d>p;c=++p)r=f[c],r=r.unwrapAll(),r instanceof o&&(u=r.variable.unwrapAll(),(u instanceof h||u instanceof K&&(null!=(m=u.base)?m.unwrapAll():void 0)instanceof h&&1===u.properties.length&&(\"call\"===(b=null!=(k=u.properties[0].name)?k.value:void 0)||\"apply\"===b))&&(a=(null!=(g=u.base)?g.unwrapAll():void 0)||u,l=new x(e.scope.freeVariable(\"fn\")),n=new K(l),u.base&&(y=[n,u],u.base=y[0],n=y[1]),t.expressions[c]=new o(n,r.args),s=s.concat(this.makeCode(this.tab),new i(l,a).compileToFragments(e,N),this.makeCode(\";\\n\"))));return s},t}(z),e.Switch=q=function(e){function t(e,t,n){this.subject=e,this.cases=t,this.otherwise=n}return yt(t,e),t.prototype.children=[\"subject\",\"cases\",\"otherwise\"],t.prototype.isStatement=J,t.prototype.jumps=function(e){var t,n,i,s,r,o,a;for(null==e&&(e={block:!0}),r=this.cases,i=0,s=r.length;s>i;i++)if(o=r[i],n=o[0],t=o[1],t.jumps(e))return t;return null!=(a=this.otherwise)?a.jumps(e):void 0},t.prototype.makeReturn=function(e){var t,n,i,s,o;for(s=this.cases,n=0,i=s.length;i>n;n++)t=s[n],t[1].makeReturn(e);return e&&(this.otherwise||(this.otherwise=new r([new x(\"void 0\")]))),null!=(o=this.otherwise)&&o.makeReturn(e),this},t.prototype.compileNode=function(e){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,m,b;for(c=e.indent+H,h=e.indent=c+H,o=[].concat(this.makeCode(this.tab+\"switch (\"),this.subject?this.subject.compileToFragments(e,L):this.makeCode(\"false\"),this.makeCode(\") {\\n\")),f=this.cases,a=l=0,p=f.length;p>l;a=++l){for(m=f[a],s=m[0],t=m[1],b=it([s]),u=0,d=b.length;d>u;u++)i=b[u],this.subject||(i=i.invert()),o=o.concat(this.makeCode(c+\"case \"),i.compileToFragments(e,L),this.makeCode(\":\\n\"));if((n=t.compileToFragments(e,N)).length>0&&(o=o.concat(n,this.makeCode(\"\\n\"))),a===this.cases.length-1&&!this.otherwise)break;r=this.lastNonComment(t.expressions),r instanceof j||r instanceof x&&r.jumps()&&\"debugger\"!==r.value||o.push(i.makeCode(h+\"break;\\n\"))}return this.otherwise&&this.otherwise.expressions.length&&o.push.apply(o,[this.makeCode(c+\"default:\\n\")].concat(wt.call(this.otherwise.compileToFragments(e,N)),[this.makeCode(\"\\n\")])),o.push(this.makeCode(this.tab+\"}\")),o},t}(s),e.If=g=function(e){function t(e,t,n){this.body=t,null==n&&(n={}),this.condition=\"unless\"===n.type?e.invert():e,this.elseBody=null,this.isChain=!1,this.soak=n.soak}return yt(t,e),t.prototype.children=[\"condition\",\"body\",\"elseBody\"],t.prototype.bodyNode=function(){var e;return null!=(e=this.body)?e.unwrap():void 0},t.prototype.elseBodyNode=function(){var e;return null!=(e=this.elseBody)?e.unwrap():void 0},t.prototype.addElse=function(e){return this.isChain?this.elseBodyNode().addElse(e):(this.isChain=e instanceof t,this.elseBody=this.ensureBlock(e)),this},t.prototype.isStatement=function(e){var t;return(null!=e?e.level:void 0)===N||this.bodyNode().isStatement(e)||(null!=(t=this.elseBodyNode())?t.isStatement(e):void 0)},t.prototype.jumps=function(e){var t;return this.body.jumps(e)||(null!=(t=this.elseBody)?t.jumps(e):void 0)},t.prototype.compileNode=function(e){return this.isStatement(e)?this.compileStatement(e):this.compileExpression(e)},t.prototype.makeReturn=function(e){return e&&(this.elseBody||(this.elseBody=new r([new x(\"void 0\")]))),this.body&&(this.body=new r([this.body.makeReturn(e)])),this.elseBody&&(this.elseBody=new r([this.elseBody.makeReturn(e)])),this},t.prototype.ensureBlock=function(e){return e instanceof r?e:new r([e])},t.prototype.compileStatement=function(e){var n,i,s,r,o,a,c;return s=et(e,\"chainChild\"),(o=et(e,\"isExistentialEquals\"))?new t(this.condition.invert(),this.elseBodyNode(),{type:\"if\"}).compileToFragments(e):(c=e.indent+H,r=this.condition.compileToFragments(e,L),i=this.ensureBlock(this.body).compileToFragments(at(e,{indent:c})),a=[].concat(this.makeCode(\"if (\"),r,this.makeCode(\") {\\n\"),i,this.makeCode(\"\\n\"+this.tab+\"}\")),s||a.unshift(this.makeCode(this.tab)),this.elseBody?(n=a.concat(this.makeCode(\" else \")),this.isChain?(e.chainChild=!0,n=n.concat(this.elseBody.unwrap().compileToFragments(e,N))):n=n.concat(this.makeCode(\"{\\n\"),this.elseBody.compileToFragments(at(e,{indent:c}),N),this.makeCode(\"\\n\"+this.tab+\"}\")),n):a)},t.prototype.compileExpression=function(e){var t,n,i,s;return i=this.condition.compileToFragments(e,T),n=this.bodyNode().compileToFragments(e,C),t=this.elseBodyNode()?this.elseBodyNode().compileToFragments(e,C):[this.makeCode(\"void 0\")],s=i.concat(this.makeCode(\" ? \"),n,this.makeCode(\" : \"),t),e.level>=T?this.wrapInBraces(s):s},t.prototype.unfoldSoak=function(){return this.soak&&this},t}(s),c={wrap:function(e,n,i){var s,a,c,l,u;return e.jumps()?e:(l=new h([],r.wrap([e])),s=[],a=e.contains(this.isLiteralArguments),a&&e.classBody&&a.error(\"Class bodies shouldn't reference arguments\"),(a||e.contains(this.isLiteralThis))&&(u=new x(a?\"apply\":\"call\"),s=[new x(\"this\")],a&&s.push(new x(\"arguments\")),l=new K(l,[new t(u)])),l.noReturn=i,c=new o(l,s),n?r.wrap([c]):c)},isLiteralArguments:function(e){return e instanceof x&&\"arguments\"===e.value&&!e.asKey},isLiteralThis:function(e){return e instanceof x&&\"this\"===e.value&&!e.asKey||e instanceof h&&e.bound||e instanceof o&&e.isSuper}},pt=function(e,t,n){var i;if(i=t[n].unfoldSoak(e))return t[n]=i.body,i.body=new K(t),i},Y={\"extends\":function(){return\"function(child, parent) { for (var key in parent) { if (\"+dt(\"hasProp\")+\".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\"},bind:function(){return\"function(fn, me){ return function(){ return fn.apply(me, arguments); }; }\"},indexOf:function(){return\"[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }\"},hasProp:function(){return\"{}.hasOwnProperty\"},slice:function(){return\"[].slice\"}},N=1,L=2,C=3,T=4,F=5,w=6,H=\"  \",b=\"[$A-Za-z_\\\\x7f-\\\\uffff][$\\\\w\\\\x7f-\\\\uffff]*\",m=RegExp(\"^\"+b+\"$\"),M=/^[+-]?\\d+$/,E=RegExp(\"^(?:(\"+b+\")\\\\.prototype(?:\\\\.(\"+b+\")|\\\\[(\\\"(?:[^\\\\\\\\\\\"\\\\r\\\\n]|\\\\\\\\.)*\\\"|'(?:[^\\\\\\\\'\\\\r\\\\n]|\\\\\\\\.)*')\\\\]|\\\\[(0x[\\\\da-fA-F]+|\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\]))|(\"+b+\")$\"),k=/^['\"]/,dt=function(e){var t;return t=\"__\"+e,V.root.assign(t,Y[e]()),t},ct=function(e,t){return e=e.replace(/\\n/g,\"$&\"+t),e.replace(/\\s+$/,\"\")}}.call(this),t.exports}(),require[\"./sourcemap\"]=function(){var e={},t={exports:e};return function(){var e,n;e=function(){function e(e){this.line=e,this.columns=[]}return e.prototype.add=function(e,t,n){var i,s;return s=t[0],i=t[1],null==n&&(n={}),this.columns[e]&&n.noReplace?void 0:this.columns[e]={line:this.line,column:e,sourceLine:s,sourceColumn:i}},e.prototype.sourceLocation=function(e){for(var t;!((t=this.columns[e])||0>=e);)e--;return t&&[t.sourceLine,t.sourceColumn]},e}(),n=function(){function t(){this.lines=[]}var n,i,s,r;return t.prototype.add=function(t,n,i){var s,r,o,a;return null==i&&(i={}),r=n[0],s=n[1],o=(a=this.lines)[r]||(a[r]=new e(r)),o.add(s,t,i)},t.prototype.sourceLocation=function(e){var t,n,i;for(n=e[0],t=e[1];!((i=this.lines[n])||0>=n);)n--;return i&&i.sourceLocation(t)},t.prototype.generate=function(e,t){var n,i,s,r,o,a,c,h,l,u,p,d,f,m,b,k;for(null==e&&(e={}),null==t&&(t=null),u=0,i=0,r=0,s=0,h=!1,n=\"\",b=this.lines,a=p=0,f=b.length;f>p;a=++p)if(o=b[a])for(k=o.columns,d=0,m=k.length;m>d;d++)if(c=k[d]){for(;u<c.line;)i=0,h=!1,n+=\";\",u++;h&&(n+=\",\",h=!1),n+=this.encodeVlq(c.column-i),i=c.column,n+=this.encodeVlq(0),n+=this.encodeVlq(c.sourceLine-r),r=c.sourceLine,n+=this.encodeVlq(c.sourceColumn-s),s=c.sourceColumn,h=!0}return l={version:3,file:e.generatedFile||\"\",sourceRoot:e.sourceRoot||\"\",sources:e.sourceFiles||[\"\"],names:[],mappings:n},e.inline&&(l.sourcesContent=[t]),JSON.stringify(l,null,2)},s=5,i=1<<s,r=i-1,t.prototype.encodeVlq=function(e){var t,n,o,a;for(t=\"\",o=0>e?1:0,a=(Math.abs(e)<<1)+o;a||!t;)n=a&r,a>>=s,a&&(n|=i),t+=this.encodeBase64(n);return t},n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t.prototype.encodeBase64=function(e){return n[e]||function(){throw new Error(\"Cannot Base64 encode value: \"+e)}()},t}(),t.exports=n}.call(this),t.exports}(),require[\"./coffee-script\"]=function(){var e={},t={exports:e};return function(){var t,n,i,s,r,o,a,c,h,l,u,p,d,f,m,b,k,g,y,v,w,T,C={}.hasOwnProperty;if(l=require(\"fs\"),y=require(\"vm\"),k=require(\"path\"),s=require(\"child_process\"),t=require(\"./lexer\").Lexer,f=require(\"./parser\").parser,u=require(\"./helpers\"),i=require(\"./sourcemap\"),e.VERSION=\"1.6.3\",e.helpers=u,e.compile=r=function(e,t){var n,s,r,o,a,c,h,l,d,m,b,k;for(null==t&&(t={}),d=u.merge,t.sourceMap&&(l=new i),a=f.parse(p.tokenize(e,t)).compileToFragments(t),r=0,t.header&&(r+=1),t.shiftLine&&(r+=1),s=0,h=\"\",b=0,k=a.length;k>b;b++)o=a[b],t.sourceMap&&(o.locationData&&l.add([o.locationData.first_line,o.locationData.first_column],[r,s],{noReplace:!0}),m=u.count(o.code,\"\\n\"),r+=m,s=o.code.length-(m?o.code.lastIndexOf(\"\\n\"):0)),h+=o.code;return t.header&&(c=\"Generated by CoffeeScript \"+this.VERSION,h=\"// \"+c+\"\\n\"+h),t.sourceMap?(n={js:h},n.sourceMap=l,n.v3SourceMap=l.generate(t,e),n):h},e.tokens=function(e,t){return p.tokenize(e,t)},e.nodes=function(e,t){return\"string\"==typeof e?f.parse(p.tokenize(e,t)):f.parse(e)},e.run=function(e,t){var n,i;return null==t&&(t={}),i=require.main,null==t.sourceMap&&(t.sourceMap=!0),i.filename=process.argv[1]=t.filename?l.realpathSync(t.filename):\".\",i.moduleCache&&(i.moduleCache={}),i.paths=require(\"module\")._nodeModulePaths(k.dirname(l.realpathSync(t.filename||\".\"))),!u.isCoffee(i.filename)||require.extensions?(n=r(e,t),m(),g[i.filename]=n.sourceMap,i._compile(n.js,i.filename)):i._compile(e,i.filename)},e.eval=function(e,t){var n,i,s,o,a,c,h,l,u,p,d,f,m,b;if(null==t&&(t={}),e=e.trim()){if(i=y.Script){if(null!=t.sandbox){if(t.sandbox instanceof i.createContext().constructor)h=t.sandbox;else{h=i.createContext(),f=t.sandbox;for(o in f)C.call(f,o)&&(l=f[o],h[o]=l)}h.global=h.root=h.GLOBAL=h}else h=global;if(h.__filename=t.filename||\"eval\",h.__dirname=k.dirname(h.__filename),h===global&&!h.module&&!h.require){for(n=require(\"module\"),h.module=d=new n(t.modulename||\"eval\"),h.require=b=function(e){return n._load(e,d,!0)},d.filename=h.__filename,m=Object.getOwnPropertyNames(require),u=0,p=m.length;p>u;u++)c=m[u],\"paths\"!==c&&(b[c]=require[c]);b.paths=d.paths=n._nodeModulePaths(process.cwd()),b.resolve=function(e){return n._resolveFilename(e,d)}}}a={};for(o in t)C.call(t,o)&&(l=t[o],a[o]=l);return a.bare=!0,s=r(e,a),h===global?y.runInThisContext(s):y.runInContext(s,h)}},d=function(e,t){var n,i,s;return i=l.readFileSync(t,\"utf8\"),s=65279===i.charCodeAt(0)?i.substring(1):i,n=r(s,{filename:t,sourceMap:!0,literate:u.isLiterate(t)}),g[t]=n.sourceMap,e._compile(n.js,t)},require.extensions){for(T=[\".coffee\",\".litcoffee\",\".coffee.md\"],v=0,w=T.length;w>v;v++)o=T[v],require.extensions[o]=d;n=require(\"module\"),a=function(e){var t,i;for(i=k.basename(e).split(\".\"),\"\"===i[0]&&i.shift();i.shift();)if(t=\".\"+i.join(\".\"),n._extensions[t])return t;return\".js\"},n.prototype.load=function(e){var t;return this.filename=e,this.paths=n._nodeModulePaths(k.dirname(e)),t=a(e),n._extensions[t](this,e),this.loaded=!0}}s&&(c=s.fork,s.fork=function(e,t,n){var i;return null==t&&(t=[]),null==n&&(n={}),i=u.isCoffee(e)?\"coffee\":null,Array.isArray(t)||(t=[],n=t||{}),n.execPath||(n.execPath=i),c(e,t,n)}),p=new t,f.lexer={lex:function(){var e,t;return t=this.tokens[this.pos++],t?(e=t[0],this.yytext=t[1],this.yylloc=t[2],this.yylineno=this.yylloc.first_line):e=\"\",e},setInput:function(e){return this.tokens=e,this.pos=0},upcomingInput:function(){return\"\"}},f.yy=require(\"./nodes\"),f.yy.parseError=function(e,t){var n;return n=t.token,e=\"unexpected \"+(1===n?\"end of input\":n),u.throwSyntaxError(e,f.lexer.yylloc)},b=!1,g={},m=function(){var t;if(!b)return b=!0,t=require.main,Error.prepareStackTrace=function(t,n){var i,s,r,o,a;return o={},r=function(e,t,n){var i,s;return s=g[e],s&&(i=s.sourceLocation([t-1,n-1])),i?[i[0]+1,i[1]+1]:null},s=function(){var t,s,o;for(o=[],t=0,s=n.length;s>t&&(i=n[t],i.getFunction()!==e.run);t++)o.push(\"  at \"+h(i,r));return o}(),\"\"+t.name+\": \"+(null!=(a=t.message)?a:\"\")+\"\\n\"+s.join(\"\\n\")+\"\\n\"}},h=function(e,t){var n,i,s,r,o,a,c,h,l,u,p,d;return r=void 0,s=\"\",e.isNative()?s=\"native\":(e.isEval()?(r=e.getScriptNameOrSourceURL(),r||(s=\"\"+e.getEvalOrigin()+\", \")):r=e.getFileName(),r||(r=\"<anonymous>\"),h=e.getLineNumber(),i=e.getColumnNumber(),u=t(r,h,i),s=u?\"\"+r+\":\"+u[0]+\":\"+u[1]+\", <js>:\"+h+\":\"+i:\"\"+r+\":\"+h+\":\"+i),o=e.getFunctionName(),a=e.isConstructor(),c=!(e.isToplevel()||a),c?(l=e.getMethodName(),d=e.getTypeName(),o?(p=n=\"\",d&&o.indexOf(d)&&(p=\"\"+d+\".\"),l&&o.indexOf(\".\"+l)!==o.length-l.length-1&&(n=\" [as \"+l+\"]\"),\"\"+p+o+n+\" (\"+s+\")\"):\"\"+d+\".\"+(l||\"<anonymous>\")+\" (\"+s+\")\"):a?\"new \"+(o||\"<anonymous>\")+\" (\"+s+\")\":o?\"\"+o+\" (\"+s+\")\":s}}.call(this),t.exports}(),require[\"./browser\"]=function(){var exports={},module={exports:exports};return function(){var CoffeeScript,compile,runScripts,__indexOf=[].indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(t in this&&this[t]===e)return t;return-1};CoffeeScript=require(\"./coffee-script\"),CoffeeScript.require=require,compile=CoffeeScript.compile,CoffeeScript.eval=function(code,options){return null==options&&(options={}),null==options.bare&&(options.bare=!0),eval(compile(code,options))},CoffeeScript.run=function(e,t){return null==t&&(t={}),t.bare=!0,t.shiftLine=!0,Function(compile(e,t))()},\"undefined\"!=typeof window&&null!==window&&(\"undefined\"!=typeof btoa&&null!==btoa&&\"undefined\"!=typeof JSON&&null!==JSON&&\"undefined\"!=typeof unescape&&null!==unescape&&\"undefined\"!=typeof encodeURIComponent&&null!==encodeURIComponent&&(compile=function(e,t){var n,i,s;return null==t&&(t={}),t.sourceMap=!0,t.inline=!0,s=CoffeeScript.compile(e,t),n=s.js,i=s.v3SourceMap,\"\"+n+\"\\n//@ sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(i)))+\"\\n//@ sourceURL=coffeescript\"}),CoffeeScript.load=function(e,t,n){var i;return null==n&&(n={}),n.sourceFiles=[e],i=window.ActiveXObject?new window.ActiveXObject(\"Microsoft.XMLHTTP\"):new window.XMLHttpRequest,i.open(\"GET\",e,!0),\"overrideMimeType\"in i&&i.overrideMimeType(\"text/plain\"),i.onreadystatechange=function(){var s;if(4===i.readyState){if(0!==(s=i.status)&&200!==s)throw new Error(\"Could not load \"+e);if(CoffeeScript.run(i.responseText,n),t)return t()}},i.send(null)},runScripts=function(){var e,t,n,i,s,r,o;return o=window.document.getElementsByTagName(\"script\"),t=[\"text/coffeescript\",\"text/literate-coffeescript\"],e=function(){var e,n,i,s;\r\nfor(s=[],e=0,n=o.length;n>e;e++)r=o[e],i=r.type,__indexOf.call(t,i)>=0&&s.push(r);return s}(),i=0,s=e.length,(n=function(){var s,r,o;return o=e[i++],s=null!=o?o.type:void 0,__indexOf.call(t,s)>=0?(r={literate:\"text/literate-coffeescript\"===s},o.src?CoffeeScript.load(o.src,n,r):(r.sourceFiles=[\"embedded\"],CoffeeScript.run(o.innerHTML,r),n())):void 0})(),null},window.addEventListener?window.addEventListener(\"DOMContentLoaded\",runScripts,!1):window.attachEvent(\"onload\",runScripts))}.call(this),module.exports}(),require[\"./coffee-script\"]}();\"function\"==typeof define&&define.amd?define(function(){return CoffeeScript}):root.CoffeeScript=CoffeeScript}(this);\r\n"]}